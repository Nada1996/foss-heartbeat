#mozilla/node-firefox\issue-50207735\comment-64683895.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-50207735) (2 \))) (2 comment-64683895)) (2 .))))
json .
(2 (2 json) (2 .))
This is obscenely useful!
(4 (2 This) (4 (3 (2 is) (2 (2 obscenely) (3 useful))) (2 !)))
:+1:.
(3 (2 :) (3 (3 (3 +1) (2 :)) (2 .)))
r+ (though remove the locale bits from the URLs plz :-))

.
(1 (1 (2 (2 r) (2 +)) (1 (2 -LRB-) (2 (1 (2 though) (2 (1 (2 remove) (2 (2 the) (2 (2 locale) (2 bits)))) (2 (2 from) (3 (2 the) (3 (2 URLs) (3 (2 plz) (3 :--RRB-))))))) (2 -RRB-)))) (2 .))
#mozilla/node-firefox\issue-50207735\comment-64684969.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-50207735) (2 \))) (2 comment-64684969)) (2 .))))
json .
(2 (2 json) (2 .))
oh agh I didn't see the urls bit-I'll update it

.
(2 (2 oh) (2 (2 (2 agh) (2 (2 I) (2 (2 (2 did) (2 n't)) (2 (2 see) (2 (2 (2 the) (2 (2 urls) (2 bit-I))) (2 (2 'll) (2 (2 update) (2 it)))))))) (2 .)))
#mozilla/node-firefox\issue-50207735\issue-50207735.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-50207735) (2 \))) (2 issue-50207735)) (2 .))))
json .
(2 (2 json) (2 .))
r?
(2 (2 r) (2 ?))
@tofumatt

.
(2 (2 @tofumatt) (2 .))
#mozilla/node-firefox\issue-50207735\pr-25101705.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-50207735) (2 \))) (2 pr-25101705)) (2 .))))
json .
(2 (2 json) (2 .))
r?
(2 (2 r) (2 ?))
@tofumatt

.
(2 (2 @tofumatt) (2 .))
#mozilla/node-firefox\issue-50207735\pr-comment-20951090.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-50207735) (2 \))) (2 pr-comment-20951090)) (2 .))))
json .
(2 (2 json) (2 .))
These URLs should all omit the inline-code bit.
(1 (1 (2 These) (2 URLs)) (2 (2 (2 (2 should) (2 all)) (2 (2 omit) (2 (2 the) (2 (2 inline-code) (2 bit))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-50305879\comment-64807800.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-50305879) (2 \))) (2 comment-64807800)) (2 .))))
json .
(2 (2 json) (2 .))
:+1: ?gracias!
(4 (2 :) (4 (3 (3 (3 +1) (2 :)) (2 gracias)) (2 !)))
The non-anglos will :heart: you.
(4 (4 (2 (2 (2 The) (2 (2 non-anglos) (2 will))) (2 :)) (4 (4 (4 heart) (2 :)) (2 you))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-50305879\issue-50305879.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-50305879) (2 \))) (2 issue-50305879)) (2 .))))
json .
(2 (2 json) (2 .))
microchange but r?
(2 (2 (2 (2 microchange) (2 but)) (2 r)) (2 ?))
@tofumatt please?
(2 (2 @tofumatt) (2 (2 please) (2 ?)))
:D

.
(3 (3 :D) (2 .))
#mozilla/node-firefox\issue-50305879\pr-25159886.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-50305879) (2 \))) (2 pr-25159886)) (2 .))))
json .
(2 (2 json) (2 .))
microchange but r?
(2 (2 (2 (2 microchange) (2 but)) (2 r)) (2 ?))
@tofumatt please?
(2 (2 @tofumatt) (2 (2 please) (2 ?)))
:D

.
(3 (3 :D) (2 .))
#mozilla/node-firefox\issue-52387336\comment-67515443.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-52387336) (2 \))) (2 comment-67515443)) (2 .))))
json .
(2 (2 json) (2 .))
r+, though I don't get that empty merge commit.
(2 (2 r) (2 (2 (2 (2 +) (2 ,)) (2 (2 though) (2 (2 I) (2 (2 (2 do) (2 n't)) (2 (2 get) (2 (2 that) (2 (2 (1 empty) (2 merge)) (2 commit)))))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-52387336\issue-52387336.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-52387336) (2 \))) (2 issue-52387336)) (2 .))))
json .
(2 (2 json) (2 .))
@tofumatt r?
(2 (2 (2 @tofumatt) (2 r)) (2 ?))
.
(2 .)
#mozilla/node-firefox\issue-52387336\pr-26313797.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-52387336) (2 \))) (2 pr-26313797)) (2 .))))
json .
(2 (2 json) (2 .))
@tofumatt r?
(2 (2 (2 @tofumatt) (2 r)) (2 ?))
.
(2 .)
#mozilla/node-firefox\issue-52388136\comment-69380079.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-52388136) (2 \))) (2 comment-69380079)) (2 .))))
json .
(2 (2 json) (2 .))
It's sad that bug 942756 never landed, but it's a large patch set that I feel like is unlikely to revive.
(2 (2 (2 (2 (2 (2 It) (1 (2 (2 's) (2 sad)) (1 (2 that) (1 (1 (1 bug) (2 942756)) (2 (1 never) (2 landed)))))) (2 ,)) (2 but)) (2 (2 it) (2 (2 's) (2 (2 (2 a) (2 (2 large) (2 patch))) (2 (2 set) (2 (2 that) (2 (2 I) (2 (2 feel) (2 (3 like) (2 (2 is) (2 (2 unlikely) (2 (2 to) (2 revive))))))))))))) (2 .))
I filed another bug to do only what's required here.
(1 (2 I) (2 (1 (2 filed) (2 (2 another) (1 (1 bug) (2 (2 to) (2 (2 (2 do) (2 only)) (2 (2 what) (2 (2 's) (2 (2 required) (2 here))))))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-52388136\comment-69874190.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-52388136) (2 \))) (2 comment-69874190)) (2 .))))
json .
(2 (2 json) (2 .))
The new bug landed "--start-debugger-server" in Firefox 37.
(2 (2 (2 (2 (2 The) (2 (2 new) (2 (1 bug) (2 (2 landed) (2 ''))))) (2 --)) (2 (2 (2 start-debugger-server) (2 '')) (2 (2 in) (2 (2 Firefox) (2 37))))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-52388136\issue-52388136.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-52388136) (2 \))) (2 issue-52388136)) (2 .))))
json .
(2 (2 json) (2 .))
Currently to enable remote debugging you have to open the developer console and type inline-code

This makes it impossible to run functional tests as we cannot launch Firefox and have it run on an specific port.
(1 (1 (2 Currently) (1 (2 to) (0 (2 enable) (0 (2 (2 remote) (2 debugging)) (0 (2 you) (1 (2 have) (1 (2 to) (1 (2 open) (1 (2 (2 the) (2 (2 developer) (2 (2 console) (2 (2 and) (2 (2 type) (2 inline-code)))))) (1 (2 This) (1 (2 makes) (1 (2 it) (1 (1 impossible) (2 (2 to) (2 (2 run) (2 functional)))))))))))))))) (2 (2 (3 tests) (2 (2 as) (1 (2 we) (1 (1 (2 can) (1 not)) (1 (1 (2 (2 launch) (2 Firefox)) (2 and)) (2 (2 have) (2 (2 it) (2 (2 run) (2 (2 on) (2 (2 an) (2 (2 specific) (2 port)))))))))))) (2 .)))
The solution would be to be able to:.
(2 (2 (2 The) (3 solution)) (2 (2 (2 (2 would) (2 (2 be) (2 (2 to) (2 (2 be) (2 (3 able) (2 to)))))) (2 :)) (2 .)))
block-code.
(2 (2 block-code) (2 .))
there was some work going on this already: URL.
(2 (2 there) (2 (2 (2 was) (2 (2 (2 (2 (2 some) (2 work)) (2 (2 (2 going) (2 (2 on) (2 this))) (2 already))) (2 :)) (2 URL))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-52397349\comment-67529576.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-52397349) (2 \))) (2 comment-67529576)) (2 .))))
json .
(2 (2 json) (2 .))
Haha, awesome.
(4 (4 (2 (2 Haha) (2 ,)) (4 awesome)) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-52397349\issue-52397349.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-52397349) (2 \))) (2 issue-52397349)) (2 .))))
json .
(2 (2 json) (2 .))
... deploy apps

(bad) ASCII ART!
(1 (2 ...) (1 (2 deploy) (1 (1 (1 (2 apps) (2 (2 -LRB-) (1 (1 bad) (2 -RRB-)))) (2 (2 ASCII) (2 ART))) (2 !))))
.
(2 .)
#mozilla/node-firefox\issue-52397349\pr-26319902.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-52397349) (2 \))) (2 pr-26319902)) (2 .))))
json .
(2 (2 json) (2 .))
... deploy apps

(bad) ASCII ART!
(1 (2 ...) (1 (2 deploy) (1 (1 (1 (2 apps) (2 (2 -LRB-) (1 (1 bad) (2 -RRB-)))) (2 (2 ASCII) (2 ART))) (2 !))))
.
(2 .)
#mozilla/node-firefox\issue-53901822\comment-70082621.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-53901822) (2 \))) (2 comment-70082621)) (2 .))))
json .
(2 (2 json) (2 .))
Yeah, that's because I was analysing the old status!
(2 (3 Yeah) (2 (2 ,) (3 (2 that) (3 (2 (2 's) (2 (2 because) (2 (2 I) (2 (2 was) (2 (2 analysing) (2 (2 the) (2 (2 old) (2 status)))))))) (2 !)))))
Once we get all the new modules in place we can update it!
(2 (2 (2 Once) (2 (2 we) (2 (2 (2 get) (2 (2 all) (2 (2 the) (2 (2 new) (2 modules))))) (2 (2 in) (2 place))))) (3 (2 we) (2 (2 (2 can) (2 (2 update) (2 it))) (2 !))))
That should be soon.
(2 (2 That) (2 (2 (2 should) (2 (2 be) (2 soon))) (2 .)))
I'll take this bug!
(4 (2 I) (4 (3 (2 'll) (2 (2 take) (2 (2 this) (1 bug)))) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-53901822\issue-53901822.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-53901822) (2 \))) (2 issue-53901822)) (2 .))))
json .
(2 (2 json) (2 .))
The dependency diagram in the README uses the old "fxos" module names, which make the project seem like it's not meant for desktop Firefox too.
(2 (2 (1 (2 The) (2 (2 dependency) (2 diagram))) (2 (2 in) (2 (2 the) (2 README)))) (2 (2 (2 uses) (2 (2 (2 (2 the) (2 (2 old) (2 (2 ``) (2 (2 fxos) (2 (2 '') (2 (2 module) (2 names))))))) (2 ,)) (2 (2 which) (2 (2 make) (2 (2 (2 the) (2 project)) (1 (2 seem) (2 (3 like) (2 (2 it) (1 (2 (2 's) (1 not)) (2 (2 (2 meant) (2 (2 for) (2 (2 desktop) (2 Firefox)))) (2 too))))))))))) (2 .)))
We should update the diagram to match the new modules.
(2 (2 We) (2 (2 (2 should) (2 (2 update) (2 (2 the) (2 (2 diagram) (2 (2 to) (2 (2 match) (2 (2 the) (2 (2 new) (2 modules))))))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-54447687\comment-70088838.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54447687) (2 \))) (2 comment-70088838)) (2 .))))
json .
(2 (2 json) (2 .))
:+1: guidelines are very important.
(3 (2 :) (3 (3 (3 (3 +1) (2 :)) (2 guidelines)) (2 (2 (2 are) (2 (2 very) (2 important))) (2 .))))
I'd advise putting them in a CONTRIBUTING.md file rather than README.md.
(2 (2 I) (2 (2 (2 'd) (2 (2 advise) (2 (2 (2 putting) (2 them)) (2 (2 in) (2 (2 (2 (2 a) (2 (2 CONTRIBUTING.md) (2 file))) (2 (2 rather) (2 than))) (2 README.md)))))) (2 .)))
This has two advantages:.
(2 (2 This) (1 (1 (2 (2 has) (2 (2 two) (2 advantages))) (2 :)) (2 .)))
1.
(2 (2 1) (2 .))
Keep the user doc separate from contributor doc, avoid overloading README.
(1 (1 (2 (2 (2 (2 Keep) (2 (2 the) (1 (2 user) (2 (2 doc) (2 separate))))) (2 (2 from) (2 (2 contributor) (2 doc)))) (2 ,)) (1 (1 avoid) (2 (2 overloading) (2 README)))) (2 .))
2.
(2 (2 2) (2 .))
GitHub will add a "Read the guidelines for contributing first" in any PR sent to this repo  :)

## Matti Schneider

Sent from a phone, please excuse the terseness.
(2 (2 GitHub) (2 (2 (2 will) (2 (3 add) (2 (2 (2 a) (2 (2 ``) (2 Read))) (2 (2 (2 (2 the) (2 guidelines)) (2 (2 for) (2 (2 contributing) (2 (2 (2 first) (2 '')) (2 (2 in) (2 (2 any) (2 PR))))))) (1 (1 (1 (1 (2 sent) (2 (2 to) (2 (2 this) (1 (2 repo) (1 (3 :-RRB-) (1 (2 ##) (1 (2 Matti) (2 (2 Schneider) (2 Sent))))))))) (2 (2 from) (2 (2 a) (2 phone)))) (2 (2 ,) (2 please))) (2 (2 excuse) (2 (2 the) (2 terseness)))))))) (2 .)))
Le 15 janv.
(1 (1 (2 (2 Le) (2 15)) (2 janv)) (2 .))
2015 ? 14:14, sole notifications@github.com a ?crit :.
(1 (1 (2 2015) (2 14:14)) (1 (2 ,) (1 (2 sole) (1 (1 (1 (2 notifications@github.com) (2 (2 a) (2 crit))) (2 :)) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-54447687\comment-70103911.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54447687) (2 \))) (2 comment-70103911)) (2 .))))
json .
(2 (2 json) (2 .))
A+ and +1 to @MattiSG for outlining this in a contributing file

.
(3 (3 (3 (2 A) (3 (2 (2 +) (2 and)) (3 +1))) (2 (2 to) (2 (2 @MattiSG) (2 (2 for) (2 (2 outlining) (2 (2 this) (2 (2 in) (2 (2 a) (2 (2 contributing) (2 file)))))))))) (2 .))
#mozilla/node-firefox\issue-54447687\comment-70110406.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54447687) (2 \))) (2 comment-70110406)) (2 .))))
json .
(2 (2 json) (2 .))
I guess the short version is I'm all for this and also agree that a lot of it belongs in a contributing file.
(2 (2 I) (2 (2 (2 guess) (2 (2 (2 the) (2 (2 short) (2 version))) (2 (2 is) (2 (2 I) (2 (2 (2 (2 (2 'm) (2 (2 all) (2 (2 for) (2 this)))) (2 and)) (2 also)) (2 (2 agree) (2 (2 that) (2 (2 (2 (2 a) (2 lot)) (2 (2 of) (2 it))) (2 (2 belongs) (2 (2 in) (2 (2 a) (2 (2 contributing) (2 file))))))))))))) (2 .)))
Yay :+1: 

.
(3 (4 Yay) (3 (2 :) (3 (3 (3 +1) (2 :)) (2 .))))
#mozilla/node-firefox\issue-54447687\comment-70243841.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54447687) (2 \))) (2 comment-70243841)) (2 .))))
json .
(2 (2 json) (2 .))
Resolved via URL.
(2 (2 (2 Resolved) (2 (2 via) (2 URL))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-54447687\issue-54447687.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54447687) (2 \))) (2 issue-54447687)) (2 .))))
json .
(2 (2 json) (2 .))
I'm thinking of adding these guidelines to the README as a new section so we are all on the same page.
(2 (2 I) (2 (2 (2 'm) (2 (2 thinking) (2 (2 of) (2 (2 (2 (2 adding) (2 (2 these) (2 guidelines))) (2 (2 to) (2 (2 (2 the) (2 README)) (2 (2 as) (2 (2 a) (2 (2 new) (2 section))))))) (2 (2 so) (2 (2 we) (2 (2 (2 are) (2 all)) (2 (2 on) (2 (2 the) (2 (2 same) (2 page))))))))))) (2 .)))
It's a way of formalising/dumping the knowledge we've acquired while tidying up the first two modules.
(2 (2 It) (2 (2 (2 's) (2 (2 (2 a) (2 way)) (2 (2 of) (2 (2 formalising/dumping) (2 (2 (2 the) (2 knowledge)) (2 (2 we) (2 (2 've) (2 (2 acquired) (2 (2 while) (2 (2 (2 tidying) (2 up)) (2 (2 the) (2 (2 first) (2 (2 two) (2 modules)))))))))))))) (2 .)))
Did I forget anything?
(1 (1 (2 (2 Did) (2 I)) (2 (2 forget) (2 anything))) (2 ?))
@tofumatt @brittanystoroz 

1) remove as many dependencies as possible and make the code super simple.
(2 (2 (2 @tofumatt) (2 @brittanystoroz)) (3 (3 (2 (2 (2 (2 1) (2 -RRB-)) (2 (2 (2 remove) (2 (2 as) (2 many))) (2 (2 dependencies) (2 (2 as) (2 possible))))) (2 and)) (3 (2 make) (3 (2 the) (4 (2 code) (4 (4 super) (2 simple)))))) (2 .)))
Right now it is using underscore and Q and the code looks too cryptic unless you're familiar with those.
(2 (2 (2 (2 (2 (2 Right) (2 now)) (2 (2 it) (1 (2 is) (2 (2 using) (1 (2 (2 underscore) (2 and)) (2 Q)))))) (2 and)) (2 (2 (2 the) (2 code)) (2 (1 (2 looks) (2 (2 too) (2 cryptic))) (3 (2 unless) (2 (2 you) (2 (2 're) (2 (2 familiar) (2 (2 with) (2 those))))))))) (2 .))
So far using es6-promise and Promise.all has got me covered.
(2 (2 (2 (2 (2 (2 So) (2 far)) (2 (2 using) (2 es6-promise))) (2 and)) (2 (2 Promise.all) (2 (2 has) (2 (2 got) (2 (2 me) (2 covered)))))) (2 .))
2) Try to be as obvious as possible.
(2 (2 (2 2) (2 -RRB-)) (2 (2 (2 Try) (2 (2 to) (2 (2 be) (2 (2 as) (2 (2 obvious) (2 (2 as) (2 possible))))))) (2 .)))
This means, for example, not using "B2G" if we can say "simulator" instead.
(2 (2 This) (2 (2 (2 (2 (2 (2 means) (2 ,)) (2 (2 for) (2 example))) (2 ,)) (2 (1 not) (2 (2 (2 (2 (2 using) (2 ``)) (2 B2G)) (2 '')) (2 (2 if) (2 (2 we) (2 (2 can) (2 (2 (2 say) (2 (2 ``) (2 (2 simulator) (2 '')))) (2 instead)))))))) (2 .)))
Another example from this module: inline-code can be renamed to inline-code and it is so much evident what it is doing for someone who is not familiar with the moz-jargon.
(2 (2 (2 (2 (2 (2 (2 Another) (2 example)) (2 (2 from) (2 (2 this) (2 (2 module) (2 (2 :) (2 inline-code)))))) (2 (2 can) (2 (2 be) (2 (2 renamed) (2 (2 to) (2 inline-code)))))) (2 and)) (2 (2 it) (2 (2 is) (2 (2 (2 so) (2 (2 much) (2 evident))) (1 (2 what) (1 (2 it) (1 (2 is) (1 (2 doing) (1 (2 for) (1 (2 someone) (1 (2 who) (1 (1 (2 is) (1 not)) (2 (2 familiar) (2 (2 with) (2 (2 the) (2 moz-jargon)))))))))))))))) (2 .))
3) Only expose the API via promises.
(1 (2 (2 3) (2 -RRB-)) (1 (2 Only) (1 (1 (2 expose) (2 (2 (2 the) (2 API)) (2 (2 via) (2 promises)))) (2 .))))
Granted you internally might need to use callbacks for other modules which are not promisified, but we want to make the whole API follow the same style, so once you learn to use one module, using another node-firefox- module is easy because the interface is the same: inline-code.
(2 (2 (2 (2 (2 (2 Granted) (3 (2 you) (2 (2 internally) (2 (2 might) (2 (2 need) (2 (2 to) (2 (2 (2 use) (2 callbacks)) (2 (2 for) (2 (2 (2 other) (2 modules)) (2 (2 which) (3 (1 (2 are) (1 not)) (2 promisified)))))))))))) (2 ,)) (2 but)) (2 (2 we) (2 (2 (2 (2 want) (2 (2 to) (2 (2 make) (1 (2 (2 the) (2 (2 whole) (2 API))) (1 (2 follow) (2 (2 the) (2 (2 same) (2 style)))))))) (2 ,)) (2 (2 so) (2 (2 once) (1 (2 you) (2 (2 learn) (2 (2 to) (2 (2 (2 (2 use) (2 (2 one) (2 module))) (2 ,)) (2 (2 using) (2 (2 another) (2 (2 node-firefox) (2 (2 (2 -) (2 (2 (2 module) (2 (2 (2 is) (2 easy)) (2 (2 because) (2 (2 (2 the) (2 interface)) (2 (2 is) (2 (2 the) (2 same))))))) (2 :))) (2 inline-code)))))))))))))) (2 .))
4) No CLI binary.
(2 (2 (2 4) (2 -RRB-)) (1 (1 (1 No) (2 CLI)) (2 (2 binary) (2 .))))
None of the existing examples/use cases we came up with were using the CLI, so there's either no need for that or we hate the CLI.
(1 (1 (2 (2 (2 (2 (2 (2 (2 None) (2 (2 of) (2 (2 (2 the) (2 (2 existing) (2 (2 examples/use) (2 cases)))) (2 (2 we) (2 (2 (2 came) (2 up)) (2 with)))))) (2 (2 were) (2 (2 using) (2 (2 the) (2 CLI))))) (2 ,)) (2 so)) (2 (2 there) (2 (2 (2 's) (2 either)) (2 (2 (1 no) (2 need)) (2 (2 for) (2 that)))))) (2 or)) (1 (2 we) (1 (1 hate) (2 (2 the) (2 CLI))))) (2 .))
Either way there was a lot of duplicated code between modules for doing CLI and it wasn't too consistent, and we do not have too much time for this first iteration, so no CLI for now.
(2 (2 (2 (2 (2 (2 (2 (2 (2 Either) (2 way)) (2 (2 there) (2 (2 was) (2 (2 (2 a) (2 lot)) (2 (2 of) (2 (2 (2 duplicated) (2 code)) (2 (2 between) (2 (2 modules) (2 (2 for) (2 (2 doing) (2 CLI))))))))))) (2 and)) (2 (2 it) (2 (2 (2 was) (2 n't)) (3 (2 too) (3 consistent))))) (2 ,)) (2 and)) (2 (2 we) (2 (2 (2 do) (1 not)) (2 (2 (2 (2 (2 have) (2 (2 (2 too) (2 much)) (2 time))) (2 (2 for) (2 (2 this) (2 (2 first) (2 iteration))))) (2 ,)) (2 (2 (2 so) (1 (1 no) (2 CLI))) (2 (2 for) (2 now))))))) (2 .))
5) For naming, try to be as generic as possible but also as semantic as possible.
(1 (2 (1 (2 5) (1 (2 -RRB-) (2 (2 (2 For) (2 (2 naming) (2 (2 ,) (2 try)))) (2 (2 to) (2 be))))) (2 (2 as) (2 (2 (2 generic) (2 (2 (2 (2 as) (2 possible)) (2 but)) (2 also))) (2 as)))) (2 (2 (2 semantic) (2 (2 as) (2 possible))) (2 .)))
For example, if a module can be used to discover firefox and firefox OS runtimes, try to avoid adding 'os' to its name, so that it is more generic.
(2 (2 (2 For) (2 example)) (1 (2 ,) (2 (1 (2 if) (1 (2 (2 a) (2 module)) (1 (2 can) (1 (2 be) (1 (2 used) (1 (2 to) (1 (2 discover) (1 (2 firefox) (1 (2 and) (1 (2 firefox) (2 (2 OS) (2 runtimes)))))))))))) (1 (2 ,) (1 (1 (1 (1 (2 try) (1 (2 to) (1 (1 avoid) (2 (2 (2 (2 (2 adding) (2 `)) (2 os)) (2 ')) (2 (2 to) (2 (2 its) (2 name))))))) (2 ,)) (2 (2 so) (2 (2 that) (2 (2 it) (2 (2 is) (2 (2 more) (2 generic))))))) (2 .))))))
Also consider if something sounds weird, maybe it's because we're using the wrong name.
(1 (2 (2 Also) (2 (2 consider) (2 (2 if) (2 (2 something) (2 (2 sounds) (2 weird)))))) (1 (2 ,) (1 (2 maybe) (2 (2 it) (2 (2 (2 's) (1 (2 because) (1 (2 we) (1 (2 're) (1 (2 using) (1 (2 the) (1 (1 wrong) (2 name)))))))) (2 .))))))
E.g. inline-code sounded weird until it was renamed to inline-code.
(2 (2 (2 E.g.) (2 inline-code)) (2 (1 (2 (2 sounded) (2 weird)) (2 (2 until) (2 (2 it) (2 (2 was) (2 (2 renamed) (2 (2 to) (2 inline-code))))))) (2 .)))
When in doubt, discuss it with more people!
(2 (2 (2 When) (2 (2 in) (2 doubt))) (2 (2 ,) (3 (2 (2 (2 discuss) (2 it)) (2 (2 with) (2 (2 more) (2 people)))) (2 !))))
Don't be afraid :D (specially if English is not your first language!)
(3 (1 (2 Do) (2 n't)) (3 (3 (2 be) (3 (2 afraid) (3 :D))) (2 (2 -LRB-) (2 (2 (2 (2 specially) (2 (2 if) (2 (2 English) (1 (1 (2 is) (1 not)) (2 (2 your) (2 (2 first) (2 language))))))) (2 !)) (2 -RRB-)))))
6) Use the build-tools module and gulpfile.js to lint the code.
(2 (2 (2 6) (2 -RRB-)) (2 (1 (2 Use) (2 (2 (2 (2 (2 the) (2 (2 build-tools) (2 module))) (2 and)) (2 gulpfile.js)) (2 (2 to) (2 (2 lint) (2 (2 the) (2 code)))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-54481886\comment-70133864.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54481886) (2 \))) (2 comment-70133864)) (2 .))))
json .
(2 (2 json) (2 .))
Added some of my own tweaks in #9, r?
(2 (2 (2 (2 Added) (2 (2 some) (2 (2 of) (2 (2 my) (2 (2 own) (2 tweaks)))))) (2 (2 in) (2 (2 (2 (2 #) (2 9)) (2 ,)) (2 r)))) (2 ?))
.
(2 .)
#mozilla/node-firefox\issue-54481886\issue-54481886.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54481886) (2 \))) (2 issue-54481886)) (2 .))))
json .
(2 (2 json) (2 .))
Let's use this to get the contributing ball rolling!
(2 (2 (2 Let) (2 's)) (2 (2 (2 use) (2 (2 this) (2 (2 to) (2 (2 get) (2 (2 the) (2 (2 contributing) (2 (2 ball) (2 rolling)))))))) (2 !)))
@tofumatt r?
(2 (2 (2 @tofumatt) (2 r)) (2 ?))
.
(2 .)
#mozilla/node-firefox\issue-54481886\pr-27448167.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54481886) (2 \))) (2 pr-27448167)) (2 .))))
json .
(2 (2 json) (2 .))
Let's use this to get the contributing ball rolling!
(2 (2 (2 Let) (2 's)) (2 (2 (2 use) (2 (2 this) (2 (2 to) (2 (2 get) (2 (2 the) (2 (2 contributing) (2 (2 ball) (2 rolling)))))))) (2 !)))
@tofumatt r?
(2 (2 (2 @tofumatt) (2 r)) (2 ?))
.
(2 .)
#mozilla/node-firefox\issue-54484465\comment-70137242.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54484465) (2 \))) (2 comment-70137242)) (2 .))))
json .
(2 (2 json) (2 .))
lgtm

.
(3 (3 lgtm) (2 .))
#mozilla/node-firefox\issue-54484465\comment-70244798.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54484465) (2 \))) (2 comment-70244798)) (2 .))))
json .
(2 (2 json) (2 .))
I love it!
(4 (2 I) (4 (3 (4 love) (2 it)) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-54484465\issue-54484465.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54484465) (2 \))) (2 issue-54484465)) (2 .))))
json .
(2 (2 json) (2 .))
Excellent!
(4 (4 Excellent) (2 !))
I made some tweaks of my own, thoughts?
(2 (2 I) (2 (2 (2 made) (2 (2 (2 some) (2 tweaks)) (2 (2 of) (2 (2 (2 (2 my) (2 own)) (2 ,)) (2 thoughts))))) (2 ?)))
.
(2 .)
#mozilla/node-firefox\issue-54484465\pr-27449717.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54484465) (2 \))) (2 pr-27449717)) (2 .))))
json .
(2 (2 json) (2 .))
Excellent!
(4 (4 Excellent) (2 !))
I made some tweaks of my own, thoughts?
(2 (2 I) (2 (2 (2 made) (2 (2 (2 some) (2 tweaks)) (2 (2 of) (2 (2 (2 (2 my) (2 own)) (2 ,)) (2 thoughts))))) (2 ?)))
.
(2 .)
#mozilla/node-firefox\issue-54484814\comment-70261560.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54484814) (2 \))) (2 comment-70261560)) (2 .))))
json .
(2 (2 json) (2 .))
Yeah I mean this module doesn't have much (none?)
(2 (2 (3 Yeah) (2 I)) (2 (1 mean) (2 (2 (2 this) (2 module)) (1 (1 (2 does) (2 n't)) (2 (2 have) (2 (2 much) (2 (2 -LRB-) (2 (2 (2 none) (2 ?)) (2 -RRB-)))))))))
actual code, but yes, let's have the same license in all!
(4 (3 (3 (2 (2 (2 actual) (2 code)) (2 ,)) (3 (2 but) (3 yes))) (2 ,)) (2 (2 (2 let) (2 (2 's) (2 (2 have) (2 (2 (2 the) (2 (2 same) (2 license))) (2 (2 in) (2 all)))))) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-54484814\issue-54484814.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-54484814) (2 \))) (2 issue-54484814)) (2 .))))
json .
(2 (2 json) (2 .))
Is this code supposed to be MPL or Apache-licensed?
(2 (2 (2 (2 Is) (2 (2 this) (2 code))) (2 (2 supposed) (2 (2 to) (2 (2 be) (2 (2 (2 MPL) (2 or)) (2 Apache-licensed)))))) (2 ?))
A lot of the modules are Apache and that seems to be a better fit for node (also it's way more straightforward, copyleft is confusing).
(2 (2 (2 (2 A) (2 lot)) (2 (2 of) (2 (2 the) (2 modules)))) (2 (2 (2 are) (2 (2 (2 Apache) (2 and)) (2 (2 that) (2 (2 seems) (2 (2 to) (2 (2 be) (2 (2 (2 a) (2 (3 better) (2 fit))) (2 (2 for) (2 (2 node) (2 (2 -LRB-) (2 (2 (2 also) (2 (2 it) (1 (2 's) (1 (2 (2 (2 (2 way) (2 more)) (2 straightforward)) (2 ,)) (1 (2 copyleft) (1 (2 is) (1 confusing))))))) (2 -RRB-)))))))))))) (2 .)))
Should we change the node-firefox license to Apache 2.0?
(2 (2 Should) (2 (2 we) (2 (2 (2 (2 change) (2 (2 the) (2 (2 node-firefox) (2 license)))) (1 (2 to) (2 (2 Apache) (2 2.0)))) (2 ?))))
.
(2 .)
#mozilla/node-firefox\issue-55014366\comment-70837455.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55014366) (2 \))) (2 comment-70837455)) (2 .))))
json .
(2 (2 json) (2 .))
This is a good idea!
(4 (2 This) (4 (3 (2 is) (3 (2 a) (3 (3 good) (2 idea)))) (2 !)))
I would expect the start-simulator module to have a
way to stop things myself, though admittedly your proposal is a better API
than what I can think up if it were part of the same module!
(2 (2 I) (2 (2 (2 would) (2 (2 (2 expect) (2 (2 the) (2 (2 start-simulator) (2 module)))) (2 (2 to) (2 (2 (2 (2 have) (2 (2 a) (2 (2 way) (2 (2 to) (2 (2 stop) (2 (2 things) (2 myself))))))) (2 ,)) (2 (2 though) (1 (2 admittedly) (1 (2 (2 your) (2 proposal)) (2 (2 is) (2 (2 (2 a) (2 (3 better) (2 API))) (2 (2 than) (2 (2 what) (2 (2 I) (2 (2 can) (2 (2 (2 think) (2 up)) (2 (2 if) (2 (2 it) (2 (2 were) (2 (2 part) (2 (2 of) (2 (2 the) (2 (2 same) (2 module)))))))))))))))))))))) (2 !)))
I agree, we should have a way to easily stop things too.
(2 (2 (2 I) (2 agree)) (2 (2 ,) (2 (2 we) (2 (2 (2 should) (2 (2 have) (2 (2 a) (2 (2 way) (2 (2 to) (3 (3 easily) (2 (2 (2 stop) (2 things)) (2 too)))))))) (2 .)))))
-tofumatt
On 21 Jan 2015 07:51, "sole" notifications@github.com wrote:.
(2 (2 (2 (2 (2 (2 -) (2 (2 tofumatt) (2 (2 On) (2 21)))) (2 (2 Jan) (2 2015))) (2 (2 (2 07:51) (2 ,)) (2 (2 (2 ``) (2 (2 sole) (2 (2 '') (2 notifications@github.com)))) (2 wrote)))) (2 :)) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-55014366\comment-73685253.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55014366) (2 \))) (2 comment-73685253)) (2 .))))
json .
(2 (2 json) (2 .))
For now you can just do something on these lines instance.client.close() process.kill(instance.pid)

.
(2 (2 (2 For) (2 now)) (2 (2 you) (2 (1 (2 (2 can) (2 just)) (1 (2 (2 do) (2 something)) (1 (2 on) (1 (1 (1 (1 (2 these) (2 (2 lines) (2 instance.client.close))) (2 -LRB-)) (1 (2 -RRB-) (2 process.kill))) (2 (2 -LRB-) (2 (2 instance.pid) (2 -RRB-))))))) (2 .))))
#mozilla/node-firefox\issue-55014366\issue-55014366.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55014366) (2 \))) (2 issue-55014366)) (2 .))))
json .
(2 (2 json) (2 .))
I know it sounds "so simple" but it might hide complexity and prevent platform differences and that IS GOOD.
(2 (2 I) (2 (2 (2 know) (2 (2 it) (2 (2 sounds) (2 (2 ``) (2 (2 so) (2 (2 (2 simple) (2 '')) (1 (2 (2 (2 but) (2 (2 it) (2 (2 might) (1 (1 (2 (2 hide) (2 complexity)) (2 and)) (2 (2 prevent) (2 (2 platform) (2 differences))))))) (2 and)) (1 (2 that) (2 (2 IS) (2 GOOD)))))))))) (2 .)))
Right now for stopping a simulator in Mac OS (and Linux I hope) you need to know the process id (PID), then you just use inline-code to kill the process.
(1 (1 (1 (1 (1 (1 (2 (2 Right) (2 now)) (1 (2 for) (1 (1 (2 stopping) (2 (2 a) (2 simulator))) (2 (2 in) (2 (2 Mac) (2 OS)))))) (1 (1 (2 -LRB-) (1 (2 and) (2 (3 (2 (2 Linux) (2 I)) (3 hope)) (2 -RRB-)))) (2 (2 you) (2 (2 need) (2 (2 to) (2 (2 know) (2 (2 (2 the) (2 (2 process) (2 id))) (2 (2 -LRB-) (2 (2 PID) (2 -RRB-)))))))))) (2 ,)) (2 then)) (2 (2 you) (2 (2 just) (2 (2 use) (2 (2 inline-code) (2 (2 to) (2 (2 kill) (2 (2 the) (2 process))))))))) (2 .))
If you have enough privileges (i.e. you started it, which is often the case, or have superprivileges) you kill it.
(2 (2 (2 If) (2 (2 you) (2 (2 have) (1 (2 enough) (2 privileges))))) (2 (2 (2 -LRB-) (2 (2 (2 i.e.) (2 (2 you) (2 (2 (2 (2 (2 started) (2 (2 (2 it) (2 ,)) (2 (2 which) (2 (2 (2 is) (2 often)) (2 (2 the) (2 case)))))) (2 ,)) (2 or)) (2 (2 have) (2 superprivileges))))) (2 -RRB-))) (2 (2 you) (2 (2 (2 kill) (2 it)) (2 .)))))
Example.
(2 (2 Example) (2 .))
But it is maybe exposing too much of the "internals", and they might also be different in Windows.
(3 (2 But) (2 (2 (2 (2 (2 (2 it) (2 (1 (2 is) (2 maybe)) (2 (2 (2 exposing) (2 (2 too) (2 much))) (2 (2 of) (2 (2 the) (2 (2 ``) (2 (2 internals) (2 '')))))))) (2 ,)) (2 and)) (2 (2 they) (2 (2 (2 might) (2 also)) (2 (2 be) (2 (2 different) (2 (2 in) (2 Windows))))))) (2 .)))
It might be neat to be able to have this module so you can do things like this:.
(2 (2 It) (2 (2 (2 (2 might) (2 (2 be) (2 (2 neat) (2 (2 to) (2 (2 be) (2 (3 able) (2 (2 to) (2 (2 (2 have) (2 (2 this) (2 module))) (2 (2 so) (2 (2 you) (2 (2 can) (2 (2 (2 do) (2 things)) (2 (3 like) (2 this)))))))))))))) (2 :)) (2 .)))
block-code.
(2 (2 block-code) (2 .))
We're not exposing 'pid' at any point!
(1 (2 We) (2 (1 (2 (2 're) (1 not)) (2 (2 exposing) (2 (2 `) (2 (2 (2 pid) (2 ')) (2 (2 at) (2 (2 any) (2 point))))))) (2 !)))
And we get more promises!
(3 (2 And) (2 (2 we) (2 (2 (2 get) (2 (2 more) (2 promises))) (2 !))))
.
(2 .)
#mozilla/node-firefox\issue-55020034\comment-70839273.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55020034) (2 \))) (2 comment-70839273)) (2 .))))
json .
(2 (2 json) (2 .))
Related and good read: URL.
(3 (3 (3 (3 (2 Related) (2 (2 and) (2 (3 good) (2 read)))) (2 :)) (2 URL)) (2 .))
highlight: 





.
(2 (2 (2 highlight) (2 :)) (2 .))
#mozilla/node-firefox\issue-55020034\comment-70841826.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55020034) (2 \))) (2 comment-70841826)) (2 .))))
json .
(2 (2 json) (2 .))
Everything regarding SemVer is at semver.org.
(2 (2 (2 Everything) (2 (2 regarding) (2 SemVer))) (2 (2 (2 is) (2 (2 at) (2 semver.org))) (2 .)))
For tagging, just use inline-code  :)

.
(2 (2 (2 For) (2 tagging)) (2 (2 ,) (2 (2 just) (2 (2 (2 use) (2 (2 inline-code) (3 :-RRB-))) (2 .)))))
#mozilla/node-firefox\issue-55020034\issue-55020034.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55020034) (2 \))) (2 issue-55020034)) (2 .))))
json .
(2 (2 json) (2 .))
I always forget to inline-code modules when I publish them-I do remember to update package.json because otherwise npm tells me no way I'm publishing it again.
(1 (2 I) (1 (2 always) (2 (1 (2 (2 forget) (2 (2 to) (2 (2 inline-code) (2 modules)))) (1 (2 when) (1 (2 I) (1 (2 publish) (1 (2 them-I) (1 (2 do) (1 (2 remember) (1 (2 to) (1 (2 (2 update) (2 package.json)) (1 (2 because) (1 (2 otherwise) (2 (2 npm) (2 (2 (2 tells) (2 me)) (2 (1 (1 no) (2 way)) (2 (2 I) (2 (2 'm) (2 (2 (2 publishing) (2 it)) (2 again)))))))))))))))))) (2 .))))
There are tools for doing this automatically, perhaps even publishing to npm afterwards.
(1 (2 There) (1 (1 (2 are) (1 (2 tools) (3 (2 for) (3 (2 (2 (2 (2 (2 doing) (2 this)) (2 automatically)) (2 ,)) (2 perhaps)) (2 (2 even) (1 (2 publishing) (1 (2 to) (2 (2 npm) (2 afterwards))))))))) (2 .)))
Let's use this issue to explore these tools!
(2 (2 (2 Let) (2 's)) (2 (2 (2 use) (2 (2 (2 this) (1 issue)) (2 (2 to) (2 (2 explore) (2 (2 these) (2 tools)))))) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-55023332\comment-72007182.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55023332) (2 \))) (2 comment-72007182)) (2 .))))
json .
(2 (2 json) (2 .))
URL.
(2 (2 URL) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-55023332\issue-55023332.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55023332) (2 \))) (2 issue-55023332)) (2 .))))
json .
(2 (2 json) (2 .))
Just as we'll have inline-code and inline-code (formerly inline-code).
(2 (2 Just) (2 (2 (2 as) (2 (2 we) (2 (2 'll) (2 (2 have) (2 (2 (2 (2 inline-code) (2 and)) (2 inline-code)) (2 (2 -LRB-) (2 (2 formerly) (2 (2 inline-code) (2 -RRB-))))))))) (2 .)))
It feels like a natural feature to have!
(3 (2 It) (2 (2 (1 (2 feels) (2 (3 like) (2 (2 a) (2 (2 natural) (3 feature))))) (2 (2 to) (2 have))) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-55540159\comment-71543919.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55540159) (2 \))) (2 comment-71543919)) (2 .))))
json .
(2 (2 json) (2 .))
:laughing: :fearful: :boom: 

.
(2 (2 :) (2 (2 (2 (2 laughing) (2 :)) (2 (2 :) (2 (2 (2 fearful) (2 :)) (2 (2 :) (2 (2 boom) (2 :)))))) (2 .)))
#mozilla/node-firefox\issue-55540159\issue-55540159.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55540159) (2 \))) (2 issue-55540159)) (2 .))))
json .
(2 (2 json) (2 .))
Les jokingly raised an interesting issue without even wanting to: how many apps can the phone accept until it collapses in appularity?
(2 (1 (1 (1 (2 Les) (2 (2 jokingly) (3 (2 (2 raised) (2 (2 an) (2 (3 interesting) (1 issue)))) (2 (2 without) (2 (2 even) (2 (2 wanting) (2 to))))))) (2 :)) (2 (2 (2 (2 how) (2 many)) (2 (2 apps) (2 can))) (2 (2 (2 the) (2 phone)) (2 (2 accept) (2 (2 until) (2 (2 it) (2 (2 collapses) (2 (2 in) (2 appularity))))))))) (2 ?))
It might be interesting to find out by repeatedly installing an app until it breaks.
(2 (2 It) (2 (2 (2 might) (2 (3 (2 be) (3 (3 interesting) (2 (2 to) (2 (2 (2 find) (2 out)) (2 (2 by) (2 (2 repeatedly) (2 (2 installing) (2 (2 an) (2 app))))))))) (2 (2 until) (2 (2 it) (2 breaks))))) (2 .)))
Maybe there's no limit.
(2 (2 Maybe) (2 (2 there) (2 (2 (2 's) (1 (1 no) (2 limit))) (2 .))))
Maybe the limit is whatever the storage accepts.
(2 (2 Maybe) (2 (2 (2 the) (2 limit)) (2 (2 (2 is) (2 (2 whatever) (2 (2 (2 the) (2 storage)) (2 accepts)))) (2 .))))
This may be a lot when running on a simulator!
(2 (2 This) (2 (2 (2 may) (2 (2 (2 be) (2 (2 a) (2 lot))) (2 (2 when) (2 (2 running) (2 (2 on) (2 (2 a) (2 simulator))))))) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-55542081\comment-71545924.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55542081) (2 \))) (2 comment-71545924)) (2 .))))
json .
(2 (2 json) (2 .))
In general I like the idea that we can pass simple JS objects around.
(2 (2 (2 In) (2 general)) (1 (2 I) (1 (1 (2 (3 like) (2 (2 the) (2 idea))) (1 (2 that) (1 (2 we) (1 (2 can) (1 (1 (2 pass) (1 (2 simple) (2 (2 JS) (2 objects)))) (2 around)))))) (2 .))))
Seems this would either be a behind-the-scenes increase in complexity (converting objects to fancyObjects) or would require making a new Simulator() instead of just calling a function.
(2 (2 Seems) (2 (2 this) (2 (2 (2 (2 (2 (2 (2 would) (2 either)) (1 (2 be) (1 (1 (2 a) (2 (2 behind-the-scenes) (2 increase))) (2 (2 in) (2 complexity))))) (2 (2 -LRB-) (2 (1 (2 (2 converting) (2 objects)) (2 (2 to) (2 fancyObjects))) (2 -RRB-)))) (2 or)) (2 (2 would) (2 (2 require) (2 (2 making) (2 (2 (2 a) (2 (2 new) (2 (2 Simulator) (2 (2 -LRB-) (2 -RRB-))))) (2 (2 instead) (2 (2 of) (2 (2 just) (2 (2 calling) (2 (2 a) (2 function))))))))))) (2 .))))
I?m not religiously opposed to the idea or anything.
(2 (2 I) (2 (2 (2 m) (2 (1 not) (2 (2 religiously) (2 (2 opposed) (2 (2 to) (2 (2 the) (2 (2 (2 idea) (2 or)) (2 anything)))))))) (2 .)))
I can see what you mean and how it might actually be a lot better, but I?d want to see a real-world example of how it would reduce code complexity before I would say it?s a good idea.
(2 (2 (2 (2 (2 (2 I) (2 (2 can) (2 (2 see) (2 (2 (2 (2 what) (1 (2 you) (1 mean))) (2 and)) (2 (2 how) (2 (2 it) (2 (2 (2 might) (2 actually)) (2 (2 be) (2 (2 (2 a) (2 lot)) (3 better)))))))))) (2 ,)) (2 but)) (2 (2 I) (2 (2 d) (2 (2 want) (2 (2 to) (2 (2 see) (2 (2 (2 a) (2 (2 real-world) (2 example))) (2 (2 of) (2 (2 how) (2 (2 it) (2 (2 would) (2 (2 (2 reduce) (2 (2 code) (2 complexity))) (2 (2 before) (3 (2 I) (3 (2 would) (3 (2 say) (3 (2 it) (3 (2 s) (3 (2 a) (3 (3 good) (2 idea))))))))))))))))))))) (2 .))
:-)

-tofumatt

On 26 January 2015 at 16:45:15, sole (notifications@github.com) wrote:.
(3 (3 :--RRB-) (2 (2 -) (2 (2 (2 (2 (2 tofumatt) (2 (2 On) (2 26))) (2 (2 January) (2 2015))) (2 (2 at) (2 (2 (2 16:45:15) (2 ,)) (2 (2 sole) (2 (2 -LRB-) (2 (2 notifications@github.com) (2 -RRB-))))))) (2 (2 (2 wrote) (2 :)) (2 .)))))
We often handle the same type of "objects" when using modules in this project.
(2 (2 We) (2 (2 often) (2 (2 (2 (2 handle) (2 (2 (2 the) (2 (2 same) (2 type))) (2 (2 (2 (2 of) (2 ``)) (2 objects)) (2 '')))) (2 (2 when) (2 (2 (2 using) (2 modules)) (2 (2 in) (2 (2 this) (2 project)))))) (2 .))))
They're sometimes not actual classes but just simple Objects with the same set of consistent attributes all over.
(1 (2 They) (1 (1 (2 (2 (2 're) (2 sometimes)) (1 not)) (2 (2 (1 (2 (2 actual) (2 classes)) (2 but)) (2 just)) (1 (2 (2 simple) (2 Objects)) (1 (2 with) (1 (1 (2 (2 the) (2 (2 same) (2 set))) (2 (2 of) (2 (3 consistent) (2 attributes)))) (2 (2 all) (2 over))))))) (2 .)))
A thought that often passes my mind is whether we should elevate them to their own class so we can say in the API "This call returns an object of class XYZ".
(2 (2 (2 (2 A) (2 thought)) (2 (2 that) (2 (2 often) (2 (2 passes) (2 (2 my) (2 mind)))))) (2 (2 (2 is) (2 (2 whether) (2 (2 we) (2 (2 should) (2 (2 (2 (2 elevate) (2 them)) (2 (2 to) (1 (2 their) (2 (2 own) (2 class))))) (2 (2 so) (2 (2 we) (2 (2 can) (2 (2 say) (2 (2 in) (1 (1 (2 (2 (2 the) (2 API)) (2 ``)) (1 (2 (2 This) (2 call)) (1 (2 returns) (1 (2 (2 an) (2 object)) (1 (2 of) (2 (2 class) (2 XYZ))))))) (2 '')))))))))))) (2 .)))
Or whether we should maybe use those objects instead of some of their properties, and hide them in the most generic case.
(2 (2 Or) (2 (2 (2 whether) (2 (2 we) (2 (2 (2 should) (2 maybe)) (2 (2 (2 (2 (2 use) (2 (2 (2 those) (2 objects)) (2 (2 instead) (2 (2 of) (1 (2 some) (2 (2 of) (2 (2 their) (2 properties)))))))) (2 ,)) (2 and)) (2 (2 (2 hide) (2 them)) (2 (2 in) (2 (2 the) (2 (2 (2 most) (2 generic)) (2 case))))))))) (2 .)))
For example, if start-simulator would return an instance of Simulator option instead of returning a simple object, then we could also pass said instance to connect, instead of passing a port number, which requires you to know the name of the field (.
(2 (2 (2 (2 For) (2 example)) (2 (2 ,) (2 (2 (2 if) (2 (2 start-simulator) (2 (2 would) (2 (2 (2 return) (2 (2 (2 an) (2 instance)) (2 (2 of) (2 (2 Simulator) (2 option))))) (2 (2 instead) (2 (2 of) (2 (2 returning) (2 (2 a) (2 (2 simple) (2 object)))))))))) (2 (2 ,) (2 (2 then) (2 (2 we) (2 (2 (2 could) (2 also)) (2 pass)))))))) (2 (2 (2 (2 (2 said) (2 instance)) (2 (2 to) (2 (2 (2 connect) (2 ,)) (2 (2 instead) (2 (2 of) (1 (2 passing) (2 (2 a) (2 port)))))))) (2 (2 (2 number) (2 ,)) (2 (2 which) (2 (2 requires) (2 (2 you) (2 (2 to) (2 (2 know) (2 (2 (2 the) (2 name)) (2 (2 of) (2 (2 the) (2 (2 field) (2 -LRB-)))))))))))) (2 .)))
port).
(1 (2 port) (2 (2 -RRB-) (2 .)))
I have to write other modules now but I wanted to leave this here before I forget or move to another thing.
(2 (2 (2 (2 (2 I) (2 (2 have) (2 (2 to) (2 (2 (3 write) (2 (2 other) (2 modules))) (2 now))))) (2 but)) (2 (2 I) (1 (2 wanted) (2 (2 to) (2 (2 (2 (1 leave) (2 this)) (2 here)) (2 (2 before) (2 (2 I) (2 (2 (2 (2 forget) (2 or)) (2 move)) (2 (2 to) (2 (2 another) (2 thing))))))))))) (2 .))
I might come back with more thoughts/examples.
(2 (2 I) (2 (2 (2 might) (2 (2 (2 come) (2 back)) (2 (2 with) (2 (2 more) (2 thoughts/examples))))) (2 .)))
Feel free to discuss/tell me why/if I'm wrong here :-)

?
Reply to this email directly or view it on GitHub.
(2 (2 (2 (2 (2 (2 Feel) (2 (2 free) (1 (2 to) (1 (2 discuss/tell) (1 (2 me) (1 (2 why/if) (1 (2 I) (1 (1 (2 'm) (1 wrong)) (3 (2 here) (3 (3 :--RRB-) (2 (2 Reply) (2 (2 to) (2 (2 this) (2 email)))))))))))))) (2 directly)) (2 or)) (2 (2 (2 view) (2 it)) (2 (2 on) (2 GitHub)))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-55542081\comment-71550564.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55542081) (2 \))) (2 comment-71550564)) (2 .))))
json .
(2 (2 json) (2 .))
If you have shared objects with shared _behavior_, consider putting them in their own class and packaging the class as a module that all dependents will import.
(2 (2 (2 If) (2 (2 you) (2 (2 have) (1 (2 (2 shared) (2 objects)) (2 (2 with) (2 (2 shared) (2 (2 _) (2 (2 behavior) (2 _))))))))) (2 (2 ,) (2 (2 (2 (2 consider) (2 (2 (2 (2 (2 putting) (2 them)) (1 (2 in) (1 (2 their) (2 (2 own) (2 class))))) (2 and)) (2 (2 (2 packaging) (2 (2 the) (2 class))) (2 (2 as) (2 (2 a) (2 module)))))) (2 (2 that) (2 (2 (2 all) (2 dependents)) (2 (2 will) (2 import))))) (2 .))))
If you're just passing around _structured data_, then you're only using inline-code as a map, and you'll be better off using a documented POJO, as that will make serialization completely painless, saving you time when you want to transfer that data over the wire (which will inevitably happen at some point).
(2 (2 (1 (1 (1 (1 (2 If) (1 (2 you) (1 (2 (2 're) (2 just)) (1 (2 passing) (2 (2 around) (2 (2 (2 _) (2 structured)) (2 (2 data) (2 _)))))))) (2 (2 ,) (2 (2 then) (2 (2 you) (2 (2 (2 're) (2 only)) (2 (2 (2 using) (2 inline-code)) (2 (2 as) (2 (2 a) (2 map))))))))) (2 ,)) (2 and)) (1 (2 you) (1 (2 'll) (1 (1 (1 (2 be) (1 (2 (3 better) (1 off)) (1 (2 using) (1 (2 a) (2 (2 documented) (2 POJO)))))) (2 ,)) (2 (2 as) (2 (2 that) (2 (2 will) (2 (2 (2 (2 make) (1 (2 serialization) (2 (2 completely) (2 painless)))) (2 ,)) (2 (2 (2 saving) (2 you)) (2 (2 time) (2 (2 when) (2 (2 you) (2 (2 want) (2 (2 to) (2 (2 (2 transfer) (2 (2 that) (2 data))) (2 (2 over) (2 (2 (2 the) (2 wire)) (2 (2 -LRB-) (2 (2 (2 which) (2 (2 (2 will) (2 inevitably)) (2 (2 happen) (2 (2 at) (2 (2 some) (2 point)))))) (2 -RRB-)))))))))))))))))))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-55542081\issue-55542081.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55542081) (2 \))) (2 issue-55542081)) (2 .))))
json .
(2 (2 json) (2 .))
We often handle the same type of "objects" when using modules in this project.
(2 (2 We) (2 (2 often) (2 (2 (2 (2 handle) (2 (2 (2 the) (2 (2 same) (2 type))) (2 (2 (2 (2 of) (2 ``)) (2 objects)) (2 '')))) (2 (2 when) (2 (2 (2 using) (2 modules)) (2 (2 in) (2 (2 this) (2 project)))))) (2 .))))
They're sometimes not actual classes but just simple inline-code with the same set of consistent attributes all over.
(1 (2 They) (1 (1 (2 (2 (2 're) (2 sometimes)) (1 not)) (2 (2 (1 (2 (2 actual) (2 classes)) (2 but)) (2 just)) (1 (2 (2 simple) (2 inline-code)) (1 (2 with) (1 (1 (2 (2 the) (2 (2 same) (2 set))) (2 (2 of) (2 (3 consistent) (2 attributes)))) (2 (2 all) (2 over))))))) (2 .)))
A thought that often passes my mind is whether we should _elevate_ them to their own class so we can say in the API "This call returns an object of class XYZ".
(2 (2 (2 (2 A) (2 thought)) (2 (2 that) (2 (2 often) (2 (2 passes) (2 (2 my) (2 mind)))))) (2 (2 (2 is) (2 (2 whether) (2 (2 we) (2 (2 (2 should) (2 _)) (2 (2 (2 elevate) (2 (2 (2 _) (2 them)) (2 (2 to) (1 (2 their) (2 (2 own) (2 class)))))) (2 (2 so) (2 (2 we) (2 (2 can) (2 (2 say) (2 (2 in) (1 (1 (2 (2 (2 the) (2 API)) (2 ``)) (1 (2 (2 This) (2 call)) (1 (2 returns) (1 (2 (2 an) (2 object)) (1 (2 of) (2 (2 class) (2 XYZ))))))) (2 '')))))))))))) (2 .)))
Or whether we should maybe use those objects instead of some of their properties, and hide them in the most generic case.
(2 (2 Or) (2 (2 (2 whether) (2 (2 we) (2 (2 (2 should) (2 maybe)) (2 (2 (2 (2 (2 use) (2 (2 (2 those) (2 objects)) (2 (2 instead) (2 (2 of) (1 (2 some) (2 (2 of) (2 (2 their) (2 properties)))))))) (2 ,)) (2 and)) (2 (2 (2 hide) (2 them)) (2 (2 in) (2 (2 the) (2 (2 (2 most) (2 generic)) (2 case))))))))) (2 .)))
For example, if inline-code would return an instance of inline-code option instead of returning a simple object, then we could also pass said instance to inline-code, instead of passing a port number, which requires you to know the name of the field (inline-code).
(2 (2 (2 (2 For) (2 example)) (2 (2 ,) (2 (2 (2 if) (2 (2 inline-code) (2 (2 would) (2 (2 (2 return) (2 (2 (2 an) (2 instance)) (2 (2 of) (2 (2 inline-code) (2 option))))) (2 (2 instead) (2 (2 of) (2 (2 returning) (2 (2 a) (2 (2 simple) (2 object)))))))))) (2 (2 ,) (2 (2 then) (2 (2 we) (2 (2 (2 could) (2 also)) (2 pass)))))))) (2 (2 (2 (2 (2 said) (2 instance)) (2 (2 (2 (2 (2 to) (2 inline-code)) (2 ,)) (2 instead)) (2 (2 of) (1 (2 passing) (2 (2 a) (2 port)))))) (2 (2 (2 number) (2 ,)) (2 (2 which) (2 (2 requires) (2 (2 you) (2 (2 to) (2 (2 know) (2 (2 (2 the) (2 name)) (2 (2 of) (2 (2 (2 the) (2 field)) (2 (2 -LRB-) (2 (2 inline-code) (2 -RRB-))))))))))))) (2 .)))
I have to write other modules now but I wanted to leave this here before I forget or move to another thing.
(2 (2 (2 (2 (2 I) (2 (2 have) (2 (2 to) (2 (2 (3 write) (2 (2 other) (2 modules))) (2 now))))) (2 but)) (2 (2 I) (1 (2 wanted) (2 (2 to) (2 (2 (2 (1 leave) (2 this)) (2 here)) (2 (2 before) (2 (2 I) (2 (2 (2 (2 forget) (2 or)) (2 move)) (2 (2 to) (2 (2 another) (2 thing))))))))))) (2 .))
I might come back with more thoughts/examples.
(2 (2 I) (2 (2 (2 might) (2 (2 (2 come) (2 back)) (2 (2 with) (2 (2 more) (2 thoughts/examples))))) (2 .)))
Feel free to discuss/tell me why/if I'm wrong here :-)

.
(2 (2 Feel) (2 (2 (2 free) (2 (2 to) (2 (2 discuss/tell) (2 (2 me) (2 (2 why/if) (2 (2 I) (2 (2 'm) (1 (1 (1 wrong) (2 here)) (3 :--RRB-))))))))) (2 .)))
#mozilla/node-firefox\issue-55612858\comment-111578091.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55612858) (2 \))) (2 comment-111578091)) (2 .))))
json .
(2 (2 json) (2 .))
FWIW, I've started hacking on this and #17 over here: URL.
(2 (2 FWIW) (2 (2 ,) (2 (2 I) (2 (2 (2 've) (2 (2 (2 (1 (2 started) (2 (2 hacking) (2 (2 on) (2 (2 (2 this) (2 and)) (2 (2 #) (2 17)))))) (2 (2 over) (2 here))) (2 :)) (2 URL))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-55612858\comment-117291557.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55612858) (2 \))) (2 comment-117291557)) (2 .))))
json .
(2 (2 json) (2 .))
Should it be added to the list and this bug closed?
(2 (2 Should) (2 (2 it) (2 (2 (2 be) (2 (2 added) (2 (2 to) (2 (2 (2 (2 the) (2 list)) (2 and)) (2 (2 (2 this) (1 bug)) (2 closed)))))) (2 ?))))
.
(2 .)
#mozilla/node-firefox\issue-55612858\comment-117296660.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55612858) (2 \))) (2 comment-117296660)) (2 .))))
json .
(2 (2 json) (2 .))
I'll try to get some docs written this week, and then it might be worth encouraging folks to use it

.
(2 (2 (2 (2 (2 (2 I) (2 (2 'll) (2 (2 try) (2 (2 to) (2 (2 get) (2 (2 (2 some) (3 docs)) (2 (3 written) (2 (2 this) (2 week))))))))) (2 ,)) (2 and)) (2 (2 then) (2 (2 it) (2 (2 might) (1 (2 (2 be) (2 worth)) (2 (2 (2 encouraging) (2 folks)) (2 (2 to) (2 (2 use) (2 it))))))))) (2 .))
#mozilla/node-firefox\issue-55612858\comment-117562399.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55612858) (2 \))) (2 comment-117562399)) (2 .))))
json .
(2 (2 json) (2 .))
"Assom"!
(3 (2 ``) (2 (2 (2 Assom) (2 '')) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-55612858\issue-55612858.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55612858) (2 \))) (2 issue-55612858)) (2 .))))
json .
(2 (2 json) (2 .))
Building on the existing fxos-console module

.
(2 (2 (2 Building) (2 (2 on) (2 (2 the) (2 (2 existing) (2 (2 fxos-console) (2 module)))))) (2 .))
#mozilla/node-firefox\issue-55612940\issue-55612940.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55612940) (2 \))) (2 issue-55612940)) (2 .))))
json .
(2 (2 json) (2 .))
Building on the existing console-logs module

.
(2 (2 (2 Building) (2 (2 on) (2 (2 the) (2 (2 existing) (2 console-logs))))) (2 (2 module) (2 .)))
#mozilla/node-firefox\issue-55613010\comment-72106568.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55613010) (2 \))) (2 comment-72106568)) (2 .))))
json .
(2 (2 json) (2 .))
doesn't actually build that much on the existing module, but URL.
(2 (2 (2 (1 (1 (1 (1 (2 does) (2 n't)) (2 actually)) (2 (2 (2 build) (2 that)) (2 (2 much) (2 (2 on) (2 (2 the) (2 (2 existing) (2 module))))))) (2 ,)) (2 but)) (2 URL)) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-55613010\issue-55613010.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55613010) (2 \))) (2 issue-55613010)) (2 .))))
json .
(2 (2 json) (2 .))
Building on the existing reload-css module

.
(2 (2 (2 Building) (2 (2 on) (2 (2 the) (2 (2 existing) (2 reload-css))))) (2 (2 module) (2 .)))
#mozilla/node-firefox\issue-55613347\comment-71650239.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55613347) (2 \))) (2 comment-71650239)) (2 .))))
json .
(2 (2 json) (2 .))
Alex told me: 



.
(2 (2 Alex) (2 (2 (2 (2 told) (2 me)) (2 :)) (2 .)))
#mozilla/node-firefox\issue-55613347\comment-73081726.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55613347) (2 \))) (2 comment-73081726)) (2 .))))
json .
(2 (2 json) (2 .))
+1 would love to have this!
(4 (3 +1) (3 (2 (2 would) (2 (4 love) (2 (2 to) (2 (2 have) (2 this))))) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-55613347\comment-73390725.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55613347) (2 \))) (2 comment-73390725)) (2 .))))
json .
(2 (2 json) (2 .))
Would love to see this integrate with unit tests and such <3

.
(3 (2 Would) (2 (2 (4 love) (2 (2 to) (2 (2 see) (2 (2 this) (2 (2 integrate) (2 (2 with) (2 (2 (2 (2 unit) (3 tests)) (2 and)) (2 (2 (2 such) (2 <)) (2 3))))))))) (2 .)))
#mozilla/node-firefox\issue-55613347\comment-73684592.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55613347) (2 \))) (2 comment-73684592)) (2 .))))
json .
(2 (2 json) (2 .))
++1

.
(3 (3 (2 +) (3 +1)) (2 .))
#mozilla/node-firefox\issue-55613347\issue-55613347.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-55613347) (2 \))) (2 issue-55613347)) (2 .))))
json .
(2 (2 json) (2 .))
Not sure which actor implements this (or if said actor is in simulators/phones!)
(2 (2 (2 Not) (2 sure)) (2 (2 (2 which) (2 actor)) (1 (2 (2 implements) (2 this)) (1 (2 -LRB-) (2 (2 (2 or) (2 (2 (2 if) (2 (2 said) (2 (2 actor) (2 (2 is) (2 (2 in) (2 simulators/phones)))))) (2 !))) (2 -RRB-))))))
-will add more info as I ask around.
(2 (2 -) (2 (2 (2 will) (2 (2 (3 add) (2 (2 more) (2 info))) (2 (2 as) (2 (2 I) (2 (2 ask) (2 around)))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-56058092\comment-72234528.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56058092) (2 \))) (2 comment-72234528)) (2 .))))
json .
(2 (2 json) (2 .))
If you?re finding the Promises are swallowing up too many errors, a common fix is to change:.
(1 (1 (2 If) (2 (2 you) (1 (2 re) (2 (2 finding) (3 (2 (2 the) (2 Promises)) (1 (2 are) (1 (2 (2 swallowing) (2 up)) (1 (2 (2 too) (2 many)) (1 errors))))))))) (2 (2 ,) (2 (2 (2 a) (2 (2 common) (3 fix))) (2 (2 (2 (2 is) (2 (2 to) (2 change))) (2 :)) (2 .)))))
block-code.
(2 (2 block-code) (2 .))
to:.
(2 (2 (2 to) (2 :)) (2 .))
block-code.
(2 (2 block-code) (2 .))
We do this in localForage and it prevents promise errors inside library code (which is what I assume you're hitting) from being "swallowed" by the Promises lib.
(2 (2 (2 (2 (2 We) (2 (2 do) (2 (2 this) (2 (2 in) (2 localForage))))) (2 and)) (2 (2 it) (2 (2 (2 prevents) (2 (2 (1 (2 promise) (1 errors)) (2 (2 inside) (2 (2 library) (2 code)))) (2 (2 -LRB-) (2 (2 (2 which) (2 (2 is) (2 (2 what) (2 (2 I) (2 (2 assume) (3 (2 you) (2 (2 're) (2 hitting)))))))) (2 -RRB-))))) (2 (2 from) (2 (2 being) (2 (2 ``) (2 (2 (2 swallowed) (2 '')) (2 (2 by) (2 (2 the) (2 (2 Promises) (2 lib))))))))))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-56058092\comment-72234820.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56058092) (2 \))) (2 comment-72234820)) (2 .))))
json .
(2 (2 json) (2 .))
Related: this is probably good practice to convert to anyway, and maybe I can inspect linting code to look for this type of Promise implementation in our code.
(3 (2 Related) (3 (2 :) (3 (3 (3 (3 (3 (2 this) (3 (2 (2 is) (2 probably)) (3 (3 good) (2 (2 practice) (2 (2 to) (2 (2 convert) (2 (2 to) (2 anyway)))))))) (2 ,)) (2 and)) (1 (2 maybe) (2 (2 I) (2 (2 can) (2 (2 inspect) (2 (2 linting) (2 (2 code) (2 (2 to) (2 (2 look) (2 (2 for) (2 (2 (2 this) (2 type)) (2 (2 of) (2 (2 (2 Promise) (2 implementation)) (2 (2 in) (2 (2 our) (2 code)))))))))))))))) (2 .))))
Users shouldn't have to write promises this way, but our code should.
(2 (2 (2 (2 (2 (2 Users) (2 (2 (2 should) (2 n't)) (2 (2 have) (2 (2 to) (2 (3 write) (2 (2 promises) (2 (2 this) (2 way)))))))) (2 ,)) (2 but)) (2 (2 (2 our) (2 code)) (2 should))) (2 .))
It's mildly annoying at first, when dealing with the otherwise pleasant Promises API, to run into this :unamused: 

.
(1 (2 It) (1 (1 (2 's) (1 (2 mildly) (1 (0 annoying) (2 (2 at) (2 (2 (2 first) (2 ,)) (2 (2 when) (2 (2 (2 (2 dealing) (2 (2 with) (0 (2 the) (0 (1 (2 otherwise) (2 pleasant)) (2 (2 Promises) (2 API)))))) (2 ,)) (2 (2 to) (2 (2 run) (2 (2 into) (2 (2 (2 (2 this) (2 :)) (2 unamused)) (2 :)))))))))))) (2 .)))
#mozilla/node-firefox\issue-56058092\comment-72237372.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56058092) (2 \))) (2 comment-72237372)) (2 .))))
json .
(2 (2 json) (2 .))
Yeah, I am using catch in places but the errors are not bubbling up often - because probably the chain of promises is not being returned.
(2 (2 (2 (2 (3 Yeah) (2 (2 ,) (2 (2 I) (2 (2 am) (2 (2 (2 using) (2 catch)) (2 (2 in) (2 places))))))) (2 but)) (1 (2 (2 the) (1 errors)) (2 (1 (2 are) (1 not)) (2 (2 (2 (2 bubbling) (2 (2 up) (2 often))) (2 -)) (2 (2 because) (2 (2 probably) (1 (2 (2 (2 the) (2 chain)) (2 (2 of) (2 promises))) (1 (1 (2 is) (1 not)) (2 (2 being) (2 returned)))))))))) (2 .))
I am not sure that linting is going to solve this, it requires looking at the code by a human :-P

Also, the second argument to inline-code is not an exception but a inline-code which should not throw.
(2 (1 (2 (2 (2 (2 (2 I) (2 (2 (2 (2 am) (1 not)) (2 sure)) (2 (2 that) (2 (2 linting) (2 (2 is) (2 (2 going) (2 (2 to) (2 (2 solve) (2 this))))))))) (2 ,)) (2 (2 it) (2 (2 requires) (2 (2 (2 (2 looking) (2 (2 at) (2 (2 the) (2 code)))) (1 (2 by) (1 (2 a) (2 (2 human) (2 :-P))))) (2 Also))))) (2 ,)) (2 (2 (2 (2 the) (2 (2 second) (2 argument))) (2 (2 to) (2 inline-code))) (1 (1 (2 is) (1 not)) (1 (1 (2 an) (1 exception)) (2 (2 but) (2 (2 (2 a) (2 inline-code)) (2 (2 which) (2 (2 (2 should) (1 not)) (2 throw))))))))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-56058092\comment-72240788.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56058092) (2 \))) (2 comment-72240788)) (2 .))))
json .
(2 (2 json) (2 .))
Right, but if I understand the chain correctly that means we aren't doing inline-code all the way up our Promises chain so somewhere the error is hidden...

URL.
(2 (2 Right) (2 (2 ,) (2 (2 but) (2 (2 (2 if) (2 (2 I) (2 (2 (2 (2 understand) (2 (2 the) (2 chain))) (3 correctly)) (2 (2 that) (2 (2 means) (2 (2 we) (2 (1 (2 are) (2 n't)) (2 (2 (2 (2 doing) (2 inline-code)) (2 (2 (2 all) (2 (2 the) (2 way))) (2 (2 up) (1 (2 our) (2 (2 Promises) (2 chain)))))) (2 (2 so) (2 (2 somewhere) (2 (2 (2 the) (1 error)) (2 (2 is) (2 (2 (2 hidden) (2 ...)) (2 URL)))))))))))))) (2 .)))))
That would mean having to wrap the inline-code bit in a inline-code block to prevent the Promise lib from catching the error, if I follow correctly.
(2 (2 That) (2 (2 (2 would) (2 (1 mean) (2 (2 having) (2 (2 to) (2 (2 (2 wrap) (2 (2 (2 the) (2 (2 inline-code) (2 bit))) (2 (2 in) (2 (2 a) (2 (2 inline-code) (2 block)))))) (1 (2 to) (1 (2 (2 (2 (2 prevent) (2 (2 the) (2 (2 Promise) (2 lib)))) (2 (2 from) (2 (2 catching) (2 (2 the) (1 error))))) (2 ,)) (2 (2 if) (3 (2 I) (2 (2 follow) (3 correctly))))))))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-56058092\issue-56058092.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56058092) (2 \))) (2 issue-56058092)) (2 .))))
json .
(2 (2 json) (2 .))
While Promises are cool etc they also capture errors in a sneaky way and sometimes it's impossible to find where your error is unless you delve into the code and start console.logging like silly.
(4 (3 (2 While) (4 (2 Promises) (4 (2 are) (4 cool)))) (1 (1 (2 etc) (1 (2 (2 (2 they) (2 (2 also) (2 (1 (2 capture) (1 errors)) (2 (2 in) (2 (2 a) (2 (2 sneaky) (2 way))))))) (2 and)) (1 (2 sometimes) (2 (2 it) (1 (2 's) (1 (1 impossible) (1 (2 to) (1 (1 (1 (2 find) (1 (2 where) (2 (1 (2 your) (1 error)) (2 (2 is) (2 (2 unless) (2 (2 you) (2 (2 delve) (2 (2 into) (2 (2 the) (2 code)))))))))) (2 and)) (1 (2 start) (1 (2 console.logging) (2 (3 like) (2 silly)))))))))))) (2 .)))
For example I was passing a wrong parameter to inline-code and the promise was capturing the error in getWebAppsActor call, which overall remained silent.
(1 (1 (1 (1 (2 (2 For) (2 example)) (1 (2 I) (1 (2 was) (1 (1 (2 passing) (1 (2 a) (1 (1 wrong) (2 parameter)))) (2 (2 to) (2 inline-code)))))) (2 and)) (1 (2 (2 the) (2 promise)) (1 (2 was) (1 (1 (2 capturing) (2 (2 the) (1 error))) (2 (2 in) (2 (2 (2 (2 getWebAppsActor) (2 call)) (2 ,)) (2 (2 which) (1 (2 overall) (2 (2 remained) (2 silent)))))))))) (2 .))
We should review the flow of each function and make sure errors can bubble up (perhaps intentionally building errors!)
(1 (2 We) (2 (2 should) (1 (2 (2 (3 review) (2 (2 (2 the) (2 flow)) (2 (2 of) (2 (2 each) (2 function))))) (2 and)) (1 (1 (2 make) (1 (1 (2 sure) (1 errors)) (2 (2 can) (2 (2 bubble) (2 up))))) (2 (2 -LRB-) (2 (2 (2 (2 perhaps) (2 intentionally)) (1 (1 (2 building) (1 errors)) (2 !))) (2 -RRB-)))))))
This is probably due to my own lack of experience with promises so I accept all fault already :-)

.
(2 (2 This) (2 (2 (2 (2 (2 is) (2 probably)) (2 (2 due) (2 (2 to) (2 (2 (2 my) (2 (2 own) (2 lack))) (2 (2 of) (2 (2 experience) (2 (2 with) (2 promises)))))))) (2 (2 so) (1 (2 I) (2 (2 accept) (1 (1 (2 all) (2 fault)) (3 (2 already) (3 :--RRB-))))))) (2 .)))
#mozilla/node-firefox\issue-56718897\comment-73684946.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56718897) (2 \))) (2 comment-73684946)) (2 .))))
json .
(2 (2 json) (2 .))
If you want to have the developer tools, the one you are used to see in the Firefox Browser, then you can use WebIDE and set it to connect to the port where you started the simulator with node-firefox.
(2 (2 (2 (2 (2 (2 (2 If) (2 (2 you) (2 (2 want) (2 (2 to) (2 (2 have) (2 (2 (2 (2 the) (2 (2 developer) (2 tools))) (2 ,)) (2 (2 the) (2 one)))))))) (2 (2 you) (2 (2 are) (2 (2 used) (2 (2 to) (2 (2 see) (2 (2 in) (2 (2 the) (2 (2 Firefox) (2 Browser)))))))))) (2 ,)) (2 then)) (2 (2 you) (2 (2 can) (2 (2 (2 (2 use) (2 WebIDE)) (2 and)) (2 (2 set) (2 (2 it) (2 (2 to) (2 (2 (2 connect) (2 (2 to) (2 (2 the) (2 port)))) (2 (2 where) (2 (2 you) (2 (2 (2 started) (2 (2 the) (2 simulator))) (2 (2 with) (2 node-firefox))))))))))))) (2 .))
WebIDE -> Select runtime (top right corner) -> remote runtime and you set the same port.
(1 (1 (2 (2 WebIDE) (2 -)) (1 (2 (2 (2 (2 >) (2 (2 Select) (2 runtime))) (2 (2 -LRB-) (2 (2 (2 top) (3 (3 right) (2 corner))) (2 -RRB-)))) (2 -)) (1 (2 (2 (2 >) (2 (2 remote) (2 runtime))) (2 and)) (1 (2 you) (1 (2 set) (2 (2 the) (2 (2 same) (2 port)))))))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-56718897\issue-56718897.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56718897) (2 \))) (2 issue-56718897)) (2 .))))
json .
(2 (2 json) (2 .))
Sorry if this is obvious, but it wasn't quite clear to me after reading URL how to connect a debugger (i.e. devtools) to a simulator started by node-firefox.
(2 (2 (2 Sorry) (2 (2 if) (2 (2 (1 (2 (2 this) (1 (2 is) (2 obvious))) (2 ,)) (2 but)) (2 (2 it) (1 (2 (1 (2 (2 was) (2 n't)) (2 (2 quite) (2 (3 clear) (2 (2 to) (2 me))))) (2 (2 after) (2 (2 reading) (2 URL)))) (1 (2 how) (1 (2 to) (2 (1 (2 connect) (1 (2 (2 a) (2 debugger)) (2 (2 -LRB-) (2 (2 (2 i.e.) (2 devtools)) (2 -RRB-))))) (2 (2 to) (2 (2 a) (2 simulator))))))))))) (2 (2 (2 started) (2 (2 by) (2 node-firefox))) (2 .)))
Do I still need the webIDE to do this?
(2 (2 (2 (1 (2 Do) (2 I)) (2 still)) (2 (2 need) (2 (2 the) (2 (2 webIDE) (2 (2 to) (2 (2 do) (2 this))))))) (2 ?))
.
(2 .)
#mozilla/node-firefox\issue-56725363\issue-56725363.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56725363) (2 \))) (2 issue-56725363)) (2 .))))
json .
(2 (2 json) (2 .))
Verified start-simulator module works in Linux after updating binary paths here URL.
(2 (2 (2 Verified) (2 (2 start-simulator) (2 module))) (2 (2 (2 (3 works) (2 (2 in) (2 Linux))) (2 (2 after) (2 (2 (2 (2 updating) (2 (2 binary) (2 paths))) (2 here)) (2 URL)))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-56725363\pr-28758807.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56725363) (2 \))) (2 pr-28758807)) (2 .))))
json .
(2 (2 json) (2 .))
Verified start-simulator module works in Linux after updating binary paths here URL.
(2 (2 (2 Verified) (2 (2 start-simulator) (2 module))) (2 (2 (2 (3 works) (2 (2 in) (2 Linux))) (2 (2 after) (2 (2 (2 (2 updating) (2 (2 binary) (2 paths))) (2 here)) (2 URL)))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-56732367\comment-73132585.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56732367) (2 \))) (2 comment-73132585)) (2 .))))
json .
(2 (2 json) (2 .))
NB: currently, that script expects splashpack to be checked out in the same parent folder as owascan

.
(2 (2 (2 (2 NB) (2 :)) (1 (2 currently) (1 (2 ,) (1 (2 (2 that) (2 script)) (1 (2 (2 expects) (2 splashpack)) (2 (2 to) (2 (2 be) (1 (2 (2 checked) (2 out)) (1 (2 in) (1 (1 (2 the) (1 (2 same) (2 (2 parent) (2 folder)))) (2 (2 as) (2 owascan)))))))))))) (2 .))
#mozilla/node-firefox\issue-56732367\comment-86647440.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56732367) (2 \))) (2 comment-86647440)) (2 .))))
json .
(2 (2 json) (2 .))
I haven't found any error when launching 2.2 simulators.
(1 (2 I) (2 (1 (2 (2 have) (2 n't)) (1 (2 (2 found) (2 (2 any) (1 error))) (1 (2 when) (1 (2 launching) (2 (2 2.2) (2 simulators)))))) (2 .)))
Perhaps you might want to make a smaller test case and attach any logging you can?
(2 (2 Perhaps) (2 (2 you) (2 (2 (2 might) (2 (2 want) (2 (2 to) (2 (2 (2 (2 make) (2 (2 a) (2 (2 smaller) (2 (3 test) (2 case))))) (2 and)) (2 (2 attach) (2 (2 (2 any) (2 logging)) (2 (2 you) (2 can)))))))) (2 ?))))
When you start the simulator you can also pass in the inline-code option to get the output from the simulator being piped to stdout:.
(2 (2 (2 (2 When) (2 (2 you) (2 (2 start) (2 (2 (2 the) (2 simulator)) (2 (2 you) (2 (2 (2 can) (2 also)) (2 (2 (2 pass) (2 (2 in) (2 (2 the) (2 (2 inline-code) (2 option))))) (2 (2 to) (2 (2 (2 get) (2 (2 the) (2 output))) (2 (2 from) (2 (2 (2 the) (2 simulator)) (2 (2 being) (2 (2 piped) (2 (2 to) (2 stdout))))))))))))))) (2 :)) (2 .))
block-code.
(2 (2 block-code) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-56732367\issue-56732367.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-56732367) (2 \))) (2 issue-56732367)) (2 .))))
json .
(2 (2 json) (2 .))
I've written a script that instantiates @louisstow 's splashpack and then launches it using node-firefox.
(2 (2 I) (2 (2 (2 've) (2 (3 written) (2 (2 (2 a) (2 script)) (2 (2 that) (2 (2 (2 (2 (2 instantiates) (2 (2 (2 @louisstow) (2 's)) (2 splashpack))) (2 and)) (2 then)) (2 (2 launches) (2 (2 it) (2 (2 using) (2 node-firefox))))))))) (2 .)))
This works for 2.2 simulator but not 2.0 simulator.
(2 (2 This) (2 (2 (3 works) (1 (2 for) (1 (1 (2 (2 2.2) (2 simulator)) (2 (2 but) (1 not))) (2 (2 2.0) (2 simulator))))) (2 .)))
Script is at URL.
(2 (2 Script) (2 (2 (2 is) (2 (2 at) (2 URL))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-57097298\comment-73679292.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-73679292)) (2 .))))
json .
(2 (2 json) (2 .))
Yeah, I'd use that feature too!
(2 (3 Yeah) (2 (2 ,) (2 (2 I) (2 (2 (2 'd) (2 (2 (2 use) (2 (2 that) (3 feature))) (2 too))) (2 !)))))
@arcturus You did some work on adb+node.
(2 (2 @arcturus) (2 (2 You) (2 (2 (2 (2 did) (2 (2 some) (2 work))) (2 (2 on) (1 (2 adb) (2 (2 +) (2 node))))) (2 .))))
Do you think we could use it?
(2 (2 (1 (2 Do) (2 you)) (2 (2 think) (2 (2 we) (2 (2 could) (2 (2 use) (2 it)))))) (2 ?))
My idea was this, you tell me if it could work:.
(2 (2 (2 (2 My) (2 idea)) (2 (2 was) (2 this))) (2 (2 ,) (2 (2 you) (2 (2 (2 (2 (2 tell) (2 me)) (2 (2 if) (2 (2 it) (2 (2 could) (2 work))))) (2 :)) (2 .)))))
- Using adb.js (supposing it's called like that) we detect a device
- We can then set up port forwarding to localhost:someport
- Once we have this port listening we can use node-firefox-connect

Does it make sense?
(2 (2 -) (2 (2 (2 (2 (2 (2 Using) (2 adb.js)) (2 (2 (2 -LRB-) (2 (2 (2 supposing) (2 (2 it) (2 (2 's) (2 (2 called) (2 (3 like) (2 that)))))) (2 -RRB-))) (2 (2 we) (2 (2 detect) (2 (1 (2 (2 a) (2 device)) (2 -)) (2 (2 We) (2 (2 (2 can) (2 then)) (2 (2 (2 set) (2 up)) (2 (2 port) (2 (2 forwarding) (2 (2 to) (2 (2 (2 localhost) (2 :)) (2 someport))))))))))))) (2 -)) (2 (2 (2 Once) (2 (2 we) (2 (2 have) (2 (1 (2 this) (2 (2 port) (2 listening))) (2 (2 we) (2 (2 can) (2 (2 use) (2 node-firefox-connect)))))))) (2 (2 Does) (2 (2 it) (2 (2 make) (2 sense)))))) (2 ?)))
.
(2 .)
#mozilla/node-firefox\issue-57097298\comment-73679630.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-73679630)) (2 .))))
json .
(2 (2 json) (2 .))
Expanding more on this:.
(2 (2 (2 (2 (2 Expanding) (2 more)) (2 (2 on) (2 this))) (2 :)) (2 .))
- We could have a inline-code module, returning the device ids that adb detects
- Then a inline-code or similar module using the device ids found above?
(0 (2 -) (1 (0 (1 (1 (1 (2 We) (1 (2 could) (1 (2 have) (1 (2 (2 (2 a) (2 (2 inline-code) (2 module))) (2 ,)) (1 (1 (2 returning) (2 (2 the) (2 (2 device) (2 ids)))) (1 (2 that) (2 (2 adb) (2 detects)))))))) (2 -)) (2 Then)) (2 (2 (2 (2 a) (2 (2 (2 (2 inline-code) (2 or)) (2 similar)) (2 module))) (2 (2 using) (2 (2 the) (2 (2 device) (2 ids))))) (2 (2 found) (2 above)))) (2 ?)))
Edit: maybe we also need a module to unset the forwarding

What is cool about this is that _we could push to all the connected devices_!!!
(3 (3 (2 (2 Edit) (2 :)) (3 (2 maybe) (3 (2 we) (3 (2 also) (3 (2 need) (3 (2 a) (3 (2 module) (3 (2 to) (4 (2 unset) (4 (2 (2 the) (2 forwarding)) (4 (2 What) (4 (4 (2 is) (4 cool)) (2 (2 about) (2 (2 this) (2 (2 is) (2 (2 that) (2 (2 _) (2 (2 we) (2 (2 could) (2 (2 push) (2 (2 to) (2 (2 all) (2 (2 the) (2 (2 connected) (2 devices))))))))))))))))))))))))) (2 (2 _) (2 !!!)))
!!!
(2 !!!)
.
(2 .)
#mozilla/node-firefox\issue-57097298\comment-73684438.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-73684438)) (2 .))))
json .
(2 (2 json) (2 .))
I can't find other conversations where I mentioned this, but this summer I attempted to implement that into fxos-ports URL that is the place where I think it should be with some flags (adb=true)

.
(2 (2 (2 (2 (2 (2 I) (2 (1 (2 ca) (2 n't)) (2 (2 (2 find) (2 (2 other) (2 conversations))) (2 (2 where) (2 (2 I) (2 (2 mentioned) (2 this))))))) (2 ,)) (2 but)) (2 (2 (2 this) (2 summer)) (2 (2 I) (2 (2 attempted) (2 (2 to) (2 (2 (2 (2 implement) (2 that)) (2 (2 into) (2 (2 (2 fxos-ports) (2 URL)) (2 (2 that) (2 (2 is) (2 (2 (2 the) (2 place)) (2 (2 where) (2 (2 I) (2 (2 think) (2 (2 it) (2 (2 should) (2 (2 be) (2 (2 with) (2 (2 some) (2 flags))))))))))))))) (1 (2 -LRB-) (2 (2 adb) (2 (2 (2 =) (3 true)) (2 -RRB-)))))))))) (2 .))
#mozilla/node-firefox\issue-57097298\comment-82358589.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-82358589)) (2 .))))
json .
(2 (2 json) (2 .))
I made a module for installing an app to all ADB connected devices:.
(2 (2 I) (2 (2 (2 (2 made) (2 (2 a) (2 module))) (2 (2 for) (2 (2 (2 (2 installing) (2 (2 an) (2 app))) (2 (2 to) (2 (2 (2 all) (2 ADB)) (2 (2 connected) (2 devices))))) (2 :)))) (2 .)))
URL.
(2 (2 URL) (2 .))
I am not 100% sure if that module is the right approach as it's very limited (BUT EFFECTIVE!)
(2 (2 I) (1 (2 (2 am) (1 not)) (2 (2 (2 (2 100) (2 %)) (2 sure)) (2 (2 if) (2 (2 (2 that) (2 module)) (2 (2 (2 (2 is) (2 (2 the) (2 (3 right) (2 approach)))) (2 (2 as) (2 (2 it) (2 (2 's) (2 (2 very) (2 limited)))))) (2 (2 -LRB-) (2 (2 (2 (2 BUT) (2 EFFECTIVE)) (2 !)) (2 -RRB-)))))))))
in what it does: pushing an app to devices.
(2 (2 (2 (2 (2 (2 in) (2 what)) (2 (2 it) (2 does))) (2 :)) (2 (2 (2 pushing) (2 (2 an) (2 app))) (2 (2 to) (2 devices)))) (2 .))
The issue is that you have to run the port forwarding step before you get to connect to anything, and before you do that you need to enumerate the adb devices.
(2 (2 (2 The) (1 issue)) (2 (2 (2 is) (2 (2 that) (2 (2 you) (2 (2 have) (2 (2 to) (2 (2 (2 run) (3 (2 the) (3 (2 port) (3 (2 forwarding) (2 step))))) (2 (2 (2 (2 (2 before) (2 (2 you) (2 (2 get) (2 (2 to) (2 (2 connect) (2 (2 to) (2 anything))))))) (2 ,)) (2 and)) (2 (2 before) (2 (2 you) (2 (2 do) (2 (2 that) (2 (2 you) (2 (2 need) (1 (2 to) (1 (2 enumerate) (2 (2 the) (2 (2 adb) (2 devices)))))))))))))))))) (2 .)))
Not sure if we want to hide all this, but am also not sure what would gaia need.
(2 (2 (2 (2 (2 Not) (2 sure)) (2 (2 if) (2 (2 we) (2 (2 (2 (2 (2 want) (2 (2 to) (2 (2 hide) (2 (2 all) (2 this))))) (2 ,)) (2 but)) (2 (2 (2 am) (2 also)) (2 (1 not) (2 (2 sure) (2 (2 what) (2 would))))))))) (2 gaia)) (2 (2 need) (2 .)))
Push just an app?
(2 (2 Push) (2 (2 just) (2 (2 an) (2 (2 app) (2 ?)))))
@arcturus halp!
(3 (2 @arcturus) (3 (2 halp) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-57097298\comment-82375117.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-82375117)) (2 .))))
json .
(2 (2 json) (2 .))
I was kind of scratching my head about this over the past week or so, too.
(2 (2 I) (2 (2 (2 was) (2 (3 kind) (2 (2 of) (2 (2 (2 (1 (2 scratching) (2 (2 my) (2 head))) (2 (2 about) (2 (2 this) (2 (2 over) (2 (2 the) (2 (2 past) (2 (2 (2 week) (2 or)) (2 so)))))))) (2 ,)) (2 too))))) (2 .)))
But, my problem is that not all adb connected devices are FxOS devices.
(1 (2 But) (1 (2 ,) (1 (1 (2 my) (1 problem)) (1 (1 (2 is) (1 (2 that) (1 (1 (1 not) (1 (2 all) (1 (2 adb) (2 (2 connected) (2 devices))))) (1 (2 are) (2 (2 FxOS) (2 devices)))))) (2 .)))))
Some will be, you know, Android devices.
(2 (2 Some) (2 (2 (2 will) (1 (2 (2 be) (2 (2 ,) (2 (2 (2 you) (2 know)) (2 ,)))) (2 (2 Android) (2 devices)))) (2 .)))
This is especially annoying for Cordova, which is meant to work cross-platform.
(1 (2 This) (1 (1 (2 is) (1 (2 especially) (1 (0 annoying) (2 (2 for) (2 (2 (2 Cordova) (2 ,)) (2 (2 which) (2 (2 is) (2 (2 meant) (2 (2 to) (2 (2 work) (2 cross-platform))))))))))) (2 .)))
I started peeking inside the ADB Helper addon.
(1 (2 I) (1 (1 (2 started) (1 (2 peeking) (1 (2 inside) (1 (2 the) (1 (2 ADB) (2 (2 Helper) (2 addon))))))) (2 .)))
It seems to speculatively connects to the forwarded port and tries to get the FxOS version from the debugging API.
(2 (2 It) (2 (2 (2 (2 (2 seems) (2 (2 to) (2 (2 (2 speculatively) (2 connects)) (2 (2 to) (2 (2 the) (2 (2 forwarded) (2 port))))))) (2 and)) (2 (2 tries) (2 (2 to) (2 (2 (2 get) (2 (2 the) (2 (2 FxOS) (2 version)))) (2 (2 from) (2 (2 the) (2 (2 debugging) (2 API)))))))) (2 .)))
If that fails, then it ignores that device as FxOS.
(2 (2 (2 If) (2 (2 that) (1 fails))) (2 (2 ,) (2 (2 then) (2 (2 it) (2 (1 (2 ignores) (2 (2 (2 that) (2 device)) (2 (2 as) (2 FxOS)))) (2 .))))))
The annoyance with that, though, is you get the connection permission prompt on every device every time unless you disable it with WebIDE first.
(1 (2 (2 (2 The) (2 annoyance)) (2 (2 with) (2 that))) (1 (2 ,) (1 (2 though) (1 (2 ,) (1 (1 (2 is) (1 (2 you) (1 (2 (2 get) (2 (2 the) (2 (2 connection) (2 permission)))) (1 (1 (1 (2 prompt) (2 (2 on) (2 (2 every) (2 device)))) (2 (2 every) (2 time))) (2 (2 unless) (2 (2 you) (2 (2 (2 (2 disable) (2 it)) (2 (2 with) (2 WebIDE))) (2 first)))))))) (2 .))))))
So, inline-code will list things like this:.
(2 (2 So) (2 (2 ,) (2 (2 inline-code) (2 (2 (2 (2 will) (2 (2 (2 list) (2 things)) (2 (3 like) (2 this)))) (2 :)) (2 .)))))
block-code.
(2 (2 block-code) (2 .))
I guess another way to go is to keep a list of device names, but that just seems like a big dumb task.
(2 (2 I) (2 (2 (2 guess) (2 (2 (2 another) (2 way)) (2 (2 to) (2 (2 go) (2 (2 (2 (2 (2 is) (2 (2 to) (2 (2 keep) (2 (2 (2 a) (2 list)) (1 (2 of) (2 (2 device) (2 names))))))) (2 ,)) (2 but)) (2 (2 that) (1 (2 just) (1 (2 seems) (1 (3 like) (1 (2 a) (1 (2 big) (1 (0 dumb) (2 task))))))))))))) (2 .)))
I'm going to poke into the ADB Helper some more, because it seems to help WebIDE detect FxOS devices without throwing up permission screens

.
(2 (2 I) (2 (2 (2 'm) (2 (2 going) (2 (2 to) (2 (1 (2 poke) (2 (2 into) (2 (2 the) (2 (2 ADB) (2 Helper))))) (2 (2 (2 (2 some) (2 more)) (2 ,)) (2 (2 because) (2 (2 it) (2 (2 seems) (1 (2 to) (1 (4 help) (1 (2 WebIDE) (2 (1 (2 detect) (2 (2 FxOS) (2 devices))) (2 (2 without) (2 (2 (2 throwing) (2 up)) (2 (2 permission) (2 screens)))))))))))))))) (2 .)))
#mozilla/node-firefox\issue-57097298\comment-82381441.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-82381441)) (2 .))))
json .
(2 (2 json) (2 .))
Oh, hey, so I think this is how ADB Helper does it:.
(1 (2 Oh) (1 (2 ,) (1 (2 hey) (2 (2 ,) (2 (2 (2 so) (2 I)) (2 (2 (2 (2 think) (2 (2 this) (1 (2 is) (1 (2 how) (2 (2 (2 ADB) (2 Helper)) (2 (2 does) (2 it))))))) (2 :)) (2 .)))))))
block-code.
(2 (2 block-code) (2 .))
That's a fun hack.
(1 (2 That) (1 (1 (2 's) (1 (2 a) (1 (2 fun) (2 hack)))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-57097298\comment-82399301.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-82399301)) (2 .))))
json .
(2 (2 json) (2 .))
Hah, that is awesome.
(3 (2 Hah) (3 (2 ,) (4 (2 that) (4 (4 (2 is) (4 awesome)) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-57097298\comment-82614494.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-82614494)) (2 .))))
json .
(2 (2 json) (2 .))
I hadn't seen CyberAgent/adbkit until poking through sole/install-to-adb - very cool!
(4 (2 I) (3 (3 (2 (2 had) (2 n't)) (3 (1 (2 seen) (2 CyberAgent/adbkit)) (3 (2 until) (3 (2 poking) (3 (2 through) (3 (2 (2 sole/install-to-adb) (2 -)) (4 (2 very) (4 cool)))))))) (2 !)))
So, I think I could use that shell hack from ADB Helper to look up device IDs with a combo of listDevices and shell.
(1 (2 So) (1 (2 ,) (2 (2 I) (2 (2 (2 think) (1 (2 I) (1 (2 could) (1 (1 (1 (2 use) (1 (2 that) (1 (2 shell) (2 hack)))) (2 (2 from) (2 (2 ADB) (2 Helper)))) (1 (2 to) (1 (1 (2 (2 look) (2 up)) (2 (2 device) (2 IDs))) (2 (2 with) (2 (2 (2 a) (2 combo)) (2 (2 of) (1 (2 (2 listDevices) (2 and)) (2 shell))))))))))) (2 .)))))
Then, listForwards accepts device IDs - which can then discover pre-existing port forwards specifically to FxOS devices.
(1 (2 Then) (1 (2 ,) (1 (2 listForwards) (1 (1 (2 accepts) (1 (1 (2 (2 device) (2 IDs)) (2 -)) (2 (2 which) (2 (2 (2 can) (2 then)) (1 (1 (2 discover) (2 (2 pre-existing) (2 port))) (2 (2 (2 forwards) (2 specifically)) (1 (2 to) (2 (2 FxOS) (2 devices))))))))) (2 .)))))
And, wherever a forward hasn't been done, we can make one with adbkit's forward.
(3 (2 And) (2 (2 ,) (2 (2 (2 wherever) (2 (2 (2 a) (2 forward)) (2 (2 (2 has) (2 n't)) (2 (2 been) (2 done))))) (3 (2 ,) (3 (2 we) (3 (2 (2 can) (2 (2 (2 (2 make) (2 one)) (2 (2 with) (2 (2 adbkit) (2 's)))) (2 forward))) (2 .)))))))
Not sure about un-forwarding, though.
(2 (2 Not) (2 (2 (2 sure) (2 (2 about) (2 (2 (2 un-forwarding) (2 ,)) (2 though)))) (2 .)))
Might not be all that necessary: If we can detect existing forwards, we reuse them.
(2 (2 (2 (2 (2 Might) (2 (1 not) (2 (2 be) (2 (2 (2 all) (2 that)) (2 necessary))))) (2 :)) (2 (2 (2 If) (2 (2 we) (2 (2 can) (2 (2 detect) (2 (2 existing) (2 forwards)))))) (2 (2 ,) (2 (2 we) (2 (2 reuse) (2 them)))))) (2 .))
So, hopefully they won't pile up.
(1 (2 So) (1 (2 ,) (2 (3 hopefully) (2 (2 they) (2 (2 (1 (2 wo) (2 n't)) (2 (2 pile) (2 up))) (2 .))))))
I guess they'll all get cleaned up with the adb daemon dies?
(2 (2 I) (2 (2 (2 guess) (2 (2 they) (2 (2 (2 'll) (2 all)) (2 (2 get) (2 (2 (2 cleaned) (2 up)) (1 (2 with) (1 (2 (2 the) (2 (2 adb) (2 daemon))) (2 dies)))))))) (2 ?)))
I think I'll play with that stuff tonight / tomorrow morning.
(2 (2 I) (2 (2 (2 think) (2 (2 I) (2 (2 'll) (2 (2 (2 play) (2 (2 with) (2 (2 (2 that) (2 (2 stuff) (2 tonight))) (2 (2 /) (2 tomorrow))))) (2 morning))))) (2 .)))
Just thinking aloud in this comment in case I forget how to computer or something

.
(2 (2 (2 Just) (2 (2 (2 thinking) (2 aloud)) (2 (2 in) (2 (2 (2 this) (2 comment)) (2 (2 in) (2 case)))))) (2 (2 I) (2 (2 (2 (2 forget) (2 how)) (2 (2 to) (2 (2 (2 computer) (2 or)) (2 something)))) (2 .))))
#mozilla/node-firefox\issue-57097298\comment-83068465.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-83068465)) (2 .))))
json .
(2 (2 json) (2 .))
They do get cleaned up :) seems that adbkit picks them up where they were.
(3 (2 They) (2 (2 (2 do) (2 (2 get) (3 (2 (2 (2 cleaned) (2 up)) (3 (3 :-RRB-) (2 (2 seems) (2 (2 that) (2 (2 adbkit) (2 (2 (2 picks) (2 them)) (2 up))))))) (2 (2 where) (2 (2 they) (2 were)))))) (2 .)))
Otherwise I would have ran out of ports already on my machine specially when running it with 10 phones!
(3 (2 Otherwise) (2 (2 I) (2 (2 (2 would) (2 (2 have) (2 (2 (2 (2 ran) (2 out)) (2 (2 of) (2 (2 ports) (2 (2 already) (2 (2 on) (1 (2 my) (2 machine))))))) (2 (2 specially) (2 (2 when) (2 (2 (2 running) (2 it)) (1 (2 with) (2 (2 10) (2 phones))))))))) (2 !))))
.
(2 .)
#mozilla/node-firefox\issue-57097298\comment-83068699.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-83068699)) (2 .))))
json .
(2 (2 json) (2 .))
For documentation we discussed on irc to have a inline-code module and a inline-code module.
(3 (3 (2 For) (3 documentation)) (2 (2 we) (2 (2 (2 (2 discussed) (2 (2 on) (2 irc))) (2 (2 to) (2 (2 have) (2 (2 (2 (2 a) (2 (2 inline-code) (2 module))) (2 and)) (2 (2 a) (2 (2 inline-code) (2 module))))))) (2 .))))
Les is going to look into that.
(2 (2 Les) (2 (2 (2 is) (2 (2 going) (2 (2 to) (2 (2 look) (2 (2 into) (2 that)))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-57097298\comment-83186273.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-83186273)) (2 .))))
json .
(2 (2 json) (2 .))
node-firefox-find-devices is a thing!
(3 (2 node-firefox-find-devices) (3 (2 (2 is) (2 (2 a) (2 thing))) (2 !)))
And I also have my first PR in to implement it.
(2 (2 And) (2 (2 I) (2 (2 also) (2 (2 (2 (2 (2 have) (2 (2 my) (2 (2 first) (2 PR)))) (2 in)) (2 (2 to) (2 (2 implement) (2 it)))) (2 .)))))
Tonight or tomorrow, I tackle foward-devices

.
(1 (2 (2 (2 Tonight) (2 or)) (2 tomorrow)) (1 (2 ,) (1 (2 I) (1 (2 (2 tackle) (2 foward-devices)) (2 .)))))
#mozilla/node-firefox\issue-57097298\comment-86645814.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-86645814)) (2 .))))
json .
(2 (2 json) (2 .))
and URL is another thing!
(2 (2 and) (2 (2 URL) (3 (2 (2 is) (2 (2 another) (2 thing))) (2 !))))
closing because you can now interact with ADB devices!
(2 (2 closing) (2 (2 (2 because) (2 (2 you) (2 (2 (2 can) (2 now)) (1 (2 interact) (1 (2 with) (2 (2 ADB) (2 devices))))))) (2 !)))
\o/

.
(2 (2 (2 \) (2 o)) (2 (2 /) (2 .)))
#mozilla/node-firefox\issue-57097298\comment-86667667.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 comment-86667667)) (2 .))))
json .
(2 (2 json) (2 .))
:100:.
(2 (2 :) (2 (2 100) (2 (2 :) (2 .))))
.
(2 .)
#mozilla/node-firefox\issue-57097298\issue-57097298.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-57097298) (2 \))) (2 issue-57097298)) (2 .))))
json .
(2 (2 json) (2 .))
Right now we can just use the simulator if we want to use node-firefox modules, but gaia build system could get better if we can actually perform all this nice actions on real devices :)

.
(2 (2 (2 (2 (2 (2 (2 Right) (2 now)) (2 (2 we) (2 (2 (2 can) (2 just)) (2 (2 (2 use) (2 (2 the) (2 simulator))) (2 (2 if) (2 (2 we) (2 (2 want) (2 (2 to) (2 (2 use) (2 (2 node-firefox) (2 modules))))))))))) (2 ,)) (2 but)) (2 (2 gaia) (2 (2 build) (2 (2 system) (2 (2 could) (3 (2 get) (3 (3 better) (3 (2 if) (3 (2 we) (3 (2 (2 can) (2 actually)) (3 (3 (2 perform) (3 (2 all) (3 (2 this) (3 (3 nice) (2 actions))))) (3 (2 on) (3 (3 real) (3 (2 devices) (3 :-RRB-))))))))))))))) (2 .))
#mozilla/node-firefox\issue-58641142\issue-58641142.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-58641142) (2 \))) (2 issue-58641142)) (2 .))))
json .
(2 (2 json) (2 .))
Windows support should be working on find-ports, find-simulators, and start-simulators

.
(2 (2 (2 Windows) (2 support)) (2 (2 (2 should) (2 (2 be) (2 (2 working) (2 (2 on) (2 (2 find-ports) (3 (2 ,) (2 (2 find-simulators) (2 (2 ,) (2 (2 and) (2 start-simulators)))))))))) (2 .)))
#mozilla/node-firefox\issue-58641142\pr-29841114.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-58641142) (2 \))) (2 pr-29841114)) (2 .))))
json .
(2 (2 json) (2 .))
Windows support should be working on find-ports, find-simulators, and start-simulators

.
(2 (2 (2 Windows) (2 support)) (2 (2 (2 should) (2 (2 be) (2 (2 working) (2 (2 on) (2 (2 find-ports) (3 (2 ,) (2 (2 find-simulators) (2 (2 ,) (2 (2 and) (2 start-simulators)))))))))) (2 .)))
#mozilla/node-firefox\issue-59686029\comment-77007603.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59686029) (2 \))) (2 comment-77007603)) (2 .))))
json .
(2 (2 json) (2 .))
Yes, this is awesome and our examples should encourage this usage.
(4 (4 (4 (4 (3 Yes) (4 (2 ,) (4 (2 this) (4 (2 is) (4 awesome))))) (2 and)) (2 (2 (2 our) (2 examples)) (2 (2 should) (2 (2 encourage) (2 (2 this) (2 usage)))))) (2 .))
The localForage tests look SOOOO much nicer with this style of promises.
(2 (2 (2 The) (2 (2 localForage) (3 tests))) (2 (2 (2 (2 look) (2 (2 SOOOO) (2 (2 much) (3 nicer)))) (2 (2 with) (2 (2 (2 this) (2 style)) (2 (2 of) (2 promises))))) (2 .)))
+1!
(4 (3 +1) (2 !))
.
(2 .)
#mozilla/node-firefox\issue-59686029\comment-77845150.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59686029) (2 \))) (2 comment-77845150)) (2 .))))
json .
(2 (2 json) (2 .))
Yes, also see URL which is related

.
(3 (3 Yes) (2 (2 ,) (2 (2 (2 also) (2 (2 see) (2 (2 URL) (2 (2 which) (2 (2 is) (2 related)))))) (2 .))))
#mozilla/node-firefox\issue-59686029\issue-59686029.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59686029) (2 \))) (2 issue-59686029)) (2 .))))
json .
(2 (2 json) (2 .))
Promises can be chained, rather than nested like callbacks.
(1 (2 Promises) (2 (2 (2 can) (2 (2 be) (2 (2 (2 (2 chained) (2 ,)) (2 (2 rather) (2 than))) (1 (2 nested) (2 (3 like) (2 callbacks)))))) (2 .)))
That makes code much cleaner.
(2 (2 That) (2 (2 (2 makes) (2 (2 code) (2 (2 much) (2 cleaner)))) (2 .)))
Here's a quick sample of dirty code I'm using to exercise modules:.
(2 (2 Here) (2 (2 (2 (2 's) (2 (2 (2 (2 a) (2 (2 quick) (2 sample))) (2 (2 of) (2 (2 dirty) (2 code)))) (2 (2 I) (2 (2 'm) (2 (2 using) (2 (2 to) (2 (2 exercise) (2 modules)))))))) (2 :)) (2 .)))
block-code.
(2 (2 block-code) (2 .))
I'll probably work through the various libraries and submit PRs myself.
(2 (2 I) (2 (2 (2 (2 'll) (2 probably)) (2 (2 (2 (2 work) (2 (2 through) (2 (2 the) (2 (2 various) (2 libraries))))) (2 and)) (2 (2 submit) (2 (2 PRs) (2 myself))))) (2 .)))
But, here's an issue filed just in case I don't get around to it.
(3 (2 But) (2 (2 ,) (2 (2 here) (2 (2 (2 's) (2 (2 (2 an) (1 issue)) (2 (2 (2 filed) (2 just)) (2 (2 in) (2 (2 case) (2 (2 I) (2 (2 (2 do) (2 n't)) (2 (2 (2 get) (2 around)) (2 (2 to) (2 it)))))))))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-59719679\comment-77061369.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59719679) (2 \))) (2 comment-77061369)) (2 .))))
json .
(2 (2 json) (2 .))
Ah, thanks you!
(3 (2 Ah) (4 (2 ,) (4 (3 (3 thanks) (2 you)) (2 !))))
I recall this was caught someplace else but I guess not in
every module.
(2 (2 (2 (2 (2 I) (2 (2 recall) (2 (2 this) (2 (2 was) (2 (2 caught) (2 (2 someplace) (2 else))))))) (2 but)) (2 (2 I) (2 (2 guess) (2 (1 not) (2 (2 in) (2 (2 every) (2 module))))))) (2 .))
Thanks!
(4 (3 Thanks) (2 !))
-tofumatt
On 3 Mar 2015 22:45, "Bruno Garcia" notifications@github.com wrote:.
(1 (2 -) (1 (1 (1 (1 (1 (1 (2 tofumatt) (1 (2 (2 On) (2 3)) (1 (2 Mar) (1 (2 2015) (2 22:45))))) (2 ,)) (2 ``)) (2 (2 (2 Bruno) (2 (2 Garcia) (2 (2 '') (2 notifications@github.com)))) (2 wrote))) (2 :)) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-59719679\comment-77208792.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59719679) (2 \))) (2 comment-77208792)) (2 .))))
json .
(2 (2 json) (2 .))
This should be fixed.
(2 (2 This) (2 (2 (2 should) (2 (2 be) (3 fixed))) (2 .)))
I'm going to try doing some full runs of the module stack on Linux later today / tomorrow, so that will expose any more we've missed.
(2 (2 (1 (1 (1 (2 I) (1 (2 'm) (1 (2 going) (1 (2 to) (1 (1 (2 try) (1 (1 (2 doing) (1 (1 (2 some) (2 (2 full) (2 runs))) (2 (2 of) (2 (2 (2 the) (2 (2 module) (2 stack))) (2 (2 on) (2 Linux)))))) (2 (2 later) (2 today)))) (2 (2 /) (2 tomorrow))))))) (2 ,)) (2 so)) (2 (2 (2 that) (2 (2 will) (2 (2 expose) (2 (2 any) (2 more))))) (2 (2 we) (2 (2 've) (2 missed))))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-59719679\comment-77221174.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59719679) (2 \))) (2 comment-77221174)) (2 .))))
json .
(2 (2 json) (2 .))
Thanks for the quick fixes!
(4 (3 (3 Thanks) (2 (2 for) (2 (2 the) (2 (2 quick) (3 fixes))))) (2 !))
It looks like launch-app and uninstall-app still need updating.
(2 (2 It) (2 (2 (2 looks) (2 (3 like) (2 (1 (2 (2 launch-app) (2 and)) (2 uninstall-app)) (2 (2 still) (2 (2 need) (2 updating)))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-59719679\comment-77222671.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59719679) (2 \))) (2 comment-77222671)) (2 .))))
json .
(2 (2 json) (2 .))
Doh, premature close then :) Threw in a couple of PRs for those two...

URL.
(2 (2 (3 (2 (2 Doh) (2 ,)) (3 (2 (2 premature) (2 close)) (3 (2 then) (3 (3 :-RRB-) (2 (2 Threw) (2 (2 in) (2 (2 (2 a) (2 couple)) (2 (2 of) (2 (2 PRs) (2 (2 for) (2 (2 those) (2 two)))))))))))) (2 ...)) (2 (2 URL) (2 .)))
URL.
(2 (2 URL) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-59719679\comment-77226367.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59719679) (2 \))) (2 comment-77226367)) (2 .))))
json .
(2 (2 json) (2 .))
Merged, so once these are released on npm we should close 

.
(2 (2 (2 (2 (2 Merged) (2 ,)) (2 so)) (2 (2 (2 once) (2 (2 these) (2 (2 are) (2 (2 released) (2 (2 on) (2 npm)))))) (2 (2 we) (2 (2 should) (2 close))))) (2 .))
#mozilla/node-firefox\issue-59719679\comment-83128942.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59719679) (2 \))) (2 comment-83128942)) (2 .))))
json .
(2 (2 json) (2 .))
Just pushed updates to git and npm for all the modules!
(2 (2 Just) (3 (2 (2 (2 (2 pushed) (2 updates)) (2 (2 to) (2 (2 (2 git) (2 and)) (2 npm)))) (2 (2 for) (2 (2 all) (2 (2 the) (2 modules))))) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-59719679\issue-59719679.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59719679) (2 \))) (2 issue-59719679)) (2 .))))
json .
(2 (2 json) (2 .))
Almost all of the node-firefox modules have lines like this:.
(2 (2 (2 (2 Almost) (2 all)) (2 (2 of) (2 (2 the) (2 (2 node-firefox) (2 modules))))) (2 (2 (2 (2 have) (2 (2 lines) (2 (3 like) (2 this)))) (2 :)) (2 .)))
block-code.
(2 (2 block-code) (2 .))
This fails on case-sensitive filesystems (Linux).
(2 (2 This) (2 (2 (1 fails) (2 (2 on) (2 (2 (2 case-sensitive) (2 filesystems)) (2 (2 -LRB-) (2 (2 Linux) (2 -RRB-)))))) (2 .)))
The correct case is es6-promise.
(1 (2 (2 The) (2 (3 correct) (2 case))) (1 (1 (2 is) (2 es6-promise)) (2 .)))
After I made all the replacements, things seem to work surprisingly well on Linux!
(2 (2 (2 After) (2 (2 I) (2 (2 made) (2 (2 all) (2 (2 the) (2 replacements)))))) (2 (2 ,) (2 (2 things) (2 (3 (2 seem) (2 (2 to) (2 (2 (2 work) (3 (2 surprisingly) (2 well))) (2 (2 on) (2 Linux))))) (2 !)))))
You might be able to update your support matrix after this change.
(2 (2 You) (2 (2 (2 might) (2 (2 be) (2 (3 able) (2 (2 to) (2 (2 (2 update) (2 (2 your) (2 (2 support) (2 matrix)))) (2 (2 after) (2 (2 this) (2 change)))))))) (2 .)))
;)

(Example: URL.
(3 (2 (3 (2 (3 ;-RRB-) (2 (2 -LRB-) (2 Example))) (2 :)) (2 URL)) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-59833630\comment-77273673.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59833630) (2 \))) (2 comment-77273673)) (2 .))))
json .
(2 (2 json) (2 .))
This appears relevant for @canuckistani 

.
(2 (2 This) (2 (2 (2 appears) (2 (3 relevant) (2 (2 for) (2 @canuckistani)))) (2 .)))
#mozilla/node-firefox\issue-59833630\comment-77746436.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59833630) (2 \))) (2 comment-77746436)) (2 .))))
json .
(2 (2 json) (2 .))
I asked @canuckistani about this too.
(2 (2 I) (2 (2 (2 (2 (2 asked) (2 @canuckistani)) (2 (2 about) (2 this))) (2 too)) (2 .)))
Heather left Mozilla a while ago but she has transferred ownership of a couple of repositories to Jeff.
(1 (1 (2 (1 (2 Heather) (2 (2 (2 left) (2 Mozilla)) (2 (2 (2 a) (2 while)) (2 ago)))) (2 but)) (1 (2 she) (1 (2 has) (1 (1 (2 transferred) (2 (2 ownership) (2 (2 of) (2 (2 (2 a) (2 couple)) (2 (2 of) (2 repositories)))))) (2 (2 to) (2 Jeff)))))) (2 .))
I don't think she would mind transferring this one-it would keep the code alive :-)

.
(2 (2 I) (2 (2 (2 (2 do) (2 n't)) (2 (2 think) (2 (2 she) (2 (2 would) (3 (2 mind) (3 (2 transferring) (3 (2 (2 this) (2 one-it)) (3 (2 would) (3 (2 keep) (3 (2 (2 the) (2 code)) (3 (2 alive) (3 :--RRB-)))))))))))) (2 .)))
#mozilla/node-firefox\issue-59833630\comment-77935387.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59833630) (2 \))) (2 comment-77935387)) (2 .))))
json .
(2 (2 json) (2 .))
It's a little complicated - Firefox Client works right now ( I've been using it for some browser automatio and it's awesome! )
(3 (2 (2 (2 It) (2 (2 's) (2 (2 (2 a) (2 little)) (2 complicated)))) (2 -)) (3 (2 (2 Firefox) (2 Client)) (4 (3 works) (4 (2 (3 right) (2 now)) (4 (2 -LRB-) (4 (4 (3 (2 (2 (2 I) (2 (2 've) (2 (2 been) (2 (2 (2 using) (2 it)) (2 (2 for) (1 (2 some) (2 (2 browser) (2 automatio)))))))) (2 and)) (3 (2 it) (4 (2 's) (4 awesome)))) (2 !)) (2 -RRB-)))))))
.
(2 .)
There is another client project with a smaller api called volcan that is a bit more flexible.
(2 (2 There) (2 (2 (2 is) (2 (2 (2 another) (2 (2 client) (2 project))) (2 (2 with) (1 (2 (2 a) (2 (2 smaller) (2 api))) (1 (2 called) (1 (2 volcan) (1 (2 that) (1 (2 is) (1 (1 (2 (2 a) (2 bit)) (2 more)) (2 flexible)))))))))) (2 .)))
1.
(2 (2 1) (2 .))
fork firefox-client somewhere, possibly into the /mozilla/ github org.
(2 (2 (1 (1 (1 (2 (2 fork) (2 firefox-client)) (2 somewhere)) (2 ,)) (2 possibly)) (2 (2 into) (2 (2 the) (2 (2 (2 /) (2 (2 mozilla) (2 /))) (2 (2 github) (2 org)))))) (2 .))
2.
(2 (2 2) (2 .))
look at firefox-client as well as volcan and figure out what api we want.
(2 (2 (2 (2 (2 look) (2 (2 at) (2 (2 (2 firefox-client) (2 (2 as) (2 (2 well) (2 as)))) (2 volcan)))) (2 and)) (2 (2 (2 figure) (2 out)) (2 (2 what) (2 (2 api) (2 (2 we) (2 want)))))) (2 .))
I thik the firefox-client api is pretty good, but could use some baked-in promises support ease the pain of making many many tab.DOM.
(1 (2 I) (1 (1 (2 thik) (2 (2 (2 the) (2 (2 firefox-client) (2 api))) (3 (3 (3 (3 (2 is) (3 (2 pretty) (3 good))) (2 ,)) (2 but)) (1 (2 could) (1 (2 use) (1 (1 (2 some) (1 (2 baked-in) (1 (2 promises) (2 support)))) (2 (2 ease) (2 (1 (2 the) (1 pain)) (2 (2 of) (2 (2 making) (2 (2 many) (2 (2 many) (2 tab.DOM))))))))))))) (2 .)))
\* calls.
(1 (2 \*) (2 (2 calls) (2 .)))
3.
(2 (2 3) (2 .))
look at all of the various bits of code lying around for starting up and configuring firefox processes in projects like firefox-client and jpm and deliver a key part of this: starting up a firefox process on a remote server with the right x11 environment that is listening for remote debugging connections on the specified port, so that libraries like firefox-client can connect to them and do things.
(2 (2 (2 (1 (2 (2 (2 look) (2 (2 at) (2 (2 (2 all) (2 (2 of) (2 (1 (2 the) (1 (2 various) (2 bits))) (2 (2 of) (2 code))))) (2 (1 (2 lying) (2 around)) (1 (2 for) (1 (2 (2 (2 starting) (2 up)) (2 and)) (1 (2 (2 configuring) (2 (2 firefox) (2 processes))) (1 (2 in) (1 (2 projects) (1 (3 like) (1 (2 (2 firefox-client) (2 and)) (2 jpm)))))))))))) (2 and)) (2 (2 (2 (2 (2 (2 deliver) (2 (2 (2 a) (2 (2 key) (2 part))) (2 (2 of) (2 this)))) (2 :)) (2 (2 (2 (2 starting) (2 up)) (1 (2 (2 a) (2 (2 firefox) (2 process))) (1 (2 on) (1 (2 a) (2 (2 remote) (2 server)))))) (2 (2 with) (2 (2 (2 the) (1 (3 right) (2 (2 x11) (2 environment)))) (1 (2 that) (1 (2 is) (1 (2 listening) (1 (2 for) (1 (1 (2 remote) (2 (2 debugging) (2 connections))) (2 (2 on) (2 (2 the) (2 (2 specified) (2 port))))))))))))) (2 ,)) (2 (2 so) (2 (2 that) (2 (2 (2 libraries) (2 (3 like) (2 firefox-client))) (2 (2 can) (2 (2 connect) (2 (2 to) (2 them))))))))) (2 and)) (2 (2 do) (2 things))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-59833630\comment-77935465.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59833630) (2 \))) (2 comment-77935465)) (2 .))))
json .
(2 (2 json) (2 .))
Also, tagging @Gozala in this thread as he is the authour of volcan.
(2 (2 Also) (2 (2 ,) (1 (1 (2 (2 tagging) (2 @Gozala)) (2 (2 in) (2 (2 (2 this) (2 thread)) (2 (2 as) (2 he))))) (2 (2 (2 is) (2 (2 (2 the) (2 authour)) (2 (2 of) (2 volcan)))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-59833630\comment-82360021.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59833630) (2 \))) (2 comment-82360021)) (2 .))))
json .
(2 (2 json) (2 .))
1.
(2 (2 1) (2 .))
I would suggest transferring the repo to mozilla.
(2 (2 I) (2 (2 (2 would) (2 (2 suggest) (2 (2 (2 transferring) (2 (2 the) (2 repo))) (2 (2 to) (2 mozilla))))) (2 .)))
Don't fork it because then the issues end up in heather's repo, which is not maintained ;-)
2.
(2 (2 (1 (2 Do) (2 n't)) (2 (2 (2 fork) (2 it)) (2 (2 because) (2 (1 (2 then) (2 (2 the) (1 issues))) (2 (2 (2 end) (2 up)) (2 (2 in) (2 (2 (2 (2 (2 heather) (2 's)) (2 repo)) (2 ,)) (1 (2 which) (1 (1 (2 is) (1 not)) (2 (2 maintained) (2 (3 ;--RRB-) (2 2)))))))))))) (2 .))
maybe firefox-client could return both (promises+callbacks), or maybe a new version of firefox-client is not backwards compatible and only uses promises
3.
(2 (2 (4 (1 (1 (0 (2 maybe) (2 firefox-client)) (2 (2 could) (2 (2 return) (2 (2 both) (2 (2 -LRB-) (2 (1 (2 promises) (2 (2 +) (2 callbacks))) (2 -RRB-))))))) (2 ,)) (2 or)) (1 (1 (1 (1 (1 (2 maybe) (2 (2 a) (2 (2 new) (2 version)))) (2 (2 of) (2 firefox-client))) (2 (2 (2 is) (2 (1 not) (2 backwards))) (2 compatible))) (2 and)) (2 (2 (2 only) (2 uses)) (2 (2 promises) (2 3))))) (2 .))
this looks like a completely different project!
(2 (2 this) (3 (2 (2 looks) (2 (3 like) (2 (2 a) (2 (2 (2 completely) (2 different)) (2 project))))) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-59833630\comment-82598167.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59833630) (2 \))) (2 comment-82598167)) (2 .))))
json .
(2 (2 json) (2 .))
I think a complimentary and necessary one though.
(2 (2 I) (2 (2 (2 think) (2 (2 (2 a) (2 (2 (2 (2 complimentary) (2 and)) (2 necessary)) (2 one))) (2 though))) (2 .)))
If I'm going to fully automate Firefox on a server for automation.
(1 (1 (2 If) (1 (2 I) (1 (2 'm) (1 (2 going) (1 (2 to) (1 (2 fully) (1 (2 automate) (2 (2 Firefox) (2 (2 on) (1 (2 (2 a) (2 server)) (2 (2 for) (2 automation)))))))))))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-59833630\comment-86095321.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59833630) (2 \))) (2 comment-86095321)) (2 .))))
json .
(2 (2 json) (2 .))
We kept hearing about Vulcan but it is released ?
(2 (1 (1 (1 (2 We) (1 (2 (2 kept) (2 hearing)) (2 (2 about) (2 Vulcan)))) (2 but)) (2 (2 it) (2 (2 is) (2 released)))) (2 ?))
Does that work with webapps actor, or at least regular tab actors (console, style, debugger ??)
(1 (2 Does) (2 (2 (2 that) (2 work)) (1 (2 with) (1 (1 (2 (1 (1 (2 (2 webapps) (2 actor)) (2 ,)) (2 or)) (2 (2 at) (1 least))) (1 (2 regular) (2 (2 tab) (2 actors)))) (2 (2 -LRB-) (2 (1 (2 (1 (2 (2 console) (2 ,)) (2 style)) (2 ,)) (2 (2 debugger) (2 ??))) (2 -RRB-)))))))
?
(2 ?)
firefox-client works, is released for quite a while, bug-fixed, supports old version of Firefox OS and almost all actors if not all...
And node-firefox is already entangled with firefox-client.
(1 (1 (1 (1 (3 (3 (3 (3 (3 (2 firefox-client) (3 works)) (2 ,)) (2 (2 is) (2 (2 released) (2 (2 for) (2 (2 (2 (2 quite) (2 (2 a) (2 while))) (2 ,)) (2 bug-fixed)))))) (2 ,)) (1 (2 supports) (2 (1 (1 (2 (2 old) (2 version)) (1 (2 of) (1 (1 (2 (2 Firefox) (2 OS)) (2 and)) (2 (2 almost) (2 (2 all) (2 actors)))))) (2 (2 if) (1 not))) (2 all)))) (2 ...)) (2 And)) (2 (2 node-firefox) (2 (2 (2 is) (2 already)) (2 (2 entangled) (2 (2 with) (2 firefox-client)))))) (2 .))
So we would need serious arguments to move to it!
(3 (2 So) (2 (2 we) (2 (2 (2 would) (2 (2 (2 need) (2 (2 serious) (2 arguments))) (2 (2 to) (2 (2 move) (2 (2 to) (2 it)))))) (2 !))))
Moving firefox-client into another github account and tweaking it to promises sounds way more pragmatic choice.
(1 (1 (1 (1 (2 (2 Moving) (2 firefox-client)) (1 (2 into) (1 (2 another) (2 (2 github) (2 account))))) (2 and)) (2 (2 (2 tweaking) (2 it)) (2 (2 to) (2 promises)))) (2 (2 (2 sounds) (2 (2 (2 (2 way) (2 more)) (2 pragmatic)) (2 choice))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-59833630\comment-88243846.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59833630) (2 \))) (2 comment-88243846)) (2 .))))
json .
(2 (2 json) (2 .))
Sorry, this issue was brought up again in IRC by @digitarald and I realised we didn't really come to a conclusion here.
(1 (2 Sorry) (1 (2 ,) (1 (1 (2 (2 (2 (2 this) (1 issue)) (2 (2 was) (2 (2 (2 (2 (2 brought) (2 up)) (2 again)) (2 (2 in) (2 IRC))) (2 (2 by) (2 @digitarald))))) (2 and)) (1 (2 I) (1 (2 realised) (2 (2 we) (2 (2 (2 (2 did) (2 n't)) (2 really)) (2 (2 (2 come) (2 (2 to) (2 (2 a) (2 conclusion)))) (2 here))))))) (2 .))))
I think what makes sense is to build on Heather's work.
(2 (2 I) (2 (2 (2 think) (2 (2 what) (2 (2 makes) (2 (2 sense) (2 (2 is) (2 (2 to) (2 (2 build) (2 (2 on) (2 (2 (2 Heather) (2 's)) (2 work)))))))))) (2 .)))
It works for us and if we need to update it or add to it we can.
(2 (2 (2 (2 (2 It) (2 (3 works) (2 (2 for) (2 us)))) (2 and)) (2 (2 (2 if) (2 (2 we) (2 (2 need) (2 (2 to) (2 (2 (2 (2 update) (2 it)) (2 or)) (2 (3 add) (2 (2 to) (2 it)))))))) (2 (2 we) (2 can)))) (2 .))
Once that happens we push it to a Mozilla repo.
(2 (2 Once) (2 (2 that) (2 (2 (2 happens) (2 (2 we) (2 (2 (2 push) (2 it)) (2 (2 to) (2 (2 a) (2 (2 Mozilla) (2 repo))))))) (2 .))))
When we do this, we should update its codebase to simplify it a bit and bring it in-line with inline-code (Promises-only API, etc.)

I'll leave this open for now but I think the plan is to maintain our own version, though I'm gonna talk with @canuckistani more about this tomorrow morning and will update here then as well.
(2 (2 (2 (2 (2 (2 When) (2 (2 we) (2 (2 do) (2 this)))) (2 (2 ,) (2 (2 we) (2 (2 should) (2 (2 update) (2 (2 its) (2 (2 codebase) (2 (2 to) (2 (2 (2 (2 simplify) (2 (2 it) (2 (2 a) (2 bit)))) (2 and)) (2 (2 bring) (2 (2 it) (2 (2 (2 in-line) (2 (2 with) (2 inline-code))) (1 (1 (2 -LRB-) (1 (1 (1 (2 (2 Promises-only) (2 API)) (2 ,)) (2 etc.)) (2 -RRB-))) (2 (2 I) (2 (2 'll) (2 (1 leave) (2 (2 (2 this) (2 open)) (2 (2 for) (2 now))))))))))))))))))) (2 but)) (2 (2 I) (2 (2 (2 (2 think) (2 (2 (2 the) (2 plan)) (2 (2 is) (2 (2 to) (3 (2 maintain) (2 (2 our) (2 (2 own) (2 version)))))))) (2 ,)) (2 (2 though) (2 (2 I) (2 (2 (2 (2 'm) (2 (2 gon) (2 (2 na) (2 (2 (2 talk) (2 (2 (2 with) (2 (2 @canuckistani) (2 more))) (2 (2 about) (2 (2 this) (2 tomorrow))))) (2 morning))))) (2 and)) (2 (2 will) (2 (2 (2 update) (2 here)) (2 (2 then) (2 (2 as) (2 well))))))))))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-59833630\comment-88247647.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59833630) (2 \))) (2 comment-88247647)) (2 .))))
json .
(2 (2 json) (2 .))
What would be great is to integrate firefox-client tests in our CI tools (treeherder).
(3 (2 (2 What) (3 (2 would) (3 (2 be) (3 great)))) (3 (3 (2 is) (3 (2 to) (3 (2 integrate) (3 (2 (2 (2 firefox-client) (3 tests)) (2 (2 in) (2 (2 our) (2 (2 CI) (2 tools))))) (2 (2 -LRB-) (2 (2 treeherder) (2 -RRB-))))))) (2 .)))
That would make it fully supported by everyone and prevent regressing it.
(2 (2 That) (2 (2 (2 would) (2 (2 (2 (2 make) (2 (2 it) (2 (2 fully) (2 (2 supported) (2 (2 by) (2 everyone)))))) (2 and)) (2 (2 prevent) (2 (2 regressing) (2 it))))) (2 .)))
I imagine that's something somewhat easy to do via taskcluster.
(2 (2 I) (2 (2 (2 imagine) (2 (2 that) (3 (2 's) (3 (2 something) (2 (2 somewhat) (2 (2 easy) (2 (2 to) (2 (2 do) (2 (2 via) (2 taskcluster)))))))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-59833630\issue-59833630.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-59833630) (2 \))) (2 issue-59833630)) (2 .))))
json .
(2 (2 json) (2 .))
Looking at the firefox-client repo, there's a big inline-code in the description.
(1 (2 (2 Looking) (2 (2 at) (2 (2 the) (2 (2 firefox-client) (2 repo))))) (2 (2 ,) (2 (2 there) (2 (2 (2 's) (2 (2 (2 a) (2 (2 big) (2 inline-code))) (2 (2 in) (2 (2 the) (2 description))))) (2 .)))))
The last commit was back in Nov 2014.
(1 (2 (2 The) (2 (2 last) (2 commit))) (1 (1 (2 was) (1 (2 back) (2 (2 in) (2 (2 Nov) (2 2014))))) (2 .)))
That seems not too long ago, though I'm not very clueful about the (in)stability of the Firefox dev APIs.
(1 (2 That) (1 (1 (2 (2 (2 (2 seems) (1 not)) (2 too)) (1 (1 (1 (2 long) (2 ago)) (2 ,)) (2 (2 though) (2 (2 I) (2 (2 (2 (2 'm) (1 not)) (2 (2 very) (2 clueful))) (2 (2 about) (2 (2 (2 (2 the) (2 (2 -LRB-) (2 (2 in) (2 -RRB-)))) (2 stability)) (2 (2 of) (2 (2 the) (2 Firefox)))))))))) (2 (2 dev) (2 APIs))) (2 .)))
Could be practically fine for a very long time.
(2 (2 (2 Could) (2 (2 be) (3 (2 practically) (3 (3 fine) (2 (2 for) (2 (2 a) (2 (2 (2 very) (2 long)) (2 time)))))))) (2 .))
But, assuming the worst, should we consider picking up maintenance of firefox-client?
(2 (3 (2 But) (2 (2 ,) (2 (2 (2 assuming) (2 (2 the) (2 worst))) (2 (2 ,) (2 should))))) (2 (2 we) (2 (2 (2 consider) (2 (2 (2 picking) (2 up)) (2 (2 maintenance) (2 (2 of) (2 firefox-client))))) (2 ?))))
Or, maybe splitting off the bits used by the node-firefox suite?
(1 (2 Or) (1 (2 ,) (1 (1 (2 maybe) (1 (1 (2 splitting) (1 off)) (2 (2 the) (2 bits)))) (2 (2 (2 used) (2 (2 by) (2 (2 the) (2 (2 node-firefox) (2 suite))))) (2 ?)))))
.
(2 .)
#mozilla/node-firefox\issue-60675488\comment-78288265.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60675488) (2 \))) (2 comment-78288265)) (2 .))))
json .
(2 (2 json) (2 .))
SWEEEEEET :+1:.
(3 (2 SWEEEEEET) (3 (2 :) (3 (3 (3 +1) (2 :)) (2 .))))
.
(2 .)
#mozilla/node-firefox\issue-60675488\issue-60675488.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60675488) (2 \))) (2 issue-60675488)) (2 .))))
json .
(2 (2 json) (2 .))
Having run some scripts that exercise the whole listed stack of modules on Linux & Windows, I'll make the bold claim that all these boxes can be checked.
(1 (1 (2 Having) (1 (2 run) (1 (2 (2 some) (2 scripts)) (2 (2 that) (2 (2 exercise) (2 (2 (2 the) (2 (2 whole) (2 (2 listed) (2 stack)))) (2 (2 of) (2 (2 modules) (2 (2 on) (2 (2 (2 Linux) (2 &)) (2 Windows))))))))))) (2 (2 ,) (2 (2 I) (2 (2 (2 'll) (2 (2 (2 make) (2 (2 the) (2 (2 bold) (2 claim)))) (2 (2 that) (2 (2 (2 all) (2 (2 these) (2 boxes))) (2 (2 can) (2 (2 be) (2 checked))))))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-60675488\pr-30953337.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60675488) (2 \))) (2 pr-30953337)) (2 .))))
json .
(2 (2 json) (2 .))
Having run some scripts that exercise the whole listed stack of modules on Linux & Windows, I'll make the bold claim that all these boxes can be checked.
(1 (1 (2 Having) (1 (2 run) (1 (2 (2 some) (2 scripts)) (2 (2 that) (2 (2 exercise) (2 (2 (2 the) (2 (2 whole) (2 (2 listed) (2 stack)))) (2 (2 of) (2 (2 modules) (2 (2 on) (2 (2 (2 Linux) (2 &)) (2 Windows))))))))))) (2 (2 ,) (2 (2 I) (2 (2 (2 'll) (2 (2 (2 make) (2 (2 the) (2 (2 bold) (2 claim)))) (2 (2 that) (2 (2 (2 all) (2 (2 these) (2 boxes))) (2 (2 can) (2 (2 be) (2 checked))))))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-60696042\comment-78339263.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60696042) (2 \))) (2 comment-78339263)) (2 .))))
json .
(2 (2 json) (2 .))
Examples would be great, either of the errors or of ways to do this :smile: 

.
(3 (2 Examples) (3 (3 (2 would) (3 (3 (3 (2 be) (3 great)) (2 ,)) (3 (2 (2 (2 either) (2 (2 of) (2 (2 the) (1 errors)))) (2 or)) (3 (2 of) (3 (2 ways) (3 (2 to) (3 (2 do) (3 (3 (2 (2 this) (2 :)) (3 smile)) (2 :))))))))) (2 .)))
#mozilla/node-firefox\issue-60696042\issue-60696042.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60696042) (2 \))) (2 issue-60696042)) (2 .))))
json .
(2 (2 json) (2 .))
I see some grammar and spelling mistakes in the md files, it would be beneficial to have some grammar/spell checking done on these documents for each pull request with travis.
(1 (1 (2 I) (1 (1 (2 see) (1 (2 some) (1 (2 grammar) (2 (2 and) (2 (2 spelling) (2 mistakes)))))) (2 (2 in) (2 (2 the) (2 (2 md) (2 files)))))) (2 (2 ,) (2 (2 it) (2 (2 (2 would) (2 (2 be) (2 (2 beneficial) (2 (2 to) (2 (2 have) (2 (1 (2 some) (2 (2 grammar/spell) (2 checking))) (2 (2 (2 done) (2 (2 on) (2 (2 (2 these) (2 documents)) (2 (2 for) (2 (2 each) (2 (2 pull) (2 request))))))) (2 (2 with) (2 travis))))))))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-60718163\comment-78355366.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60718163) (2 \))) (2 comment-78355366)) (2 .))))
json .
(2 (2 json) (2 .))
@tofumatt r?
(2 (2 (2 @tofumatt) (2 r)) (2 ?))
.
(2 .)
#mozilla/node-firefox\issue-60718163\comment-78380365.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60718163) (2 \))) (2 comment-78380365)) (2 .))))
json .
(2 (2 json) (2 .))
That is... very cool!
(4 (2 That) (4 (4 (2 (2 is) (2 ...)) (4 (2 very) (4 cool))) (2 !)))
:+1: 

.
(3 (2 :) (3 (3 (3 +1) (2 :)) (2 .)))
#mozilla/node-firefox\issue-60718163\comment-78390308.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60718163) (2 \))) (2 comment-78390308)) (2 .))))
json .
(2 (2 json) (2 .))
Small nitpick: The tests should have probably used nodeunit, since that's what we're using throughout the rest of the suite.
(3 (3 (2 (1 (2 Small) (1 nitpick)) (2 :)) (2 (2 (2 The) (3 tests)) (2 (2 should) (2 (2 (2 have) (2 probably)) (2 (2 (2 (2 used) (2 nodeunit)) (2 ,)) (2 (2 since) (2 (2 that) (2 (2 's) (2 (2 what) (2 (2 we) (2 (2 're) (2 (2 using) (2 (2 throughout) (2 (2 (2 the) (2 rest)) (2 (2 of) (2 (2 the) (2 suite))))))))))))))))) (2 .))
(Though, I actually like mocha & chai better.)
(2 (2 -LRB-) (2 (2 Though) (2 (2 ,) (2 (2 I) (2 (2 actually) (2 (2 (2 (3 like) (2 (2 (2 (2 mocha) (2 &)) (2 chai)) (3 better))) (2 .)) (2 -RRB-)))))))
.
(2 .)
#mozilla/node-firefox\issue-60718163\comment-78437267.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60718163) (2 \))) (2 comment-78437267)) (2 .))))
json .
(2 (2 json) (2 .))
Good point, I'll convert them over today.
(3 (3 (3 Good) (2 point)) (2 (2 ,) (2 (2 I) (2 (2 (2 'll) (2 (2 (2 (2 convert) (2 them)) (2 over)) (2 today))) (2 .)))))
-tofumatt
On 11 Mar 2015 22:52, "Les Orchard" notifications@github.com wrote:.
(2 (2 -) (2 (2 (2 (1 (1 (1 (2 tofumatt) (1 (2 (2 On) (2 11)) (1 (2 Mar) (1 (2 2015) (2 22:52))))) (2 ,)) (2 ``)) (2 (2 (2 Les) (2 (2 Orchard) (2 (2 '') (2 notifications@github.com)))) (2 wrote))) (2 :)) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-60791788\comment-83075857.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60791788) (2 \))) (2 comment-83075857)) (2 .))))
json .
(2 (2 json) (2 .))
Belated "works for me" r+!
(3 (2 Belated) (3 (2 (2 ``) (2 (2 (2 (3 works) (2 (2 for) (2 me))) (2 '')) (2 (2 r) (2 +)))) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-60791788\issue-60791788.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60791788) (2 \))) (2 issue-60791788)) (2 .))))
json .
(2 (2 json) (2 .))
This doesn't seem to accurately check inline-code and I can't tell why.
(1 (2 (2 (2 (2 This) (2 (1 (2 does) (2 n't)) (3 (2 seem) (2 (2 to) (2 (2 accurately) (2 (2 check) (2 inline-code))))))) (2 and)) (2 (2 I) (2 (1 (2 ca) (2 n't)) (2 (2 tell) (2 why))))) (2 .))
With the same code, inline-code works just fine (and it actually caught things that the other branch by @erikvold didn't, so I'm wondering if this were working exactly as intended?)
(2 (2 (2 With) (2 (2 the) (2 (2 same) (2 code)))) (2 (2 ,) (2 (2 inline-code) (2 (2 (3 works) (3 (2 just) (3 fine))) (2 (2 -LRB-) (2 (2 (2 (2 and) (2 (2 it) (2 (2 actually) (2 (2 (2 caught) (2 things)) (2 (2 that) (2 (2 (2 (2 (2 (2 (2 the) (2 (2 other) (2 branch))) (2 (2 by) (2 @erikvold))) (2 (2 did) (2 n't))) (2 ,)) (2 so)) (2 (2 I) (2 (2 'm) (2 (2 wondering) (2 (2 if) (2 (2 this) (2 (2 were) (2 (2 (2 working) (2 exactly)) (2 (2 as) (2 intended))))))))))))))) (2 ?)) (2 -RRB-)))))))
.
(2 .)
#mozilla/node-firefox\issue-60791788\pr-31019459.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-60791788) (2 \))) (2 pr-31019459)) (2 .))))
json .
(2 (2 json) (2 .))
This doesn't seem to accurately check inline-code and I can't tell why.
(1 (2 (2 (2 (2 This) (2 (1 (2 does) (2 n't)) (3 (2 seem) (2 (2 to) (2 (2 accurately) (2 (2 check) (2 inline-code))))))) (2 and)) (2 (2 I) (2 (1 (2 ca) (2 n't)) (2 (2 tell) (2 why))))) (2 .))
With the same code, inline-code works just fine (and it actually caught things that the other branch by @erikvold didn't, so I'm wondering if this were working exactly as intended?)
(2 (2 (2 With) (2 (2 the) (2 (2 same) (2 code)))) (2 (2 ,) (2 (2 inline-code) (2 (2 (3 works) (3 (2 just) (3 fine))) (2 (2 -LRB-) (2 (2 (2 (2 and) (2 (2 it) (2 (2 actually) (2 (2 (2 caught) (2 things)) (2 (2 that) (2 (2 (2 (2 (2 (2 (2 the) (2 (2 other) (2 branch))) (2 (2 by) (2 @erikvold))) (2 (2 did) (2 n't))) (2 ,)) (2 so)) (2 (2 I) (2 (2 'm) (2 (2 wondering) (2 (2 if) (2 (2 this) (2 (2 were) (2 (2 (2 working) (2 exactly)) (2 (2 as) (2 intended))))))))))))))) (2 ?)) (2 -RRB-)))))))
.
(2 .)
#mozilla/node-firefox\issue-63240435\issue-63240435.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-63240435) (2 \))) (2 issue-63240435)) (2 .))))
json .
(2 (2 json) (2 .))
Related to @sole's question in URL which versions of Firefox OS do we consider our "minimum supported version"?
(2 (2 (2 Related) (2 (2 to) (2 (1 (2 (2 @sole) (2 's)) (2 question)) (2 (2 in) (2 (2 URL) (2 (2 which) (1 (2 versions) (1 (2 of) (2 (2 Firefox) (2 OS)))))))))) (2 (2 (2 (2 do) (2 we)) (2 (2 consider) (2 (2 our) (2 (2 ``) (2 (2 minimum) (2 (2 supported) (2 (2 version) (2 '')))))))) (2 ?)))
I would think it's 1.2, as a lot of things on 1.0/1.1 devices and simulators are not easy to control remotely.
(2 (2 I) (2 (2 (2 would) (2 (2 think) (2 (2 it) (2 (2 (2 (2 's) (2 1.2)) (2 ,)) (2 (2 as) (2 (2 (2 (2 a) (2 lot)) (2 (2 of) (1 (2 things) (1 (2 on) (1 (2 1.0) (1 (2 /) (1 (2 1.1) (1 (2 (2 devices) (2 and)) (2 simulators))))))))) (2 (1 (2 are) (1 not)) (2 (2 easy) (2 (2 to) (2 (2 control) (2 remotely))))))))))) (2 .)))
We should note that in a README, but it might be best to declare it for the whole project rather than in individual module's READMEs.
(2 (2 (2 (2 (2 (2 We) (2 (2 should) (2 (2 note) (2 (2 that) (2 (2 in) (2 (2 a) (2 README))))))) (2 ,)) (2 but)) (2 (2 it) (2 (2 might) (2 (2 (2 be) (3 best)) (2 (2 to) (2 (2 (2 declare) (2 it)) (2 (2 (2 (2 for) (2 (2 the) (2 (2 whole) (2 project)))) (2 (2 rather) (2 than))) (2 (2 in) (2 (2 (2 individual) (2 (2 module) (2 's))) (2 READMEs)))))))))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-63704853\issue-63704853.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-63704853) (2 \))) (2 issue-63704853)) (2 .))))
json .
(2 (2 json) (2 .))
:wink: 

.
(3 (2 :) (3 (3 (3 wink) (2 :)) (2 .)))
#mozilla/node-firefox\issue-63704853\pr-31725060.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-63704853) (2 \))) (2 pr-31725060)) (2 .))))
json .
(2 (2 json) (2 .))
:wink: 

.
(3 (2 :) (3 (3 (3 wink) (2 :)) (2 .)))
#mozilla/node-firefox\issue-64073442\comment-102457723.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64073442) (2 \))) (2 comment-102457723)) (2 .))))
json .
(2 (2 json) (2 .))
Going to call this done for now: URL.
(2 (2 (2 Going) (2 (2 to) (2 (2 call) (2 this)))) (2 (2 (2 done) (2 (2 for) (2 (2 (2 now) (2 :)) (2 URL)))) (2 .)))
But, I've also started working on a CLI tool: URL.
(3 (2 But) (2 (2 ,) (2 (2 I) (2 (2 (2 (2 've) (2 also)) (2 (2 started) (2 (2 working) (2 (2 on) (2 (2 a) (2 (2 CLI) (2 (2 tool) (2 (2 :) (2 URL))))))))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-64073442\comment-85659131.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64073442) (2 \))) (2 comment-85659131)) (2 .))))
json .
(2 (2 json) (2 .))
Yeah, I was actually looking at this sad, empty module earlier and thinking this would make sense.
(2 (3 Yeah) (2 (2 ,) (2 (2 I) (2 (2 (2 (2 was) (2 actually)) (2 (2 (2 (2 looking) (2 (2 at) (2 (2 this) (2 (2 sad) (2 (2 ,) (2 (1 empty) (2 (2 module) (2 earlier)))))))) (2 and)) (2 (2 thinking) (2 (2 this) (2 (2 would) (2 (2 make) (2 sense))))))) (2 .)))))
I?m all for it and could do the grunt work later tonight :)

.
(1 (2 I) (1 (2 (2 (2 (2 m) (2 (2 all) (2 (2 for) (2 it)))) (2 and)) (3 (2 could) (3 (2 (2 (2 (2 do) (2 (2 the) (2 (2 grunt) (2 work)))) (2 later)) (2 tonight)) (3 :-RRB-)))) (2 .)))
#mozilla/node-firefox\issue-64073442\comment-86644391.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64073442) (2 \))) (2 comment-86644391)) (2 .))))
json .
(2 (2 json) (2 .))
There's that option, or the option of having this module be a command line thing.
(2 (2 There) (2 (2 (2 's) (2 (2 (2 (2 (2 that) (2 option)) (2 ,)) (2 or)) (2 (2 (2 the) (2 option)) (2 (2 of) (2 (2 having) (2 (2 (2 this) (2 module)) (2 (2 be) (2 (2 a) (2 (2 command) (2 (2 line) (2 thing))))))))))) (2 .)))
Or maybe that thing should be inline-code?
(2 (2 Or) (1 (2 maybe) (2 (2 (2 that) (2 (2 thing) (2 (2 should) (2 (2 be) (2 inline-code))))) (2 ?))))
o_O

.
(2 (2 o_O) (2 .))
#mozilla/node-firefox\issue-64073442\comment-86647912.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64073442) (2 \))) (2 comment-86647912)) (2 .))))
json .
(2 (2 json) (2 .))
This one could certainly ship with a CLI as well?
(2 (2 (2 This) (2 one)) (2 (3 (2 (2 could) (3 certainly)) (3 (2 (2 ship) (2 (2 with) (2 (2 a) (2 CLI)))) (2 (2 as) (2 well)))) (2 ?)))
Like, inline-code.
(2 (2 Like) (2 (2 ,) (2 (2 inline-code) (2 .))))
inline-code would be a weird CLI script to have to type all the time.
(2 (2 inline-code) (2 (2 (2 would) (2 (2 be) (1 (2 a) (2 (2 weird) (2 (2 CLI) (2 (2 script) (2 (2 to) (2 (2 have) (2 (2 to) (2 (2 type) (2 (2 all) (2 (2 the) (2 time))))))))))))) (2 .)))
-tofumatt

On 26 March 2015 at 18:52:13, sole (notifications@github.com) wrote:.
(2 (2 -) (2 (2 (2 tofumatt) (2 (2 On) (2 (2 (2 26) (2 (2 March) (2 2015))) (2 (2 at) (2 18:52:13))))) (2 (2 ,) (2 (2 (2 sole) (2 (2 -LRB-) (2 (2 notifications@github.com) (2 -RRB-)))) (2 (2 (2 wrote) (2 :)) (2 .))))))
There's that option, or the option of having this module be a command line thing.
(2 (2 There) (2 (2 (2 's) (2 (2 (2 (2 (2 that) (2 option)) (2 ,)) (2 or)) (2 (2 (2 the) (2 option)) (2 (2 of) (2 (2 having) (2 (2 (2 this) (2 module)) (2 (2 be) (2 (2 a) (2 (2 command) (2 (2 line) (2 thing))))))))))) (2 .)))
Or maybe that thing should be node-firefox-cli?
(2 (2 Or) (1 (2 maybe) (2 (2 (2 that) (2 (2 thing) (2 (2 should) (2 (2 be) (2 node-firefox-cli))))) (2 ?))))
o_O

?
Reply to this email directly or view it on GitHub.
(2 (2 (2 (2 (2 (2 (2 o_O) (2 Reply)) (2 (2 to) (2 (2 this) (2 email)))) (2 directly)) (2 or)) (2 (2 (2 view) (2 it)) (2 (2 on) (2 GitHub)))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-64073442\comment-86654251.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64073442) (2 \))) (2 comment-86654251)) (2 .))))
json .
(2 (2 json) (2 .))
I believe when you install grunt-cli you don't type grunt-cli but grunt ;)

.
(2 (2 I) (2 (2 (2 believe) (2 (2 when) (2 (2 you) (2 (2 install) (2 (2 grunt-cli) (2 (2 you) (2 (2 (2 do) (2 n't)) (2 (2 type) (2 (2 (2 (2 grunt-cli) (2 but)) (2 grunt)) (3 ;-RRB-)))))))))) (2 .)))
#mozilla/node-firefox\issue-64073442\comment-86654691.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64073442) (2 \))) (2 comment-86654691)) (2 .))))
json .
(2 (2 json) (2 .))
Yeah, but I loathe that.
(2 (3 Yeah) (2 (2 ,) (2 (2 but) (2 (2 I) (2 (2 (2 loathe) (2 that)) (2 .))))))
It?s like inline-code and you get the binary inline-code.
(2 (2 (2 (2 (2 It) (3 (2 s) (2 (3 like) (2 inline-code)))) (2 and)) (2 (2 you) (2 (2 get) (2 (2 the) (2 (2 binary) (2 inline-code)))))) (2 .))
It?s super unexpected.
(4 (2 It) (4 (4 (2 s) (4 (4 super) (2 unexpected))) (2 .)))
:-(

.
(2 (2 :--LRB-) (2 .))
#mozilla/node-firefox\issue-64073442\comment-86662418.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64073442) (2 \))) (2 comment-86662418)) (2 .))))
json .
(2 (2 json) (2 .))
you're actually right!
(2 (2 you) (2 (2 (2 (2 're) (2 actually)) (3 right)) (2 !)))
and it's a thing that totally confused me with grunt.
(2 (2 and) (2 (2 it) (2 (2 (2 's) (2 (2 (2 a) (2 thing)) (2 (2 that) (1 (2 totally) (1 (1 (1 confused) (2 me)) (2 (2 with) (2 grunt))))))) (2 .))))
So let's not do this.
(2 (2 So) (2 (2 (2 (2 (2 let) (2 's)) (1 not)) (2 (2 do) (2 this))) (2 .)))
What about this - having this module do a module.exports but also _importing_ and running the cli/binary if installed globally

.
(1 (2 What) (1 (1 (2 about) (1 (2 (2 this) (2 -)) (1 (2 (2 (2 (2 (2 (2 having) (2 (2 (2 this) (2 module)) (2 (2 do) (2 (2 a) (2 module.exports))))) (2 but)) (2 also)) (2 (2 _) (2 (2 importing) (2 _)))) (2 and)) (1 (2 (2 running) (2 (2 the) (2 cli/binary))) (1 (2 if) (2 (2 installed) (2 globally))))))) (2 .)))
#mozilla/node-firefox\issue-64073442\comment-86662856.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64073442) (2 \))) (2 comment-86662856)) (2 .))))
json .
(2 (2 json) (2 .))
That plan sounds perfect to me!
(3 (1 (2 That) (2 plan)) (4 (3 (2 sounds) (3 (3 perfect) (2 (2 to) (2 me)))) (2 !)))
.
(2 .)
#mozilla/node-firefox\issue-64073442\issue-64073442.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64073442) (2 \))) (2 issue-64073442)) (2 .))))
json .
(2 (2 json) (2 .))
What if node-firefox had an index.js like this?
(2 (2 What) (2 (2 (2 if) (2 (2 node-firefox) (2 (2 had) (2 (2 (2 an) (2 index.js)) (2 (3 like) (2 this)))))) (2 ?)))
block-code.
(2 (2 block-code) (2 .))
Then, a developer could just include inline-code in dependencies and use inline-code to make calls like inline-code.
(2 (2 Then) (2 (2 ,) (2 (2 (2 a) (2 developer)) (2 (2 (2 (2 could) (2 just)) (2 (2 (2 (2 (2 include) (2 inline-code)) (2 (2 in) (2 dependencies))) (2 and)) (2 (2 use) (2 (2 inline-code) (2 (2 to) (2 (2 (2 make) (2 calls)) (2 (3 like) (2 inline-code)))))))) (2 .)))))
Or, even make shorter aliases like inline-code to cut down on redundant inline-codees everywhere.
(2 (2 Or) (2 (2 ,) (2 (2 even) (3 (2 (2 (2 (2 make) (2 (2 shorter) (2 aliases))) (2 (3 like) (2 inline-code))) (3 (2 to) (3 (2 (2 (2 cut) (2 down)) (2 (2 on) (2 (2 redundant) (2 inline-codees)))) (3 everywhere)))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-64606143\comment-86669150.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64606143) (2 \))) (2 comment-86669150)) (2 .))))
json .
(2 (2 json) (2 .))
+1 - I'm doing something similar over in cordova-firefoxos, and would be happy to delete most of that dumb code.
(3 (3 +1) (2 (2 -) (2 (2 (2 I) (2 (2 (2 (2 (2 'm) (2 (2 (2 doing) (2 (2 something) (2 similar))) (2 (2 over) (2 (2 in) (2 cordova-firefoxos))))) (2 ,)) (2 and)) (2 (2 would) (3 (2 be) (3 (4 happy) (2 (2 to) (1 (2 delete) (1 (2 most) (2 (2 of) (1 (2 that) (0 (0 dumb) (2 code)))))))))))) (2 .))))
.
(2 .)
#mozilla/node-firefox\issue-64606143\comment-86685230.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64606143) (2 \))) (2 comment-86685230)) (2 .))))
json .
(2 (2 json) (2 .))
Hahaha, I see!
(3 (2 Hahaha) (3 (2 ,) (3 (2 I) (2 (2 see) (2 !)))))
I can confirm my code is working because I'm using it _all the time_ both via ADB and via various simulators.
(2 (2 I) (2 (2 (2 can) (2 (2 confirm) (2 (2 (2 my) (2 code)) (2 (2 is) (2 (2 working) (2 (2 because) (2 (2 I) (2 (2 'm) (2 (2 using) (2 (2 it) (2 (2 (2 _) (2 (2 all) (2 (2 the) (2 (2 time) (2 _))))) (1 (2 both) (1 (2 (2 (2 via) (2 ADB)) (2 and)) (1 (2 via) (1 (2 various) (2 simulators)))))))))))))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-64606143\comment-86743706.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64606143) (2 \))) (2 comment-86743706)) (2 .))))
json .
(2 (2 json) (2 .))
For what it's worth, I think this syntactic sugar is worth adding too.
(2 (2 (2 For) (2 (2 what) (2 (2 it) (2 (2 's) (2 worth))))) (0 (2 ,) (3 (2 I) (3 (3 (2 think) (3 (1 (2 this) (2 (2 syntactic) (2 sugar))) (3 (2 (2 is) (2 worth)) (2 (2 adding) (2 too))))) (2 .)))))
Modules that combine things to make common tasks easier are awesome and if node-firefox is both a low and high level API I say that's great.
(0 (1 (2 Modules) (1 (1 (3 (2 that) (0 (2 (2 combine) (2 (2 things) (2 (2 to) (2 (2 make) (2 (2 (2 common) (2 tasks)) (2 easier)))))) (4 (2 are) (4 awesome)))) (2 and)) (1 (2 if) (1 (2 node-firefox) (1 (2 is) (1 (2 both) (1 (1 (2 a) (1 (2 (2 low) (2 and)) (2 high))) (2 level)))))))) (3 (3 (2 API) (3 (2 I) (3 (2 say) (3 (2 that) (3 (2 's) (3 great)))))) (2 .)))
- tofumatt (Sent from mobile)

On 26 March 2015 20:35:40 CET, sole notifications@github.com wrote:Hahaha, I see!
(3 (2 -) (1 (1 (2 tofumatt) (1 (2 (2 -LRB-) (2 (2 (2 Sent) (2 (2 from) (2 mobile))) (2 -RRB-))) (1 (1 (1 (2 (2 On) (2 (2 26) (2 (2 March) (2 2015)))) (1 (1 (2 20:35:40) (1 (2 CET) (1 (2 ,) (2 (2 sole) (2 notifications@github.com))))) (2 wrote))) (2 :)) (2 (2 Hahaha) (2 (2 ,) (2 (2 I) (2 see))))))) (2 !)))
I can confirm my code is working because I'm using it all the time both via ADB and via various simulators.
(2 (2 I) (2 (2 (2 can) (2 (2 confirm) (2 (2 (2 my) (2 code)) (2 (2 is) (2 (2 working) (2 (2 because) (2 (2 I) (2 (2 'm) (1 (2 (2 (2 using) (2 it)) (2 (2 all) (2 (2 the) (2 time)))) (1 (2 both) (1 (2 (2 (2 via) (2 ADB)) (2 and)) (1 (2 via) (1 (2 various) (2 simulators)))))))))))))) (2 .)))
Reply to this email directly or view it on GitHub.
(2 (2 (2 (2 (2 (2 Reply) (2 (2 to) (2 (2 this) (2 email)))) (2 directly)) (2 or)) (2 (2 (2 view) (2 it)) (2 (2 on) (2 GitHub)))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-64606143\issue-64606143.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-64606143) (2 \))) (2 issue-64606143)) (2 .))))
json .
(2 (2 json) (2 .))
This would be syntactic sugar on top of a bunch of existing modules.
(2 (2 This) (2 (2 (2 would) (2 (2 be) (2 (2 (2 syntactic) (2 sugar)) (2 (2 on) (2 (2 top) (2 (2 of) (2 (2 (2 a) (2 bunch)) (2 (2 of) (2 (2 existing) (2 modules)))))))))) (2 .)))
Not sure if you want this as a separate module but I'm using it a lot myself, so maybe there _is_ a need.
(2 (2 (2 (2 Not) (2 sure)) (2 (2 if) (2 (2 (2 (2 you) (2 (2 want) (2 (2 this) (2 (2 as) (2 (2 a) (2 (2 separate) (2 module))))))) (2 but)) (2 (2 (2 (2 (2 I) (2 (2 'm) (2 (2 using) (2 (2 it) (2 (2 (2 a) (2 lot)) (2 myself)))))) (2 ,)) (2 so)) (2 (2 maybe) (2 there)))))) (2 (2 _) (2 (2 (2 is) (2 (2 _) (2 (2 a) (2 need)))) (2 .))))
I actually have a version already here, push-app so we would just need to transfer repo and make it node-firefox quality :P with tests and all

.
(2 (2 I) (2 (2 actually) (2 (2 (2 (2 (2 (2 have) (2 (2 (2 a) (2 version)) (2 already))) (2 here)) (2 ,)) (2 (2 push-app) (2 (2 so) (2 (2 we) (2 (2 (2 would) (2 just)) (2 (2 need) (3 (2 to) (3 (3 (2 (2 (2 (2 transfer) (2 repo)) (2 and)) (2 (2 make) (2 it))) (3 (2 node-firefox) (3 (3 quality) (2 :P)))) (2 (2 with) (2 (2 (3 tests) (2 and)) (2 all))))))))))) (2 .))))
#mozilla/node-firefox\issue-65339388\comment-87892780.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-65339388) (2 \))) (2 comment-87892780)) (2 .))))
json .
(2 (2 json) (2 .))
It could possibly make sense to construct some kind of shared JS module for connection that can be used both by inline-code and in Gecko, so that features are available to both.
(2 (2 It) (2 (2 (2 (2 could) (2 possibly)) (2 (2 (2 make) (2 sense)) (2 (2 to) (1 (2 (2 construct) (1 (2 (2 some) (3 kind)) (2 (2 of) (2 (2 shared) (2 (2 JS) (2 module)))))) (2 (2 for) (2 (2 connection) (2 (2 that) (2 (2 can) (2 (2 be) (2 (2 (2 (2 used) (2 (2 both) (2 (2 (2 (2 by) (2 inline-code)) (2 and)) (2 (2 in) (2 Gecko))))) (2 ,)) (2 (2 so) (2 (2 that) (2 (2 features) (2 (2 are) (2 (2 available) (2 (2 to) (2 both))))))))))))))))) (2 .)))
However, this does not feel like a simple task.
(1 (1 However) (1 (2 ,) (1 (2 this) (1 (3 (2 (2 does) (1 not)) (2 (2 feel) (2 (3 like) (2 (2 a) (2 (2 simple) (2 task)))))) (2 .)))))
Just a thought.
(2 (2 (2 Just) (2 a)) (2 (2 thought) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-65339388\issue-65339388.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-65339388) (2 \))) (2 issue-65339388)) (2 .))))
json .
(2 (2 json) (2 .))
FxOS has support for "bulk data" which allows apps to be installed roughly ~10x faster than the basic method.
(2 (2 FxOS) (2 (2 (2 has) (2 (2 (2 support) (2 (2 (2 (2 for) (2 ``)) (3 (2 bulk) (2 data))) (2 ''))) (2 (2 which) (2 (2 allows) (2 (2 apps) (2 (2 to) (2 (2 be) (2 (2 installed) (2 (2 (2 (2 roughly) (2 (2 ~) (2 10x))) (2 faster)) (2 (2 than) (2 (2 the) (2 (2 basic) (2 method))))))))))))) (2 .)))
Support for this is limited in external tools so far, but inline-code could certainly use it!
(3 (2 (2 (2 (2 (2 (2 Support) (2 (2 for) (2 this))) (2 (2 is) (2 (2 (2 limited) (2 (2 in) (2 (2 external) (2 tools)))) (2 (2 so) (2 far))))) (2 ,)) (2 but)) (2 (2 inline-code) (2 (2 (2 could) (3 certainly)) (2 (2 use) (2 it))))) (2 !))
Outside of Gecko directly, I am only aware of ffdb.py offering this support.
(2 (2 (2 Outside) (2 (2 (2 of) (2 Gecko)) (2 directly))) (2 (2 ,) (2 (2 I) (2 (2 (2 am) (2 (2 only) (2 (2 aware) (2 (2 of) (2 (2 ffdb.py) (2 (2 offering) (2 (2 this) (2 support)))))))) (2 .)))))
I believe it would require changes to how connections are managed, so most of the work may happen in inline-code, but perhaps other modules are impacted as well.
(2 (2 (2 (2 (2 (2 (2 (2 (2 I) (2 (2 believe) (2 (2 it) (2 (2 would) (2 (2 (2 require) (2 changes)) (2 (2 to) (2 (2 how) (2 (2 connections) (2 (2 are) (2 managed)))))))))) (2 ,)) (2 so)) (2 (2 (2 most) (2 (2 of) (2 (2 the) (2 work)))) (2 (2 may) (2 (2 happen) (2 (2 in) (2 inline-code)))))) (2 ,)) (2 but)) (2 (2 perhaps) (2 (2 (2 other) (2 modules)) (2 (2 are) (2 (2 impacted) (2 (2 as) (2 well))))))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-65341296\comment-87966764.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-65341296) (2 \))) (2 comment-87966764)) (2 .))))
json .
(2 (2 json) (2 .))
HA!
(3 (2 HA) (2 !))
I just came here to file a bug for this!
(2 (2 I) (3 (2 just) (2 (2 (2 (2 came) (2 here)) (2 (2 to) (2 (2 file) (2 (1 (2 a) (1 bug)) (2 (2 for) (2 this)))))) (2 !))))
For doc purposes: here's @jryans post announcing this: URL.
(2 (2 (2 For) (2 (2 doc) (2 purposes))) (2 (2 :) (2 (2 here) (2 (2 (2 's) (2 (2 (2 @jryans) (2 post)) (2 (2 (2 (2 announcing) (2 this)) (2 :)) (2 URL)))) (2 .)))))
So @jryans I was going to ask you if you could point me to where this is documented/explained in tech terms, past the QR code side etc.
(2 (2 So) (2 (2 @jryans) (2 (2 I) (2 (2 (2 was) (2 (2 going) (2 (2 to) (2 (2 (2 ask) (2 you)) (2 (2 if) (1 (2 you) (2 (2 could) (1 (2 (2 point) (2 me)) (1 (2 to) (1 (2 where) (1 (2 this) (1 (2 is) (1 (1 (1 (2 documented/explained) (2 (2 in) (2 (2 tech) (2 terms)))) (2 ,)) (2 (2 past) (2 (2 (2 the) (2 (2 QR) (2 (2 code) (2 side)))) (2 etc.)))))))))))))))) (2 .)))))
I guess there is lots of hand shaking between the two devices etc.
(2 (2 I) (2 (2 (2 guess) (2 (2 there) (1 (2 is) (1 (2 lots) (1 (2 of) (1 (2 (2 hand) (2 shaking)) (1 (1 (2 between) (2 (2 the) (2 (2 two) (2 devices)))) (2 etc.)))))))) (2 .)))
It doesn't seem like it can be done automatically i.e. without human interaction, whereas I was expecting more of a Bonjour like approach so we could run "something" that would scan the network and find Firefox OS devices, then we could run "something else" that would try to connect, if successful we can do the QR dance, and then finally end up with a remote host:port and we can connect to it with firefox-client?
(2 (1 (0 (0 (1 (2 It) (0 (1 (2 does) (2 n't)) (1 (2 seem) (1 (3 like) (2 (2 it) (1 (2 can) (1 (2 be) (1 (1 (1 (2 (2 (2 done) (2 automatically)) (2 i.e.)) (1 (2 without) (2 (2 human) (2 interaction)))) (2 ,)) (2 (2 whereas) (2 (2 I) (2 (2 was) (2 (2 (2 expecting) (2 (2 more) (2 (2 of) (2 (2 (2 a) (2 Bonjour)) (2 (3 like) (2 approach)))))) (2 (2 so) (2 (2 we) (2 (2 could) (2 (2 run) (2 (2 (2 ``) (2 (2 something) (2 ''))) (2 (2 that) (1 (2 would) (1 (2 (2 (2 scan) (2 (2 the) (2 network))) (2 and)) (1 (2 find) (1 (2 Firefox) (2 (2 OS) (2 devices)))))))))))))))))))))))) (2 ,)) (2 then)) (2 (2 we) (2 (2 could) (2 (2 (2 (2 (2 (2 (2 run) (2 ``)) (2 (2 something) (2 else))) (2 '')) (2 (2 that) (2 (2 would) (2 (2 try) (2 (2 to) (2 connect)))))) (2 ,)) (2 (2 if) (2 (2 (2 (2 successful) (2 (2 we) (2 (2 can) (2 (2 (2 (2 (2 (2 do) (2 (2 the) (2 (2 QR) (2 dance)))) (2 ,)) (2 and)) (2 then)) (2 (2 finally) (2 (2 (2 end) (2 up)) (2 (2 with) (2 (2 a) (2 (2 remote) (2 (2 host) (2 (2 :) (2 port)))))))))))) (2 and)) (2 (2 we) (2 (2 can) (2 (2 (2 connect) (2 (2 to) (2 it))) (2 (2 with) (2 firefox-client))))))))))) (2 ?))
.
(2 .)
#mozilla/node-firefox\issue-65341296\comment-88271579.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-65341296) (2 \))) (2 comment-88271579)) (2 .))))
json .
(2 (2 json) (2 .))
In fact, it is an automatic, Boujour-like approach.
(2 (2 (2 In) (2 fact)) (2 (2 ,) (2 (2 it) (2 (2 (2 is) (2 (2 an) (2 (2 automatic) (2 (2 ,) (2 (2 Boujour-like) (2 approach)))))) (2 .)))))
(What gives the impression that it is manual?
(2 (2 -LRB-) (2 (2 What) (2 (2 (2 (2 gives) (2 (2 the) (2 impression))) (2 (2 that) (2 (2 it) (1 (2 is) (2 manual))))) (2 ?))))
I'd like to know, since I'm writing more posts about it!
(3 (2 I) (3 (2 (2 'd) (2 (2 (2 (3 like) (2 (2 to) (2 know))) (2 ,)) (2 (2 since) (1 (2 I) (1 (2 'm) (1 (1 (2 writing) (2 (2 more) (2 posts))) (2 (2 about) (2 it)))))))) (2 !)))
:smile:)

Devices are discovered automatically on the same Wi-Fi network.
(3 (2 :) (3 (3 (3 smile) (3 (3 :-RRB-) (2 Devices))) (3 (2 (2 are) (1 (2 (2 discovered) (2 automatically)) (1 (2 on) (1 (2 the) (1 (2 same) (2 (2 Wi-Fi) (2 network))))))) (2 .))))
There is a design doc (also in-tree) which explains the authentication handshake protocol.
(2 (2 There) (2 (2 (2 is) (2 (2 (2 (2 a) (2 (2 design) (2 doc))) (2 (2 -LRB-) (3 (3 (2 also) (3 in-tree)) (2 -RRB-)))) (2 (2 which) (1 (2 explains) (1 (2 the) (1 (2 authentication) (2 (2 handshake) (2 protocol)))))))) (2 .)))
So, potentially inline-code (in some modules somewhere) would want to:.
(2 (2 So) (2 (2 ,) (2 (2 (2 (2 potentially) (2 inline-code)) (2 (2 -LRB-) (2 (2 (2 in) (2 (2 some) (2 (2 modules) (2 somewhere)))) (2 -RRB-)))) (2 (2 (2 (2 would) (2 (2 want) (2 to))) (2 :)) (2 .)))))
1.
(2 (2 1) (2 .))
Search for devices using the discovery mechanism
2.
(1 (1 (2 Search) (1 (2 for) (1 (2 devices) (1 (2 using) (1 (2 the) (1 (2 discovery) (2 (2 mechanism) (2 2)))))))) (2 .))
Run the client side of the handshake
3.
(2 (1 (2 Run) (2 (2 (2 the) (2 (2 client) (2 side))) (2 (2 of) (2 (2 the) (2 (2 handshake) (2 3)))))) (2 .))
Display a QR code for the phone to scan

After the first connection, it can really be automatic if you choose to remember the client.
(2 (2 (2 (2 Display) (2 (2 a) (2 (2 QR) (2 code)))) (2 (2 for) (2 (2 the) (2 (2 phone) (2 (2 to) (2 (2 scan) (2 (2 (2 After) (2 (2 the) (2 (2 first) (2 connection)))) (2 (2 ,) (2 (2 it) (2 (2 (2 can) (2 really)) (2 (2 (2 be) (2 automatic)) (2 (2 if) (2 (2 you) (2 (2 choose) (2 (2 to) (2 (2 remember) (2 (2 the) (2 client)))))))))))))))))) (2 .))
Anyway, that's a lot of stuff to do... so, perhaps the code sharing is best?
(2 (1 (2 (2 (2 Anyway) (2 (2 ,) (2 (2 that) (2 (2 's) (2 (2 (2 (2 a) (2 lot)) (2 (2 of) (2 stuff))) (2 (2 to) (2 do))))))) (2 ...)) (0 (2 so) (3 (2 ,) (3 (2 perhaps) (3 (2 (2 the) (2 (2 code) (2 sharing))) (3 (2 is) (3 best))))))) (2 ?))
Not sure.
(2 (2 Not) (2 (2 sure) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-65341296\issue-65341296.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-65341296) (2 \))) (2 issue-65341296)) (2 .))))
json .
(2 (2 json) (2 .))
FxOS recently gained support for DevTools over Wi-Fi.
(2 (2 FxOS) (2 (2 recently) (2 (2 (2 (1 (2 gained) (2 support)) (2 (2 for) (2 DevTools))) (2 (2 over) (2 Wi-Fi))) (2 .))))
If inline-code was able to detect Wi-Fi devices and connect to them, that would be quite cool!
(4 (2 (2 If) (2 (2 inline-code) (2 (2 was) (2 (3 able) (2 (2 to) (1 (1 (1 (2 detect) (2 (2 Wi-Fi) (2 devices))) (2 and)) (2 (2 connect) (2 (2 to) (2 them))))))))) (4 (2 ,) (4 (2 that) (4 (3 (2 would) (4 (2 be) (4 (2 quite) (4 cool)))) (2 !)))))
The code to do so in Gecko is a bit complex, though.
(2 (2 (2 The) (2 (2 code) (2 (2 to) (2 (2 (2 do) (2 so)) (2 (2 in) (2 Gecko)))))) (2 (2 (2 (2 (2 is) (1 (2 (2 a) (2 bit)) (2 complex))) (2 ,)) (2 though)) (2 .)))
Ideally, some code could be shared with Gecko to reduce duplication.
(2 (2 Ideally) (2 (2 ,) (2 (2 (2 some) (2 code)) (2 (2 (2 could) (2 (2 be) (2 (2 (2 shared) (2 (2 with) (2 Gecko))) (2 (2 to) (2 (2 reduce) (2 duplication)))))) (2 .)))))
Multiple modules would be impacted, such as: inline-code and inline-code.
(2 (2 (2 Multiple) (2 modules)) (2 (2 (2 would) (2 (2 be) (2 (2 (2 impacted) (2 ,)) (2 (2 such) (2 (2 (2 as) (2 :)) (2 (2 (2 inline-code) (2 and)) (2 inline-code))))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-68993376\comment-103650168.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-103650168)) (2 .))))
json .
(2 (2 json) (2 .))
So, I just discovered that I can reliably make inline-code segfault on node v0.12.2 after I hit the "Reset and enable full DevTools" button in the Developer settings on my Flame.
(2 (2 So) (1 (2 ,) (1 (2 I) (1 (2 just) (1 (1 (2 discovered) (1 (2 that) (0 (2 I) (0 (1 (2 can) (2 reliably)) (1 (1 (2 (2 make) (2 (2 inline-code) (2 segfault))) (1 (2 on) (1 (2 node) (2 (2 v0) (2 .12.2))))) (1 (2 after) (1 (2 I) (1 (2 hit) (1 (1 (2 the) (1 (2 ``) (1 (1 (2 (2 (2 Reset) (2 and)) (2 enable)) (2 (2 full) (2 DevTools))) (2 (2 '') (2 button))))) (2 (2 in) (2 (2 (2 the) (2 (2 Developer) (2 settings))) (2 (2 on) (1 (2 my) (2 Flame)))))))))))))) (2 .))))))
If I flash the device to a base image and _just_ turn on DevTools & ADB debugging, things work fine.
(1 (1 (2 If) (1 (2 I) (1 (2 (1 (2 (2 flash) (2 (2 the) (2 device))) (1 (2 to) (1 (2 a) (2 (2 base) (2 image))))) (2 and)) (2 (2 (2 _) (2 (2 just) (2 (2 _) (2 turn)))) (1 (2 on) (1 (2 DevTools) (1 (2 &) (2 (2 ADB) (2 debugging))))))))) (2 (2 ,) (2 (2 things) (2 (2 (2 work) (3 fine)) (2 .)))))
Once I hit that "reset & enable" button again, the segfaults return.
(2 (2 (2 Once) (2 (2 I) (2 (2 (2 hit) (2 (2 that) (2 (2 ``) (2 (2 reset) (2 (2 &) (2 (2 enable) (2 (2 '') (2 button)))))))) (2 again)))) (2 (2 ,) (2 (2 (2 the) (2 segfaults)) (2 (2 return) (2 .)))))
No idea what could cause that, but it seems like handy additional info

.
(1 (1 (1 (1 No) (2 idea)) (2 (2 what) (2 (2 could) (2 (2 cause) (2 (2 (2 (2 that) (2 ,)) (2 but)) (2 it)))))) (2 (2 (2 seems) (2 (3 like) (2 (2 handy) (2 (2 additional) (2 info))))) (2 .)))
#mozilla/node-firefox\issue-68993376\comment-103661325.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-103661325)) (2 .))))
json .
(2 (2 json) (2 .))
I installed inline-code and plugged it into the inline-code stuff I'm working on.
(2 (2 (2 I) (2 (2 (2 (2 installed) (2 inline-code)) (2 and)) (2 (2 (2 plugged) (2 it)) (2 (2 into) (2 (2 the) (2 (2 inline-code) (2 stuff))))))) (2 (2 I) (2 (2 (2 'm) (2 (2 working) (2 on))) (2 .))))
This is what I get:.
(2 (2 This) (2 (2 (2 (2 is) (2 (2 what) (2 (2 I) (2 get)))) (2 :)) (2 .)))
block-code.
(2 (2 block-code) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-68993376\comment-103662784.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-103662784)) (2 .))))
json .
(2 (2 json) (2 .))
By tracing calls and puking inline-code all over the place, I tracked the segfault down to readMessage() in inline-code.
(1 (1 (2 By) (1 (1 (2 (2 tracing) (2 calls)) (2 and)) (2 (2 (2 puking) (2 inline-code)) (2 (2 all) (2 (2 over) (2 (2 the) (2 place))))))) (2 (2 ,) (2 (2 I) (2 (2 (2 (2 tracked) (2 (2 (2 the) (2 segfault)) (2 down))) (2 (2 to) (2 (2 (2 (2 readMessage) (2 -LRB-)) (2 -RRB-)) (2 (2 in) (2 inline-code))))) (2 .)))))
But, from there, things get weird.
(3 (2 But) (2 (2 ,) (2 (2 (2 from) (2 there)) (2 (2 ,) (2 (2 things) (2 (2 (2 get) (2 weird)) (2 .)))))))
I "fixed" the segfault by adding a inline-code to inline-code like so:.
(2 (2 I) (2 (2 (2 ``) (2 (2 (2 (3 fixed) (2 '')) (2 (2 the) (2 segfault))) (2 (2 by) (2 (2 adding) (2 (2 a) (2 (2 inline-code) (2 (2 to) (2 (2 inline-code) (2 (3 like) (2 (2 so) (2 :))))))))))) (2 .)))
block-code.
(2 (2 block-code) (2 .))
That is, everything works fine with that inline-code in place.
(2 (2 (2 That) (2 is)) (2 (2 ,) (2 (2 (2 everything) (3 (3 works) (3 (3 fine) (2 (2 with) (2 (2 (2 that) (2 inline-code)) (2 (2 in) (2 place))))))) (2 .))))
But, segfault returns when I comment it out.
(3 (2 But) (2 (2 ,) (2 (2 segfault) (2 (2 (2 returns) (2 (2 when) (2 (2 I) (2 (2 (2 comment) (2 it)) (2 out))))) (2 .)))))
I suspect a bug in node / io.js, but not sure WTF is happening yet.
(2 (2 (2 (2 (2 (2 I) (2 (2 suspect) (2 (1 (2 a) (1 bug)) (2 (2 in) (1 (2 node) (2 (2 /) (2 io.js))))))) (2 ,)) (2 but)) (1 (1 (2 (1 not) (2 sure)) (2 WTF)) (2 (2 is) (2 (2 happening) (2 yet))))) (2 .))
:confounded: 

.
(2 (2 :) (2 (2 (2 confounded) (2 :)) (2 .)))
#mozilla/node-firefox\issue-68993376\comment-103826811.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-103826811)) (2 .))))
json .
(2 (2 json) (2 .))
This is the weirdest thing!
(4 (2 This) (3 (2 (2 is) (2 (2 the) (2 (2 weirdest) (2 thing)))) (2 !)))
and also you're amazingggg!
(4 (2 and) (3 (2 also) (4 (2 you) (3 (2 (2 're) (2 amazingggg)) (2 !)))))
I've no idea how to proceed further.
(2 (2 I) (2 (2 (2 've) (2 (2 (1 no) (2 idea)) (2 (2 how) (2 (2 to) (2 (2 proceed) (2 further)))))) (2 .)))
Do you know if this happens in other systems?
(2 (2 (1 (2 Do) (2 you)) (2 (2 know) (2 (2 if) (2 (2 this) (2 (2 happens) (2 (2 in) (2 (2 other) (2 systems)))))))) (2 ?))
Just to discount if it's a Mac OS thing (?)
(2 (2 Just) (2 (2 to) (2 (2 discount) (2 (2 if) (2 (2 it) (2 (2 's) (2 (2 (2 a) (2 (2 Mac) (2 (2 OS) (2 thing)))) (2 (2 -LRB-) (2 (2 ?) (2 -RRB-))))))))))
.
(2 .)
#mozilla/node-firefox\issue-68993376\comment-103970694.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-103970694)) (2 .))))
json .
(2 (2 json) (2 .))
Haven't been able to confirm it happens on Windows or Linux.
(2 (2 (2 (2 Have) (2 n't)) (2 (2 been) (2 (3 able) (2 (2 to) (2 (2 confirm) (2 it)))))) (2 (2 (2 happens) (2 (2 on) (2 (2 (2 Windows) (2 or)) (2 Linux)))) (2 .)))
But, I _can_ confirm it does _not_ happen on node v0.10.38 on OS X, and it _does_ happen on v0.11.4 & beyond.
(3 (2 But) (2 (2 ,) (2 (2 I) (1 (2 _) (2 (1 (2 (2 can) (2 _)) (1 (2 confirm) (2 (1 (1 (1 (2 it) (1 (2 does) (1 (2 (2 (2 _) (1 not)) (2 _)) (1 (1 (2 happen) (1 (2 on) (1 (2 node) (2 (2 v0) (2 .10.38))))) (2 (2 on) (2 (2 OS) (2 X))))))) (2 ,)) (2 and)) (2 (2 it) (1 (2 _) (1 (2 does) (2 (2 _) (2 (2 happen) (2 (2 (2 on) (2 v0)) (2 (2 (2 .11.4) (2 &)) (2 beyond))))))))))) (2 .))))))
Might happen earlier, but I don't have a minimal test case yet and versions earlier than v0.11.4 don't seem compatible with all the node-firefox dependencies (which is weird, but whatever)

Asked for help in #node.
(3 (2 (2 (2 (2 (2 Might) (2 (2 happen) (2 earlier))) (2 ,)) (2 but)) (2 (2 (2 (2 I) (2 (2 (2 do) (2 n't)) (2 (2 (2 have) (3 (2 a) (2 (2 minimal) (2 (3 test) (2 case))))) (2 yet)))) (2 and)) (2 (2 versions) (2 (2 (2 earlier) (2 (2 than) (2 (2 v0) (2 .11.4)))) (2 (2 (2 do) (2 n't)) (1 (2 (2 seem) (2 compatible)) (2 (2 with) (2 (2 (2 (2 all) (2 (2 the) (2 (2 node-firefox) (2 dependencies)))) (2 (2 -LRB-) (2 (2 (2 which) (2 (2 is) (2 (2 weird) (2 (2 ,) (2 (2 but) (2 whatever)))))) (2 -RRB-)))) (2 (2 Asked) (3 (2 for) (3 (4 help) (2 (2 in) (2 #node))))))))))))) (2 .))
js on freenode IRC, and people seemed stumped & asked me to file an issue against node.
(2 (2 (2 (2 (2 (2 (2 js) (2 (2 on) (2 freenode))) (2 IRC)) (2 ,)) (2 and)) (2 (2 people) (2 (2 seemed) (2 (2 stumped) (2 (2 &) (2 (2 asked) (2 (2 me) (2 (2 to) (2 (2 file) (2 (2 (2 an) (1 issue)) (2 (2 against) (2 node)))))))))))) (2 .))
:laughing: :crying_cat_face: 

.
(2 (2 :) (2 (2 (2 (2 laughing) (2 :)) (2 (2 :) (2 (2 crying_cat_face) (2 :)))) (2 .)))
#mozilla/node-firefox\issue-68993376\comment-103995850.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-103995850)) (2 .))))
json .
(2 (2 json) (2 .))
Filed #25357 against node.js, based on a minimized test case.
(2 (1 (2 (1 (2 Filed) (2 (2 (2 #) (2 25357)) (2 (2 against) (2 node.js)))) (2 ,)) (2 (2 based) (2 (2 on) (3 (2 a) (2 (2 minimized) (2 (3 test) (2 case))))))) (2 .))
So, I guess the best we can say at this point is don't use node-firefox with node>=0.11.0 on OS X

.
(2 (2 So) (2 (2 ,) (2 (2 I) (2 (2 (2 guess) (2 (2 (2 (2 the) (3 best)) (2 (2 we) (2 (2 can) (2 (2 say) (2 (2 at) (2 (2 this) (2 point))))))) (2 (2 is) (2 (2 (2 do) (2 n't)) (2 (2 (2 (2 use) (2 (2 node-firefox) (2 (2 with) (2 (2 node) (2 >))))) (2 (2 =) (2 0.11.0))) (2 (2 on) (2 (2 OS) (2 X)))))))) (2 .)))))
#mozilla/node-firefox\issue-68993376\comment-104001777.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-104001777)) (2 .))))
json .
(2 (2 json) (2 .))
Isn't the right thing to do to look into a way around it until the upstream bug is resolved?
(2 (2 (2 (2 (2 Is) (2 n't)) (2 (2 the) (3 right))) (2 (2 thing) (2 (2 to) (2 (2 do) (2 (2 to) (2 (2 (2 look) (2 (2 into) (2 (2 (2 a) (2 way)) (2 (2 around) (2 it))))) (2 (2 until) (2 (2 (2 the) (2 (2 upstream) (1 bug))) (2 (2 is) (2 resolved)))))))))) (2 ?))
Leaving the console.log in place feels dirty but there may be a less invasive way to get the same effect, eg calling process.nextTick or pumping the console's cursor forward and then back again.
(2 (2 (2 (2 (2 (2 (2 Leaving) (2 (2 the) (2 console.log))) (2 (2 in) (2 place))) (1 (2 feels) (2 dirty))) (2 but)) (2 (2 there) (2 (2 may) (3 (2 be) (3 (2 a) (3 (2 (2 less) (2 invasive)) (2 (2 way) (2 (2 to) (2 (2 (2 (2 (2 (2 (2 get) (2 (2 the) (2 (2 same) (2 effect)))) (2 ,)) (3 (2 eg) (2 (2 (2 (2 calling) (2 process.nextTick)) (2 or)) (2 (2 (2 pumping) (2 (2 (2 the) (2 (2 console) (2 's))) (2 cursor))) (2 forward))))) (2 and)) (2 then)) (2 (2 back) (2 again))))))))))) (2 .))
.
(2 .)
#mozilla/node-firefox\issue-68993376\comment-104015851.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-104015851)) (2 .))))
json .
(2 (2 json) (2 .))
Yeah, I'm actually looking into that... trying to come up with something that doesn't spew messages for every byte (or chunk) of network activity from the device.
(2 (2 (2 (2 (3 Yeah) (2 (2 ,) (2 (2 I) (2 (2 (2 'm) (2 actually)) (2 (2 looking) (2 (2 into) (2 that))))))) (2 ...)) (2 (2 trying) (2 (2 to) (2 (2 (2 come) (2 up)) (2 (2 with) (2 (2 something) (2 (2 that) (1 (1 (2 does) (2 n't)) (1 (0 (2 spew) (1 (2 messages) (1 (2 for) (1 (2 (2 (2 every) (2 byte)) (2 (2 -LRB-) (2 (2 (2 or) (2 chunk)) (2 -RRB-)))) (1 (2 of) (2 (2 network) (2 activity))))))) (2 (2 from) (2 (2 the) (2 device)))))))))))) (2 .))
FWIW, this also touches on #29, because the bug is triggered in firefox-client.
(2 (2 FWIW) (2 (2 ,) (2 (2 this) (2 (2 also) (2 (2 (2 (2 (2 touches) (2 (2 on) (2 (2 #) (2 29)))) (2 ,)) (2 (2 because) (2 (2 (2 the) (1 bug)) (2 (2 is) (2 (2 triggered) (2 (2 in) (2 firefox-client))))))) (2 .))))))
Not the end of the world, because I can fork it and tweak all node-firefox modules to use the fork.
(2 (2 (2 (2 Not) (2 (2 the) (2 end))) (2 (2 of) (2 (2 (2 (2 the) (2 world)) (2 ,)) (2 (2 because) (2 (2 I) (2 (2 can) (2 (2 (2 (2 fork) (2 it)) (2 and)) (2 (2 tweak) (2 (2 all) (2 node-firefox)))))))))) (2 (2 (2 modules) (2 (2 to) (2 (2 use) (2 (2 the) (2 fork))))) (2 .)))
But we may need to care for & feed that fork going forward.
(3 (2 But) (2 (2 we) (2 (2 (2 may) (2 (2 need) (2 (2 to) (2 (2 care) (2 (2 for) (2 (2 (2 &) (2 feed)) (2 (2 that) (2 (2 fork) (2 (2 going) (2 forward)))))))))) (2 .))))
Also not a terrible thing.
(2 (2 Also) (2 (2 (1 not) (2 (2 a) (2 (2 terrible) (2 thing)))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-68993376\comment-104024437.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-104024437)) (2 .))))
json .
(2 (2 json) (2 .))
Yeah, there might be a workaround.
(2 (3 Yeah) (2 (2 ,) (2 (2 there) (2 (2 (2 might) (2 (2 be) (2 (2 a) (2 workaround)))) (2 .)))))
It's a magical accidental discovery and I have no idea why it works, but I can give it a shot in a fork of firefox-client

.
(1 (1 (1 (1 (1 (1 (1 (2 It) (1 (2 's) (1 (2 a) (1 (2 magical) (2 (2 accidental) (2 discovery)))))) (2 and)) (2 (2 I) (2 (2 have) (2 (2 (1 no) (2 idea)) (2 (2 why) (2 (2 it) (3 works))))))) (2 ,)) (2 but)) (2 (2 I) (2 (2 can) (2 (2 (3 give) (2 it)) (2 (2 (2 a) (2 shot)) (1 (2 in) (1 (2 (2 a) (2 fork)) (2 (2 of) (2 firefox-client))))))))) (2 .))
#mozilla/node-firefox\issue-68993376\comment-104370075.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-104370075)) (2 .))))
json .
(2 (2 json) (2 .))
Crud.
(2 (2 Crud) (2 .))
Workaround doesn't fix anything, just makes the problem more rare.
(1 (2 Workaround) (1 (1 (2 (2 (1 (1 (2 does) (2 n't)) (2 (3 fix) (2 anything))) (2 ,)) (2 just)) (1 (2 makes) (1 (2 (2 the) (1 problem)) (2 (2 more) (2 rare))))) (2 .)))
So, it's exacerbated by more network activity because every chunk of data received has a chance of setting it off - i.e. I set up a small demo for myself with 2 devices and 2 simulators, fired off an install task against all of them, and the segfault returned.
(1 (2 So) (1 (2 ,) (1 (1 (1 (1 (1 (2 it) (1 (2 's) (1 (2 exacerbated) (1 (2 by) (1 (1 (1 (1 (1 (1 (2 more) (2 (2 network) (2 activity))) (2 (2 because) (2 (1 (2 (2 every) (2 chunk)) (2 (2 of) (2 (2 data) (2 received)))) (2 (2 has) (2 (2 (2 a) (2 chance)) (2 (2 of) (2 (2 (2 setting) (2 it)) (1 off)))))))) (2 -)) (2 (2 i.e.) (2 (2 I) (2 (2 (2 (2 set) (2 up)) (2 (2 (2 a) (2 (2 small) (2 demo))) (2 (2 for) (2 myself)))) (2 (2 with) (2 (2 (2 (2 2) (2 devices)) (2 and)) (2 (2 2) (2 simulators)))))))) (2 ,)) (1 (1 (1 (2 fired) (1 off)) (2 (2 an) (2 (2 install) (2 task)))) (2 (2 against) (2 (2 all) (2 (2 of) (2 them)))))))))) (2 ,)) (2 and)) (2 (2 (2 the) (2 segfault)) (2 returned))) (2 .))))
.
(2 .)
#mozilla/node-firefox\issue-68993376\comment-94543428.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-94543428)) (2 .))))
json .
(2 (2 json) (2 .))
So, I updated to node v0.12.2 via homebrew on OS X. Just started poking at a few modules and tests pass.
(2 (2 So) (2 (2 ,) (2 (2 I) (2 (1 (3 updated) (0 (2 to) (1 (1 (2 node) (1 (2 (2 v0) (2 .12.2)) (2 (2 via) (2 homebrew)))) (2 (2 on) (1 (2 (2 OS) (2 X.)) (2 (2 Just) (2 (2 started) (2 (2 poking) (2 (2 at) (2 (2 a) (2 (2 few) (2 (2 modules) (2 (2 and) (2 (3 tests) (2 pass))))))))))))))) (2 .)))))
I tried running a little script I've got that connects to a simulator and a device, and it worked fine to install and launch an app.
(1 (1 (1 (1 (1 (2 I) (1 (2 tried) (2 (2 running) (2 (1 (2 a) (2 (2 little) (2 script))) (2 (2 I) (2 (2 've) (2 (2 got) (2 (2 that) (2 (2 connects) (2 (2 to) (1 (1 (2 (2 a) (2 simulator)) (2 and)) (2 (2 a) (2 device))))))))))))) (2 ,)) (2 and)) (3 (2 it) (3 (3 worked) (3 (3 fine) (2 (2 to) (2 (2 (2 (2 install) (2 and)) (2 launch)) (2 (2 an) (2 app)))))))) (2 .))
Couldn't reproduce an issue, but I'm assuming that means I'm just missing it.
(2 (1 (2 (2 (2 Could) (2 n't)) (2 reproduce)) (2 (2 an) (1 issue))) (2 (2 ,) (2 (2 but) (2 (2 (2 I) (2 (2 'm) (2 (2 assuming) (2 (2 that) (2 (2 means) (2 (2 I) (2 (2 (2 'm) (2 just)) (2 (2 missing) (2 it))))))))) (2 .)))))
Do you have some steps to reproduce where you ran into this, and also maybe a copypasta of the error trace you saw?
(1 (1 (1 (2 Do) (2 you)) (1 (2 have) (1 (2 (2 some) (2 steps)) (1 (2 to) (1 (2 (2 (2 (2 (2 reproduce) (2 (2 where) (2 (2 you) (2 (2 ran) (2 (2 into) (2 this)))))) (2 ,)) (2 and)) (2 also)) (1 (1 (1 (2 maybe) (2 (2 a) (2 copypasta))) (2 (2 of) (2 (2 the) (1 error)))) (2 (2 trace) (2 (2 you) (2 saw))))))))) (2 ?))
.
(2 .)
#mozilla/node-firefox\issue-68993376\comment-94547586.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-94547586)) (2 .))))
json .
(2 (2 json) (2 .))
FWIW, I also downloaded io.js v1.7.1 binaries for OS X, and was able to install apps to a simulator and device without error.
(1 (2 FWIW) (1 (2 ,) (0 (2 I) (0 (1 (1 (1 (1 (2 also) (1 (2 downloaded) (1 (2 (2 io.js) (2 v1)) (1 (2 (2 .7.1) (2 binaries)) (1 (2 for) (2 (2 OS) (2 X))))))) (2 ,)) (2 and)) (1 (2 (2 was) (2 (3 able) (2 (2 to) (1 (2 (2 install) (2 apps)) (2 (2 to) (1 (2 a) (1 (2 (2 simulator) (2 and)) (2 device)))))))) (1 (2 without) (1 error)))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-68993376\comment-94557961.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 comment-94557961)) (2 .))))
json .
(2 (2 json) (2 .))
thanks for looking into this!
(4 (3 (3 thanks) (2 (2 for) (2 (2 looking) (2 (2 into) (2 this))))) (2 !))
It was the examples in this repository: URL.
(2 (2 It) (2 (2 (2 was) (2 (2 (2 the) (2 examples)) (2 (2 in) (2 (2 this) (2 (2 repository) (2 (2 :) (2 URL))))))) (2 .)))
I should try to reproduce it but I'm busy with another thing and can't do it this week :-(

.
(2 (2 (2 (2 (2 I) (2 (2 should) (2 (2 try) (2 (2 to) (2 (2 reproduce) (2 it)))))) (2 but)) (1 (2 I) (1 (2 (2 (2 'm) (2 (2 busy) (2 (2 with) (2 (2 another) (2 thing))))) (2 and)) (2 (1 (2 ca) (2 n't)) (2 (2 do) (2 (2 it) (2 (2 this) (2 (2 week) (2 :--LRB-))))))))) (2 .))
#mozilla/node-firefox\issue-68993376\issue-68993376.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-68993376) (2 \))) (2 issue-68993376)) (2 .))))
json .
(2 (2 json) (2 .))
I have had reports of a few people saying this project doesn't work and they cannot install apps, but none of them filed a bug report (AHEM AHEM).
(2 (2 (2 (2 (2 (2 I) (1 (2 have) (2 (2 had) (1 (2 reports) (2 (2 of) (1 (2 (2 a) (2 (2 few) (2 people))) (1 (2 saying) (1 (1 (1 (2 (2 this) (2 project)) (1 (1 (2 does) (2 n't)) (2 work))) (2 and)) (1 (2 they) (1 (1 (2 can) (1 not)) (2 (2 install) (2 apps)))))))))))) (2 ,)) (2 but)) (2 (2 (2 none) (2 (2 of) (2 them))) (1 (2 filed) (1 (1 (2 a) (1 (1 bug) (2 report))) (2 (2 -LRB-) (2 (2 (2 AHEM) (2 AHEM)) (2 -RRB-))))))) (2 .))
Later I updated a computer and decided to go all brave and install io.js and try node-firefox.
(1 (2 Later) (1 (2 I) (2 (1 (2 (2 (3 updated) (2 (2 a) (2 computer))) (2 and)) (1 (2 decided) (1 (2 to) (1 (2 (2 (2 go) (2 (2 all) (2 brave))) (2 and)) (1 (2 (2 (2 install) (2 io.js)) (2 and)) (2 (2 try) (2 node-firefox))))))) (2 .))))
And it didn't work.
(2 (2 And) (2 (2 it) (2 (2 (2 (2 did) (2 n't)) (2 work)) (2 .))))
I tried with the latest node which happened to be 0.12 and it didn't work either.
(2 (2 (2 (2 (2 I) (2 (2 tried) (2 (2 with) (2 (2 (2 the) (2 (2 latest) (2 node))) (2 (2 which) (2 (2 happened) (2 (2 to) (2 (2 be) (2 0.12))))))))) (2 and)) (2 (2 it) (2 (2 (2 did) (2 n't)) (2 (2 work) (2 either))))) (2 .))
I had to roll back to 0.10 and it did work.
(2 (2 (2 (2 (2 I) (2 (2 had) (2 (2 to) (2 (2 (2 roll) (2 back)) (2 (2 to) (2 0.10)))))) (2 and)) (2 (2 it) (2 (2 did) (2 work)))) (2 .))
Because I did all this in a hurry I didn't keep any logs and I do not know what it was exactly other than a obscure trace coming from _somewhere_.
(2 (2 (2 (2 (2 (2 Because) (2 (2 I) (2 (2 (2 did) (2 (2 all) (2 this))) (2 (2 in) (2 (2 a) (2 hurry)))))) (2 (2 I) (2 (2 (2 did) (2 n't)) (2 (2 keep) (2 (2 any) (2 logs)))))) (2 and)) (2 (2 I) (2 (2 (2 do) (1 not)) (2 (2 know) (2 (2 what) (2 (2 it) (2 (2 was) (2 (2 exactly) (2 (2 other) (2 (2 than) (2 (2 (2 a) (2 (2 obscure) (2 trace))) (2 (2 coming) (2 (2 from) (2 (2 _) (2 (2 somewhere) (2 _)))))))))))))))) (2 .))
If someone could take a look at this it would be really appreciated.
(3 (2 (2 If) (2 (2 someone) (2 (2 could) (2 (2 (2 take) (2 (2 a) (2 look))) (2 (2 at) (2 this)))))) (3 (2 it) (3 (3 (2 would) (4 (2 be) (3 (2 really) (3 appreciated)))) (2 .))))
Even if it's just to find the root of the issue.
(1 (2 Even) (2 (2 (2 if) (2 (2 it) (2 (2 (2 's) (2 just)) (2 (2 to) (2 (2 find) (2 (2 (2 the) (2 root)) (2 (2 of) (2 (2 the) (1 issue))))))))) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-76071992\comment-101771027.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-76071992) (2 \))) (2 comment-101771027)) (2 .))))
json .
(2 (2 json) (2 .))
This should have been fixed with this PR: URL.
(2 (2 This) (2 (2 (2 should) (2 (2 have) (2 (2 been) (2 (3 fixed) (2 (2 with) (2 (2 (2 (2 this) (2 PR)) (2 :)) (2 URL))))))) (2 .)))
But, that wasn't published to npm.
(3 (2 But) (2 (2 ,) (2 (2 that) (2 (2 (2 (2 was) (2 n't)) (2 (2 published) (2 (2 to) (2 npm)))) (2 .)))))
Having just done so, hopefully that fixed things.
(2 (2 (2 (2 Having) (2 just)) (2 (2 done) (2 so))) (3 (2 ,) (3 (3 hopefully) (2 (2 that) (2 (2 (3 fixed) (2 things)) (2 .))))))
.
(2 .)
#mozilla/node-firefox\issue-76071992\issue-76071992.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-76071992) (2 \))) (2 issue-76071992)) (2 .))))
json .
(2 (2 json) (2 .))
Steps to reproduce:.
(2 (2 (2 (2 Steps) (2 (2 to) (2 reproduce))) (2 :)) (2 .))
- write code that uses a block like this:.
(2 (2 -) (2 (2 (3 write) (2 (2 code) (2 (2 that) (2 (2 (2 uses) (2 (2 (2 a) (2 block)) (2 (3 like) (2 this)))) (2 :))))) (2 .)))
block-code.
(2 (2 block-code) (2 .))
- replace the above with something like this:.
(2 (2 -) (2 (2 (2 replace) (2 (2 (2 the) (2 (2 (2 above) (2 with)) (2 something))) (2 (3 like) (2 (2 this) (2 :))))) (2 .)))
block-code.
(2 (2 block-code) (2 .))
- expected result: connection to device
- actual results: Error: connect EADDRNOTAVAIL followed by inability to connect to simulator after reverting the script 

.
(1 (2 -) (1 (1 (2 (2 (2 (2 (2 (2 (2 expected) (2 result)) (2 :)) (2 (2 connection) (2 (2 to) (2 device)))) (2 -)) (1 (1 (2 (2 actual) (2 results)) (2 :)) (2 Error))) (2 :)) (1 (2 (2 connect) (2 EADDRNOTAVAIL)) (2 (2 (2 followed) (2 (2 by) (2 inability))) (2 (2 to) (2 (2 (2 connect) (2 (2 to) (2 simulator))) (2 (2 after) (2 (2 reverting) (2 (2 the) (2 script))))))))) (2 .)))
#mozilla/node-firefox\issue-76498122\comment-102177845.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-76498122) (2 \))) (2 comment-102177845)) (2 .))))
json .
(2 (2 json) (2 .))
:+1:.
(3 (2 :) (3 (3 (3 +1) (2 :)) (2 .)))
.
(2 .)
#mozilla/node-firefox\issue-76498122\issue-76498122.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-76498122) (2 \))) (2 issue-76498122)) (2 .))))
json .
(2 (2 json) (2 .))
Just an initial set of small changes to use node-firefox as a distribution module.
(2 (2 (2 (2 (2 Just) (1 (2 an) (2 (2 initial) (2 set)))) (2 (2 of) (2 (2 small) (2 changes)))) (2 (2 to) (2 (2 use) (2 (2 node-firefox) (2 (2 as) (2 (2 a) (2 (2 distribution) (2 module)))))))) (2 .))
Thinking of expanding this to also come along with a CLI tool, but maybe itself as a separate repo.
(2 (2 (2 Thinking) (2 (2 of) (2 (2 expanding) (2 (2 this) (2 (2 to) (2 (2 (2 (2 (2 also) (2 (2 (2 come) (2 along)) (2 (2 with) (2 (2 a) (2 (2 CLI) (2 tool)))))) (2 ,)) (2 but)) (1 (2 maybe) (2 (2 itself) (2 (2 as) (2 (2 a) (2 (2 separate) (2 repo)))))))))))) (2 .))
But, wanted to see how just adding the "table of contents" module worked at first.
(3 (2 But) (2 (2 ,) (2 (1 (2 wanted) (2 (2 to) (2 (2 see) (2 (2 (2 how) (2 just)) (2 (2 adding) (2 (2 (2 (2 (2 the) (2 (2 ``) (2 table))) (2 (2 of) (2 contents))) (2 '')) (2 module))))))) (2 (2 (3 worked) (2 (2 at) (2 first))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-76498122\pr-35464763.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-76498122) (2 \))) (2 pr-35464763)) (2 .))))
json .
(2 (2 json) (2 .))
Just an initial set of small changes to use node-firefox as a distribution module.
(2 (2 (2 (2 (2 Just) (1 (2 an) (2 (2 initial) (2 set)))) (2 (2 of) (2 (2 small) (2 changes)))) (2 (2 to) (2 (2 use) (2 (2 node-firefox) (2 (2 as) (2 (2 a) (2 (2 distribution) (2 module)))))))) (2 .))
Thinking of expanding this to also come along with a CLI tool, but maybe itself as a separate repo.
(2 (2 (2 Thinking) (2 (2 of) (2 (2 expanding) (2 (2 this) (2 (2 to) (2 (2 (2 (2 (2 also) (2 (2 (2 come) (2 along)) (2 (2 with) (2 (2 a) (2 (2 CLI) (2 tool)))))) (2 ,)) (2 but)) (1 (2 maybe) (2 (2 itself) (2 (2 as) (2 (2 a) (2 (2 separate) (2 repo)))))))))))) (2 .))
But, wanted to see how just adding the "table of contents" module worked at first.
(3 (2 But) (2 (2 ,) (2 (1 (2 wanted) (2 (2 to) (2 (2 see) (2 (2 (2 how) (2 just)) (2 (2 adding) (2 (2 (2 (2 (2 the) (2 (2 ``) (2 table))) (2 (2 of) (2 contents))) (2 '')) (2 module))))))) (2 (2 (3 worked) (2 (2 at) (2 first))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-76498122\pr-comment-30366022.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-76498122) (2 \))) (2 pr-comment-30366022)) (2 .))))
json .
(2 (2 json) (2 .))
I would love to do this programatically based on the dependancies in the inline-code, but that can simply be a TODO :smile:  

.
(2 (2 (2 (2 (2 (2 I) (2 (2 would) (2 (4 love) (2 (2 to) (2 (2 (2 do) (2 (2 this) (2 programatically))) (2 (2 based) (2 (2 on) (2 (2 (2 the) (2 dependancies)) (2 (2 in) (2 (2 the) (2 inline-code))))))))))) (2 ,)) (2 but)) (2 (2 that) (3 (1 (2 can) (2 simply)) (3 (2 be) (3 (3 (1 (2 (2 a) (2 TODO)) (2 :)) (3 smile)) (2 :)))))) (2 .))
#mozilla/node-firefox\issue-76498122\pr-comment-30366538.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-76498122) (2 \))) (2 pr-comment-30366538)) (2 .))))
json .
(2 (2 json) (2 .))
That's a good idea... I was thinking about doing it that way, but then had a feeling I shouldn't.
(3 (3 (3 (3 (2 That) (3 (2 's) (3 (2 a) (3 (3 good) (2 idea))))) (2 ...)) (2 (2 I) (2 (2 (2 (2 (2 (2 was) (2 (2 thinking) (2 (2 about) (2 (2 doing) (2 (2 it) (2 (2 that) (2 way))))))) (2 ,)) (2 but)) (2 then)) (2 (2 had) (2 (2 (2 a) (2 feeling)) (2 (2 I) (2 (2 should) (2 n't)))))))) (2 .))
In retrospect, I think that feeling was me remembering dynamic inline-code's don't work in Browserify.
(2 (2 (2 In) (2 retrospect)) (2 (2 ,) (2 (2 I) (2 (2 (2 think) (2 (2 that) (2 (2 feeling) (2 (2 was) (2 (2 me) (2 (2 remembering) (2 (2 (2 dynamic) (2 inline-code)) (2 (2 's) (2 (2 (2 do) (2 n't)) (2 (2 work) (2 (2 in) (2 Browserify)))))))))))) (2 .)))))
But, this isn't for Browserify, so that reticence is probably just superstition.
(1 (2 But) (1 (2 ,) (1 (2 this) (1 (1 (1 (1 (1 (2 is) (2 n't)) (2 (2 for) (2 Browserify))) (2 ,)) (2 (2 so) (1 (2 that) (1 (2 reticence) (2 (2 (2 is) (2 probably)) (2 (2 just) (2 superstition))))))) (2 .)))))
.
(2 .)
#mozilla/node-firefox\issue-92723232\comment-118160042.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-92723232) (2 \))) (2 comment-118160042)) (2 .))))
json .
(2 (2 json) (2 .))
Thank you!
(4 (3 (3 Thank) (2 you)) (2 !))
.
(2 .)
#mozilla/node-firefox\issue-92723232\issue-92723232.
(2 (2 #mozilla) (2 (2 /) (2 (2 (2 (2 (2 node-firefox) (2 \)) (2 (2 issue-92723232) (2 \))) (2 issue-92723232)) (2 .))))
json .
(2 (2 json) (2 .))
node_modules/node-firefox-find-app/index.js:var Promise = require('es6-Promise').
(2 (2 (2 (2 (2 (2 node_modules) (2 (2 /) (2 (2 node-firefox-find-app) (2 /)))) (2 index.js)) (2 :)) (1 (2 (2 var) (2 Promise)) (2 (2 =) (2 (2 require) (2 (2 -LRB-) (2 (2 `) (2 (2 (2 es6-Promise) (2 ')) (2 -RRB-)))))))) (2 .))
Promise;
node_modules/node-firefox-stop-app/index.js:var Promise = require('es6-Promise').
(2 (2 (2 (2 (2 Promise) (2 ;)) (2 (2 (2 node_modules) (2 (2 /) (2 (2 node-firefox-stop-app) (2 /)))) (2 index.js))) (2 :)) (2 (2 (2 var) (2 (2 Promise) (2 (2 =) (2 (2 require) (2 (2 -LRB-) (2 (2 `) (2 (2 (2 es6-Promise) (2 ')) (2 -RRB-)))))))) (2 .)))
Promise;
node_modules/node-firefox-install-app/index.js:var Promise = require('es6-Promise').
(2 (2 (2 (2 (2 Promise) (2 ;)) (2 (2 (2 node_modules) (2 (2 /) (2 (2 node-firefox-install-app) (2 /)))) (2 index.js))) (2 :)) (2 (2 (2 var) (2 (2 Promise) (2 (2 =) (2 (2 require) (2 (2 -LRB-) (2 (2 `) (2 (2 (2 es6-Promise) (2 ')) (2 -RRB-)))))))) (2 .)))
Promise;
node_modules/node-firefox-launch-app/index.js:var Promise = require('es6-Promise').
(2 (2 (2 (2 (2 Promise) (2 ;)) (2 (2 (2 node_modules) (2 (2 /) (2 (2 node-firefox-launch-app) (2 /)))) (2 index.js))) (2 :)) (2 (2 (2 var) (2 (2 Promise) (2 (2 =) (2 (2 require) (2 (2 -LRB-) (2 (2 `) (2 (2 (2 es6-Promise) (2 ')) (2 -RRB-)))))))) (2 .)))
Promise;

es6-promise is all lowercase in npm.
(2 (2 (2 (2 Promise) (2 ;)) (2 (2 es6-promise) (2 (2 is) (2 (2 (2 all) (2 lowercase)) (2 (2 in) (2 npm)))))) (2 .))
Figured I'd file here than 4 times on the other projects.
(2 (2 Figured) (2 (2 I) (2 (2 (2 'd) (2 (2 (2 file) (2 here)) (2 (2 than) (2 (2 (2 4) (2 times)) (2 (2 on) (2 (2 the) (2 (2 other) (2 projects)))))))) (2 .))))
.
(2 .)
