{"url": "https://api.github.com/repos/mozilla/node-firefox/issues/comments/88271579", "html_url": "https://github.com/mozilla/node-firefox/issues/39#issuecomment-88271579", "issue_url": "https://api.github.com/repos/mozilla/node-firefox/issues/39", "id": 88271579, "user": {"login": "jryans", "id": 279572, "avatar_url": "https://avatars3.githubusercontent.com/u/279572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jryans", "html_url": "https://github.com/jryans", "followers_url": "https://api.github.com/users/jryans/followers", "following_url": "https://api.github.com/users/jryans/following{/other_user}", "gists_url": "https://api.github.com/users/jryans/gists{/gist_id}", "starred_url": "https://api.github.com/users/jryans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jryans/subscriptions", "organizations_url": "https://api.github.com/users/jryans/orgs", "repos_url": "https://api.github.com/users/jryans/repos", "events_url": "https://api.github.com/users/jryans/events{/privacy}", "received_events_url": "https://api.github.com/users/jryans/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-31T22:30:03Z", "updated_at": "2015-03-31T22:30:03Z", "author_association": "MEMBER", "body_html": "<p>In fact, it is an automatic, Boujour-like approach. (What gives the impression that it is manual? I'd like to know, since I'm writing more posts about it! <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji>)</p>\n<p>Devices are discovered automatically on the same Wi-Fi network. There is a <a href=\"https://wiki.mozilla.org/DevTools/WiFi_Debugging/Design\" rel=\"nofollow\">design doc</a> (also <a href=\"https://github.com/mozilla/gecko-dev/blob/master/toolkit/devtools/security/docs/wifi.md\">in-tree</a>) which explains the authentication handshake protocol.</p>\n<p>So, potentially <code>node-firefox</code> (in some modules somewhere) would want to:</p>\n<ol>\n<li>Search for devices using the <a href=\"https://github.com/mozilla/gecko-dev/blob/master/toolkit/devtools/discovery/discovery.js\">discovery mechanism</a></li>\n<li>Run the client side of the handshake</li>\n<li>Display a QR code for the phone to scan</li>\n</ol>\n<p>After the first connection, it can really be automatic if you choose to remember the client.</p>\n<p>Anyway, that's a lot of stuff to do... so, perhaps the code sharing is best? Not sure.</p>", "body_text": "In fact, it is an automatic, Boujour-like approach. (What gives the impression that it is manual? I'd like to know, since I'm writing more posts about it! \ud83d\ude04)\nDevices are discovered automatically on the same Wi-Fi network. There is a design doc (also in-tree) which explains the authentication handshake protocol.\nSo, potentially node-firefox (in some modules somewhere) would want to:\n\nSearch for devices using the discovery mechanism\nRun the client side of the handshake\nDisplay a QR code for the phone to scan\n\nAfter the first connection, it can really be automatic if you choose to remember the client.\nAnyway, that's a lot of stuff to do... so, perhaps the code sharing is best? Not sure.", "body": "In fact, it is an automatic, Boujour-like approach. (What gives the impression that it is manual? I'd like to know, since I'm writing more posts about it! :smile:)\n\nDevices are discovered automatically on the same Wi-Fi network. There is a [design doc](https://wiki.mozilla.org/DevTools/WiFi_Debugging/Design) (also [in-tree](https://github.com/mozilla/gecko-dev/blob/master/toolkit/devtools/security/docs/wifi.md)) which explains the authentication handshake protocol.\n\nSo, potentially `node-firefox` (in some modules somewhere) would want to:\n1. Search for devices using the [discovery mechanism](https://github.com/mozilla/gecko-dev/blob/master/toolkit/devtools/discovery/discovery.js)\n2. Run the client side of the handshake\n3. Display a QR code for the phone to scan\n\nAfter the first connection, it can really be automatic if you choose to remember the client.\n\nAnyway, that's a lot of stuff to do... so, perhaps the code sharing is best? Not sure.\n"}