#rails-girls-summer-of-code/rgsoc-teams\issue-100513131\comment-130252559.json . 
@alicetragedy Would you merge it please? Sorry about the  stray inline-code, we will solve it in the next days.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-100513131\comment-130253942.json . 
@F3PiX I'll take a quick look at it locally, and will merge it after that :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-100513131\comment-130296881.json . 
should be fine. #yolomerge!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-100513131\comment-131086977.json . 
haha love #yolomerge :heart: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-100513131\issue-100513131.json . 
We are working on moving the form to this page, but we ran into problems. So, this is a temporarily solution. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-100513131\pr-42224753.json . 
We are working on moving the form to this page, but we ran into problems. So, this is a temporarily solution. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-101376413\comment-131745788.json . 
Hey @F3PiX – looks good! I added two comments – once these are addressed, we can meerrrrrrge.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-101376413\comment-131783442.json . 
Up to you, @carpodaster !  Thanks, on behalf of all the students ;-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-101376413\comment-131784547.json . 
Thanks for the PR! :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-101376413\issue-101376413.json . 
This replaces the new status update button. This puts the form above the updates listing. Now, students can see and read their previous update while typing the new update. 

Also a bit of formatting and refactoring and a bit of ux tweaking   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-101376413\pr-42568303.json . 
This replaces the new status update button. This puts the form above the updates listing. Now, students can see and read their previous update while typing the new update. 

Also a bit of formatting and refactoring and a bit of ux tweaking   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-101376413\pr-comment-37170945.json . 
This could do with a inline-code assignment (memoization). That way, subsequent calls to inline-code won't trigger another database request. It's only called once in the view so it doesn't matter with the current implementation. But since it's being exposed as a helper method, it's better to not care how or how often a view template will call this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-101376413\pr-comment-37171096.json . 
Can you use or define a date/datetime format in inline-code? That way it can be re-used and we don't scatter too many different date formats in the app.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-101376413\pr-comment-37171339.json . 
Also, we can use local time: every user can define a timezone in their user profile. The Rails app will set the individual time zone automatically or default to UTC.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102338113\comment-133365382.json . 
Hey F3PiX,

This is a very interesting feature/improvement I'd love to talk further about. In theory, I think it sounds great! 

I'm trying to think of any edge cases to account for, as well as more support for why this could be a good idea (in addition to your points above).

Thoughts from other stakeholders welcome :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102338113\comment-133383471.json . 
Hey @F3PiX, can you give me an example where the dates are hardcoded? If they are, _that_ feels like a bug. Do you refer to app/models/season.rb:28? The default values are only set if we didn't pass something else (ie. via the seasons form). The default values are in place to ensure we always have a working season with a meaningful dates without the need to edit them first (e.g. after a fresh checkout of the app).

That being said, a developer-mode to quickly switch between seasons would be super lecker of course!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102338113\comment-133422275.json . 
O, it is totally possible that I am confusing two different things. 
Yes, I found the default values, but the way I (!!) handled it, my new_seasons data were overridden. Not in the lines you linked, I know, because I stubbed them. And maybe not hardcoded, I start to doubt that now.  But they were overridden. 

What happened: I created a new season 2016 in the orga/seasons form, with applications dates in Aug 2015.  That makes that the link to Apply Now appears in the menu. That's cool. But when I click the link, I got an error message : Applications 2015 are closed. (I am still figuring this out, and I think it has nothing to do with this issue, but with my teams season.)

I issued the issue at this point in my search, and found that it would be cool if 'we developers' could easily switch seasons - easily the key word here :-) 

I see the need of a working season. That is also only for development, isn't it? Could that be solved with adding a season seed? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102338113\comment-133720585.json . 
No hardcoding to be found! Sorry, my mistake. 
What I found is that there are quite a few different places where 'something happens' to the seasons. It is a bit hard to follow, but I'll do my best. I need to ask the coaches if I should solve this first, before I can add the switch. I'll keep you posted.
(And when that is solved: shouldn't we build a state machine for the season's stages? :-) )    

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102338113\comment-134162593.json . 


The _current_ season is always looked up in the year, assuming we won't run two SoCs per year. Creating a 2016 season will still return the 2015 season for inline-code (unless you modify your Rails machine's time to next year).

Warping oneself into a different phase / state of the season requires modifying the various datetime values for the _current_ season.

Changing the season would require an easy way to pick the phase you as a developer would like to see yourself in and set all datetime values appropriately.



I'm against putting that into the seeds.rb. The application will still run w/o users, job offers, and what have you, but it will outright crash without a season. Auto-creating a season is simple enough so I'd like to keep it that way. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102338113\comment-134225700.json . 
@carpodaster 
Totally understand now that seeds is a bad option. Thanks for the clear explanation why. WIL: never use seeding to replace code. (Note to self: "DUH!")

I am still working on following the different season settings through the code. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102338113\comment-144662307.json . 
Hey @F3PiX, your season switch PR solves this problem, I think. It does not warp into a future season, but it achieves the desired effect by modifying the _current_ one. Do you think this one can be closed?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102338113\comment-144863433.json . 
Sure! May I have the honor?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102338113\issue-102338113.json . 
RubyNuby here, so proceed with caution! 
I think it works like this:.
Orga's can add a Season in orga/seasons/new, including starting and closing dates for applications, the coding summer, etc
But in the code, the dates are hardcoded, AND will always override the input from the new-form (AFAIK).

I was thinking: what if the Season dates will be set only in the orga/seasons/new form? We can add default dates in the form fields. The orga's won't have to type more letters, because of the defaults. But, if the dates change (as was the case in 2015 submissions), the dates are very easy to update in the form. 
Super nice selfish bonus: I can easily switch seasons so that I can work on the Application Form and on other stuff. 

What I do not oversee: if the cure is worse than the problem. 

(Related to the updated Readme: Quickstart Guide for beginners - setting the season open/close)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102544275\comment-133715831.json . 
SORRY wrong Master !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102544275\issue-102544275.json . 
First try to a smoother workflow with the application form.
I added an extra state 'final' to the state machine, in between 'draft' and 'applied'. 
The new 'final' state marks the end of filling in the form (by both students and coaches). 'Final' starts a validation check and makes it clear that only the students are allowed to submit the final draft.
In the old situation, all the validations and notices were packed within the 'draft' state. 
I hope the extra state will make it easier to guide the users through the process of the application form. 

I am not totally happy with the states and transitions yet, but I am thinking about it, and explore the state machines possibilities. 
Before we go into that, I have a few questions about things I encountered. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102544275\pr-43104928.json . 
First try to a smoother workflow with the application form.
I added an extra state 'final' to the state machine, in between 'draft' and 'applied'. 
The new 'final' state marks the end of filling in the form (by both students and coaches). 'Final' starts a validation check and makes it clear that only the students are allowed to submit the final draft.
In the old situation, all the validations and notices were packed within the 'draft' state. 
I hope the extra state will make it easier to guide the users through the process of the application form. 

I am not totally happy with the states and transitions yet, but I am thinking about it, and explore the state machines possibilities. 
Before we go into that, I have a few questions about things I encountered. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102803724\comment-142526829.json . 
@sareg0 + @ramonh: has this been done in #310 ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102803724\comment-142527031.json . 
@carpodaster That's right! If you go to the Conferences page, you'll see a table for the second round conferences, as well as a link to show those of the first round.

Hope this makes sense!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102803724\comment-142532895.json . 
Great, thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102803724\comment-142532946.json . 
Sure thing!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-102803724\issue-102803724.json . 
On page URL For the 2nd round of the conference raffle it would be cool to have a fresh/empty list of conferences while still keeping the results from the 1st round. 

Idea: Add a 2nd table on top of the page. The list from the 1st round is somewhere below that. Nice large headline for both :). Might require an additional attribute for the conferences à la "round: 1st round / round: 2nd round". 

Reason for keeping the list of the 1st round: transparency. So people can see again who won tickets in the 1st round.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\comment-137935554.json . 
Yay! Now the form is submitted with :patch, with path_helper in place and helper_method gone ( @nathanvda ). And a redirect to avoid the 'missing template' ( @YorickPeterse ).  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\comment-138358117.json . 
I really like this idea, however I wonder if there is a simpler implementation such as using Timecop and an environment variable... something like this in an initializer maybe:.

block-code.

You would then start up the dev environment with inline-code and every object that extends off Time will think the year is 2018.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\comment-138369441.json . 
My assignment by the coaches was: not to use Timecop :-) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\comment-138376690.json . 
@F3PiX ahh cool, no drama's then. I'll review the code with the intended implementation then.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\comment-138662307.json . 
I've looked at the code and it's good in my option, but I feel slightly uncomfortable about the functionality. It's introducing environment conditional functionality, this stuff is super hard to test and debug. e.g. something is broken in production but you simply can't reproduce it in development.

I understand the need, and I think it is very helpful. Perhaps you can chat with your coaches and relay my concerns.

On a final note, open source is a democracy, so if I'm alone in this opinion then just get a few more +1's on this and i'll merge. @carpodaster I know your super busy but wdyt?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\comment-138689033.json . 
@marcgreenstock Not super-busy, my internet died :(  I totally share your opinion about hard-coding environment-checks but I'd rather have something _not_ work in production than _only_ in production.

I like the idea of Timecop, but never used it other than for testing. Maybe this is something we can consider to refine it since it would allow us to really warp into another season whereas this PR changes the _current_ season to a different phase. The Timecop Season Warp:trade_mark_sign: would still require a phase switcher to get into the proper phase we would like to see ourselves in.

I'm +1 for a merge.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\comment-138818590.json . 
As discussed with @F3PiX: merging this to allow our RGSoC to move along. @F3PiX Can you note the comments made and tackle them post-merge?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\issue-104764780.json . 
This switch enables developers to easily change the season's phase, to work in date dependent settings. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\pr-44146988.json . 
This switch enables developers to easily change the season's phase, to work in date dependent settings. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\pr-comment-38808635.json . 
Would it work to just delete the season? A new season should be created automatically. New seasons start out with default values for the current year so that would remove the requirement of inline-code entirely.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\pr-comment-38808642.json . 
Indentation

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\pr-comment-38808645.json . 
Oh, better yet: inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\pr-comment-38808648.json . 
block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\pr-comment-38808905.json . 
Looks like remainders of some debugging output

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\pr-comment-38809131.json . 
Are you sure? Wouldn't that cause trouble in test env with the tests if somebody leaves the season setting in a time travelled phase?   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\pr-comment-38809222.json . 
I tried it. If I only change :back_to_reality to :destroy, the ux for the developers would require more work. I can look into that in the upcoming weeks, in between the sprints. Can you live with this as is? For now?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\pr-comment-38809262.json . 
It wasn't meant for debugging, but as simple user action feedback. :-)  Already changed that into a nice flash notice. I left the season.inspect though.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\pr-comment-38972383.json . 
The test env is exactly what I had in mind: checking for developement only would skip that portion during our tests, meaning you could literally place a inline-code statement in the template without noticing it running the specs.

Every test should run on a clean test DB. If we find the tests are randomly failing, we may have spotted an example leaking data and/or a problem with the database cleansing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104764780\pr-comment-38972620.json . 
Sure, we can roll with it for now. Can you add an inline-code comment to that line?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104773493\issue-104773493.json . 
Step 1: basic setup for supervisor's dashboard. In next iterations, features and functionality will be added. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104773493\pr-44152396.json . 
Step 1: basic setup for supervisor's dashboard. In next iterations, features and functionality will be added. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\comment-138467850.json . 
@roosdebildt just one thing that came to mind: could you update the title of the PR to something like [WIP] or [do not merge yet] at the beginning, so it's clear when looking at the list of pull requests which ones don't need reviewing yet? would be great :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\comment-138472657.json . 
done! thanks for the tip! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\comment-138571154.json . 
hey @roosdebildt, I've just looked through the code and checked it out locally and it looks SO. MUCH. BETTER! :sparkles: 
Just a quick question: you'll then go into minor improvements if possible next, right? I just noticed minor things (like the pagination which, on smaller screens, we can then change to something else like endless scrolling) and the tables (which we need to think about how to portray best on smaller screens) and that team dropdown which is still looking a little funky. I understand that's not a huge concern right now, and I am super glad to have this look so much better on mobile!
I'm very happy to merge as soon as possible – are you okay with that @carpodaster?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\comment-138591431.json . 
:+1:  for Roos!! :tada:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\comment-138591908.json . 
@alicetragedy when it comes to the incremental improvements such as tables, the community page etc: I will do that if I have time for it. Right now it's about the basis being there so that things can be improved gradually. But first... the dashboard :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\comment-138603776.json . 
p.s. I think @carpodaster doesn't have Internet (on his computer) atm, so if you're OK with merging... could we do that?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\comment-138652854.json . 
Just a few comments, mostly on levering builtin bootstrap variables, otherwise exceptional work here! Thank's so much!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\comment-138680492.json . 
@roosdebildt if you could take a look at @marcgreenstock's suggestions and make possible changes accordingly, I can definitely merge after that. Having been gone for the last week I didn't realise Carsten was without computer so thanks for letting me know :)
Feel free to ping me when the changes have been made! :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\comment-138820003.json . 
thanks @marcgreenstock for the tips! super helpful. I adjusted all your comments, should be all good now. I do see there's a merge conflict now, it shouldn't be too difficult but I've never done that :flushed: How do we do this now?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\issue-104879981.json . 
Implementation of the bootstrap grid for the big components: header, content and footer. Didn't implement rows and columns for all the specific views yet, but this is the base for all improvements.

_update_
I think I'm done! @alicetragedy could you review?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\pr-44211624.json . 
Implementation of the bootstrap grid for the big components: header, content and footer. Didn't implement rows and columns for all the specific views yet, but this is the base for all improvements.

_update_
I think I'm done! @alicetragedy could you review?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\pr-comment-38957039.json . 
too much indentation, i guess it works, but slim could complain about it

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\pr-comment-38958173.json . 
does it work if you use the inline-code variable in less?

e.g.

block-code.

it's a variable in bootstrap-sass and defaulted at inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\pr-comment-38958522.json . 
same as my comment above you can use $screen-sm and $screen-sm-max

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\pr-comment-38959121.json . 
Again, here you can use inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\pr-comment-39016083.json . 
ahhh @marcgreenstock thank you so much! I was unaware that you had to change the inline-code for inline-code to make it work in sass. Therefore, I just put the screen sizes in manually. But this is way better of course and good to know! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-104879981\pr-comment-39016120.json . 
done!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\comment-138617907.json . 
Really great work, I struggled to find much if anything wrong with it at all, I have added some suggestions, but they are more best practice suggestions more than anything.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\comment-138690942.json . 
:+1: Awesome.

Can I add one tiny feature request to that PR? (if you can't be bothered, just ignore me). Can you route inline-code to inline-code, as well?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\comment-138818515.json . 
As discussed with @F3PiX: merging this to allow our RGSoC to move along. @F3PiX Can you note the comments made and tackle them post-merge?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\comment-138942462.json . 
Noted! And thanks!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\comment-138950454.json . 
@carpodaster I am not sure about the after-merge-workflow. Should I open this pull request again before pushing? Or open a new PR? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\comment-138951988.json . 
@F3PiX New PR would be best

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\comment-139496678.json . 
@marcgreenstock Could you help me out with Cancancan? I can think of a few strategies, but they will affect other parts of the app. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-38944882.json . 
It's picky and a bit of personal preference but I suggest using ActiveRecord's sql building syntax:.

block-code.

It produces the almost the same SQL but without the hassle of writing any of it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-38944974.json . 
This method is unnecessary, it should be inferred by the view.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-38945268.json . 
Is there one too many indentations here?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-38945463.json . 
It's better practice to write the module explicitly:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-38945595.json . 
It's better practice to write the module explicitly:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-38945854.json . 
Ideally this controller should be tested, especially the inline-code method.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-38960090.json . 
I just realised/remembered this project uses the cancancan gem for exactly this kind of purpose. Could you possibly try and use that to authorize supervisors? If you get stuck, feel free to ping me.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-38975830.json . 
Haha, love this :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-39052737.json . 
I followed the existing BaseControllers - apart from the fact that I wasn't aware that I was adding a Module ;-)  
So the question is: what is more important: Consistency between the Base Controllers, or follow this best practice? Or, @carpodaster: I _could_ change all of them?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-39054634.json . 
It's a taste thing. Personally, I find the explicit module too verbose for a controller (and for multiple nested modules). In cases like that, I would stick with what the project already started out with.

Since we've now mixed both versions, I leave it up to you, @F3PiX, to decide ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-39055062.json . 
I will have to look into that again. One of the coaches suggested another solution, so it is on the agenda. 
Not only there is cancancan, but there is also this: URL.
And there are all kinds of supervisor-checks, like this one in the header: 
URL.
I don't understand yet what the differences are, and when we can or cancan't use cancancan. Thanks for the tip; to be continued.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105253184\pr-comment-39070647.json . 
@marcgreenstock Thanks for being pingable ;-)
What I found (first round). The inline-code ability needs a team to pass in. So, if I do: inline-code it would work. BUT we don't have a team_id yet. I think because we only grant access to the supervisor's inline-code, not to the team roles. 
URL.
So, my conclusion is we can't use cancancan here to grant access. But we can use it in the views. Does this make sense? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105557297\comment-138853263.json . 
looks good to me. I'm going to #yolomerge now, @roosdebildt!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105557297\comment-138853428.json . 
I :heart: #yolomerge! Thanks :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105557297\issue-105557297.json . 
This should solve the merge-conflict of PR #306. Could you check it out @alicetragedy?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105557297\pr-44526944.json . 
This should solve the merge-conflict of PR #306. Could you check it out @alicetragedy?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105669719\comment-139034818.json . 
Hey Maud, feel like adding a unit test for the methods added on inline-code? :wink:  Would be great, but we can also merge without it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105669719\comment-141905024.json . 
Hey @F3PiX, I'm leaving this open as a reminder that we wanted to add some tests for the season switch. There's also an indentation issue pending.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105669719\comment-161224600.json . 
Hello @F3PiX – would you still like to add the mentioned unit test for the low level switcher logic?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105669719\comment-163766265.json . 
Hello @carpodaster. Let me have another shot at this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105669719\comment-181897015.json . 
@carpodaster I messed up the forked branch. To avoid bringing the mess into Upstream, I created a fresh PR #369. Can I close this? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105669719\comment-181897638.json . 
@F3PiX Sure, close it at you leisure.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105669719\issue-105669719.json . 
Solves open to do's for Season Phase Switch

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105669719\pr-44591111.json . 
Solves open to do's for Season Phase Switch

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105669719\pr-comment-39090142.json . 
Indentation

.
#rails-girls-summer-of-code/rgsoc-teams\issue-105669719\pr-comment-39090592.json . 
Technically, the action on the model instance is available anywhere. The controller action isn't ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106144873\comment-139997863.json . 
Looks good – thanks! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106144873\issue-106144873.json . 
This hides the first round conferences in the conferences view and allows users to toggle them.

NB: All existing conferences will be set to have taken place in the first round

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106144873\pr-44850800.json . 
This hides the first round conferences in the conferences view and allows users to toggle them.

NB: All existing conferences will be set to have taken place in the first round

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\comment-140008691.json . 
Heya. I've made a few comments but most importantly: tests are failing. 

Other than that, I am excited to see how things continue to be sorted into the corresponding dashboards / namespaces :fireworks: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\comment-140321423.json . 
@carpodaster @marcgreenstock 
Hi! We solved the most important issues. IF you can live with this, could you please merge? Considering that we don't have too much time left for collecting and processing user feedback. We already have started Sprint 3, and will move the leftovers from this Sprint 2 over to the next one.   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\issue-106177849.json . 
This branch adds the comments/check on team -functionalities to Dashboard.
@marcgreenstock @carpodaster Could you please doublecheck if we didn't remove too much stuff from the orga-namespace? 

Ongoing problems we are still working on:.
- [ ] BaseController and/or DashboardController: tests for supervisor-only-access [WIP - sorry for the comments]
- [ ] Implement cancancan in BaseController
- [x] Close html backdoor to comments on non-supervised teams ( + URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-44858685.json . 
This branch adds the comments/check on team -functionalities to Dashboard.
@marcgreenstock @carpodaster Could you please doublecheck if we didn't remove too much stuff from the orga-namespace? 

Ongoing problems we are still working on:.
- [ ] BaseController and/or DashboardController: tests for supervisor-only-access [WIP - sorry for the comments]
- [ ] Implement cancancan in BaseController
- [x] Close html backdoor to comments on non-supervised teams ( + URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39371285.json . 
Style: you make this boolean check a one-liner

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39371303.json . 
Indentation

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39371442.json . 
This must be the 2nd check. Otherwise a guest user (meaning inline-code == inline-code) could be shown as "You" when the comment doesn't have a user anymore.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39371699.json . 
Lots of commented test code = no good 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39371807.json . 
Could you leave the old examples and duplicate its test for the /supervisor namespace, please? The old comments controller still handles the application comments.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39371931.json . 
Do we need this check? supervised_teams already selects the teams their are supervising.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39372061.json . 
inline-code or inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39372236.json . 
I don't know for sure, but I _think_ the partial is rendered _n_ times for a list with _n_ elements passed. That would mean an empty list means rendering the partial 0 times. There should be no need for the inline-code predicate check.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39378796.json . 
@roosdebildt This one can go. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39378942.json . 
I _think_ the inline-code predicate should stay. The .any check also determines if we show the link to History. And we don't want that link to show if there is nothing in History.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39379444.json . 
Oops, yes.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106177849\pr-comment-39380401.json . 
Still working on closing a html leak where a supervisor can create comments for non-supervised teams. If that is solved, I will solve this one as well. OK for now?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106750866\issue-106750866.json . 
### Sprint 3: Add responsive styling to supervisor dashboard
- [x] Minimize status-update text
- [x] Link to all the activities from that team
- [x] Put teams-boxes next to each other
- [x] Make them responsive

@alicetragedy could you review?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106750866\pr-45157964.json . 
### Sprint 3: Add responsive styling to supervisor dashboard
- [x] Minimize status-update text
- [x] Link to all the activities from that team
- [x] Put teams-boxes next to each other
- [x] Make them responsive

@alicetragedy could you review?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106752070\comment-141700897.json . 
this is looking good! I finally had some time to look over it today @roosdebildt and I think we can merge it. :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106752070\comment-141940495.json . 
updated the link_to to newline == more consistent in style anyway == we like!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106752070\comment-142273158.json . 
as we've changed a lot in the meanwhile, let's first merge sprint 4 for the dashboard and this one afterwards if possible!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106752070\comment-142288157.json . 
@roosdebildt okay, I will take a look at sprint 4 first and then at those new changes here. :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106752070\issue-106752070.json . 
### Sprint 3: Adds responsive styling to supervisor dashboard
- [x] Divide dashboard into responsive vertical boxes dependent on the amount of teams
- [x] Reduce the amount of text in the last status update preview
- [x] Add link to all activity of that team

@alicetragedy could you review please?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106752070\pr-45158710.json . 
### Sprint 3: Adds responsive styling to supervisor dashboard
- [x] Divide dashboard into responsive vertical boxes dependent on the amount of teams
- [x] Reduce the amount of text in the last status update preview
- [x] Add link to all activity of that team

@alicetragedy could you review please?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-106752070\pr-comment-39923164.json . 
the inline-code here doesn't work. 
If you want to have it all on the same line, you can put it in a block:.

block-code.

Another possibility is to add it to the next line, that also works :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\comment-142593241.json . 
Hey you two, can you add a screenie to see what the new scoring looks like? I'm pretty sure it looks awesome, but I'm so curious and I don't have the data set up locally right now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\comment-142594067.json . 
This is how it looks like with the flash notices:.

<img width="1183" alt="screen shot 2015-09-23 at 15 07 03" src="URL.

These are the icons we use for green, orange and red:.

!screen shot 2015-09-17 at 15 18 45

And this is how it looks like when the responsiveness is merged as well:.

<img width="1116" alt="screen shot 2015-09-15 at 15 03 59" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\comment-142643519.json . 
Oops, sorry, I wanted to close this comment screen :-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\comment-142867622.json . 
Ok, I'm done. Just 1.5 things left – I'll merge right after that

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\comment-142880312.json . 
Thanks!!! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40182205.json . 
3 superfluous lines

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40182273.json . 
Let's use inline-code and not introduce a new scope for that

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40182309.json . 
Superfluous lines

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40182448.json . 
You can use the value of inline-code to DRY the render call

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40183663.json . 
This is dificult to read and could do with a simplification. It's intention is to show the team as green for the first two days of the SoC?

There is the exact same line in line 22. Is it really depending on whether there are activities or comments, respectively? If not, maybe pull it out into a inline-code method?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40183677.json . 
I find inline-code a lot easier to read.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40183712.json . 
This conditional branch does nothing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40183714.json . 
This conditional branch does nothing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40184777.json . 
Oh wait, higher score means red, sorry. So it means all teams start off as red?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40191508.json . 
I tried that initially, but as I remember, I got unexpected behaviour regarding the UTC. I searched the code base to see how that was handled elsewhere. I didn't find the inline-code format, so I choose to go the safe way.   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40192142.json . 
I added it as an escape for the few seconds in a Season that were not covered by the Time-statements, and I liked it much better than changing the operators to include inline-code.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40193919.json . 
@roosdebildt This one for you?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40195194.json . 
What I meant is that it doesn't change inline-code, so we might as well leave it alltogether

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40200287.json . 
This line is not needed

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40200469.json . 
To me, inline-code suggests a numerical return value but instead it returns a symbol. Does it stress you to tear the score-calculation and the semantical evaluation apart? The method inline-code could be renamed to inline-code and return the symbol.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40200646.json . 
Since it's only called internally, you should make this method private.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40200791.json . 
Ok, scratch that. inline-code is a very bad name decision. inline-code would be consistent, but barely meaningful. Can't think of a good method name right now :(

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40200986.json . 
Hm, does that work with multiple teams having the same score? It looks as if it would overwrite stuff.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40203693.json . 
It would. For now. Handling of the messaging will be in the next iteration. We probably are going to use the flash notice for a general notice that there are teams who need attention, and place the team-related message in the overview box. We need feedback from the supervisors to see if the team-specific message adds value at all, now that we have icons. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40208753.json . 
:+1: on what Maud said.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40299789.json . 
Oh, you can put this into the initializer

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40300217.json . 
Ok, could you please add an issue to this repo once the PR has been merged? I consider this would introduce a bug (plus it's not _really_ elegant to set the flash hash in the view, and it might even stick around for the next request)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40300382.json . 
It wouldn't surprise me if inline-code implicitly calls inline-code on its argument. Can you try omitting the interpolation call?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107678100\pr-comment-40303289.json . 
We will!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107889014\comment-142568026.json . 
_sniff sniff_ bye bye jobs board.

@carpodaster yes it's fine to delete it; I will be sending all offers out as an email digest now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107889014\issue-107889014.json . 
As discussed a few weeks ago, the RGSoC Teams App is not the right place to promote job offers: it lacks visibility, job offers should go to the community mailing list instead.

@sareg0 We currently have one published job offer. Merging this PR will delete it, are you ok with that?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-107889014\pr-45763076.json . 
As discussed a few weeks ago, the RGSoC Teams App is not the right place to promote job offers: it lacks visibility, job offers should go to the community mailing list instead.

@sareg0 We currently have one published job offer. Merging this PR will delete it, are you ok with that?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108113845\issue-108113845.json . 
Moves duplicate code into partial. This issue was raised by one of the former sprints of Team Cheesy working on the supervisor dashboard (unfortunately I cannot find back which PR it exactly was).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108113845\pr-45886933.json . 
Moves duplicate code into partial. This issue was raised by one of the former sprints of Team Cheesy working on the supervisor dashboard (unfortunately I cannot find back which PR it exactly was).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\comment-142920460.json . 
I can see it locally... and it shows like an inline-code-tag inside the inline-code when I do inspect element in my browser?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\comment-142922648.json . 
haha no worries, stay calm and drink your coffee. I'm done with this PR, so be caffeinated before you review and merge :) (merge this branch and not the old one, right?)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\comment-142954064.json . 
btw @F3PiX wdyt of the icons/status as they look now?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\comment-142962865.json . 
Apart from that I love them: I liked the bigger ones better. Well, they were a bit tooo big, but I find them a bit too small now. I wouldn't mind if they take the room they deserve. It is quite an important part of the dashboard view, so they don't need to be shy. And because you ask ;-) I don't like the word 'status' in front of them. If their meaning is not clear at first sight, it _will_ be clear the next day ;-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\comment-142965119.json . 
Exactly the two things I was doubting about! :) Sometimes, you simply stare at the screen for too long. This better?

<img width="1209" alt="screen shot 2015-09-24 at 17 32 12" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\comment-142971567.json . 
@roosdebildt would you like me to merge already, or do you want to incorporate @F3PiX's feedback into this PR? let me know – I'm ready to press the button ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\comment-142973243.json . 
Sure! I feel like they are still floating a bit upwards. Maybe even a bit bigger? And/Or a slightly lower vertical position?  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\comment-142985473.json . 
<img width="1194" alt="screen shot 2015-09-24 at 18 48 49" src="URL.

done! made them a bit bigger --> they move a bit downwards. is it ok if we merge this @F3PiX? I would really like to continue with the new files tomorrow! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\comment-143004629.json . 
They are supercute!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\comment-143026735.json . 
@alicetragedy Sorry for the delay! It is totally ready to merge. If you will do the honors... :-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\comment-143068621.json . 
:tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\issue-108124955.json . 
Adds styling to dashboard to make it responsive. (I opened a new branch to incorporate the many branches and closed the previous PR).

Looks like this:.

<img width="1250" alt="screen shot 2015-09-24 at 14 55 30" src="URL.

<img width="1242" alt="screen shot 2015-09-24 at 15 08 00" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108124955\pr-45893728.json . 
Adds styling to dashboard to make it responsive. (I opened a new branch to incorporate the many branches and closed the previous PR).

Looks like this:.

<img width="1250" alt="screen shot 2015-09-24 at 14 55 30" src="URL.

<img width="1242" alt="screen shot 2015-09-24 at 15 08 00" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\comment-143857507.json . 
Hi! I've made a few comments. Could you also add one or two screenies to illustrate what it looks like?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\comment-144006486.json . 
Screenshot (sorry I forget that all the time!):.

!screen shot 2015-09-28 at 18 10 22

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\comment-144026649.json . 
@carpodaster 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\comment-144047195.json . 
Aaaaaand back to you @carpodaster. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\comment-144049717.json . 
:tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\issue-108732315.json . 
Simple notepad added, and adjustments in UX.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\pr-46199053.json . 
Simple notepad added, and adjustments in UX.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\pr-comment-40596567.json . 
I'm not sure if I like adding inline-code when it only applies to supervisor-users. I would love User have no knowledge of inline-code whatsoever. Could you move the inline-code to the inline-code class and update the Supervisor::NotesController#update accordingly?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\pr-comment-40596610.json . 
The "L" shouldn't be there

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\pr-comment-40596747.json . 
It's better to access the inline-code w/o the @, ie. via its corresponding helper method.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\pr-comment-40596783.json . 
It's better to access the inline-code w/o the @, ie. via its corresponding helper method.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\pr-comment-40596894.json . 
is this needed with the inline-code statement in place 4 lines above?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108732315\pr-comment-40597032.json . 
The foreign key should also have an index. Admittedly, the table won't go Big Data anytime soon, but it's good to make a habit out of it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108873721\comment-144073009.json . 
Gonna #yolomerge this :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108873721\comment-144093005.json . 
haha you shouldn't have apparently! I missed some stuff that was only happening live, will make a new PR for that @carpodaster ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108873721\issue-108873721.json . 
Fixes the activities view for all screen sizes after introduction of bootstrap grid.

Laptop:.

!screen shot 2015-09-29 at 15 35 49

Mobile:.

!screen shot 2015-09-29 at 15 45 54

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108873721\pr-46279177.json . 
Fixes the activities view for all screen sizes after introduction of bootstrap grid.

Laptop:.

!screen shot 2015-09-29 at 15 35 49

Mobile:.

!screen shot 2015-09-29 at 15 45 54

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108893930\issue-108893930.json . 
@carpodaster, this should fix the #yolomerge damage ;)

!screen shot 2015-09-29 at 17 24 44

.
#rails-girls-summer-of-code/rgsoc-teams\issue-108893930\pr-46292106.json . 
@carpodaster, this should fix the #yolomerge damage ;)

!screen shot 2015-09-29 at 17 24 44

.
#rails-girls-summer-of-code/rgsoc-teams\issue-113257395\comment-151102741.json . 
I like this and completely agree with you over the topic of verbosity. Contributor Covenant was created especially with OSS projects in mind, which makes it a good fit for us. I also see no necessary need for linking to the RGSoC CoC :shipit: 
Question: do you think we should also add it to the inline-code repo? I know that we have the CoC on the website, but I see it as being for the program itself and not necessarily in the context of contributions to the site as an OSS project – maybe it's not clear for someone checking out the repo that we have a CoC at all..

.
#rails-girls-summer-of-code/rgsoc-teams\issue-113257395\comment-151176079.json . 
yes, +1 for a code specific to contributions, for all the reasons outlined. I'm good to push this through.

We could still link to the RGSoC CoC, at the bottom of the document with a small disclaimer, that it is "governed by its own Code of Conduct, and to see it go to this place". That is if we want to actually keep it linked. As Laura mentioned, the RGSoC CoC is for the program itself, so I'm good to just have one CoC for this project mentioned. We heavily outline the RGSoC CoC to people directly contribute to that in separate mediums, so it's ok if mention of it is removed from this app.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-113257395\comment-151277797.json . 


Yes, let's add it to the GH Page repo as well!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-113257395\comment-151480220.json . 
This is great, thank you @carpodaster!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-113257395\issue-113257395.json . 
I chose the Contributor Covenant over the RGSoC CoC as I find the CC CoC less verbose for an OSS project. What do you think?

Also, shall we link to the RGSoC CoC?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-113257395\pr-48689123.json . 
I chose the Contributor Covenant over the RGSoC CoC as I find the CC CoC less verbose for an OSS project. What do you think?

Also, shall we link to the RGSoC CoC?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118935297\comment-162252730.json . 
This is what the header looks like. If there are any suggestions on how to make more prominent: feel free to add it to the remote branch (you can check out it out locally with inline-code (if you have checked out the repo directly, otherwise it's probably inline-code instead of inline-code)

!bildschirmfoto 2015-12-05 um 23 11 55

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118935297\comment-162252739.json . 
Ping @alicetragedy ? :art: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118935297\comment-162289744.json . 
Just saw this @carpodaster – I'm happy to take a look at it today and see what I can come up with :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118935297\comment-162336534.json . 
I think we can close this!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118935297\issue-118935297.json . 
Maybe a text link in the nav bar won't do. What about a big fat red circle somewhere?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937440\comment-162258278.json . 
URL has a fresh DB dump now

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937549\comment-162243702.json . 
@ramonh would you have time to tackle this one? I'm still working on the season logic of the project proposal :(

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937549\comment-162243757.json . 
Hey @carpodaster! I definitely can, but will be time constricted tomorrow (having a long day of flying). By when do we need this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937549\comment-162244025.json . 
In Wednesday's hangout we decided to start testing on Sunday afternoon. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937549\comment-162244100.json . 
Ok, Hm. I'll be flying to Japan very early in the morning, so I don't think I'll manage this in time (or if I do I'll likely not have access to WiFi) :(

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937549\comment-162244275.json . 
However, I can start tonight. @carpodaster you mentioned that I could use the inline-code model, correct?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937549\comment-162252501.json . 
Sorry, @ramonh - been in the train w/o internet. It's late now and probably too late to get started, even more so when you have a big voyage tomorrow (Japaaan!? Awesome :) ). 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937549\comment-162254307.json . 
No worries! I can relate. Thanks for understanding (Yee! I'm excited and nervous)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937622\issue-118937622.json . 
- Access to admins only
- Allow accepting / rejecting the project

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937874\comment-159860516.json . 
Quick question, if I understood the first point correctly, I need to add missing fields to the inline-code table, correct?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937874\comment-159903063.json . 
Hey Ramon. The columns on the table inline-code have already been added. You can look them up in the inline-code file. We need a form for these columns/attributes.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937874\comment-159913326.json . 
Right! Gotcha. Thank you for clarifying @carpodaster! I'm on it

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937874\comment-159930747.json . 
Cool! Thanks @ramonh !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937874\comment-160003295.json . 
Oh btw, you can base your work on the remote branch inline-code and if you want to lodge a PR you can base it against that same branch.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937874\comment-160004791.json . 
Awesome, thank you! I did eventually realize that that's where I should start :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937874\comment-162244525.json . 
I think it makes sense to actually delete the project, carrying over from #331 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937874\comment-162252540.json . 
You're right. Let's just flush it :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937874\comment-162254098.json . 
Great! I'm glad you agree :) I just made #332 for it

.
#rails-girls-summer-of-code/rgsoc-teams\issue-118937874\issue-118937874.json . 
- Form fields see db/schema.rb
- current_user becomes Project#submitter
- Editing/updating the project for the submitter only

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119062970\comment-160305704.json . 
Hello @5minpause and thanks for your PR! Just to inform: you haven't been forgotten, I just haven't found the time to look at this. :hourglass_flowing_sand: :disappointed: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119062970\comment-161223909.json . 
Looks good! Thanks a lot! :bouquet: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119062970\issue-119062970.json . 
## Problem:.

Accessing inline-code in inline-code breaks inline-code on CI.
## Solution:.

Access inline-code only after making sure the db table actually exists.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119062970\pr-51923710.json . 
## Problem:.

Accessing inline-code in inline-code breaks inline-code on CI.
## Solution:.

Access inline-code only after making sure the db table actually exists.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119597576\comment-161038715.json . 
@carpodaster would you mind taking a look at this please?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119597576\comment-161043378.json . 
@ramonh sorry for the delay and thank you for the PR! I've made two tiny comments. Feel free to merge! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119597576\comment-161044092.json . 
No worries, @carpodaster. Thank you so much for the feedback! I'll make those changes and merge

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119597576\issue-119597576.json . 
This adds the inline-code in the inline-code. :)

The form can submit and create a new project proposal. The form then redirects to the project list

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119597576\pr-52189873.json . 
This adds the inline-code in the inline-code. :)

The form can submit and create a new project proposal. The form then redirects to the project list

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119597576\pr-comment-46310444.json . 
A taste thing, but I prefer to assign high level objects instead of IDs for AR associations. In this case: inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119597576\pr-comment-46310613.json . 
Oh, could you remove my placeholder pls? :wink: 

!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119597576\pr-comment-46314062.json . 
Quick question for future reference: Should I squash these adjustments?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119597576\pr-comment-46314568.json . 
Short answer: I don't think we need to. 

Longer answer: I would really love to see squashed commits when there was a lot of noise due to some exploration – for instance when students are working on the app. But squashing commits is scary and no student should be bothered with it, hence: nope, let's not squash commit. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-119597576\pr-comment-46314689.json . 
Okeydokey, I'll keep that in mind. Thank you for your insight! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120572843\comment-162224632.json . 
Another one coming in! @carpodaster, would you mind please taking a glance, please? :) It should be very similar to my last PR. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120572843\comment-162243519.json . 
:+1: Thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120572843\comment-162243774.json . 
Awesome! Does this wrap up #327?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120572843\comment-162243971.json . 
We'd still have the 'D', but I don't know how we go about this. Just delete the project? Or just flag it as "deleted'" w/o actually deleting it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120572843\comment-162244038.json . 
Ah woops, thought I'd seen that in the 'orga' view. Makes sense, Thank you!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120572843\comment-162244503.json . 
I'll move the discussion back to the issue

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120572843\issue-120572843.json . 
This adds the inline-code in inline-code. :)

Once edited, the submitter would be redirected back to the list.

Only projects submitted by the user can be edited by that user.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120572843\pr-52759172.json . 
This adds the inline-code in inline-code. :)

Once edited, the submitter would be redirected back to the list.

Only projects submitted by the user can be edited by that user.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120591214\comment-162254263.json . 
Awesome! Thanks for your late night help! :crescent_moon::sparkles:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120591214\comment-162254343.json . 
My pleasure! Time to call it a night :) all the best!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120591214\issue-120591214.json . 
Finally, the inline-code part of the inline-code. :)

Users are prompted to confirm.

As always, submitters can only delete their own projects.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120591214\pr-52766113.json . 
Finally, the inline-code part of the inline-code. :)

Users are prompted to confirm.

As always, submitters can only delete their own projects.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120596749\issue-120596749.json . 
Little hint texts and/or placeholder attributes for the inputs

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120596959\comment-162297578.json . 
awesome if this happens :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120596959\comment-162346190.json . 
Allows input of comma-separated values. No fancy jQuery stuff.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120596959\comment-162346305.json . 
Super cool, thank you! :rainbow: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120633685\comment-167120939.json . 
Hi @alicetragedy ! I have the exact same problem in my current pet project. I surely want to take this one, if you think it is doable for me? And maybe you point me in the right direction?   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120633685\comment-167122685.json . 
Hi @F3PiX! For sure, I've assigned you to it as I'm absolutely certain that it's doable for you :+1: I will not be online much in the next few days, but ping me if you're stuck and I will get back to you about it if you need help:)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120633685\comment-183700502.json . 
did #358 fix the issue? i try to lean some CSS so i was looking at the issues tagged with "styling" :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120633685\comment-183719304.json . 
oops! thanks for asking @beanieboi — #358 did indeed solve the problem so I'm going to close this now. :) feel free to ping me if you want to pair on something css-related with me! :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120633685\comment-184327248.json . 
@alicetragedy totally! would love to do that! i will look at some CSS issues and try to work on them and try to do as much as i can to learn. when i'm stuck, i'll ping you on slack so we can schedule something? does work for you? :sparkler: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120633685\comment-184333810.json . 
@beanieboi sounds perfect! :woman_with_bunny_ears:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120633685\issue-120633685.json . 
The header nav on mobile definitely needs some :heart: (see screenshot, which is what happens when clicking on the burger menu)
This is a low-priority issue, but still worth noting. I might be able to take a look at this next week but if anyone else wants to jump on this issue, feel free to do so!

<img width="679" alt="screen shot 2015-12-06 at 14 10 19" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120639939\comment-162326660.json . 
@carpodaster if this is the kind of thing you had in mind, feel free to merge ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120639939\comment-162328674.json . 
Cool!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120639939\issue-120639939.json . 
this adds some extra styling on inline-code items in the navbar as discussed in URL.
ideally we can re-use this class for time- or season-based announcements ie. application submissions.

<img width="1178" alt="screen shot 2015-12-06 at 16 17 20" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120639939\pr-52782174.json . 
this adds some extra styling on inline-code items in the navbar as discussed in URL.
ideally we can re-use this class for time- or season-based announcements ie. application submissions.

<img width="1178" alt="screen shot 2015-12-06 at 16 17 20" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120640692\issue-120640692.json . 
it appears that lists that are entered in the "project description" or "issues, features, milestones" fields don't render with bullet points in the project "show" view. Since the field accepts Markdown, the bullet points should render properly. This is probably just a small styling/css issue!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120641621\comment-162329538.json . 
Updated staging, works now

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120641621\issue-120641621.json . 
I can't seem to be able to comment on a project. This is independent from project state (I tried commenting on projects that are inline-code, inline-code and inline-code) and from project owner (I tried with projects that belong and do not belong to me, just in case). 
Current roles of testing user: inline-code, inline-code and inline-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120642137\comment-162326256.json . 
Whoopsie, that project_id was there at some point (I swear! ;) ) Thanks for fixing my overzealous text editor undo!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120642137\comment-162326636.json . 
:face_with_tears_of_joy:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120642137\issue-120642137.json . 
This should fix the issue with the commenting URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120642137\pr-52783058.json . 
This should fix the issue with the commenting URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120651649\issue-120651649.json . 
Should fix the rendering list issue in URL.

:tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120651649\pr-52787080.json . 
Should fix the rendering list issue in URL.

:tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120654374\comment-162343554.json . 
Awesome!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120654374\comment-162344361.json . 
:confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120654374\issue-120654374.json . 
Minor improvements to the styling:.
- change color of "Reject" button from orange to red to be consistent with the "rejected" tag
- fix a 'wrong' float on edit/delete actions in project list
- change styling of hover on icon-links (grey on hover and remove underline)
- add icons to the headings in the project view. I think it can really make a difference especially for long descriptions and "markdown-heavy" text!

<img width="252" alt="screen shot 2015-12-06 at 20 33 36" src="URL.

<img width="1003" alt="screen shot 2015-12-06 at 20 34 10" src="URL.

<img width="586" alt="screen shot 2015-12-06 at 21 02 36" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120654374\pr-52788173.json . 
Minor improvements to the styling:.
- change color of "Reject" button from orange to red to be consistent with the "rejected" tag
- fix a 'wrong' float on edit/delete actions in project list
- change styling of hover on icon-links (grey on hover and remove underline)
- add icons to the headings in the project view. I think it can really make a difference especially for long descriptions and "markdown-heavy" text!

<img width="252" alt="screen shot 2015-12-06 at 20 33 36" src="URL.

<img width="1003" alt="screen shot 2015-12-06 at 20 34 10" src="URL.

<img width="586" alt="screen shot 2015-12-06 at 21 02 36" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120659330\issue-120659330.json . 
(Project Proposals)
- Add inline-code association
- Most of the time, it's the submitter herself

When inline-code:.
- see if there a user with that gh handle in the db already
- Otherwise: create user and get data from github api
- Maybe inform recruiter via email?
- Is inline-code still needed then?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120659638\comment-162347810.json . 
Absolutely. Was thinking about this earlier, and thought maybe we could move the "Signed in as" to the right (it feels more intuitive to me that way) and navigation-related stuff to the left. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120659638\comment-162562915.json . 
Note to self: don't close yet — I'll add the missing one from the feature branch once we've merged.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120659638\comment-162837471.json . 
project views have been updated as well, see 225914891941463489923bb91e4a68ff0e58eaa4

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120659638\issue-120659638.json . 
!bildschirmfoto 2015-12-06 um 22 06 34

See: 
- [x] teams#show
- [x] users#show
- [x] projects#show (currently in feature branch)
- ... (probably others as well)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660474\comment-162515261.json . 
The database column was there actually, just had to add that to our form.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660474\comment-162528426.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660474\issue-120660474.json . 
We cannot rely on retrieving it through the GH API since it may not be publicly available

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660536\comment-162513025.json . 
I think it's fine that they receive emails about it, after all it's their project and they should know about what's going on. Because if they **don't** get notified, nothing will ever happen. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660536\comment-162529441.json . 
Cool, I like this approach @anikalindtner — it's true that if the students comment to say they want to apply to a particular project, it would be good if the mentor is notified. As of now, this would probably then be the only easy way to set this up.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660536\comment-162531060.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660536\comment-162680083.json . 
Notifications for submitter, mentor (if not the same person), and all commenters are now active.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660536\comment-162680699.json . 
brilliant!! \o/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660536\issue-120660536.json . 
Writing a notification opt-in / opt-out logic for a project proposal's commenting system seems overkill. But lots of comments can get spammy fast. How do we go about it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660827\comment-202083128.json . 
Steps for make inline-code model polymorphic:.
- Create Migration for make appropriate changes in inline-code table
- Perform modifications within inline-code model
- Perform modifications within inline-code, 'User', inline-code and inline-code models
- Test the changes and generate PR

@carpodaster : It would be great if you can verify above steps and suggest changes if you find any so that I can start working on it. :blush: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660827\comment-203040651.json . 
Hello @rishiip, sorry for the slow response. It's great that you want to work on this, thank you! The steps you describe are :ok_hand:  :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660827\comment-203043115.json . 
@carpodaster : No worries. :blush: I'll start work on it and generate PR for the same.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660827\comment-204266372.json . 
@carpodaster : It would be great if you can suggest me which main forms/screens I need to verify/check while test the things!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660827\comment-220145763.json . 
@rishiip I have checked the codebase only briefly, so this list might not be complete:.
- app/views/projects/show.html.slim
- app/views/rating/applications/show.html.slim
- app/views/rating/todos/applications/show.html.slim
- app/views/supervisor/dashboard/index.html.slim

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660827\comment-230910466.json . 
I've started working on this now (because I desperately want to comment on status updates), but I'm struggling with the best way to migrate existing data – mainly because we recently had the issue that older migrations didn't apply anymore. I'm hesitant about adding data transformation loops referencing actual Rails models (which may no longer exists in one or two years).

@alicetragedy @klappradla @michaelem @ramonh  do you have any advice / ideas / good experiences to share? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660827\comment-230932621.json . 
What I usually do in that case is just define the minimal required model class inside the migration. That way you can still use ActiveRecord in the migration without running the risk of the class not being there at some point down the line.
It also does not add a lot of complexity since usually its just an empty Subclass of ActiveRecord::Base with maybe one belongs_to statement (whatever you need to do the migration).
Does that make sense in our case?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660827\comment-231018588.json . 
Yes, @michaelem's approach is a classic here _(see for instance this blog post on how it can look like)_. A shorter alternative is to just wrap the data transformation part in a inline-code\- inline-code block - does the job as well.

A wholly different solution: use temporary rake tasks _(see for instance this blog post)_. I personally don't really like this approach, because it leaves two questions open: 1) who when removes the task again? 2) is the task run in every context where I intended it to?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660827\comment-231100520.json . 
@klappradla @michaelem ¡muchas gracias! Those are very valuable suggestions, and the blog post looks very intriguing!

I've always gone for the temp. rake task approach in my projects (a inline-code namespace). It's brittle when someone didn't get the memo run task X after migration Y, but the impact isn't big since everyone is working with anonymiized dev dumps anyway; no one really migrates from 4.years.ago to present.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120660827\issue-120660827.json . 
The Comment model has grown a set of commentable records' foreign keys. We should refactor it into a inline-code instead of listing all types of recods individually.

There's no deadline for this and can be done whenever there's time. @marcgreenstock and @lucaspinto, is this something you could see yourself working on?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120759199\comment-162508958.json . 
This is actually a feature: An organizer has admin-powers and can do everything she wants. This is also in line with the Github proposal system where we can edit/delete issues at will, too.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120759199\comment-162509324.json . 
yes, but the problem is that it doesn't let me edit/delete – I get a "Page does not exist" error message

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120759199\comment-162510327.json . 
Ah! Ok, that's a bug then.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120759199\comment-162510383.json . 
But do we agree on the fact that we as organizers should be allowed to delete/update things?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120759199\comment-162510535.json . 
I think so, at least deleting. :+1: and at that point, I reckon edit should be ok too

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120759199\comment-162512911.json . 
#bugorfeature ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120759199\issue-120759199.json . 
As an organiser, I can view the Edit/Destroy buttons on a project that doesn't belong to me (and hence, which I should not be able to delete/edit). See screenshot:.

<img width="1239" alt="screen shot 2015-12-07 at 12 57 13" src="URL.

The same happens with the icons in the projects index. Ideally, all these links should be hidden to the non-owner — since the non-owner anyway isn't allowed those actions.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120760325\comment-162509394.json . 
I'm afraid this is a general issue and cannot be fixed easily since we don't "own" the login mechanism :disappointed: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120760325\issue-120760325.json . 
When I click on "submit your project" and am not logged in:.

After people sign up for the teams app (or log in ) they should be redirected to /projects/new and not their profile page (that's how it is for now). This is confusing. But I remember that this is a teams-app thing. The app doesn't 'remember' where I wanted to go before I logged in. Would be great if we can change that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120761220\comment-162510755.json . 
You mean instead of the "Project was successfully submitted." flash message? Your proposed text might be a little too long for that, but we can introduce a "receipt" page.

This issue is up for grabs! :smiley_cat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120761220\comment-162564773.json . 
Happy to take a look. Probably not today but early tomorrow :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120761220\comment-162814456.json . 
You can probably copy the inline-code view and adapt it. The inline-code action would have to be changed so that it doesn't redirect anymore.

To avoid hardcoded years, the year of season can be accessed  with inline-code 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120761220\comment-162836396.json . 
Perfect, thank you for the hints @carpodaster. Haven't done much work on the Teams App so that definitely helps give me a head start. :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120761220\comment-166610823.json . 
the thank you page was added in 3be24371daefc5a39ac0f00b59f790b6fd02b6cd
closing this! :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120761220\issue-120761220.json . 
After submitting a project the submission text should read something like:.

Thank you for submitting you project for Rails Girls Summer of Code 2016! We will review it in the next days and come back to you with questions or feedback.

If you have any problems or questions, email us at summer-of-code@railsgirls.com. 
Cheers!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120761605\comment-162510969.json . 
Good point! Can you give me the link to the correct document to link to? Thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120761605\comment-162511019.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120761605\comment-162512928.json . 
URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120761605\comment-162515091.json . 
It's on staging now. (I changed the "2016" to "upcoming" though)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120761605\issue-120761605.json . 
To make sure, mentors have read our guide, I'd love to have a highlighted text (can be in a box or sth) above the form saying: "Please make sure you have read our mentor guide before you submit your Open Source project for Rails Girls Summer of Code 2016." And then have a link (opening in a new window) to our mentor guides.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120777782\comment-162530490.json . 
Should the inline-code state imply that the comments are locked?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120777782\comment-162531532.json . 
@carpodaster yes! But also we should probably remove that project from view anyway then.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120777782\comment-162679858.json . 
Comments can be locked/unlocked in the orga/projects overview (where you accept/reject them).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120777782\comment-162680645.json . 
:tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120777782\issue-120777782.json . 
When we want to close the projects or and signal that the students shouldn't get in contact with the mentor anymore via the comment section, we need to be able to close the comments. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120783344\comment-238541270.json . 
@alicetragedy can you plz check if this issue can be closed?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120783344\comment-238715291.json . 
@katrin-k the glitch is definitely not there anymore (thank you for fixing!) but there are still some things that aren't optimal: for example, the menu with buttons under the team name could be changed, so that the buttons aren't strangely stacked together. 
Maybe I can go through all that needs improving and add that to my original comment as a checklist, so that we can monitor what has been done and what still needs doing. wdyt?
Alternatively we can close this issue and open a new one specifically for the buttons (or any other improvement). Let me know what you prefer.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120783344\comment-238826746.json . 
@alicetragedy I was pondering over this, too… Looking at several pages, I have a strong urge to doublecheck and, if appropriate, overwork quite a few things, e.g. button/color patterns (including those button groups), the way forms are styled, all those tables that overflow in mobile views (Anika already made a suggestion to style them in a more appealing way) … I also have a few ideas inspired by the new design for the rorganize.it platform. 

Yeah, let's close this and open up new issue(s) with specific stuff. If you do find the time to go through things, that'd be super helpful!  

I'll also rename this issue to cover just the team name icon, so it can be recognized better later on. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120783344\issue-120783344.json . 
On top of the nav issue already mentioned in URL I've noticed a couple of glitches with ie. Headers being cut off when the browser is resized. In the example below, the start is cut off when width of browser is between 992 and 1200px.

<img width="594" alt="screen shot 2015-12-07 at 15 15 13" src="URL.

This is just a minor issue with media-queries that needs fixing. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120796737\comment-162560432.json . 
Voll gut! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120796737\issue-120796737.json . 
slightly improves the back navigation on show pages related to issue URL.

<img width="524" alt="screen shot 2015-12-07 at 16 21 36" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120796737\pr-52857363.json . 
slightly improves the back navigation on show pages related to issue URL.

<img width="524" alt="screen shot 2015-12-07 at 16 21 36" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120879771\comment-162686598.json . 
omg!!! :shipit: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120879771\issue-120879771.json . 
This is it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120879771\pr-52908491.json . 
This is it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120990687\comment-162859905.json . 
awesome! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120990687\comment-162866602.json . 
:confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120990687\issue-120990687.json . 
- add thank you message after submitting a project
- change tests accordingly
- add links to view all projects and last submission

<img width="1193" alt="screen shot 2015-12-08 at 12 40 48" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120990687\pr-52970303.json . 
- add thank you message after submitting a project
- change tests accordingly
- add links to view all projects and last submission

<img width="1193" alt="screen shot 2015-12-08 at 12 40 48" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-120996019\issue-120996019.json . 
The commenter is a subscriber, yes, but should not get notified about the comment they just made. :joy: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-121577040\comment-164073908.json . 
happy to take a look at this sometime next week.. unless you want to practice your CSS skills @carpodaster ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-121577040\comment-164074243.json . 
!Don't make me go that route!

 :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-121577040\comment-164074586.json . 
that gif never gets old :smiling_face_with_open_mouth_and_cold_sweat:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-121577040\comment-168735569.json . 
fixed in 619da1bc433fc0f02ce894e2cbff2a861c9aecca 
it's an ugly fix, but it will do. YOLO!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-121577040\comment-168736900.json . 
Yess! Thanks, @alicetragedy !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-121577040\issue-121577040.json . 
Activities published directly from the Teams App ("Minilog") are fine. However, updates being pulled from a teams' RSS feed will get a screenshot that's too big.

!bildschirmfoto 2015-12-10 um 21 34 05

.
#rails-girls-summer-of-code/rgsoc-teams\issue-123873407\comment-167222419.json . 
@alicetragedy 
I added inline-code class to the header. Now, it pushes the text out of the way. Is this the way you want to go?

Also, the regular menu is messed up now. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-123873407\comment-168645216.json . 
@F3PiX sorry for getting back to you so late. I finally managed to take a look and yes, I think that's the way we could go. It looks good for the mobile version :)
The next step is as you outlined above to restore the regular menu. If I recall correctly the bootstrap documentation should be of great help.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-123873407\comment-181436558.json . 
I am still looking into it @F3PiX but: I realised that first and foremost, in order to change it, the inline-code should be moved out of the inline-code class (for example, into inline-code). 
After that, you can add a inline-code to it. 
I think the only way to override the color of a inline-code is to also add 

block-code.

However there's still a couple of strange things happening with the css (the collapse will pick up that red color, which I am not sure we want). An alternative would be to create a inline-code class in the css (it will be the color of the navbar we currently have) and add to that extra specifications for the inline-code (drop down menu). 

Maybe try some stuff around with the info above, I'll also dig deeper into it from my end and see if there's some totally obvious way I have not considered. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-123873407\comment-182048093.json . 
Just moving the nav_bar + menu id out of the ul did the trick! 
Regarding the other problems: I would very much not try to solve that myself. It is way over my head.  Okay? One question though: wouldn't most of the (new) problems be solved if we replace the 'header'  by a regular bootstrap navbar? At the least, I suppose Bootstrap will take good care of the dropdown menu.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-123873407\comment-182063284.json . 
@F3PiX that's okay, I understand :)
so, it only took one more change for it to work properly (with your restoring the change, the menu was stuck collapsed in responsive view): the inline-code class needed to be moved outside of the unordered list into its own div. I've also added inline-code to improve accessibility. 
This should now work properly as intended, and I think we can merge the PR. Great work Maud!! :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-123873407\comment-182068282.json . 
:8ball: Sorry I missed that. Glad to have you watching my back! :bow: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-123873407\comment-182068397.json . 
No worries! I think we were each other's rubber ducks ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-123873407\issue-123873407.json . 
- [x] Step 1: Added navbar-default class to header.
- [x] Step 2: Restore regular menu

Issue #335 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-123873407\pr-54584168.json . 
- [x] Step 1: Added navbar-default class to header.
- [x] Step 2: Restore regular menu

Issue #335 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-126143350\comment-220136957.json . 
Do you mean links on inline-code only visible to admins? That is kinda what I want to move away from as it means sprinkling the views with authorization logic. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-126143350\comment-225687832.json . 
Hey @alicetragedy, I would like to close this in favor of making the corresponding projects' view in the orga namespace more complete. D'accord?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-126143350\comment-225805836.json . 
@carpodaster not a problem for me :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-126143350\issue-126143350.json . 
From a UX point of view, it would make sense to also have the accept/reject buttons in the single project view. When a project is submitted, I first look at the project description, maybe comment on the project and then decide if I want to accept or reject. It seems natural to also be able to do it from the inline-code view itself, without having to go back to the project list. 
Any thoughts?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-126144703\comment-176467588.json . 
FINALLY fixed in b79150362fb36ffaedf4b48b1e20699dcee16a95 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-126144703\issue-126144703.json . 
When accessing the project list as orga (inline-code) and clicking on a single project from there to view it, the back button on the single view takes the user back to the "normal" projects list (inline-code). This should be fixed :)

inline-code might be the easiest way. 
Thoughts?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-126471661\comment-171569353.json . 
thank you @carpodaster! I had too many things on my list yesterday but I'm glad you took over this :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-126471661\issue-126471661.json . 
In the project show view, the inline-code link goes to the project url on the teams app and not the actual url of the website (even though the text for the url link is right). 
Should be easily fixable ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131150018\comment-185717650.json . 
- [ ] I can use the command line for every day tasks (moving and deleting files, changing directories) {inline-code}
- [ ] I am used to working independently and managing my own tasks {inline-code}
- [ ] I have heard of agile project management before {inline-code}
- [ ] I have done pair-programming in the past {inline-code} 
- [ ] I have gotten used to refactoring code {inline-code}

some more ideas not so sure about the 'rating' though, it's tricky!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131150018\comment-194515914.json . 
since we didn't really get any more input on this, I've left it as-is in the current form. I'll gladly change it if we get more ideas on things to select..

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131150018\comment-273459949.json . 
@carpodaster We have not discussed this at all this year, and while it's definitely a great idea, I don't think it makes sense to think of this as a feasible feature for the Application forms in 2017. Maybe a small feature for a RGSoC team to work on this summer? I think there would be enough context to get started.. in that case, we could remove it from the “Application 2017” milestone.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131150018\comment-273563945.json . 
@alicetragedy Yes, good point. Removing it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131150018\issue-131150018.json . 
Instead of having a radio button that assigns a discrete skill level (from 1 to 5) to a student, we want to build up a sum of different skills, both social and technical, based on a list of selected examples.

The examples have to be programming language agnostic. The score for each item should be between inline-code and inline-code (1 being "basic" and 3 being more advanced stuff). The score is hidden from the user.

Desired target list:.
- [ ]  I understand and can explain the difference between data types (strings, booleans, integers) {inline-code}
- [ ]  I am familiar with the concept of TDD and can explain what it stands for {inline-code}
- [ ] I am comfortable solving a merge conflict in git {inline-code}
### 2015's examples
#### Skill 1
- I understand and can explain the difference between data types (strings, booleans, integers)
- I have heard of the MVC (Model View Controller) pattern
- I am comfortable creating and deleting files from the command line
#### Skill 2
-    I am confident writing a simple method in ruby
-    I am familiar with the concept of TDD and can explain what it stands for
-    I am able to write a counter that loops through numbers (e.g. from one to ten)
#### Skill 3
-    I am comfortable solving a merge conflict in git.
-    I am confident with the vocabulary to use when looking up a solution to a computing problem.
-    I feel confident explaining the components of MVC (and their roles)
-    I understand what an HTTP status code is
#### Skill 4
-    I have written a script to automate a task before
-    I have already contributed original code to an Open Source project
-    I can explain the difference between public, protected and private methods
-    I am familiar with more than one testing tool
-    I have written a unit test before
#### Skill 5
-    I have heard of and used Procs in my code before
-    I feel confident doing test-driven development in my projects
-    I have gotten used to refactoring code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-184181470.json . 
@ramonh @lucaspinto Whould anyone of you have time to work on this this week?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-184181696.json . 
Sure thing @carpodaster I'll give it a go :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-184182044.json . 
What I'll try to do is break this into smaller pieces:.
- [ ] Remove Mentors
- [ ] Remove and add coach 'invite' system
- [ ] Remove and invite second student, migrate to state machine

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-184183365.json . 
Cool, @ramonh !

I would implement the other-student-invite first since only after accepting the invitation do we have an actual inline-code team (it may be inline-code first, in terms of the state machine).

I would leave the logic of a team to generally contain mentors or any other role (like supervisors later on). We just have to ensure that a team can only ever be created on the public website with 1st) another student and 2nd) one or more coaches, all of which have to accept an invitation.

Removing the second student should probably mean the entire team gets destroyed?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-184184157.json . 
Makes sense, thank you @carpodaster. 

If I understood correctly then, it would be best for the team not to be inline-code until both a second student and at least one coach accept their invitations, correct?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-184184994.json . 
I would drop the requirement of having at least one coach to have a inline-code team. Pure pragmatic reasons: a confirmed team should be able to create an application draft. They can start filling out their stuff without having to wait for a coach to hop on (they may still be in the process of finding any).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-184185121.json . 
Got it. I'll start having a look today. Thanks for your help! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-184185342.json . 
No, thank _you_, sir :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-184185437.json . 
:smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-184201611.json . 
Alas, I won't have time before Saturday.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-192921511.json . 
This probably has been answered elsewhere, but I can't seem to find it.

I've just about wrapped up the team revamping (#386), and have only the mentors to remove.

What are the consequences of coaches not being confirmed? Should students be blocked from finalizing the application? This makes sense to me.

@alicetragedy or @carpodaster, what are your thoughts?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-192921773.json . 
@ramonh yes, I'd say that's how it should work. Maybe it sucks a bit for last-minute applications, but I don't really see any other way — other than a way of still submitting the application and inline-code it, but we have no time for this right now. After all, this is in the requirements, so they should not be able to submit an application without.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-192927214.json . 
Sounds good, thank you for getting back to me so swiftly @alicetragedy! I'll get on it, then

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-193254030.json . 
@ramonh @alicetragedy What do you think about displaying an error box at the top of the application form when there aren't any confirmed coaches? Something like "Attention: there are currently no (confirmed) coaches on your team."

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-193254255.json . 
I like the sound of this, @carpodaster! Are you suggesting though that we allow students to apply without confirmed coaches?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-193256215.json . 
They shouldn't be able to _apply_ I don't think, but they should be able to start filling out the application form (draft). I was thinking about the alert box to avoid any last minute surprises as @alicetragedy mentioned.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-193256435.json . 
Ah good, yes, make sense to me. Thanks for clarifying! I'm on it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-193924047.json . 
@alicetragedy, @carpodaster: I added the above suggestion about warning applicants when not all coaches have confirmed. You can find this in #386

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-193937116.json . 
I also added the requirement that all coaches confirm their membership when submitting the application!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-193957007.json . 
awesome, thanks @ramonh. had a pretty full day and will not be able to take a look before tomorrow-ish.. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-194514684.json . 
this is done and we can close, right @carpodaster @ramonh?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-194552494.json . 
I wanna leave this open as a reminder that I have to remove the mentor-email-ping still

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-194555198.json . 
Also @ramonh I reckon we skip the invite-system for the 2nd student, right? Not only is it yet more work to actually program it, but it also adds another level of testing it (with our group of volunteers I mean)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-194746580.json . 
Yes, I think that's a good idea for now, @carpodaster. We have that requirement in place that two students need to be in a team.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196279890.json . 
Hey @carpodaster, if you like I can look into removing the mentor-email-ping :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196541280.json . 
@ramonh I am thinking to keep the mentor-email-ping: We probably still gonna add a mentor to a team, just only manually when the teams are selected. wdyt?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196541503.json . 
I like that. I'll just remove the requirement then, if that works?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196541677.json . 
Scratch that, just saw the update. Thanks @carpodaster!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196542167.json . 
@carpodaster I thought that Laura sends emails to mentors herself. Let's see what she says about this. @alicetragedy 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196695922.json . 
@mkalininait I do send emails to mentors, but they're usually updates about the program and their next steps — I don't email them about being added to a team or anything like that — I'd leave that up to the robots ;)
@carpodaster @ramonh I'm getting a bit confused here about the process and changes so let me just summarize the requirements:.
a team of two students apply with min. one project, max. two projects (they cannot apply without) which is/are selected from a dropdown list (removing "human" errors related to not spelling project name properly, etc.) — I think that the mentor who is attached to each selected project (we have a name and a github handle) should be added to the team and get an email about it.

As an alternative, a team could be valid (to apply) without a mentor (because we have a validation on project anyway so they can't apply without a project; last year the process was different and the mentor in the team ensured we knew which project each team was attached to), and we pull the mentor information into the team when the team is officially selected. 

Not sure whether any of those scenarios have any impact on the mentor "faving" that happens after the applications close and before the teams are selected. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196718480.json . 
@alicetragedy All your assumptions on how a team can apply are valid and that's how we implemented it (barring existing bugs of course).

You are absolutely right that we can infer a team's mentor from their 1-2 appications. However, we currently do not auto-assign a mentor and my idea was that we assign the mentor the old-school way (i.e. by adding the role mentor to the team as an organizer) for accepted teams, just as we assign supervisor. This is why I suggested leaving the automatic "you have been assigned a mentor for team X" email as is.

You raise a good point about the mentor pick (#364), though. Closing that issue will have to include finding a way to auto-assign the mentors and I already have an idea.

So @alicetragedy and @ramonh: with your permission, I'd like to close this issue. We can carry on in #364.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196719299.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196719963.json . 
is a team, though, still required to have a mentor to apply? If so, this should probably be changed (if we auto-assign mentors after a team has been selected only). 
Other than that, I give my approval for closing this issue!! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196720645.json . 
@alicetragedy aye, the mentor requirement was removed in 6f1c1e58bb4406c56778f50d4335043721faaf4d

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196720822.json . 
sorry, should have read the backlog. :facepalm:.

!2744956

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196721439.json . 
Pff, nah! Too many commits!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196726213.json . 
Agreed, I think this is okay to close!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\comment-196731007.json . 
!image

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131153853\issue-131153853.json . 
Non-orga people can no longer add mentors to their teams.

Coaches added to the team will get an invite notification they can accept. Only then will they appear on the roster.

Idea: Even adding the 2nd student should be done by invite. As long as the "team" doesn't have a 2nd student, it will not be a inline-code team (adding a state machine here?) and it will not appear in the list of teams on the website.

Once the 2nd student accepts the invitation, the teams gets confirmed and is officially created.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131154694\comment-209137851.json . 
This turned out to be a hard task and I'm not sure if it's worth the trouble. Major blockers:.
1.  it’s really not that easy to make out relevant mentors anymore:  they need to be the inline-code on an accepted project of the current season AND there must be actual applications with any of their projects (being mentor for more than one project is possible) listed as either the preferred or secondary project by the applicants.
2. the logic to check if that’s a mentor fav also gets complicated by the fact that students have one application but two project options. Allowing only one mentor fav for per project_id scope will probably result in tons of custom validations that aren't easy to grasp next year (or maybe already in 4 weeks even)

I've got 1) nailed down alright but I won't have time to get to 2).

I'm strongly leaning towards ditching this feature alltogether. What do you think?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131154694\comment-209383621.json . 
Unfinished business resides in the inline-code branch

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131154694\comment-239207744.json . 
I probably don't oversee all implications, however, I see parallels to the supervisor dashboard.
Would it make sense to put the mentors behind a base controller, like the supervisors, and present them their own accepted projects, again like the supervisors. Where they can choose one fav.
If this^ makes sense at all, then maybe it is sufficient if only the view doesn't allow to pick more than one fav, with radio buttons. 
And if a team gets fav'ed by all their mentors, well, that is probably an indication that they are a potential candidate ;-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131154694\comment-270355827.json . 
will this still be relevant for the 2017 edition? I know that we want to give mentors access to parts of the application answers, but we haven't discussed how to best have them suggest preferences. The email process last year was super messy, and I'd prefer not to repeat that... Is there any other way that would (easily) enable them to show a preference via the teams app?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131154694\comment-272113313.json . 
Some clarifications as per our call last week:.
“Mentors can pick the teams they feel they are fit to work on the project and they can also fav a team or more than one team, depending on what we decide later.”

The idea was to have a mentor “sign-off” (team is fit to work on the project/have the requirements) and a mentor “fav” (I really like this team and would love to see them selected), with checkboxes for both (i.e. mentors can select as many as they want). 
Note: we should make the wording clear enough so that the mentors understand the difference between the two.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131154694\comment-272624732.json . 
Gonna tackle this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131154694\issue-131154694.json . 
After the application phase is closed, present the mentors a list of applications referencing their project. They get to pick one team that they favor, maybe because the students have been in contact with them beforehand.

That mentor fav can serve as a soft boon during the review of the applications

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\comment-180322413.json . 
From my experience, it is a) hard for students to foresee the availability of their coaches , and b) it is hear-say, so it is hard to compare between applications. On the other hand, it may be handy to ask the coaches directly how they see their commitment. We had very committed coaches, but came nevertheless coaching hours short, especially at times when some of the coaches were out of town. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\comment-181439445.json . 
Tricky indeed. I wonder, would it perhaps be wise to advise coaches before confirming their involvement, perhaps in the form of a checkbox, that they need to be as available as possible? Perhaps this could resolve itself as we make coaches more involved in the overall communication this time around.

In any case, I'll happily handle the removal of this field.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\comment-182071578.json . 
Having meditated on this for a while now I'm in favor of leaving coaches out of the application process alltogether, save the fact that they have to accept being part of the team in the first place.

As @F3PiX pointed out, it's very difficult to estimate how much time will be available anyway so whatever is being entered may not be valid anymore come summer. Or could be fake in first place ;)

Very welcome side-effect: reducing another access level (i.e. 'coach') should also simplify the programming behind the application process.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\comment-182072264.json . 
Sounds good! I'll go ahead and remove both fields, then.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\comment-182094602.json . 
@carpodaster does this mean we are not entering any values that refer to the coaches' availability in the form at all? (fine with me, am just checking for guide update purposes)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\comment-182098520.json . 
@alicetragedy ah, good that you have The Guides:trade_mark_sign: in mind. Ooops.

The only bit of information we could us is their general level of support, e.g. having a "coaching company" or some office space. I don't think we explicitely ask for that, or do we?

So my proposal is as follows:.
- Do not enable / require to edit the application draft anmore
- Remove "why will this team be successful?"
- Remove "how many hours per week?"
- Make sure that we gather information about their general support structure

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\comment-182102507.json . 
:+1: for removing ALL THE THINGS
when you write "Make sure that we gather information about their general support structure" do you mean that the coaches will be entering this somewhere? Or would you see this as the students' job? 
I believe this is info which the students/team could provide, if we really want to make the application non-editable by the coaches and have a hands-off approach (ie. we have the support of a coaching company/we have an office space in mind).
The only important thing would be to mention this in The Guides:trade_mark_sign: ("students will be entering information about your work set up, make sure that is discussed with them prior to the application is filled out" / "you will need to enter information about your work set up with your coaches; please make sure you discuss that with them prior to filling out the application")

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\comment-182105308.json . 
I like the sound of both of the above. I'll try and break this down into as many small tasks as possible, starting with the removal of the fields

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\comment-182106641.json . 


@alicetragedy Yes, I meant this as a students' job.  No coaches' mingling in the application draft form.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\comment-183067842.json . 
With #371 done and 258eff3d2174a4cb67e19acd513b5d7fb84dffa3, coaches can no longer access the draft. Done!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\comment-183068066.json . 
Nice, thank you @carpodaster!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131155648\issue-131155648.json . 
Remove 'why successful' field.

Q: Allow students to fill in the »How much time are your coaches packin'?« question or shall we remove it alltogether?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-225688186.json . 
If we add latitude / longitude fields to this we might even calculate the distance to a conference site. But this might be overdoing it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-251591712.json . 
hey @carpodaster ! I've been looking at this issue - can i try to do this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-251598265.json . 
Morning @izuroxx – but of course!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-270511881.json . 
I've just looked at how it is implemented in the User Profile: there are two fields Country and City, the first is a dropdown and the latter is a simple input field. Does it mean that we will have different implementations of location input on the Application Form and in the User Profile?

Another thing to think about is the Additional Info form. We probably want to enter location the same way there (and even be filled out automatically), don't we?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-270942774.json . 
I'm taking a look at it. Feels kinda weird to write JS after such a long time :see-no-evil_monkey: 

Just one question: is there already a RGSoC project with a Google (Maps) API key @carpodaster ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-270958611.json . 
@klappradla I don't know of any Google Maps keys, no. Not in front of a computer right now, but maybe inline-code has something?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-270959491.json . 
Ah, good idea! Gonna look there.

I'm for now just playing around with the API. However, I guess it's not suggested to publish the API key in a repo *(especially given the fact that there are rate limits for the free plan)*. Still, this would again make the dev setup more complex :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-270970376.json . 
I think the advantages of autocomplete address input are well worth the extra dev setup. I am a big fan of this feature. :dancer: 
  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-270973174.json . 
Hm, what I kinda don't like about it: you have to deliberately chose one of Google's suggestions. But ok, maybe that's what people are used to from using GoogleMaps anyways...

!autocomplete

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-271294058.json . 
I'm definitely working on setting up an account that we can link to the API key, will get that done together with @klappradla once I've talked to Anika about this. Also, awesome work and thanksssss!!! :sparkles: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-276228804.json . 
Tested, looks good.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-276318601.json . 
Any news on the Google account @alicetragedy ? Or did you already change it?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-276318979.json . 
@klappradla thanks for pinging me about this. with everything else that was going on, I had decided to move setting up a google account for RGSoC until later. But if you think it's more wise to do that before we open up applications, I can still get that done today!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-276320293.json . 
No worries, fine to do it later. I cannot really estimate the load on the Google API. But I'll just verify my keys with my own creditcard - that will give us enough.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-276321130.json . 
Sure, I understand. If this is any problem at all I can still set it up later today though — just didn't seem like a huge priority compared to everything else. just ping me and I can take care of it. thank you Max!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-283690375.json . 
@klappradla the new Google account for RGSoC has been set up, what would be the next steps? do I have to create a new API key linked to that account, add our Foundation CC info, and update the environment variables? That's one of the few items left on the checklist to consolidate access to accounts: URL .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-283693292.json . 
Yes. Steps should be:.

1. Create a project in the API Dashboard
1. Enable the inline-code
1. Create credentials (API Key)
1. Restrict the API key for the respective URLS:.
block-code.
1. (Optional) add another one for development:.
block-code.
1. Verify you account by adding a credit card information
1. Update keys in Repo and in the env vars on Heroku


This should be it, hope I did not forget something.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\comment-283693589.json . 
thank you!!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-131156657\issue-131156657.json . 
We request people to answer »Where do you plan to live July-September?« as _City, Country_ which doesn't work so well in all cases. Google provides an autocompleter for location data that could remove some of the randomness in the entered data.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131157557\comment-181877255.json . 
For the tab categories there are three possibilities: 
1) Student 1, Student 2, Team (includes project info), Coaches 
2) Student 1, Student 2, Team (including coaches) and Project
3) Student 1, Student 2, Team, Coaches, Project 

Nr. 2 seems more intuitive, but I don't know what your thoughts are on the topic. 
Nr. 3 feels like an overwhelming amount of tabs to me, and I'd like to stick to 4 tabs max, if possible.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131157557\comment-185713703.json . 
Categories:.
- Requirements
- Personal Information
- Financial Information (could go into personal?)
- Programming skills
- Teamwork
- Goals & Motivations

Step 0: Requirements (read and understood application guide, identifying as a woman/non-binary, team member location is the same)
Step 1: Personal information (includes basics like name, location, and background information text. if needed also financial information dropdown)
Step 2: Programming skills (checklist and big text area "how did you get into programming")
Step 3: Teamwork (since this is a self-guided program, how do you envision working together & how/why did you choose this project/issues)
Step 4: Goals & Motivations (what is your goal for the summer, + motivation essay)

Did I forget anything @carpodaster?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131157557\comment-193313104.json . 
I believe that as soon as URL is merged we can close this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131157557\issue-131157557.json . 
- [x] Find descriptive "category" names (e.g. "Personal Info", "Programming Background")
- [x] Define which  form fields should go into which step

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131158322\comment-180718213.json . 
Again, from my experience last year: there are no other fields that I would like to hide from my teamie. Based on last years form. 
Note: I can't remember it, but in the form it doesn't SAY that the financial info is hidden from the other student, it only mentions the coaches and mentor.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131158322\comment-180718644.json . 
And for everybody who wants easy access to the form: we have a time travelling switch, which makes visiting the form easier. Go to URL Switch to the Application phase. 
After clicking Apply now, you have to add yourself to a team and then you can view and play with the form.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131158322\comment-185715196.json . 
thanks for the heads up @F3PiX! 
about the hidden info: maybe I'd also hide the "essay" they're planning to write, but I think that's about it. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131158322\comment-185735489.json . 
Great, they have to write an essay? I would definitively want to share that with my teamie, so I don't see the need to hide that from eachother. 1) I would reckon: IF we write non-compatible opinions, that would hamper our chances to get in. 2) If we indeed HAVE uncompatible opinions, we better know that before than during summer. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131158322\comment-193312611.json . 
@F3PiX thanks for your input, it was really helpful. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131158322\comment-195620819.json . 
@alicetragedy this is done, right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131158322\comment-195804634.json . 
@carpodaster as of now, the financial info is visible to the other student — do we want to change that? other than that, yeah, technically, this would be done.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131158322\comment-196260842.json . 
This is what it looks like for the pair now:.

!bildschirmfoto 2016-03-14 um 12 04 09

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131158322\comment-196263029.json . 
wheeee! :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-131158322\issue-131158322.json . 
1) Financial info
2) …

Anything else?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132436220\comment-182069837.json . 
Awesome – thanks @F3PiX !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132436220\comment-182070206.json . 
:tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132436220\comment-183062803.json . 
Thanks to you too :-) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132436220\issue-132436220.json . 
This replaces PR #309, and open todo's from  PR #304 
Adding tests. 
Optimize :back_to_reality option in SeasonsController

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132436220\pr-58755352.json . 
This replaces PR #309, and open todo's from  PR #304 
Adding tests. 
Optimize :back_to_reality option in SeasonsController

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132436220\pr-comment-52368609.json . 
Can you turn that outer inline-code into a inline-code and then wrap the inner inline-code blocks into a inline-code ?

Example:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132436220\pr-comment-52368881.json . 
You can use Rails' inline-code so that e.g. inline-code becomes inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132715445\comment-182812312.json . 
Hehe, thanks @F3PiX  :smile: 



I'd say if there's new bogus data coming up (re: #225) then sure! Further rewriting existing factories is probably overdoing it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132715445\comment-182824975.json . 
Haha, we could argue that CheesyLingo itself qualifies as overdoing it :-) Yes, I will work on the bogus data. Thanks, Carsten.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132715445\issue-132715445.json . 
This version of the FFaker gem includes CheesyLingo. CheesyLingo is added to FFaker by Team Cheesy during Summer of Code 2015 :-)

Before I go further with implementing some seeds with cheesy FFaker fun : is this a good idea?  
Related to #225

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132715445\pr-58898342.json . 
This version of the FFaker gem includes CheesyLingo. CheesyLingo is added to FFaker by Team Cheesy during Summer of Code 2015 :-)

Before I go further with implementing some seeds with cheesy FFaker fun : is this a good idea?  
Related to #225

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132730393\comment-183057469.json . 
Awesome, thank you!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132730393\issue-132730393.json . 
This addresses #365.

The coach fields 'How many hours are you available for?" and "Why do you think this team will be successful?" Are removed with this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132730393\pr-58906046.json . 
This addresses #365.

The coach fields 'How many hours are you available for?" and "Why do you think this team will be successful?" Are removed with this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132959160\comment-182846194.json . 
I think Nr. 2 is definitely a huge priority. Thanks for adding this! :thumbs_up_sign:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132959160\comment-182873791.json . 
AFIAK @carpodaster said that we can't do anything about the redirect to the previous page since that's handled by the GH auth thing? I also find this super annoying and would love to have this different. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132959160\comment-183052414.json . 
Ohai. I may have just fixed no. 2 :relaxed: 

If no. 1 was reported as being annoying during the summer we should definitely fix it. It would be super-nice if you could work on that, Maud. Especially because I have no idea about devise's internals :grin: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132959160\comment-183052842.json . 
Carsten's :sparkles: magical dev powers :sparkles: 

!tumblr_m9dlcwp2yr1qiyseco3_250

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132959160\comment-183052992.json . 
WHOAA

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132959160\comment-183055453.json . 
:bow: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132959160\comment-183697940.json . 
@F3PiX let me know if #373 fixed the issue, hopefully we can close this then :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132959160\comment-184409490.json . 
Hi @beanieboi, I don't know how to check if it is fixed. I never had this issue myself. It _sounds_ like it is solved though ;-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132959160\comment-199682315.json . 
@carpodaster seems like the "redirect after login" issue is still not fixed — at least it seems like it doesn't work with the URL link, which is a bummer because I would love to link to the application page directly from ie. the application guide. Right now, the "blogs" as an index page for the teams app (which is the page we link to by default, and the page which is shown by default when logging in) seem to be pretty confusing for most students applying. I'll investigate further, to see if there's anything we've overlooked..

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132959160\comment-200810487.json . 
I think we can close this!!!! :tada: :confetti_ball: :raised_hands: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-132959160\issue-132959160.json . 
When we were working on the Supervisor Dashboard during SoC2015, some of the supervisors told us about annoyances with Github Authentication:.
1 having to authenticate w GitHub "all the time" (which boiled down to: every day or every few days)
2 after auth w GitHub, you are not returning to the page where you came from
#1 Not sure if this managed by GitHub. If not, it can be managed by Devise (AFAIK): is it okay to extend the time-out (the user session without activity) to 1 or 2 days?
#2 We should redirect back to previous page.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391018\comment-183631334.json . 
Thanks @beanieboi !

Are you sure this solves the auto-logout issue? I was thinking that a session cookie does not expire at all as long as there is no inline-code key. I was thinking that we devise is responsible for the overly early timeout.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391018\comment-183667769.json . 
hey @carpodaster 

a session cookie expires when you close the browser. it's only valid for as long as you keep the browser (your session) running.

adding the inline-code converts the inline-code cookie into a real cookie with a expire date in 1 week from now. but rails adds some automatic here. it updates the expire date every time you visit the page. if you visit the page today it will set the expire date to 7 days from now. if you visit the page again in 2 days from now, it will update the expire date again to 7 days from the page visit. this means if you visit the page every day the cookie will never expire. if you don't come back for over 7 days. you need to login again.

does that make sense? :D

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391018\comment-183679215.json . 
Yeah, it does make sense :)  My confusion stems from the fact that we're using cookie-based session management already. I know that closing the browser resets the session but I am not sure if this is the reason behind the reported logouts: I rarely ever close my browser (I close the laptop lid and continue where I left next time) but I do get these logouts as well. I cannot tell how often, though.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391018\comment-183684566.json . 
@beanieboi Great! 
Do you happen to know if GitHub is managing session duration by itself in its OAuth access API? As I understood, every Oauth 'destination app' decides on some of its own settings when allowing access by OAuth. But I found no further details. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391018\comment-183696549.json . 
@F3PiX @carpodaster hiiii!

we have to distinguish between 3 session here. 
- one session is the session of the teams app
- one session is the OAuth session. AFAIK the GitHub OAuth token has no expiration. this means the OAuth token we get back from GitHub can be used until it's manually revoked by the user. i don't know the teams app that good but if we use GitHub OAuth only for login this doesn't need to bother us since we only ask the GitHub OAuth API.
- one session is the session on GitHub.com, we can't control this one

When you are logged in with the teams app right now, you get logged out when you are closing the browser and you have to sign in with GitHub again. What is possible here is that you are also logged out of GitHub. so you actually have to perform 2 logins. in order to login to the teams app you now have to login into GitHub.
this PR will only fix the issue that you get logged out of the teams app and you can use the teams app without login in that often.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391018\comment-183696884.json . 
Alright, let's get to merrrrge! Thanks a lot @beanieboi !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391018\comment-183696988.json . 
:heart_eyes_cat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391018\comment-183709392.json . 
:sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391018\issue-133391018.json . 
as mentioned in #372. you get logged out after you close your browser. this extends the validity of the session to 1 week (just picked something random) and will also extend the session every time you visit.
if you visit the site, say, every day. it will never expire. if you are on vacation for 2 weeks, your session will time out and you have to login again.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391018\pr-59256452.json . 
as mentioned in #372. you get logged out after you close your browser. this extends the validity of the session to 1 week (just picked something random) and will also extend the session every time you visit.
if you visit the site, say, every day. it will never expire. if you are on vacation for 2 weeks, your session will time out and you have to login again.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391559\comment-183631348.json . 
Thanks! :bow: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391559\issue-133391559.json . 
i just noticed that the link to the imprint returns a 404. let me know if the link is still incorrect, i grabbed it from the official site.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133391559\pr-59256706.json . 
i just noticed that the link to the imprint returns a 404. let me know if the link is still incorrect, i grabbed it from the official site.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133448610\comment-183706312.json . 
i can also move the line inline-code from 
inline-code to inline-code

it alters the migrations, but i think there is no way to fix this without changing the migrations.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133448610\comment-183713794.json . 
Just pulled upstream and run db:migrate. I did not have this migration problem. Does that prove anything at all? :-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133448610\comment-183714145.json . 
hey @F3PiX 

did you start with a empty database? when i changed the two files like mentioned above it works for me. it's important that the db is empty and you run all migrations.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133448610\comment-183715290.json . 
Aha, no, it probably had to do only the latest migration. Thanks for clarifying.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133448610\comment-183719029.json . 
@beanieboi That is indeed a bug! @ramonh ran into this the other day. We "fixed" it by importing a recent dev DB dump but that's obviously a real solution for the problem.

Squashing old migrations sounds like a very good idea! :+1: Thanks for working on this, it's highly appreciated! :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133448610\comment-184385956.json . 
@beanieboi Just an idea in the middle of something else: can't you get past this error by doing inline-code ?

**Edit**: … if you're ready to ditch your dev database that is ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133448610\comment-184389777.json . 
loading the schema works. It's just updating the mailings where we call Season.current that breaks everything. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133448610\comment-184390025.json . 
But if you loaded the schema on a fresh DB, you don't have to run the migrations. And there aren't any mailings to update anyway.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133448610\comment-184401913.json . 
That's true. But we should fix that bug since beginners can run into it and don't know what do to. db:migrate is part of every rails tutorial and it should work IMHO

As I wrote in the issue we can also just switch the mailing update to a later migration where the Season schema is complete. 








.
#rails-girls-summer-of-code/rgsoc-teams\issue-133448610\comment-224050244.json . 
(Hopefully) fixed in 1ec0cacd6d26f4e0fd07a68be03d69251c41b7ec

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133448610\issue-133448610.json . 
hey

i just tried to setup the teams app and the migrations are not running through.

block-code.

the problem is that in inline-code we try to access inline-code which tried to create a Season with attributes inline-code that are not present yet in the current point of migrations.

what do you think would be a good fix? i can work on it!
what i usually do is to squash the migrations. there is no point in having 120 migration files. i would usually squash all migrations that are older than 1-2 months in 1 big migrations. this allows you to still revert deployments and do down migrations. i doubt that there is value in really old migration files.

let me know what you think about this. happy to work on any solution.

best
ben

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133474444\comment-224049454.json . 
Hey @beanieboi – sorry for the long wait and again, thanks for your PR. I've just push 1ec0cacd6d26f4e0fd07a68be03d69251c41b7ec which solves the problem behind this PR by fixing the offending migrations. I'm closing this PR in favor of that commit since it's less "invasive". I hope you're ok with this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133474444\comment-224049604.json . 
thank you so much!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133474444\issue-133474444.json . 
as discussed in #375 this squashes all migration made before 12/1/2015. this means there are only a few migrations left, which is nice if you need to revert them.

let me know what you think.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133474444\pr-59278501.json . 
as discussed in #375 this squashes all migration made before 12/1/2015. this means there are only a few migrations left, which is nice if you need to revert them.

let me know what you think.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133813085\comment-184409224.json . 
@lucaspinto aren't we missing some CSS here? 

Currently it looks like this (and I can only click a "Tab n" link once):.
<img width="576" alt="bildschirmfoto 2016-02-15 um 22 46 17" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133813085\comment-192326379.json . 
Closed in favor of #384

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133813085\issue-133813085.json . 
- Add a js file taking care of the feature
- Add basic html tabs with special class in the application draft "new" view

.
#rails-girls-summer-of-code/rgsoc-teams\issue-133813085\pr-59411757.json . 
- Add a js file taking care of the feature
- Add basic html tabs with special class in the application draft "new" view

.
#rails-girls-summer-of-code/rgsoc-teams\issue-135830300\comment-187884361.json . 
Hey @ramonh, looks great! Just to be clear: there's currently no way for the 1st student to get a 2nd one into the team, right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-135830300\comment-187886518.json . 
Thanks @carpodaster! I'm glad you like what you see so far.

I'm not sure, to be perfectly honest. Will get back to you on that.

To be clear, this doesn't add the invitation system yet. I didn't want to make an overloaded PR :sweat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-135830300\comment-187886834.json . 
Heh, makes perfect sense and I assumed as much. I just wanted to make sure. Please feel free to merge!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-135830300\comment-187887058.json . 
Awesome, thanks @carpodaster for checking and for confirming! Will do.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-135830300\issue-135830300.json . 
Apologies for the long title!

What this does is start to address #363, by doing two things:.
- Turn the team model object into a state machine with two states:.
  - inline-code: This is when there's only one student in the team.
  - inline-code: This is when there's two students in the team.
- Add the requirement for a team to be confirmed before students can create one.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-135830300\pr-60390999.json . 
Apologies for the long title!

What this does is start to address #363, by doing two things:.
- Turn the team model object into a state machine with two states:.
  - inline-code: This is when there's only one student in the team.
  - inline-code: This is when there's two students in the team.
- Add the requirement for a team to be confirmed before students can create one.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\comment-189164508.json . 
Morning @alicetragedy! Agreed, a search would be very helpful. I'm not too sure about searching for a (user)name, though. Ideally, you'd search for people in your vicinity, but that requires geocoding all users based on their location and may yield funny results if someone could not be geocoded (e.g. because they decided not to give any location info).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\comment-189381192.json . 
I thought that I was able to do that, so I tried and I COULD :tada: 
@carpodaster: I know it is not the BEST reason to add a feature :-) . WDYT?
See PR #382 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\comment-192877690.json . 
thanks @F3PiX! :sparkles: 
@carpodaster you're right, for a lot of users, searching by location would make a lot of sense. In my case though, I often look up if people already exist in our community list and do so by name. Anyhow, I'm leaving this open, as I think we might want to think about ways to improve the search that Maud has already added (ie. adding location). 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\comment-193005021.json . 
In that case: maybe searching team names is also a nice future improvement. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\comment-233373163.json . 
Adding a reset button "Show all" would also be a good idea. 
Currently, only an empty search or manually changing the URL resets the list to all users again. 

PS: While getting warm with the teams app, I'm playing around a little on the styling of the search bar. Will send the PR in a bit. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\comment-233385443.json . 
Good one, I will add that. And very glad that you will take care of the styling :tropical_drink:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\comment-234006061.json . 
I need some help, please. 
First option is a reset link, that is disabled until a search is committed. This works, but needs tender love and caring in the css. 
!active link
!inactive link

Second try was with .js script on the link, to hide the link, and show after GO is clicked. The script works, but the link immediately disappears when the page is refreshing. Which makes sense, because after refreshing the hidden setting is activated.
Third try was similar script on the GO button. Same effect.
This is my first js script ever, so please don't think I know what I am talking about ;-) 

What to do? Quick fix is PR with option 1 (screenshots). 
Or I put the JS script in the PR, and someone takes over? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\comment-234177772.json . 
I'd say the first option is fine so far. 
I can take over CSS for the link. 

My JS is also not good enough yet to take over option 2. I had a similar problem on a previous website and from what I learned when talking about it with a colleague was that loading the table with AJAX would be the solution. (We didn't implement it back then, so sadly I'm still missing the knowledge. Ajax is on my learning plate for August, though…) 
Is there's sth. in RoR that can do that?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\comment-234213093.json . 
That is great! And yes, if we could have an ajax wizzard to make the page only reload the table and not the whole page, I am sure it will work. I'll move the simple link to a PR. See you there!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\comment-234942070.json . 
The reset button is added in #379.
Still open: the search for team names (and maybe other search criteria). 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\comment-236458091.json . 
Search for team names is added in #509.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136516047\issue-136516047.json . 
The community area (/users) tends to become quite full every year. Even though we have pagination in place, finding someone in there is not 100% user friendly. I'd love for us to have a search in there in order to find someone quickly (mostly by name/username). 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-189163510.json . 
Hello @mkalininait - thanks a lot for the suggestion. Yes, the navigation bar needs some love! The problem is that we have too many potential menu items and too little space.

There are some menu items that pop up during different phases of the RGSoC season (like project proposal phase,  application phase, actual coding phase, post summer …), too, which makes it even more difficult to "plan" what actually fits on the one line nav bar.

Ideally we'd have a dropdown lists. PRs for an updated nav bar concept are totally welcome! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-189362869.json . 
@alicetragedy and I briefly discussed the possibility of changing the header into a 'real' bootstrap navbar. I suppose that would be the first step. Wdyt @alicetragedy ? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-189379538.json . 
@F3PiX I think the teams app might need some restructuring anyway, and the navbar should reflect that :) as Carsten pointed out it's difficult when the menu items change throughout the summer according to the different phases, however I think we could definitely change it into a 'real' bootstrap navbar. :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-195902002.json . 
Hi! I'm a newbie here but this issue seems very interesting. Is it possible for you to precise if it should be done by 
- adding two links to existing solution (as stated in original task description) 
- adding some drop down list (as suggest @carpodaster) 
- changing menu into bootstrap navbar (as suggest @alicetragedy) 

or you want to decide on this during the summer of RGSoC (possibly changing/adding more tasks to Nav Bar Revamp milestone)? Thank you!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-195946232.json . 
Hi @izuroxx,

We have not quite discussed it/made a decision yet. I believe we will not just be adding those two links (as pointed out after that, some of the links are dependent on the program phase) so we will probably:.
- change the menu to a bootstrap navbar 
- add dropdowns there where deemed necessary, with some of the single menu points inside the dropdown appearing/disappearing depending on the phase the program is in. 

I hope that's a thorough answer! Depending on how annoying it is, it might even be fixed before the summer starts, but I would not necessarily count on it ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-196737605.json . 
Thank You @alicetragedy!

I have a few questions regarding other issues, but i guess i'll put them in one email and send it to you (if that's ok) - i see all of you have a lot of work, hope i'm not bothering you too much :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-196738449.json . 
@izuroxx absolutely, go ahead and do that. It's no problem at all! :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-225454677.json . 
Just noting that students asked me for the links to their projects but they couldn't find them because there was no link to "Projects".

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-225454956.json . 
@anasofiapinho we only display the link to inline-code during the application period. It can be still be accessed as URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-225661105.json . 
As discussed, I'll start taking a stab at this :smiling_face_with_open_mouth_and_smiling_eyes: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-225674825.json . 
Thank you @ramonh !

In an attempt to summarize what we've just talked about in the call:.
- Needs links to dashboards (including the selection sub-app for reviewer-roles)
- Most of season-phase-specific conditionals  are in place to keep the single-line nav bar short. Some may be worth keeping (in order to remove cognitive load), others could be displayed all-year
- We need some kind of secondary nav level but how to group the existing elements?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-225708263.json . 
Thank you for the summary @carpodaster!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-275930965.json . 
Hey @ramonh, I'm taking a look at these things. I need to add a navigation item for things related to #581 - so I'll see if I can clean up the navbar to actually make this possible :v:.

Fine?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-276030333.json . 
That's totally cool, thank you @klappradla ! :bowing_woman: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-276507936.json . 
Just to make sure: non signed in users can look at both, inline-code and inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\comment-276608412.json . 
@klappradla sorry, completely overlooked your comment. Yes, non signed in users can look at both inline-code and inline-code. :thumbs_up_sign: 
can't wait to see the new pretty nav bar :party_popper: :confetti_ball: :balloon: :party_parrot:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-136522346\issue-136522346.json . 
It seems to me that certain links are missing on the navigation bar:.
1. Link to the 'Projects' page URL.
2. Link to the 'Activities' page URL (yes, you can get there by clicking on the logo, but this is not super transparent)

I think that the navigation bar should somehow reflect the structure of the website.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136731889\comment-191105852.json . 
Hi @sonianand11 - thank you for your PR and sorry for not getting back to you earlier. Your PR targets the problem described in #375, right? We already have a proposed fix for that (#376). I'll weigh both PRs and merge. We're currently in the pre-launch operation for this year's application phase so please excuse us if it may take a few more days.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136731889\comment-191126095.json . 
Hi @carpodaster, yes both PRs are identical issue. Take your time to merge it. I tried to cover all issue I was having while configuring app.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136731889\comment-224049763.json . 
Hey @sonianand11 – sorry for the long wait and again, thanks for your PR. I've just pushed 1ec0cacd6d26f4e0fd07a68be03d69251c41b7ec which solves the problem behind this PR by fixing the offending migrations. I'm closing this PR in favor of that commit since it's less "invasive". I hope you're ok with this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136731889\comment-224052866.json . 
yes, I am ok with it.
On Jun 7, 2016 12:12 AM, "Carsten Zimmermann" notifications@github.com
wrote:.
















.
#rails-girls-summer-of-code/rgsoc-teams\issue-136731889\issue-136731889.json . 
I cloned fresh code(master branch) and was setting up project. I was facing errors while configuring it by inline-code

This PR solves following issue :.
1) inline-code
- While doing inline-code the migration inline-code was raising error of inline-code is undefined because of validation callback called while creating Season object. I fixed by moving inline-code to inline-code

2) inline-code
- The factory of inline-code do not contain published_at attributes. So when we render root page it was raising error. Which is fixed by adding published trait in factory.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136731889\pr-60860453.json . 
I cloned fresh code(master branch) and was setting up project. I was facing errors while configuring it by inline-code

This PR solves following issue :.
1) inline-code
- While doing inline-code the migration inline-code was raising error of inline-code is undefined because of validation callback called while creating Season object. I fixed by moving inline-code to inline-code

2) inline-code
- The factory of inline-code do not contain published_at attributes. So when we render root page it was raising error. Which is fixed by adding published trait in factory.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136758859\comment-191104351.json . 
Looks good, thanks @F3PiX ! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136758859\issue-136758859.json . 
Issue #379. Simple search field for community table.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-136758859\pr-60874669.json . 
Issue #379. Simple search field for community table.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-137605401\comment-190772588.json . 
@carpodaster @lucaspinto this should take care of the tab issue. feel free to look over it, and make changes as you see fit. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-137605401\comment-190885974.json . 
This is perfect.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-137605401\comment-191103923.json . 
Cool, @alicetragedy ! Can you still modify the PR so that it aims to be merged into the inline-code remote branch?

If this is too much hazzle, don't bother; we can just merge it into master and then back into the feature branch from there.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-137605401\comment-191147244.json . 
@carpodaster no problem! I can close this one and push a new branch for a new PR (I don't think it's possible to modify the base branch of a pull request after it's been made).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-137605401\comment-192326267.json . 
Closed in favor of #384 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-137818485\comment-192326181.json . 
yay, looks terrific!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-137818485\issue-137818485.json . 
supersedes URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-137818485\pr-61371363.json . 
supersedes URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138789128\comment-193435387.json . 
!issue385

Should it look like the picture? And we just hide the conference and last activity column for now?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138789128\comment-193448986.json . 
Hey @Nattivolk thank you for taking a look at this!
Sorry, I think my issue was not explicit enough — I wanted to remove / hide the "Status Updates" and "Conferences" menu points from the navigation only. It's okay if they are still shown in the teams list as columns, that's not such a big deal, but I think it's unnecessary as a menu point. 
Feel free to ping me more if you have questions :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138789128\comment-194515239.json . 
Hi @Nattivolk, just checking up on you to see how far you are and if you need any help. It'd be great to have this on the weekend, as we're planning to open applications next week!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138789128\comment-195558235.json . 
fixed in URL & URL <3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138789128\issue-138789128.json . 
The conferences and status updates should not necessarily be visible during the application phase, as it would only confuse users imho. this is related to issue URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\comment-194310729.json . 
@ramonh @alicetragedy I've added some commits to the PR (apologies, Ramon, I wanted to create a PR for the PR to have it merged into your remote branch, but I got fooled by git :( ).

It introduces confirmation tokens and basically everyone who knows the link to the token can confirm the coach role. The link, however, is only displayed to the invited coach.

Ideally, we should also send an email. inline-code already get an email when they are added (note to self: we need to remove the mentor from that list). We can send coaches a different flavor of email that directs them to the teams page where they can confirm themselves.

Other than that, I think this PR is ready to go. Thanks so much @ramonh !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\comment-194310934.json . 
Oh, one more thing: we probably need to flag all existing coach-roles of past seasons' teams as confirmed.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\comment-194313573.json . 
Thank you so much for your help @carpodaster! I approve of these improvements :+1: 

No need to apologize. Git sometimes gets the best of us, and this creates less overhead so I'm all for it!

I prefer the use of tokens over my param solution. The improved displaying of buttons and flashes is great too. Thank you so much! I'd say it's good to go too.

Not sure how we'd do the latter, though. Would it make sense to have a migration?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\comment-194347693.json . 
I'm not really sure how to go about it; we currently have reports about migrations being broken exactly because I introduced these kinds of data migrations in the past. Now that the respective code for it has changed, the migrations break. Still, we won't remember that we have to manually intervene after we deployed this branch to production so let's add it to the migration file.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\comment-194348269.json . 
Makes sense to me. I'll be on the move until late tonight. Could we perhaps wait on merging the PR or would you mind please adding that line to the migration?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\comment-194373204.json . 
@ramonh done! Hacked together rather quickly so I hope I'm not causing havoc with our existing data :bomb:  :laughing: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\comment-194375496.json . 
Oh wow that is more than one line! Looks awesome. Thank you so much @carpodaster you've been a tremendous help.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\comment-194396520.json . 
Bam, merged. Thanks a lot for this, @ramonh ! :gift: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\comment-194397283.json . 
YAAAYYYYY!! :tada: :confetti_ball: great work!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\comment-194458968.json . 
Thank you both of youse!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\issue-138805426.json . 
This is the next in steps toward resolving #363

It adds the following:.
- Displaying the confirmation status of coaches in the team's view
- Coaches can confirm their status in the team's view
- Adds the following line to the email: 'If you've been added as a coach, please note that you need to confirm your role as a coach.'

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\pr-61846440.json . 
This is the next in steps toward resolving #363

It adds the following:.
- Displaying the confirmation status of coaches in the team's view
- Coaches can confirm their status in the team's view
- Adds the following line to the email: 'If you've been added as a coach, please note that you need to confirm your role as a coach.'

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\pr-comment-55149484.json . 
minor correction: should this line (as well as 49 and 57) read 'has the confirmed state' instead?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\pr-comment-55149548.json . 
Y... Yes. Thank you for catching that!

You caught me in my nasty copy pasting habit D:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\pr-comment-55149580.json . 
no worries, the same thing has happened to me SO often. Maybe that's why I caught it so quickly ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\pr-comment-55149610.json . 
Glad you understand. I fixed and squashed the typos!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\pr-comment-55149657.json . 
I'm not sure what this and the inline-code table are doing here. I think it might have re-added them after the problem you were having running the migrations — when you set it up from the db dump — but I really don't know what the best way to remove these without messing with the schema is.. :see-no-evil_monkey:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\pr-comment-55149674.json . 
Uh oh, hm. I take it these were supposed to be removed?

You've got me here. Maybe I can remove the changes to the schema?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\pr-comment-55149817.json . 
yes, they are supposed to be gone :) 
there's two migrations inline-code and inline-code which supposedly make sure those tables are dropped. Not sure how this happened ¯_(ツ)_/¯ 
As for fixing it, yes, maybe simply removing the changes to the schema (apart from inline-code on the roles table obviously) might do it. Can you give it a try? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138805426\pr-comment-55149831.json . 
Will do!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138827009\comment-192971136.json . 
Try to run inline-code instead, this should work. I have a PR including this almost ready :winking_face:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138827009\comment-192971874.json . 
ok, that works as well :)
Are you updating the readme?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138827009\comment-192972170.json . 
I can update it later, yes.
You may also want to change the activities from the seed data to have a inline-code value if you want to look at the start page as far as I can recall.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138827009\comment-193002738.json . 
I think this is a duplicate of URL and it looks like there are some open PRs which are taking care of solving this problem already, which Carsten is in the process of reviewing. Sorry for the hassle :disappointed: 
@klappradla if you get a chance to update the readme, please feel free to do so. After the above mentioned PRs are merged we can remove your instructions again, but in the meanwhile it might help newcomers to get set up easily. Thanks!!! :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138827009\comment-197505729.json . 
(I'm closing this as a duplicate in favor of the already existing #375)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138827009\issue-138827009.json . 
bundle exec rake db:drop db:create db:migrate is not working on fresh database setup.

Reason is: 
- 20150625085615_add_seasons_to_mailings.rb is calling Mailing.update_all 
- which calls Season.current 
- which is depending on database column created in 20151205133354_add_project_proposal_dates_to_seasons.rb

This is not failing on travisCI, because we don't call db:drop here.

Workaround: Comment out line 4 in 20150625085615_add_seasons_to_mailings.rb -> Mailing.update_all(seasons: [Season.current.name])

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138831940\comment-193002444.json . 
Hey Natalie, thanks for submitting this! Might be a good idea for us to add the setup for other OS, too. I'll quickly take a look and then merge it if it looks good. :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138831940\comment-193003318.json . 
thanks! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138850161\comment-193239602.json . 
Hey @klappradla - looks awesome, thank you!

As for the inline-code button: sure, let's remove it, but let's merge this PR first.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138850161\comment-193241367.json . 
:thumbs_up_sign: I'll continue from #205 on that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138850161\comment-193304372.json . 
:tada: Thank you @klappradla!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138850161\comment-193307891.json . 
awesomeeee!! thanks! :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138850161\issue-138850161.json . 
Validation for the teams model to limit the max. number of students to two. Editing and deleting roles, etc. are taken into account, the validation process takes place in memory, not relying on data yet to be persisted.

ace624f adds the validation for the team model.

dda1f8f adds the classic behavior of firing the team's validations when saving a role, which will add the default Rails error message to the role: **inline-code**. I personally don't like this behavior, as I think it doesn't provide meaningful insights to the user. It rather adds complexity for her to understand what went wrong (_"2 errors prohibited this role from being saved ... Team is invalid"_).

Therefore 50812f9 undos firing the team model's validations when saving a role and instead displays the team's own error message in the role's form, if adding/editing a role does not suit the constraints of the team the role is connected to. As the **inline-code** button in the team's show view is just a shortcut duplicating the behavior of the normal **inline-code**, the team-context is obvious anyways, so I consider showing the team errors more useful here.

If you don't like this approach, you can either just discard the last commit (50812f9) or tell me to rework it. If you like it, I would further suggest to fully ditch the **inline-code** button as it is available in an approachable way within the team's form anyways.

9c349da fixes some minor problems I ran into when bootstrapping the project.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-138850161\pr-61859619.json . 
Validation for the teams model to limit the max. number of students to two. Editing and deleting roles, etc. are taken into account, the validation process takes place in memory, not relying on data yet to be persisted.

ace624f adds the validation for the team model.

dda1f8f adds the classic behavior of firing the team's validations when saving a role, which will add the default Rails error message to the role: **inline-code**. I personally don't like this behavior, as I think it doesn't provide meaningful insights to the user. It rather adds complexity for her to understand what went wrong (_"2 errors prohibited this role from being saved ... Team is invalid"_).

Therefore 50812f9 undos firing the team model's validations when saving a role and instead displays the team's own error message in the role's form, if adding/editing a role does not suit the constraints of the team the role is connected to. As the **inline-code** button in the team's show view is just a shortcut duplicating the behavior of the normal **inline-code**, the team-context is obvious anyways, so I consider showing the team errors more useful here.

If you don't like this approach, you can either just discard the last commit (50812f9) or tell me to rework it. If you like it, I would further suggest to fully ditch the **inline-code** button as it is available in an approachable way within the team's form anyways.

9c349da fixes some minor problems I ran into when bootstrapping the project.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-193973354.json . 
Awesome, thank you so much for working on this, @alicetragedy! What was the reasoning behind the drop down menue for the financial info? I'm not sure if that actually would fit the case... because if we give only let's say 1200-1300, but someone might only need 1250, wouldn't that be a bit of a pity that applicants can't specify this? 

Wdyt? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194186934.json . 
@anikalindtner as far as I remember (however, this conversation is pretty far away, so maybe someone will be able to fill in the blanks) we decided against a "set amount" and for a range, and wanted to change the question to be more general (something along the lines of "how much is needed in your city") because we felt that a) asking for students to break down costs would be too intrusive and b) we had the idea of having the students themselves look up in a calculator the living costs for their own city. 
this could be paired with an extra field where they explain any additional costs they may have (maybe due to childcare, disability issues, or rent split with a partner), and we calculate accordingly if needed / if we feel that it's necessary.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194188186.json . 
a menu with set values also means we can specify a range for the scholarships, which was important to us. ie. right now an applicant could just write $2000 if they feel like it, in a dropdown we could have $1500+ for everything above, and they'd need to specify why in a separate field. Either way we decide to go, I'd like to have one field that is specifically just for an integer (number) so that it's easy to find when looking through the applications, and stick all the extra explanations/calculations into a text field. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194191554.json . 
@alicetragedy ah yes, i remember. okay, so what we could do is have them give a monthly number in one field and post the link from URL for their city next to it so that they'll know how we'll calculate their stipend. They can then add additional costs if their life demands are higher in an extra field. 

I think the range is a bit tricky, but probably best for us to process? So I'd say let's have all numbers from 100, 150, 200, 250, 300, 350 up until 1500 and then 1500+. We should also make clear that we use USD as a currency. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194238559.json . 
@anikalindtner okay, then I will have two fields:.
a) range of USD from 100 to 1500+ (in 50 increments) with hint linking to cost-of-living site
b) a text field where they can add any additional information that might be relevant.

does that sound reasonable?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194249427.json . 
@alicetragedy sounds good! i'd actually make them paste the link to numbeo themselves into an extra text field for the city they are living in, just so they'll know what it says about their living costs and if that's different to them, they can comment on that. or is that too confusing? what do you think?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194260189.json . 
@anikalindtner I don't like the idea of having three fields for the financial information. I'd see us posting it as a hint basically a way for them to calculate that stuff on their own using the calculator ;) maybe if we need cross-checking, we can have them post the url in the text field.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194261050.json . 
@alicetragedy okay sure! i understand that! fine by me :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194261259.json . 
awesome! thanks for all your feedback @anikalindtner, it really helped. :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194409437.json . 
It's a good idea to make the **application_money** field an integer one. What do you think about dropping the free-form inline-code column from the DB? It may contain some sensitive personal data so it'd be good to flush it anyway.

I see a (small) problem with **application_language_learning_period**: we allow them to apply with two different projects and there may not be a one-size-fits-all answer for both of them.

Other than that: looks awesome! :ok_hand: :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194413928.json . 
@carpodaster yes, I think it's good to stick to actual integers for that field, too. 
I'd still like to have a separate text field for financial stuff, in case they need to specify certain "special circumstances". However we can also drop inline-code and create a brand new column (so all the info from the previous column we had is flushed) or just.. get rid of all the sensitive data we've had in there so far. Or do you disagree with this and think we should scrap it completely?
regarding the inline-code: yes, I briefly thought about that before adding it. I decided to still go ahead, because I felt it made give us some extra insight in the application, but it's an arbitrary decision I made and I understand how it could actually cause more havoc than anything else — happy to change or remove it (we can also redirect that to be the learning time for their primary project or whatever).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194470324.json . 
Sorry Laura, I misread one of the diffs so that I thought the field would be removed from the form. That's why I suggested removing it from the database also. Nevermind then – these are totally not the droids you are looking for

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194470527.json . 
We have merge conflicts now, shall i (try to) resolve them manually and merge?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194471104.json . 
that would be great @carpodaster :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\comment-194474563.json . 
:balloon: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\issue-139011943.json . 
This pull request has several improvements to the application form, including:.
- adding age dropdown
- adding goals and motivation text areas
- adding a programming background text area
- adding a dropdown about learning period of **language of chosen project**
- removing banking info
- adding a field for team info on working together
- revamping the look of the form by adding proper headings and replacing some radio buttons with dropdowns
- financial info as a dropdown with ranges (with additional text box for details if needed)

What is (in theory) still missing:.
- programming skills haven't been changed (input needed)
- requirements as checkboxes

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139011943\pr-61935378.json . 
This pull request has several improvements to the application form, including:.
- adding age dropdown
- adding goals and motivation text areas
- adding a programming background text area
- adding a dropdown about learning period of **language of chosen project**
- removing banking info
- adding a field for team info on working together
- revamping the look of the form by adding proper headings and replacing some radio buttons with dropdowns
- financial info as a dropdown with ranges (with additional text box for details if needed)

What is (in theory) still missing:.
- programming skills haven't been changed (input needed)
- requirements as checkboxes

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139517707\comment-194199483.json . 
Hi @anyangocynthia, could you give us more information about this? What's the team id (or your user name, team name, or anything we can find the team by), and which steps did you go through that led up to this error? Are you getting any error message?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139517707\comment-194201337.json . 
I had created a team profile last year but did not apply for RGSOC , I was editing the same team since i am applying this year . So the team profile had a different github organization and twitter accounts , once i press the edit team section , I get all the other options for editing the team members , name etc but not the github and twitter accounts . 

Unfortunately I destroyed that team and created another one .

There is no error message 
oops closed this issue by mistake :-(

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139517707\comment-194216872.json . 
@anyangocynthia so, I just looked into it. This is not an error — the github and twitter account for the team can only be added after the team has been officially accepted. We don't expect students to provide that info before that. hope that helps! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139517707\comment-194240191.json . 
Yes it does . Thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139688324\comment-194488236.json . 
!post-124-0-24949000-1317876733

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139688324\comment-194488262.json . 
Ok, »no help« is a bit too harsh ;)

We should remove everything that's likely to change and keep it to the bare minimum on how to use the site. And where to get further assistence.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139688324\comment-194514241.json . 
I'm happy to take this on if no one volunteers, but I think it's also a nice issue for newcomers, so I'd love to see if maybe @Nattivolk or Vi are interested in doing this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139688324\comment-194723965.json . 
I can do this today after work. I'm just not sure, what is likely to change. 
Will write a draft and then it would be nice to get some feedback first. Are there some questions which come frequently and we should have answered there additionally?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139688324\comment-194729831.json . 
Hey @Nattivolk, great, thanks for jumping on this one :)
We get a lot of questions that are often team-specific (and which, in theory, are often answered in the guides..) so I wouldn't turn the Help page into a FAQ. 
But info regarding filling out the information about the teams might be good. I will take a look at what we might need exactly in the afternoon and post it here.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139688324\comment-194731313.json . 
one thing that comes to mind: information that needs to be filled out is dependent on the stage the application is in (and on whether the team has been accepted or not) ie. I think ( @carpodaster please correct me if I'm wrong) teams cannot fill out their team github handle and team twitter account and, possibly, team info, until the application has been sent off and they've been selected. 
This info, for example, might be important.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139688324\comment-195546407.json . 
@alicetragedy I haven't digged through the code base to check whether or not editing their social accounts is possible. I don't remember having coded it, but maybe it was already there.

The help page is of more help now thanks to @Nattivolk and #395.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139688324\comment-195556317.json . 
@carpodaster just noticed it because we got a question about this from an applicant :) 
I just double-checked and the github/twitter stuff for teams can be edited under the inline-code condition, so updated the help page accordingly. :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139688324\issue-139688324.json . 
URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139714119\comment-194532142.json . 
Huzzah! :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139714119\comment-194533280.json . 
@carpodaster this has been bugging me SO much in the last couple of weeks. RAGEFIX :joy: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139714119\issue-139714119.json . 
- consistent back navigation
- styling of some links to button
- adding cancel buttons to make UI consistent

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139714119\pr-62303784.json . 
- consistent back navigation
- styling of some links to button
- adding cancel buttons to make UI consistent

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139723495\comment-194548519.json . 
I'm going to take a look at this pull request tomorrow afternoon (ping @carpodaster && @ramonh if you get there before me)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139723495\comment-194940763.json . 
I've added some comments on things that need changing.. and I think after this, we'd be ready to go. could you make the changes tonight? You can ping me if you need anything!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139723495\comment-195062885.json . 
Changed the condition

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139723495\comment-195490735.json . 
yay! thank you for doing this @Nattivolk, I'm sooo happy it's checked off the list :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139723495\issue-139723495.json . 
Wasn't sure what the condition should be, so I left it there for admins. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-139723495\pr-62308673.json . 
Wasn't sure what the condition should be, so I left it there for admins. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140025041\comment-195545964.json . 
Cool, thanks @Nattivolk !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140025041\issue-140025041.json . 
Only changes some small things to the layout and fixed the broken links.
Regarding the content I found "Your team's sources" a bit confusing and as it is saying that it doesn't do anything for now, should we remove that part?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140025041\pr-62465426.json . 
Only changes some small things to the layout and fixed the broken links.
Regarding the content I found "Your team's sources" a bit confusing and as it is saying that it doesn't do anything for now, should we remove that part?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140038143\comment-195124357.json . 
Yayyy! Thank you :sparkles:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140038143\comment-195233088.json . 
So good! Yay consistency!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140038143\issue-140038143.json . 
In teams, application drafts, conferences, mailings and seasons.
While trying to understand the application process I noticed these where all different everywhere, can't be unseen :upside-down_face::sparkles:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140038143\pr-62473704.json . 
In teams, application drafts, conferences, mailings and seasons.
While trying to understand the application process I noticed these where all different everywhere, can't be unseen :upside-down_face::sparkles:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140125543\comment-195284923.json . 
I'll take a stab at this tonight.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140125543\comment-195298255.json . 
Cool, thank you @michaelem. I forgot to mention: please base your work on the inline-code remote branch. Only that branch has the foreign keys inline-code and inline-code (or some such) on inline-code. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140125543\comment-195583944.json . 
@michaelem I've merged the current state of inline-code into inline-code just now. I plan to keep the feature/integration branch, though: it's set to auto-deploy to staging so it's probably still better to base everything against inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140125543\comment-195594238.json . 
Ok, I'll use application-process-2016 then!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140125543\comment-195619098.json . 
This is done, thanks @michaelem 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140125543\issue-140125543.json . 
- [x] A link to inline-code (projects#index) should be displayed during the application phase
- [x] Projects should list how many applications (1st and 2nd choice) already reference them

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140301799\comment-195570294.json . 
Thank you for this, @klappradla!

A user can actually be a student in more than one team, just not within the same inline-code. Can you accomodate that in this PR?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140301799\comment-195570769.json . 
Oh, didn't think that far, thanx! I'll update it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140301799\comment-195603857.json . 
Been running only the model specs for the whole time without realizing it :see-no-evil_monkey:.
My brain is behind anything today, I have to get off computer screens. I'll close this PR and open a new one once I made a proper approach.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140301799\issue-140301799.json . 
Add ability restriction to prohibit students from creating a second team if they already got one. This also hides the inline-code button on the team's index page if a logged in student-user already has a team (as discussed in #205).

From what I read out of the specs and other models, a user can only have one **inline-code** role, so I took this as a basis to decide whether she can create a new team or not. Hope I am on the right mental model here.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140301799\pr-62608626.json . 
Add ability restriction to prohibit students from creating a second team if they already got one. This also hides the inline-code button on the team's index page if a logged in student-user already has a team (as discussed in #205).

From what I read out of the specs and other models, a user can only have one **inline-code** role, so I took this as a basis to decide whether she can create a new team or not. Hope I am on the right mental model here.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140306434\comment-263143511.json . 
Is this still needed? Or do we go with the current way of 'showing the conferences during the active season'? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140306434\comment-272685924.json . 
I think we can close this – at least for now. Conferences are seasoned and by that, the season of an attendance can easily be infered.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-140306434\issue-140306434.json . 
The inline-code (conference feature) does not yet have a reference to the inline-code it is valid for.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140324570\comment-195615398.json . 
That looks might good, thank you @michaelem !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140324570\issue-140324570.json . 
As discussed in #397 this adds counts for ApplicationDrafts that reference a project in the Projects index and in the Project show. Currently the state of the ApplicationDraft is not taken into account (should it be considered?).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140324570\pr-62622134.json . 
As discussed in #397 this adds counts for ApplicationDrafts that reference a project in the Projects index and in the Project show. Currently the state of the ApplicationDraft is not taken into account (should it be considered?).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140328091\issue-140328091.json . 
Basically everything that happens after clicking 'Apply'. -> inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140328269\comment-196279634.json . 
The above PR took care of the inline-code and inline-code fields, which I found were new and unvalidated in the schema. @carpodaster or @alicetragedy do you know which ones I might be missing? I went over them but didn't find any missing ones

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140328269\comment-196299833.json . 
@ramonh if this also takes into account application fields that are part of the student model, you can find all the added ones here: URL.
(check the inline-code, the fields that have been added in the inline-code bit)
hope that helps :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140328269\comment-196300526.json . 
Ah super, thank you @alicetragedy! I'll look into that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140328269\comment-196430687.json . 
Hey @alicetragedy! Just dug into it, and I think these are already validated. They were added to the required fields for students here, which are then validated and tested by the inline-codes here and here, respectively.

I think that's therefore already resolved! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140328269\comment-196462120.json . 
you're right — then I guess the issue can be closed, right? :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140328269\comment-196464215.json . 
I think so, yes!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140328269\issue-140328269.json . 
As discussed on Slack: there is a validation context called inline-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140356692\comment-195699905.json . 
This sounds interesting. I'm thinking this is related to seasons. Can you check in the rails console which season is referenced by your Unicorn team? It's probably the 2015 season so I guess we're missing a season scope … _somewhere_

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140356692\comment-195713628.json . 
Hm, that error message is one I added for confirming teams. It seems that although you have two members, the state of the team never transitioned to inline-code.

Is it possible that you built the team before pulling in the new changes? This tells me in any case that older teams will run into this issue.

Maybe having a state machine is overkill and we need to just check that two students are present.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140356692\comment-195800477.json . 
@ramonh yes, I did build the team before pulling in the changes (as outlined above already, hehe). And that's why I thought it would be significant for us maybe — as we already have teams that were created before you added the team confirmation, meaning they will run into this same problem.
@carpodaster the season that was referenced was first another, older, season (which, by the way, I wasn't finding anymore) and I've now changed it locally to the current one. this has obviously not helped confirm the team though, so I have manually confirmed it to get around it.

Maybe we should keep this issue open — we could even test this particular issue during testing tomorrow.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140356692\comment-195801143.json . 
Ah sorry @alicetragedy I misread the above. Yeah I think it makes sense to keep this open. I'll be looking into fixing this confirmation issue.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140356692\comment-195802247.json . 
@ramonh no worries, maybe my issue wasn't so clear — it was early this morning :p 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140356692\comment-195802743.json . 
Hehe I doubt it, looking back, it was well clear :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140356692\comment-196502324.json . 
Hey @alicetragedy! I've taken a stab at fixing this in #417 by removing the state and dynamically checking if a team is confirmed by its number of students.

Could you please give it a try and see if the issue persists?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140356692\comment-196523288.json . 
@ramonh sorry, looks like I'm late to the party :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140356692\comment-196523733.json . 
No worries! should hopefully be fixed

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140356692\comment-196737937.json . 
okay, I'd suggest closing for now and reopening if we see anything wrong with teams. but you're right, it should be fixed thanks to your PR :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140356692\issue-140356692.json . 
This is something I only just noticed after pulling in the new changes onto my local / dev setup and it might be something that we will not necessarily be able to reproduce in the production environment.. but better be safe than sorry, since teams have already started forming for this year.

I have a current team (consisting of me and Sara) which I use for testing the UI and such; first and foremost, it seems like my application (which I used up until now for testing) is gone but that might be due to changes we've been doing recently. 
When the season is set to "application phase" and I click "Apply now", I get a notice that suggests I don't have a partner. My partner, however, is clearly visible in the below screenshot.

<img width="1171" alt="screen shot 2016-03-12 at 08 08 55" src="URL.
<img width="1188" alt="screen shot 2016-03-12 at 08 10 14" src="URL.

As I wrote above, this might be something that is due to the recent changes with the state machine and so on, just thought I should file it as an issue anyway — if my already existing team is impacted by the extra "guards" we've added, chances are we need to re-confirm / fix all new teams currently found in production. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140404191\comment-196534642.json . 
Hey @klappradla – thank you! Especially for the fine-grained testing, it really works towards our oldest open issue: #6 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140404191\issue-140404191.json . 
Ability rule to prevent students from creating two teams for the same season.

I did not yet include anything on rules to prevent students from editing roles / edit their own rule when creating a team. Defining CanCan abilities with blocks is kind of a hassle when combined with inline-code and inline-code, making either the view or the rules incredibly ugly :see-no-evil_monkey:.

But I'm sure there's a solution for it - I'll dig deeper. Until then, here's the team-rule first.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140404191\pr-62647898.json . 
Ability rule to prevent students from creating two teams for the same season.

I did not yet include anything on rules to prevent students from editing roles / edit their own rule when creating a team. Defining CanCan abilities with blocks is kind of a hassle when combined with inline-code and inline-code, making either the view or the rules incredibly ugly :see-no-evil_monkey:.

But I'm sure there's a solution for it - I'll dig deeper. Until then, here's the team-rule first.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140404191\pr-comment-56070064.json . 
I wasn't aware that there is a inline-code in CanCan(Can) :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140414425\comment-196298917.json . 
I've modified the form for inline-code in 793653728040ba280cf13dfb8c5769b2fe8f8142 and updated the deadline for the 2016 season. Feel free to edit the deadlines.

Note: It's not available on staging … yet.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140414425\issue-140414425.json . 
Before deploying to production, we should change the deadline for submitting the applications. According to our timeline, if we open applications on Monday, we will close on April 10th — suggested time 17:59:59 UTC?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140421450\comment-195997664.json . 
@ramonh If possible, could you make a new PR against inline-code instead? If that's not possible or too much trouble, we can also merge this and then merge master into it — it's just that the branch currently deploys automatically to the test app Carsten set up, so it makes it quite easy for quick fixes :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140421450\comment-196004525.json . 
awesome, thanks for this @ramonh! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140421450\comment-196083097.json . 
Sorry I couldn't get to this request sooner. :broken_heart: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140421450\comment-196083157.json . 
@ramonh no worries, it all worked out fine! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140421450\issue-140421450.json . 
This addresses #402 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140421450\pr-62653889.json . 
This addresses #402 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196016541.json . 
cost of living fixed: URL.
error messages: removed banking info, added money, achieve, how did you get into programming URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196045636.json . 
@anikalindtner this -> URL should at least make the flash messages (the "pretty" error or info boxes) more bearable by adding a small button that can be used to dismiss the message.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196057185.json . 
Nice to have:.
The order in which the errors are listed is not the same as the form and that causes a bit of confusion.

images here: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196193938.json . 


That is WAI and is/was part of #205 + a85416d72d8c45a82f0111a8e15a11c123cd2940; the radio buttons are disabled.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196194340.json . 


The skill level does get saved, it just doesn't pre-select the radio buttons. At least I can reproduce this problem locally now (which wasn't the case last year when we got all the bug reports). I'm still at a loss why that is so.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196299320.json . 


This, too, is subject to #380

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196299895.json . 


This is quite a task and also quite brittle in respect to future changes. I wouldn't want to assign resources to it right now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196300027.json . 


I think I need a more concrete example for that

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196327999.json . 


I don't think we can add this. For example the 2nd tab is not really a "next" tab since a student cannot edit the fields of their pair.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196336415.json . 
@carpodaster: if you click on "edit" you can see people added to your team that you didn't add. Like:.

!screen shot 2016-03-14 at 15 30 03

I know that this looks a bit different for me, since I'm also an organizer, but my pair (who's a friend of mine and not an organizer) could also see this. 
- as for the "doesn't save skill level": 
  I'm not sure I understand your answer, but this happens: 
  I select my skill level like this:.
  !screen shot 2016-03-14 at 15 32 21

After I click on "safe as draft", I get this:.
!screen shot 2016-03-14 at 15 32 31

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196361783.json . 
@anikalindtner skill level issue: What I meant is that the underlying database record gets saved. The form just doesn't pre-select the value present in de DB

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196362159.json . 
@anikalindtner Can you give me the ID of the team in question please? Or its direct URL?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196362189.json . 
@carpodaster @anikalindtner it's weird, because for me, locally, it works. technology, how does it even.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196387351.json . 
@carpodaster URL 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196522769.json . 
@anikalindtner I just double-checked the info regarding your team in staging, and it seems like your team wasn't created yesterday, but it was created last year. So, I'm guessing that's why you have those roles in there — they were added last year to your team, and when you logged into the app you didn't create a new team but just added a student to your currently existing team. Could that be it? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-196556839.json . 
@alicetragedy ah yes! exactly! Hat tip ms sherlock <3 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-198239626.json . 
We are live!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-198247661.json . 
so are the bugs! they've been released into the wild :trollface: :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-199354595.json . 
I'd love to keep track of this. and if someone has a minute they can fix some of the bugs listed here. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-199359402.json . 
@anikalindtner The must haves are fixed. I've commented on some of the others and among them are a few inline-codees (because they're not applicable). 

For text corrections: suggestions for better wording are most welcome.

If there are items left in this list, please add them as new issues. It's a lot easier to keep track of an atomic issue than aggregate ones like this.

This said: we are currently a bit swarmed with issues and I'd rather have issues closed that are of no immediate concern than having our issue / feature request list grow over 5+ pages.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-199360149.json . 
will take another look at the text-based fixes and adding the link to the team in the navigation, but I think that's all we will be able to deal with this year (ie. no progress bar, no pagination because it doesn't make sense from a UX point of view).
as @carpodaster said I think immediate items can be added as new issues. the text-based corrections will be fixed today still by me, so no need to add them separately! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-199360738.json . 
awesome, laura thank you. feel free to close this then again after today. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\comment-199366416.json . 
Note: "state that all fields are obligatory" is not required anymore because a) not all fields are obligatory and b) we have finally fixed all of the error fields, so everything is showing properly now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140513382\issue-140513382.json . 
## MUST FIX
- [x] can't submit a completely filled out application, get an error that the team should have at least one mentor
- [x] cost of living link-> faulty 
- [X] ~~add buttons "next" and "back" to bottom of page, so indicate that you have to go through the next tabs in order to go through application~~ 
- [x] check validity (assigned to @michaelem, improved in URL.
  - [x] should only be visible on last tab page
  - [x] should SAVE & check 
- [x] doesn't save skill level (URL.
- [x] doesn't give error message if not filled out:.
  - [x] what do you want to achieve
  - [x] how did you get into programming
  - [x] how much money do you need (maybe just delete the "--" field)
- [X] ~~can't change roles from e.g. student to coach: If I try to edit that team, changing anasofiapinho from student to coach or from coach to student, the mouse doesn't let me select.~~
- [x] "Banking Information (1st student) can't be blank" -> field doesn't exist 
#### TEXT (assigned to maria)
- [x] "Some of the guidelines are specific to ruby, but most are language-agnostic." - needs to be changed 
- [x] "For how many months have you been learning the language of your chosen project?" - doesn't mention secondary project 
- [ ] ~~obligatory fields: state that all fields are obligatory~~
- [x] "Tell us about your Rails Girls and community involvement."-> change to all initiatives 
- [x] "minimum money" error message shows when you don't fill out the OPTIONAL text field underneath. 
#### UI: ERROR MESSAGE: (#408)
- [x] "4 errors to go before you can apply:" <- this is invisible (red on red).
- [x] error messages should tell you in which tab the info is missing 
- [x] error messages not as a summary, but in selected fields (some error messages are shown directly in the field, some are not. this is confusing)
- [x] some of error messages refer to ‘1st student’ and '2nd student’, and some - to ‘student0’ and ‘student1’. it would be nice if all messages looked the same (e.g. refer to ‘1st student’ and '2nd student’)
## ON THE FENCE
- [ ] ~~add pagination (e.g. 2/4) to bottom of page to show which tab you are on~~
- [x] if i go to edit my team, i have random team members filled in but no roles selected 
- [ ] 750-1000 words for essay: add word count to text field? 
#### TEXT
- [x] "Since this is a self-guided program, how are you planning to work together?" -> this might need a bit more explanation. (in the works, see URL.
- [ ] 1st student: not explained, who is 1st who second <- hard to fix
## NICE TO HAVE
- [x] "Please don't mention your name, age, or current location." -> should be bolder, on top of the text field
- [ ] "my team" should be next to "my application" in menue 
- [ ]  ~~show progress (3/10) (make tabs green/ red for errors)~~
- [x] It makes more sense to open links to Help and Guides in a new tab (e.g. Application guide on the Application form).
#### TEXT
- [x] ERROR MESSAGES: red / black can't read -> should be black on white with a red border or sth. 
- [x] "For volunteer teams only" -> confusing. text needs to be changed
- [x] error message: should not be "please add another sutdent", but "please edit your team first"
- [x] step by step process: 1. log in, then edit your team
- [x] financial numbers: 1500+ is missing

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140516190\comment-196022286.json . 
I'm probably at least touching these while fixing #202.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140516190\comment-196022343.json . 
@michaelem awesome! so for now we'll wait until you are finished and then see what's left, right? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140516190\comment-196022521.json . 
yepp, since everything else probably will end in merge-conflict hell :see_no_evil: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140516190\comment-196715743.json . 
The thing with the fields (first on the list) is still a bit tricky, but we're looking into a fix. :see_no_evil: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140516190\issue-140516190.json . 
The error messages should not be a huge text field as it is now, but just show how many errors you have and where. All error messages should be shown directly in the fields where the error accurs (this is already the case for _some_ errors). 
### My proposal:.
- [ ] all errors need to be shown directly in the field where the error occurs 
- [x] error messages should tell you **where**, that means **in which tab the info is missing**. This can be either:.
  - in the summary:.
block-code.
block-code.
    
block-code.
block-code.
    
block-code.
block-code.
  - or shown in the tabs directly (e.g. by having a red border around the ones who have error messages, so you know where to look)
block-code.
### MUST FIX::.
- [x] "4 errors to go before you can apply:" <- this is invisible (red on red).
### NICE TO HAVE
- [x] change black on red writing to black on white writing and add only red border / or change font to red on white without a border. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140526325\comment-196055508.json . 
@alicetragedy what do you think?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140526325\comment-196055995.json . 
This is definitely a lot better, especially when it comes to locking the validity check — thanks for this! 
I did first a quick review of the code which looked fine :+1: but when running it locally on an invalid form, clicking "Check validity" doesn't show me any error message and shows the success notice "Your application draft was saved." 
In itself, this isn't a huuuuge problem since we had some duplicate messages anyway but a) I want to find out why the error messages are not being shown anymore and b) because of how the required fields for the student, which are attached to the student model, are set up (see in inline-code), field validations are not shown in the "About You" tab the same way they are in the other ones. This is sort of a bummer, and I am not sure how to fix it. :confused_face:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140526325\comment-196056414.json . 
as for a) I think I know why: the button is now inside the form tag and triggers a submit of the entire form. I think I can just switch to a link though.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140526325\comment-196058367.json . 
at least a) should be fixed now :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140526325\comment-196069201.json . 
yay!!!!! thank you @michaelem :tada: :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140526325\issue-140526325.json . 
This adds a separate tab for the application and validity buttons in the application draft form. Further it disables the 'apply' & 'check validity' if the user changes anything in the form. This takes care of #202 (in a way).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140526325\pr-62682311.json . 
This adds a separate tab for the application and validity buttons in the application draft form. Further it disables the 'apply' & 'check validity' if the user changes anything in the form. This takes care of #202 (in a way).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196056251.json . 
When this is done we should add "The how-to-apply guide you'll find in our help section." After "Please read our Student Application Guide"

!screen shot 2016-03-13 at 22 28 02

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196056275.json . 
this is AWESOME!!!! thanks! <3 
(we might have to change a couple of screenshots in the future if we add a fifth tab, so I might ping you about this again)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196056357.json . 
sure! ping away! :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196056703.json . 
If no one grabs this task by tomorrow, please ping me about it — happy to deal with it then. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196190947.json . 


I'm thinking: is it better to have this on the public website instead of the Teams App? The teams app is not exactly the please where we think about updating copy. E.g. the help section lay there orphaned for quite a while and I fear that will happen again.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196202730.json . 
@carpodaster yes and no. Since this is quite specific to the teams app, I feel like info that is relevant to the use of the teams app (how to log in, how to look for a partner using our app, how to fill out the application form properly, how to edit your profile) should be in there somewhere. You're right in pointing out that we hardly ever update copy on the teams app — maybe this is something we (not wanting to force anyone into this, so maybe I should just say I) should focus on a bit more. We've actually had this conversation before, about where information that is specific to students (and not just possible applicants) should go. 
Another difficulty I have with adding this info to the website: people are already confused as it is when coming to the website to look for information, and I feel like adding this sort of extra information might confuse them even more. I'm happy to have a discussion about this and see pros and cons of both approaches :)
This is kind of a "structural" question I guess (and might help with how we want to structure the navigation in the teams app as well): do we want to separate areas in the teams app by role? ie. if you're an applicant / student, these are the sections that might be relevant to you. I think if the overview was a little better (not wanting to criticise anything about the teams app currently, but we all know how it's grown into a "monster"), it would be easier to remember to make such updates.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196205262.json . 
@alicetragedy Those were convincing arguments – let's keep it on the teams app! I really only fear for outdated (and thus: outright _wrong_ ) information since I know I for one don't have static website copy on my mind when I'm working on the teams app; the code just changes so much faster than I think we can keep up with on-page help :cry: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196207975.json . 
@carpodaster yes, I know. it's very frustrating, for devs and orgas as well as students :confounded_face:For example, the help page said that you could change team github and twitter info on your edit profile page, but as it turns out, this cannot be done until you are a selected team. Small issues like this do slow us down, so maybe this is a good point for why we might want to try to have better documentation for the teams app. I'd love to hear your input on this! And yes, I know that for many people tests = documentation ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196449247.json . 
@alicetragedy I've updated the gist and added the fifth tab in the screenshots and the text. 

I also have the images, if you want to have them in the repo:URL.

 they have the exact name that they have in the gist, so it should be easy to edit the urls. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196512381.json . 
@anikalindtner strange, I can't access the images. sadface :(

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196560053.json . 
@alicetragedy sorry! should work now. could you check pretty please? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-196703752.json . 
it works!! 

!tumblr_m9dlcwp2yr1qiyseco3_250

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-197505249.json . 
@alicetragedy This has been closed by #426, right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\comment-197506082.json . 
yes! <3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140531184\issue-140531184.json . 
I wrote an application how-to, but I can't get the app run locally, so I need some help by someone who can add this content to the help section:.
- URL.
- URL.

Who can take this on? :sparkling_heart: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140534955\comment-196078595.json . 
done in URL The conferences now are not visible when editing one's profile, until the start of the season.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140534955\issue-140534955.json . 
They just shouldn't be there right now; until URL is handled, we have to yolofix this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140535080\comment-196261158.json . 
@alicetragedy this is done now that PR #416 has been merged, right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140535080\comment-196262882.json . 
yes @carpodaster! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140535080\issue-140535080.json . 
I noticed earlier today that there is a mismatch between the fields in the application form fields in the edit profile page, and the ones in the application. I am in the process of getting it fixed! :muscle: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539305\comment-196192737.json . 
Hey @Nattivolk - thanks!

The reason behind 1) is that a inline-code record is indeed created w/o an email address at first: the rest gets pull from the GH API asynchronously. We should improve that, though. A validation context should fix that: the easy win would be to allow a inline-code to _created_ w/o an email address, just not _updated_

2) Making the GH-handle of a created inline-code immutable sounds like a really good idea!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539305\comment-231724703.json . 
hi @carpodaster! is this what you have in mind? (github_handle taken out of the params, field disabled; validation on email) 
!gh_greyedout_email_validation

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539305\comment-231790673.json . 
Hey @izuroxx. Yes, looks good! The email validation should only kick it when _updating_ the record though (for reasons stated above). But we can discuss / check on that in a PR.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539305\comment-232274482.json . 
@carpodaster there's one more thing :) - while finding all occurrences of Github_handle fields, I also found them in /teams/:id/edit, and also editable - you can change team members through changing the g_h field - would you like those fields to be disabled, too?
!teams

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539305\comment-232959961.json . 
@izuroxx I think these should be left as editable so that students for example can add their team members. I hope I understood correctly

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539305\comment-233078855.json . 
I think Ramon is right, as far as teams in current season are concerned. Then again, I can edit _everything_ in my team from _last_ year. Maybe we should 'freeze' team info from previous seasons. Or is that a problem, @anikalindtner @carpodaster ?  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539305\comment-244963453.json . 
@izuroxx fixed the github_handle mutability! :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539305\comment-350042100.json . 
Can we extract a new issue, with only the first checkbox? @carpodaster .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539305\comment-350052481.json . 
@f3pix let‘s do it!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539305\comment-350083322.json . 
Closing this. The leftover checkbox nr 1 is moved to #885. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539305\issue-140539305.json . 
- [ ] github handle and email have a star i guess for indicating a mandatory field, but i can save without an email address. This happend, because I deleted the email. Might happen, if a candidate wants a different email, deletes it and then forgets to add the new one. 
- [x] I'm not sure, if this is wanted, but I can also change the github handle. As I signed in with a specific account I don't know if we want to allow to change this field?
  Same here, I just edited the github account to a different one and could save the application

Possible fix: Github handle used for sign up should not be editable and email should be verified.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539764\comment-196075900.json . 
Probably on hold due to URL.
But important as soon as we open the conferences again afterwards

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539764\comment-196078348.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539764\comment-196078938.json . 
For now I've set it so that editing the conference stuff in the profile is not visible until the season starts (July 1st) so we have a little bit of time to get it fixed. thanks for noticing & creating the issue! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539764\comment-263239973.json . 
Copied from PR 414
I worked on a solution that:.
- sets a limit to the number of permitted attendances (in the inline-code method)
- Hides the 'add conference' button for users who has already 3 attendances saved to their profile   
- Adds an flash alert when users wants to save their profile with more than 3 conferences.
The count of the attendances is updated only when the parent is saved. This means an user is able to add 4 conferences in the Edit Profile form, and will not be notified that 3 = max until after submit.
This is not super user friendly.

I stopped working on it, because but I am having second thoughts about the server side. It is making the code less flexible and more rigid, for no good reason.
Now I think it would be better to solve this at the client side with some nifty javascript. The current 'Add button' is probably built in by the nested_form gem. It must be possible to make it check for the number of attendances as well.
 
Feedback and suggestions are very welcome.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539764\comment-271291969.json . 
Note: I've removed this from the application process as I think it's not super important for now. It's enough if this gets solved before the start of the program!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539764\comment-271292996.json . 
Makes sense, thank you! :heart_decoration: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539764\comment-323588870.json . 
Closing this as this is solved via introducing the inline-code model.

<img width="1035" alt="screen shot 2017-08-20 at 16 30 10" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539764\comment-323926282.json . 
:confetti_ball:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-140539764\issue-140539764.json . 
Conferences, it says an applicant should only add max 3 conferences. I could add many more conferences. If 3 is a hard limit, maybe we should not allow adding more?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140545061\comment-196085537.json . 
just waiting for the builds before merging, but this looks good @mkalininait :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140545061\comment-196085815.json . 
Thanks @alicetragedy, the fixes are very humble, but one should start somewhere :)
Next time, should I make such little fixes in a pull request or just push directly in a branch?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140545061\comment-196085951.json . 
@mkalininait any fix that is a fix is a helpful fix :) 
As for the way to contribute: It's really up to you. Usually, for minor changes like this, pushing directly is really not a problem. :) If you'd prefer for someone to review your work, a PR is the way to go.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140545061\comment-196219435.json . 
:confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140545061\issue-140545061.json . 
URL.
Fixed:.
- "Some of the guidelines are specific to ruby, but most are language-agnostic." - needs to be changed
-  "For how many months have you been learning the language of your chosen project?" - doesn't mention secondary project
- "Tell us about your Rails Girls and community involvement."-> change to all initiatives

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140545061\pr-62688287.json . 
URL.
Fixed:.
- "Some of the guidelines are specific to ruby, but most are language-agnostic." - needs to be changed
-  "For how many months have you been learning the language of your chosen project?" - doesn't mention secondary project
- "Tell us about your Rails Girls and community involvement."-> change to all initiatives

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140619794\comment-196225610.json . 
:+1:.

(On a related note: we definitely need a solution for #184)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140619794\comment-196228738.json . 
@carpodaster absolutely :see_no_evil: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140619794\issue-140619794.json . 
This updates the "Edit Profile" section with all the new (student-specific) fields we've added to the application, as described in URL As it's quite a bit of information, improvements to the styling of the page (at least adding some subheadings) would still need to be made.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140619794\pr-62719142.json . 
This updates the "Edit Profile" section with all the new (student-specific) fields we've added to the application, as described in URL As it's quite a bit of information, improvements to the styling of the page (at least adding some subheadings) would still need to be made.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140784599\comment-196522819.json . 
Thanks @ramonh !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140784599\comment-196523042.json . 
And thank you for your help!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140784599\issue-140784599.json . 
This aims to address #403.

Instead of saving the state in the database, we'd instead dynamically check if a team is confirmed by checking if two students are present.

The API stays the same, however.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140784599\pr-62809567.json . 
This aims to address #403.

Instead of saving the state in the database, we'd instead dynamically check if a team is confirmed by checking if two students are present.

The API stays the same, however.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140784599\pr-comment-56069415.json . 
I'd prefer the the inline-code syntax since that puts an object state-change under test. Can you change this to:.

block-code.

? Thank you!

(also the example below)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140784599\pr-comment-56069732.json . 
Hey @carpodaster! Makes sense, thank you for the feedback! I'll fix this and squash it in.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815322\comment-196712157.json . 
whaaaaaa this is so great!! thank you so much @michaelem :sparkles: 

!batman_small

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815322\issue-140815322.json . 
The downside of this is that the helper methods now need to know which tab has wich fields. (So if someone changes the template, they need to update the helper as well.) Fixes #408.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815322\pr-62828245.json . 
The downside of this is that the helper methods now need to know which tab has wich fields. (So if someone changes the template, they need to update the helper as well.) Fixes #408.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815598\comment-196733471.json . 
yep, you are right. I guess this has to do with the student being a coach.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815598\comment-196742175.json . 
Definitely a bug having students be coaches of their own team, thanks for catching this!

I thought it would be helpful for students to see which of their coaches hasn't confirmed yet. Do you think it's better not to redirect to the team's page?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815598\comment-196742548.json . 
@ramonh maybe an alternative would be an error message "Your coaches have not confirmed their membership" with a link to the specific team in there? so the student can go and check out what the deal is, but only if they want to ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815598\comment-196742603.json . 
Yeah, that makes more sense! Thank you @alicetragedy 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815598\comment-196746714.json . 
The above PR should take care of the redirecting. About the second problem, I could restrict students from also being coaches. Of course, if they were students last season and want to be coaches this season, this should be fine. I'll look into whether this is fine.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815598\comment-197008029.json . 
@ramonh did you get a chance to look into this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815598\comment-197021868.json . 
Hey @alicetragedy, I did start but haven't finished yet! Will have a pr ready for tomorrow, hopefully.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815598\comment-197512608.json . 
@ramonh @mkalininait Did the PR  (merged and now live on staging) fix the issue?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815598\comment-198275056.json . 
It should be fixed, @carpodaster. I've tried adding myself as a student and a coach to my team, and had no luck :) 
!screen shot 2016-03-18 at 10 31 25

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815598\comment-200796662.json . 
looks good, I think we can close this. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140815598\issue-140815598.json . 
If my coaches are not confirmed and I submit an application, I don't get any error messages on the Application form. Instead I get redirected to the page of my team.

!screen shot 2016-03-14 at 23 14 04

My application is still available for editing and submitting.

Another thing you can see on this screenshot is that I have two coaches which are marked as confirmed, and I still see the message, that the coaches are not confirmed. We should probably restrict adding coaches, who are already students in this (or another) team.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140824557\comment-273468396.json . 
Tested on Staging, was able to reproduce both bugs.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140824557\comment-273710207.json . 
Sorry for the delay. Fixed the code, need to fix a few tests and then will be done. Working on it this afternoon.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-140824557\comment-273835792.json . 
Sadly I ran into a little problem with number 2: lots of the test code thinks that you can create empty teams. After I changed the minimum requirement to at least 1 team member, 43 tests failed. I tried to start to fix them, but it will take me at least 2 days to fix that everywhere. I would vote to skip number two and just do the first thing. Would that be okay? Empty teams can't apply anyway...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-140824557\comment-273909500.json . 
@bitboxer My problem with empty teams was that once you [accidentally] created an empty team, you couldn't delete it anymore without magic orga superpowers. But I agree, that empty teams don't do any harm actively, and it's not even a common use case. 
Skipping this bug is totally ok for me considering the efforts it requires.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-140824557\comment-276223523.json . 
Tested the issue No.1 locally, it is fixed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-140824557\issue-140824557.json . 
1. When an error happens, all my deleted fields come back.
   For example, I have a team with Student X and Student Y. If I delete Student X and add Student Z, who is already a member of another team, and submit the form, I will get an error, and Student X will appear on the form again.
2. I think we should not allow creating empty teams. Now it's possible.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140923884\comment-196754587.json . 
sorry @ramonh I'm being a pain :D but I'd love for you to make that tiny change before we merge. thank you!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140923884\comment-196764008.json . 
Please never apologize for fixing wording. It's a weak point of mine and I appreciate the feedback! I'll fix it right away

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140923884\comment-196764423.json . 
Just squashed it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140923884\comment-196770891.json . 
awesomeeeee!!! :tada: :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140923884\issue-140923884.json . 
This addresses part of #419 by linking to the team page instead of redirecting to it (Thank you @alicetragedy for the suggestion!)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-140923884\pr-62878463.json . 
This addresses part of #419 by linking to the team page instead of redirecting to it (Thank you @alicetragedy for the suggestion!)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141104922\comment-197225960.json . 
Introducing the ID-index, you end up with the same type of params hash, you'd have with normal rails inline-code helpers and nested attributes: an array that gets converted to a hash like (because that's how arrays are passed as params afaik):.

block-code.

Since fetching the params is bound to the inline-code, I don't see a problem there.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141104922\comment-197228154.json . 
Thank you, @klappradla, for your feedback and for looking into this!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141104922\comment-197230017.json . 
omg. it's fixed? IT'S FIXED?!?!?!!

!taylor-dancing-02

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141104922\comment-197242393.json . 
whoa!!!! 

!confetti_dog

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141104922\issue-141104922.json . 
This PR fixes long-timer #192 in my local setup. It's a simple patchset but I would appreciate an extra pair of eyes to double-check if this introduces a privilege escalation by means of url- or form input forging.

/cc @klappradla @cypher @ramonh @michaelem 

_Edit_: Some background, copied from yesterday's Slack:.





.
#rails-girls-summer-of-code/rgsoc-teams\issue-141104922\pr-62980758.json . 
This PR fixes long-timer #192 in my local setup. It's a simple patchset but I would appreciate an extra pair of eyes to double-check if this introduces a privilege escalation by means of url- or form input forging.

/cc @klappradla @cypher @ramonh @michaelem 

_Edit_: Some background, copied from yesterday's Slack:.





.
#rails-girls-summer-of-code/rgsoc-teams\issue-141104922\pr-comment-56245642.json . 
This makes the inline-code hash look like this:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141127315\comment-197440674.json . 
seriously I'm at the point where I don't really care how hacky it is ;)
I'm happy to merge this!!

On another note, do you think it might make sense to remove either the "There are still some fields missing" or the full list of errors, if we have the indications on the tabs and the input fields themselves? I know that you're a pro-error-list, so I don't want to insist, if you think that might be better from a UX point of view. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141127315\comment-197492072.json . 
I've moved from the inline-code into the inline-code area ;)  I will remove it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141127315\comment-197495837.json . 
!smalltypingcat

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141127315\issue-141127315.json . 
~~ **Note: This PR is based on #422 and has to wait until that one is merged.**~~  (_Update: Merged_ :white_check_mark: )

It's a really hacky thing and needs some cleaning up in a follow-up session. It also adds blank select box options (see the commit msg in b9aec581f39c38a6d49953a92f9f9424992ed96a for its rationale). This is what it looks like now:.
## <img width="449" alt="bildschirmfoto 2016-03-16 um 00 23 25" src="URL.

<img width="429" alt="bildschirmfoto 2016-03-16 um 00 23 41" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141127315\pr-62993521.json . 
~~ **Note: This PR is based on #422 and has to wait until that one is merged.**~~  (_Update: Merged_ :white_check_mark: )

It's a really hacky thing and needs some cleaning up in a follow-up session. It also adds blank select box options (see the commit msg in b9aec581f39c38a6d49953a92f9f9424992ed96a for its rationale). This is what it looks like now:.
## <img width="449" alt="bildschirmfoto 2016-03-16 um 00 23 25" src="URL.

<img width="429" alt="bildschirmfoto 2016-03-16 um 00 23 41" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141127696\issue-141127696.json . 
PR #423 intruduces a rather hacky approach to glue the error stylings and explanations to the student fields form partial. This can be improved by writing a custom (simple form) form builder.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197271016.json . 
I have a meeting soon, so will take a lookie later (if someone doesn't get there before me). 
Thanks in advance for this! I'm so excited!!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197429716.json . 
@ramonh I don't know why, but this still lets me add myself as a coach on the same team as I am a student on, via the interface. It also lets me add myself to that same team as a mentor, etc.. via the separate "Add a member" interface. :confused: 
The first might have something to do with the confirmation (maybe inline-code doesn't take into account the non-confirmed role as a role to double-check for uniqueness of name) but the second, I have absolutely no idea.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197431588.json . 
Well that's no good, sorry about that! I'll look into why this is taking place. I'm afraid I won't have any further time tonight but will tomorrow, if that's okay

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197431833.json . 
But thank you so much for testing this, @alicetragedy 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197432397.json . 
no worries, I am just super sorry I only got to looking at this now. should have done this first thing in the morning. :( 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197432799.json . 
Not at all! I shoulda tested this better :sweat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197434961.json . 
If it can help, maybe adding a private method in the team similar to inline-code and validating that upon creation of the team member / team update would help, that's all that comes to mind right now. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197436712.json . 
Thanks for the suggestion! I thought that unique members might've been elegant, but alas! (I'm trying to squeeze in a quick look now :sweat_smile: ) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197445883.json . 
Ok tiny update: It seems to be working! I'll need to set up the error message, clean up some tests so that it looks like I TDD'ed it (koff koff!). And then we're good to go. I'll have to do that later on, though. Thanks again, @alicetragedy 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197447055.json . 
perfect!!!!!! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197506638.json . 
This looks good/better now. Not sure if you want to double-check @carpodaster but I'm ready to MERGE ALL THE THINGS :boom: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197507365.json . 


:joy: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197508511.json . 
:+1: Go ahead and merge it – i haven't paid much attention to this PR and its discussion and I feel super-bad about it.

It's awesome that we have this unique-check now, thanks @ramonh. At the same time – and like I said on Slack earlier today – I still believe that there are probably a hundred different way of getting a team into a borked state, we might as well just roll with it :trollface: #yolo

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197509315.json . 
@carpodaster as a wise woman once said,

"we can fix it in production" :joy: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\comment-197609934.json . 
Agreed, there will always be weak points that will come up. Thank you for your help!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\issue-141226179.json . 
This aims to address the second half of #419, where students could list themselves as coaches of their own team.

One advantage that comes from this is that it also doesn't allow a student to be both students in a team!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141226179\pr-63039845.json . 
This aims to address the second half of #419, where students could list themselves as coaches of their own team.

One advantage that comes from this is that it also doesn't allow a student to be both students in a team!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141328178\comment-197496367.json . 
I'll just go ahead and merge this? It's really just the help pages :D 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141328178\comment-197496816.json . 
Sure, go ahead! I've seen cool pics so far but it's too late in the day to parse markdown copy in the brain from git diffs ;)  #yolomerge

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141328178\comment-197500142.json . 
RESPONSIVE IMAGES EVEN! because css.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141328178\issue-141328178.json . 
This adds some helpful information about applying and creating teams to the help page.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141328178\pr-63095077.json . 
This adds some helpful information about applying and creating teams to the help page.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141369891\comment-197508176.json . 
+1

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141369891\comment-197555250.json . 
Do we really want to add it this year? Call for projects will end in 4 days.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141369891\comment-197556849.json . 
I think this is just meant as a quick to-do for a team that might want to work on the teams app in the summer @mkalininait 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141369891\comment-207847993.json . 
Done in #450 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141369891\issue-141369891.json . 
As discussed, having a field where mentors can add a URL to their project's Code of Conduct would make it a lot easier to find and make it known that those are a criterion for accepted projects.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141408908\comment-204368866.json . 
hey @mkalininait do you still want to work on this? if not, I can reassign to someone else, just let me know! It would be cool to have it this/next week, before applications really start flowing in. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141408908\comment-204410609.json . 
@alicetragedy Ah damn, l totally forgot about this issue. Let me see if I can do it over the weekend.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141408908\comment-204411181.json . 
I did as well — sometimes repo cleanups help ;) 
Great, thank you! :sparkles:  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141408908\comment-210548813.json . 
we can close this issue. thank you @mkalininait! :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141408908\issue-141408908.json . 
Now I can see the tab 'Review and Submit' in the application, which I have already submitted, and this tab is blank.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141421631\issue-141421631.json . 
this fixes a couple of super annoying things, such as:.
- real ugly error box
- MOAR inconsistent back navigation and save buttons
- a missing class in all images in the help pages
- labels in team view
- ugly italics

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141421631\pr-63146455.json . 
this fixes a couple of super annoying things, such as:.
- real ugly error box
- MOAR inconsistent back navigation and save buttons
- a missing class in all images in the help pages
- labels in team view
- ugly italics

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-197752398.json . 


I added the second box in order to make it more user-friendly :speak-no-evil_monkey: . With only one box, you get a error-message saying:.

block-code.

_Team is invalid_ is not really a meaningful error-message for a user not knowing the internal datamodel of the application (anyone basically...), therefore I added what's the current approach.

I also thought about fully removing the **inline-code** button, but then decided against, because it acts as a handy shortcut for admins to look and edit a team's members. But if it causes more trouble than benefit, we can also remove it - it does nothing the teams-form does not already do.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-273630793.json . 
Tested this ticket on Staging: all unchecked problems are still relevant.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-273837335.json . 
For 1: what should be done here? This is just saying what the current status is but not what should be done.
For 2, 3: what should the wording be?
For 4: is this still relevant after the comment by klappradia?
For 5: does this need fixing or is this considered a bug?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274085140.json . 
@bitboxer Hey, sorry for not replying yesterday, i got stuck on the first question.

1. We should restrict adding user as a student if he/she is already added as a coach (confirmed or not confirmed, doesn't matter) in another team. A user can always delete him/herself as a coach from a team in order to become a student (coaches have this permission). 

Btw, here is a nice example: Armin has been added to the Team Oberlaa as a coach. Then he has been added to the Team Sleepy Testers as a student. As a result of this, we can't edit the Team Oberlaa anymore because whatever you do you get this: "1 error prohibited this team from being saved: Armin Ronacher already is a student on another team for 2017."

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274085511.json . 
Yes, I understand that this is the problem. But what do you want implemented as solution to this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274087235.json . 
@bitboxer Exactly this -> **We should restrict adding user as a student if he/she is already added as a coach (confirmed or not confirmed, doesn't matter) in another team.**
The error message could be: "1 error prohibited this team from being saved: [username] is already a coach on another team for 2017." 
Also: it should be possible to **delete** a coach who is already a student in another team (now it's impossible).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274118497.json . 
@bitboxer 
2. "Roles: there cannot be more than 2 students on a team."
3. "Roles: user has already been taken" (If we use this error message only when trying to add one user twice within **one** team, the message could be "Roles: user has already been added". But I can't tell it just by looking at the UI, it should probably be clearer after reading the code).

I found two more error messages of this type:.
 * "Roles name is not included in the list"
 * "Roles name can't be blank"

I'm not sure how many of them there are in the app. Maybe all we do is just add a colon after the word *Roles* for **all** error messages: "Roles" --> "Roles:"? WDYT?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274120411.json . 
@klappradla Thanks for the comment.
In that particular screenshot, the error message in the second box repeats on of the error messages in the first box, that's why it looked redundant to me. Maybe there are other use cases though, when the second box provides more useful information. I just didn't see them...
If you vouch for 2 boxes, then we won't change it :)
//cc @bitboxer re item 4.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274215554.json . 
@bitboxer 
5. I'm fine skipping it. WDYT @alicetragedy ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274246308.json . 
For the error boxes: I will try to make it look like one big box with two messages inside.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274246704.json . 
For the message in the error text: this message is generated from Rails and uses the following convetion: "[Attribute] [Error Message]". I don't want to add a colon between the attribute and the message, this would mean we have to check every error message. I think the best approach is to form a sentence with "Role " at the beginning. For example: "Role need fixing. The user [USERNAME] has already be taken" . Would that be okay?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274246777.json . 
And for the "name can't be blank": This is sadly how rails creates the messages. 

Ah, another way would be to inline the error messages into the form and show the text next to the field that has the error. But we would need to redo every form to stay consistant. That is also lots of work. 

Maybe we can just fix the two text messages and just ignore it and hope it works for most students? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274491876.json . 
@mkalininait I tried to reproduce the two error message boxes, but I can't. It totally looks different on my machine:.

<img width="1213" alt="bildschirmfoto 2017-01-23 um 14 44 48" src="URL.

I assume now it is already fixed. If not, please post details how to reproduce it with a new screenshot.

With all what we have discussed here, the things left to do:.

* Prevent Coaches to be Students in other teams. This makes the "delete them" part obsolete, because you won't be able to create such teams.
* Change the error messages a bit to make them clearer.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274499950.json . 
After playing around with the coach / student rules I figured out that currently the system is setup in a way that everyone can get every role as often as they want. Inclduing that a person can always be additionally added as a student in other teams. But once this person is a student somewhere, that person can't be removed or edited in other teams because the check if the person is a student prevents this.

There are now two of ways to fix this:.

* Prevent a Person to be on more than one team in whatever role.
* Prevent a Person to become a student in a team when that person is already added in other teams in whatever role

So this problem is not only limited to coaches, but to everyone who is added as a student and already has a role somewhere.

What should I do? The first or the second version? Currently I think I would vote for the 2nd one because it could be okay that a person coaches more than one team. Am I right?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274630192.json . 
Hi @bitboxer 
Regarding the **"coach / student rules"**.



That's right, one person can coach more than one team.



The 2nd looks correct to me. Note: we should check teams within current season.



That's true, you can't add new teams with this issue, but there may be **old** ones, which have been created before this bugfix. I don't think we will have such cases on Production in this season though.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274633355.json . 
@bitboxer 
Regarding **two error boxex**. 

I still can reproduce this bug locally. It's important that you try to add the same user with the same role. E.g. there is a Team with student X and coach Y. One box shows up if you try to add X as a coach or Y as a student in this team. But if you try to add X as a student or Y as a coach again, you'll see two boxes.

!team-error-boxes


.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-274644458.json . 
@bitboxer 
Regarding the **error messages**.

Thanks for clarifying why they look this way at the moment. That's interesting.

We can definitely start the error messages with *"Roles"* (or *"Role"*, whatever the name of this attribute is). If we want to change individual messages, we could also change them in a way that they start with a colon, couldn't we? :) Anyway, I don't really have a strong opinion on how the texts should look like (**"Roles: [blah-blah]" or "Roles need fixing. [Blah-blah]" or "Roles error. [Blah-blah]"**) – as long as they are clear and grammatically correct. I'm fine with the option which you consider to be the best :raised_hands:.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\comment-349950445.json . 
Hey @mkalininait do you find the time to triage your list in the issue description and see what's left? Ideally, we'll take the remainders into new, atomic issues as this one is difficult to manage due to its amount of comments.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141424862\issue-141424862.json . 
- [ ] We restrict adding a coach, who is already a student in another team. At the same time I can add a student who is already a coach in another team. If I try to delete this coach from that team later, I get this error: "[Name] is already is a student on another team for 2017."
- [ ] When I try to add more than 2 students, I get this error: "Roles there cannot be more than 2 students on a team." <- weird phrase. 
- [ ] When I try to add a user to a team, and this user is already a member of this team with the same role,  I get this error: "Roles user has already been taken" <- weird wording.
- [ ] Additionally, on the "Add member" form, when I try to add a user to a team, and this user is already a member of this team with the same role,  I get 2 error boxes. This is not user friendly. Can we show only one box? (or may be remove this 'Add member' form, since we can add members on the 'Edit team' form)

!screen shot 2016-03-16 at 23 44 16
- [ ] When I edit a team, I can NOT edit roles of team members. Is it a bug or a feature?
  Here is a possible scenario: I added a member and set a wrong role for him/her (say coach instead of student). I press 'Edit', but I can't change the role. If I delete this member and add him/her again with another role, I get the error ''X can't have more than one role in this team!" (which happens because of Issue 420. The solution would be to delete, save and then add the member again, but it's not a good UX.
- [x] Can one person be a coach for more than one team? Now it's possible.
- [x] Little wish: make 'Help section' link open in a new tab. (done in URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141428380\issue-141428380.json . 
!screen shot 2016-03-17 at 00 08 02

After this sentence I'd love a short "Need help?" link to the help section. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141510872\comment-197792759.json . 
yaaay! :sparkling_heart: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141510872\issue-141510872.json . 
this should fix URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141510872\pr-63186874.json . 
this should fix URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-198220613.json . 
I tried it locally again, and was able to add a member to my team without github handle. we should probably fix this. thanks for noticing @mkalininait!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-198452976.json . 
Update: since validations are in place to ensure that the github handle isn't blank, this wasn't the problem. A user is required for the role (so, to be added to the team) and if the user is not present in the database, it silently fails (and adds an empty role to the team). 
Not sure what the fix is, (or if there is one) but we will make extra sure that students know they all have to log in in order to be added to a team.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-208035260.json . 
My team was trying to submit the application the whole day but even after completing the application process, it was getting saved as the draft, By the time we tried looking for the issue and retry he application process,the application got closed. Please tell me how to submit the application as it got closed now.
Please help.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-208043903.json . 
@sainera I'm sorry, but this is not the right place for application support. please get in touch with us by email. You can find the contact information on our about page.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-273634071.json . 
Tested on Staging: still can add a role without a github handle. 
"...and I can’t neither add a github handle, nor delete it from the team." <- I still can't add a handle, but I can delete this empty role at least.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-273711045.json . 
just a thought: If you are testing this on staging (where you might have a “student” role as well as an “organiser” role) that might be the reason why you can delete the empty role and a “simple” student might not be able to. have you tried testing locally with a “login as user” feature (or changing your role to student-only)?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-273740983.json . 
@alicetragedy I have a special user for testing -- mkalininait-test. It doesn't have any special permissions.
PS: I didn't try the “login as user” feature yet.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-273763178.json . 
I'm sorry @mkalininait, I had no idea about that. then it looks like it was magically half-fixed at least :face_with_tears_of_joy: (I think that not being able to remove the role was the more critical/annoying part of the bug, so it might not be an issue that needs an urgent fix after all if students can remove the empty roles themselves). Thanks for testing it again!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-273775991.json . 
Yeah, removing a role was a separate issue  and was solved in #577 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-274631689.json . 
Can this be closed?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-274766601.json . 
@carpodaster 
We still can add a role without a github handle. It's not a huge deal, and we could live with this.
But I'm not sure who on the RGSoC orga team makes (is eligible to make) decisions about product features and bugs.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-323603086.json . 
I was not able to reproduce this issue. If I try to assign a role to an empty github handle, I get a 500 error and no role is created on the database. I can work instead on fixing the validations.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-323926116.json . 
@LuisaAPF thank you for offering to fix this issue! There is an open PR (#796) that could be related. Let's wait until it is merged and see if the problem persists.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-323990459.json . 
Ok!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-323994366.json . 
@LuisaAPF I happen to notice that you picked one of the few issues that are labeled inline-code, and not inline-code. You are very welcome to pick issues with the inline-code label as well. As far as I know, they are not exclusive for the RGSoC team. Am I right, @carpodaster ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-324009937.json . 


@F3PiX @LuisaAPF definitely – everything that's not been assigned (or being commented on that someone's working on it) is up for grabs.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-324041718.json . 
Thanks for the tip, @F3PiX. I wasn't sure I could work on those. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\comment-324376502.json . 
@LuisaAPF If you have questions, want to check for suitable issues, or could use some help with the setup or anything else that may hold you back, please don't hesitate to ask!! You can put a question in an issue, and someone will answer, and/or 'ping' me ( i.e. add inline-code to your comment).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726295\issue-141726295.json . 
One student writes in Slack:.
"Hi, I'm trying to add another student to my team, but get an error
URL.
1 error prohibited this team from being saved:.
Roles there cannot be more than 2 students on a team.
Although there is currently only one student (me)"

I looked at it, there is one blank student (without a github handle), and I can’t neither add a github handle, nor delete it from the team.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726712\comment-198226648.json . 
this is already in the inline-code, so should be easy to implement. :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726712\comment-198923903.json . 
this has been solved, but we talked about at least one "extra" thing:.
- showing only non-rejected projects (ie. with status accepted, pending)

do you want to add that as a separate issue, or add it to this one? It's up to you :) If you add it as a separate issue, you can close this one, as you've fixed it with your PR.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141726712\issue-141726712.json . 
This is a wish from one potential student.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141986977\comment-198923259.json . 
Looks good @mkalininait :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141986977\issue-141986977.json . 
Issue #435

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141986977\pr-63441198.json . 
Issue #435

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141990196\comment-198704831.json . 
Hey @The-Compiler — that is absolutely right, we had in fact thought about it already, but due to deadlines, we did not implement it for the current submission period. I'd definitely like to keep this in mind for next year and believe it would also be a great task for newcomers to the project. :)
Thanks for the suggestion! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141990196\comment-235595830.json . 
@ramonh may I look also at this one?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141990196\comment-235596296.json . 
Hi @izuroxx, thank you! Please do go for it :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141990196\comment-236866462.json . 
@ramonh i wanted to make something to start a discussion, My current attempts look like this
!preview1
!preview2
preview renders above the form after clicking on a preview button. I wanted to try do this, but i guess it's not very readable and should be on a separate page? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141990196\comment-236871320.json . 
Hey nice one @izuroxx! Looks great so far.

Hm, I'd actually say that having it appear below would be better. Maybe even side by side?

Actually, the way Github does it is pretty good too, with a tab-based approach. I'd say this would be best. 

What do you think?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141990196\comment-236875975.json . 
the tab-based one is cool, it crossed my mind while writing the comment earlier :) i have to take a close look at this

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141990196\comment-236876074.json . 
Cool, glad you agree! Let me know if I can help.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-141990196\issue-141990196.json . 
I just submitted a new project, and it would've been nice to be able to preview the rendered output before doing the submission.

Minor nitpick of course - submitting and editing worked fine as well :wink:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142062671\comment-198991795.json . 
I have added confirmation tokens to all six 2016 coach roles existing prior to us merging the confirmation logic.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142062671\comment-198992229.json . 
:tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142062671\issue-142062671.json . 
According to a student's bug report, the team coaches were unable to confirm themselves through the UI after being added to a team. I investigated a little bit, and it seems that this fails for teams whose coaches were added prior to us introducing the "coach confirmation" (meaning, no inline-code was created). 
I don't think too many teams are affected, but this is something we should keep in mind.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142194414\comment-198995802.json . 
looks good! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142194414\comment-199005503.json . 
It was fast, thanks @carpodaster !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142194414\issue-142194414.json . 
This is my proposal to to fix #435. Instead of only displaying accepted projects, it only hides rejected ones, allowing students to follow the discussion on proposed projects that may end up being accepted later on.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142194414\pr-63504410.json . 
This is my proposal to to fix #435. Instead of only displaying accepted projects, it only hides rejected ones, allowing students to follow the discussion on proposed projects that may end up being accepted later on.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142304874\comment-199213217.json . 
I'm not really in favour of this feature request. We know that most applications will be sent in very close to the deadline. The counter will be very, very low for the duration of the application phase, creating a false sense of 'safety' - basically we invert the insecurity that your feature request aims to fix.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142304874\comment-199214465.json . 
I'm wondering if we shouldn't simply hide the counter completely as an in-between solution? I don't know, I also have mixed feelings and felt the same way about the fact that most people will send their application very close to the deadline, and I don't know which way is best. Maybe, we can clarify that these are application drafts? 
:see_no_evil: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142304874\comment-199215763.json . 
yeah, if we keep it we definitely have to clarify that these are drafts. maybe we could just show both? submitted and drafts? or is that too overengineered?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142304874\issue-142304874.json . 
For now - as I understand it - the applications for a project are counted when someone creates a draft. I'd say we should only count submitted applications.

Reason: last year showed that a lot of drafts are not even going to be sent off and thus a higher count on projects might scare some teams away, but in the end it could turn out that actually no one applied for this project, because it was just all drafts. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-199251760.json . 
Also: If you have questions regarding the code, I can always ping Sven about it. He can help a bit with answering specific questions. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-199303620.json . 
Yepp, I think I can spend some time this week and go spelunking in the old code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-199304668.json . 
Awesome, thanks @michaelem. we'll try to discuss some guidelines for the selection that are important to us in one of the next team calls, so I can give you more info after that. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-199311191.json . 
yay, thank you @michaelem! :star: :rocket: :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-199360099.json . 
yay, thanks @michaelem 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-199481909.json . 
I'd be happy to help you in April @michaelem if still necessary then.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-201043798.json . 
Can someone walk me through the current process? I'm kinda guessing how this is all inteded to work by looking at controllers...

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-201270089.json . 
@michaelem happy to give you a hand and walk you through it :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-201405252.json . 
:woman_with_bunny_ears:  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-203873837.json . 
Okay so looking at the time, we thought pushing for building a new app in 10 days is maybe not the best idea. We'd love to concentrate on making the one we have a bit easier to use (maybe some improvements to the UX and definitely updating the tags - @alicetragedy offered to help). 

It's still super important to have ppl who understand the app and can help to make it a bit better and maybe even understand the algorythms -  so @michaelem and @klappradla all the work you can put in is super valuable. I just wanted to say that **building a new app** will not be a goal for this year's selection anymore. Do you think that makes sense? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-203877011.json . 
@anikalindtner : as far as I have seen I would not break this out into a separate app anyway. (It was apparently once a separate app and then got integrated.) Anyway, it does not look super complicated, I would like to sit down with someone who cares and knows about the process and figure out where we want to go. (What to hide in the blind selection and what to change in the existing process.)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-203928446.json . 
@michaelem awesome, that sounds good! i know that @alicetragedy wanted to pair. maybe we can all sit together next week when i'm in vienna? maybe @klappradla is also available? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-203930659.json . 
in-person would be great. I think Max might still be busy then, but let's see what he says. I'm flexible :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-203930880.json . 
maybe @mkalininait can join too, if she wants! :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-203934793.json . 
I could also help, if needed!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-203935613.json . 
help is _always_ super appreciated @ramonh :sparkling_heart: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-203936212.json . 
Count me in, then! :smile_cat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-203951807.json . 
@anikalindtner I'd love to! However I'm not in Vienna next week, so only in remote mode at the moment.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-204087763.json . 
@alicetragedy joining in there seems sustainably invested time to me as it will prob. fasten my understanding of the whole thing. So I'm in.
I'm _"flexible"_ besides meetups and stuff (same as Ramón I guess).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-207849623.json . 
Just to make sure: @alicetragedy, a user can only edit her own ratings on a student, team, etc., right?
_(just wondering why only the create is scoped to the current_user and I cannot find any superadmin that might be able to navigate somewhere to edit other user's ratings, that's why I ask)_

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-207849717.json . 
@klappradla that's exactly right, a user can only edit their own rating and no one else's. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-211372887.json . 
I think all of the needed behavior is in place. Maybe someone could check out out the ratings branch and walk through some of the selection / rating steps.

**Todos**
I updated the todos _(inline-code)_ to only show applications (scoped to the current season). For the sake of time and simplicity, I got rid of the "step-through" process though.

**Applications**
I refactored the table _(inline-code)_ to work as before, but with current data and scoped to the current season. Again for the sake of time and simplicity got rid of the "next" and "prev" buttons.

**Question**
One thing I could not figure out though: was there a way to navigate to all these parts of the application without manually entering the url?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-214763642.json . 
@klappradla iirc there was no way to navigate to all these parts before. but this URL should hopefully fix this. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-216551208.json . 
can we close this now?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-216553203.json . 
I guess so - there are other issues taking care of the leftovers.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-216555177.json . 
I agree with @klappradla , but let's @anikalindtner make this decision since it's her issue.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\comment-216904079.json . 
aaaand CLOSED :D 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142333131\issue-142333131.json . 
We have another monster inside the teams app monster and that is the selection process. What once was a hack based on infos that came in through google forms is now an out-dated app where we don't have any tests or documentation for. 

This worked last year, but only with a lot of :see_no_evil: and :speak_no_evil:s. This year we'd love to 
- add a stage of blind selection to the process (meaning hiding certain information of the applications). 

We also would love to just throw away the code and build something new. Sven, who wrote the selection app once, recommended that instead of building more stuff onto the old code. He also said that yes, it is ugly and confusing (all the google form hashes), but if you had some time, you could definitely figure our how the app works by reading it and building a new one. 
- We need someone to take some time to poke around the selection part of the teams app and give (There is a model inline-code and inline-code (and an associated controller) that is where most of the info from the selection app would be)
- Then you should be able to give feedback about if this would be at all possible to build a new selection app until Mid-April. 

@michaelem and @klappradla: would you be willing to take this on? 

I'm guessing this will probably be a close call regarding the timing, but if you have some time to really dig into it, it might work? As a fallback we always have the old monster to use for this year's selection again. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142401693\comment-199446501.json . 
looks good!!! :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142401693\issue-142401693.json . 
Attempts to fix #440. It also adds some tooltips.

!bildschirmfoto 2016-03-21 um 17 27 27

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142401693\pr-63592778.json . 
Attempts to fix #440. It also adds some tooltips.

!bildschirmfoto 2016-03-21 um 17 27 27

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142404254\issue-142404254.json . 
fixes a couple of "nice to have"s from URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-142404254\pr-63594533.json . 
fixes a couple of "nice to have"s from URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143026307\comment-200465520.json . 
@carpodaster is it better to actually delete the code rather than comment it out? I could drop a quick inline-code in there so we can easily track why it was commented out in the first place, but I'm not sure if it's possible to add this to views :see_no_evil: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143026307\comment-200757424.json . 
@alicetragedy I think leaving it in is perfectly fine in this case. But yeah, adding a inline-code (or something), sounds like a good idea, too

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143026307\comment-263143128.json . 
Can we close this? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-143026307\comment-263233992.json . 
@F3PiX how do you mean? A merged PR is automatically "closed" — or do you mean the related issue? I'm not sure if there is one, but I can look. I often forget to close those when I merge a PR :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-143026307\comment-263236179.json . 
Sorry, my mistake :monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-143026307\issue-143026307.json . 
I know this is a stupid quick fix, but the conferences in the teams overview are quite confusing for students — especially if past attendees of conferences belong to a team, as the conferences are not "seasoned" yet — so I'm commenting them out until we find a better way to show them based on the current season (see URL.

This also adds consistent styling to the back navigation and all the buttons in a conference show view. :party_popper:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143026307\pr-63920886.json . 
I know this is a stupid quick fix, but the conferences in the teams overview are quite confusing for students — especially if past attendees of conferences belong to a team, as the conferences are not "seasoned" yet — so I'm commenting them out until we find a better way to show them based on the current season (see URL.

This also adds consistent styling to the back navigation and all the buttons in a conference show view. :party_popper:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143049885\comment-200591202.json . 
Works great as of #447. Thank you @althaire for your help! :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143049885\issue-143049885.json . 
Going to the list of applications (the path is inline-code) shows a list not just of the current season, but all of them.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143064493\comment-200537273.json . 
I played around with this and it looks good! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143064493\comment-203041006.json . 
Awesome! :fireworks: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143064493\issue-143064493.json . 
This should finally fix the oauth redirect issue for realz now! :tada: :sparkles: (see part 2 in URL.
I've not removed all of the new user-specific stuff, because we can fall back on forcing a new user to fill out their profile right away if they don't come to the app from a link (rather than end up on the index, which might be a little confusing actually) — but all of the info required for a user to exist is already pulled in from the GitHub profile. In the context of the applications, it's obviously much better for the students to access the application right away (or whichever link they clicked on). Would love someone to take a quick look, and I'd like to merge to the staging branch first to see if it works as intended. :cat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143064493\pr-63943457.json . 
This should finally fix the oauth redirect issue for realz now! :tada: :sparkles: (see part 2 in URL.
I've not removed all of the new user-specific stuff, because we can fall back on forcing a new user to fill out their profile right away if they don't come to the app from a link (rather than end up on the index, which might be a little confusing actually) — but all of the info required for a user to exist is already pulled in from the GitHub profile. In the context of the applications, it's obviously much better for the students to access the application right away (or whichever link they clicked on). Would love someone to take a quick look, and I'd like to merge to the staging branch first to see if it works as intended. :cat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143072766\comment-200536878.json . 
yayyy!!!!! thank you so much @Althaire :confetti_ball: :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143072766\issue-143072766.json . 
This addresses #445 by only listing teams from the current season when reviewing.
:octopus: :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-143072766\pr-63948295.json . 
This addresses #445 by only listing teams from the current season when reviewing.
:octopus: :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-145302979\comment-204949984.json . 
looks good, I think we can merge it :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-145302979\issue-145302979.json . 
Issue #428 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-145302979\pr-65014974.json . 
Issue #428 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-145488621\comment-204960802.json . 
Hi @ishishruti, this is not the right place to submit support questions for student applications. You can find our email address in the student application guide. Thank you!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-145488621\issue-145488621.json . 
I along with my team partner are having difficulty in finding coaches in our own city i.e. Pune . So is it possible that we apply for coaches who are not in the city. We are in contact with people outside India having great skills who can help us. We can always be in contact with them on Skype.
So can we apply for remote coaches? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147029041\comment-207751836.json . 
Hello @pratyusha972 - thanks for submitting a PR. There are a lot of additional files in this PR and before I can review it, I'd kindly ask you to remove all those files that are not related to the feature/improvement.

There are several files ending on inline-code – probably backup files from your text editor. You also checked in files from inline-code and inline-code which should be ignored by the project's inline-code file.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147029041\comment-207776760.json . 
Hello @carpodaster - Sorry for the inconvenience. I have removed all the unnecessary files and committed only the required files. Can you please review it and give your feedback. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147029041\comment-207823622.json . 
Hej @pratyusha972 – looks good! Just one tiny little backslash to be removed and then I'm gonna merge :shipit: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147029041\comment-207841634.json . 
Hello @carpodaster , Changes done. Thank you for reviewing! :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147029041\comment-207847937.json . 
Thank you @pratyusha972 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147029041\issue-147029041.json . 
For checking this additional field, the before_action check_date line in app/controllers/projects_controller.rb has to be commented (temporarily, as the deadline for project submission is over).
!codeofconduct
!codeofconduct2
The changes have been made in 
views/projects/new.html.slim,
views/projects/show.html.slim,
controllers/projects_controller.rb 
and db/schema.rb.
(I have added a new field named code_of_conduct into the projects table).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147029041\pr-65841403.json . 
For checking this additional field, the before_action check_date line in app/controllers/projects_controller.rb has to be commented (temporarily, as the deadline for project submission is over).
!codeofconduct
!codeofconduct2
The changes have been made in 
views/projects/new.html.slim,
views/projects/show.html.slim,
controllers/projects_controller.rb 
and db/schema.rb.
(I have added a new field named code_of_conduct into the projects table).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147029041\pr-comment-59118892.json . 
Can you remove the trailing bashslash please?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147041085\comment-207752001.json . 
Hello @roxxx33 - thanks for submitting a PR. There are a lot of additional files in this PR and before I can review this, I'd kindly ask you to remove all those files that are not related to the feature/improvement.

There are several files ending on inline-code – probably backup files from your text editor. You also checked in files from inline-code and inline-code which should be ignored by the project's inline-code file.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147041085\comment-207841349.json . 
@carpodaster made the necessary changes. Could you please check it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147041085\comment-207847876.json . 
Hello @roxxx33 - the PR didn't update with your changes. Could you double-check your local commits?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147041085\issue-147041085.json . 
!new_conference_form

Also, added 'Lightning Talk Slots' field to the display page for conferences.
!conferences_display

!display_individual_conference

Made changes in:.
conferences_controller.rb
views/conferences/_form.html.slim
views/conferences/index.html.slim
views/conferences/show.html.slim
db/schema.rb

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147041085\pr-65848338.json . 
!new_conference_form

Also, added 'Lightning Talk Slots' field to the display page for conferences.
!conferences_display

!display_individual_conference

Made changes in:.
conferences_controller.rb
views/conferences/_form.html.slim
views/conferences/index.html.slim
views/conferences/show.html.slim
db/schema.rb

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147208571\comment-208222372.json . 
Hey @roxxx33 - thanks! I've added a comment on a commit. In addition to that, this PR doesn't include the migration file that adds the new database column; it only contains the updated inline-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147208571\comment-208681592.json . 
@carpodaster I have made the necessary changes. Could you please review it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147208571\comment-208794234.json . 
@carpodaster 
I have changed the view files views/conferences/show.html.slim and views/conferences/index.html.slim. So, it display "yes" for "true" value in the field and "no" otherwise.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147208571\comment-208803087.json . 
@roxxx33 just the inline-code now (see comment) and we're good to merge :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147208571\comment-208813314.json . 
@carpodaster removed "value: nil".

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147208571\comment-208901888.json . 
Merged – thanks @roxxx33 !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147208571\issue-147208571.json . 
@carpodaster 
I have added Lightning Talk Slots checkbox to new conference form and also a field for displaying the same in the list of conferences page.
!new_conference_form
!conferences_display
!display_individual_conference
Made changes in the following files:.
1. db/schema.rb
2. conferences_controller.rb
3. views/conferences/_form.html.slim
4. views/conferences/show.html.slim
5. views/conferences/index.html.slim

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147208571\pr-65905437.json . 
@carpodaster 
I have added Lightning Talk Slots checkbox to new conference form and also a field for displaying the same in the list of conferences page.
!new_conference_form
!conferences_display
!display_individual_conference
Made changes in the following files:.
1. db/schema.rb
2. conferences_controller.rb
3. views/conferences/_form.html.slim
4. views/conferences/show.html.slim
5. views/conferences/index.html.slim

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147208571\pr-comment-59166764.json . 
You don't have to assign inline-code here. The default value is inline-code (which is »falsey«). In fact, forcing the value to inline-code will overwrite the previous value when a conference is edited at a later time.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147208571\pr-comment-59327862.json . 
The inline-code is still here. Couly you please remove it? See my previous comment on that line for the reasoning behind it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147208571\pr-comment-59328867.json . 
I've just realised: this would display a inline-code / inline-code (or nothing at all) to the user. Could you improve on that by displaying a »yes« (or »no«, respectively)?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147226338\comment-207989193.json . 
Hi @pratyusha972, we don't want to limit the number of conferences that can be added — we want to limit the number of conferences which attendees can apply to in each conference raffle round. Sorry if this wasn't clear from URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147226338\comment-208214788.json . 
What @alicetragedy said… Sorry that this wasn't clear from the issue description :cry: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147226338\issue-147226338.json . 
Hey @carpodaster ,I have put a condition check on number of conferences limiting it to a maximum number of 3. A note will be displayed if an applicant tries to add more than 3 conferences.
!conf3
This image shows the instance when there are 3 conferences.
!2conf3
This image shows the instance when the new conference button is clicked when there are already 3 conferences, i.e a note is displayed and it is redirected to the same page.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147226338\pr-65910862.json . 
Hey @carpodaster ,I have put a condition check on number of conferences limiting it to a maximum number of 3. A note will be displayed if an applicant tries to add more than 3 conferences.
!conf3
This image shows the instance when there are 3 conferences.
!2conf3
This image shows the instance when the new conference button is clicked when there are already 3 conferences, i.e a note is displayed and it is redirected to the same page.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147228112\comment-208006677.json . 
Sounds really good!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147228112\comment-208214652.json . 
This may be old news, but GH automagically provides a link to a inline-code file on every PR made to a repo where such a file exists.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147228112\comment-208216160.json . 
@carpodaster I did not know this :) might even have some time for it this week. I didn't think about how it might be useful to have during the application process :cry: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147228112\issue-147228112.json . 
I'd like to add some contributing guidelines to make it more easy and accessible for newcomers and people outside of the RGSoC team to contribute :) 

Things we might want to have:.
- guidelines on finding an appropriate issue (ie. the usage of labels and what they mean)
- guidelines on how to call "dibs" on an issue 
- guidelines on making pull requests (ie. branches we use, information that should be in the PR)

Maybe also add the handles of some of the more present contributors that can be pinged for questions.
Is there anything I've forgotten, @carpodaster?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-220143210.json . 
Hi @roxxx33 – thank you for bringing this to our attention! Item no. 2 is done. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-230719349.json . 
@carpodaster while looking at this one, I've noticed that new conference saves without filling the tickets value - but it brakes conference/conferences show  (tickets_left method). would you like the tickets field to be required/ with default tickets value set to 0? :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-230719759.json . 
0 and required makes sense to me, thank you @izuroxx!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-230720973.json . 
Requiring it for new records makes perfect sense, yeah. As for the default value, I'm not so sure about that – mostly because it could obfuscate the presence validation in cases were entering a ticket number was simply forgotten.

The buggy show view for inconsistent records could probably be fixed by calling inline-code on the tickets value in the view template. Try entering inline-code  in inline-code :winking_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-230721677.json . 
Did not know that, cool!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-230738932.json . 
I could continue working on this issue, if it's ok for you.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-231072733.json . 
@carpodaster I guess I found another thing to repair: I was able to add a conference with "Starts on" and "Ends on" dates like: 20 Jul 16 - 07 Jul 16. The form shouldn't permit user to add such dates and should show error message. Am I right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-231074296.json . 
@carpodaster And after switching to season phase "Coding summer" it's possible to add a conference which took part in a period before. Though I'm not sure if I'm switching the right way.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-231109812.json . 
AFAIK, _adding_ a conference is not season-phase dependent in the current set-up. Not sure if it should be. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-231523682.json . 
@izuroxx @agnik5 Could you check the other missing validations that led to the @roxxx33 report of a buggy view? We can close this issue then.

As for the additional bugs regarding the conference area: could you please create a new issue?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-231714336.json . 
@carpodaster ok! I'm working on the view at the moment /item no. 1/.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\comment-238475865.json . 
I guess, this can be closed. Additional bugs are issued in #503. Everything else is done and merged. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-147887718\issue-147887718.json . 
@carpodaster 
!display_individual_conference
- [ ] In the display page for a single conference, the information is shown in an uneven format in cases such as when a field is left blank by a user that made the conference resulting in 2 fields appearing in the same line. 
- [x] A new conference can be added without a name, which can later not be viewed due to name field being blank in the display page for list of all conferences.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-150983555\comment-214527836.json . 
PRs that happen out of frustration are the best kind ;)
If no one else has gotten to it by tomorrow morning, I'll take a look at it then. I hope it's okay :sleeping_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-150983555\comment-214528717.json . 
I don't really get Travis' errors - seems something with Code Climate's API is going wrong?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-150983555\comment-214529550.json . 
@klappradla me neither, felt like staring at a guru meditaion error

.
#rails-girls-summer-of-code/rgsoc-teams\issue-150983555\comment-214530430.json . 
I just restarted em - let's see :see-no-evil_monkey: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-150983555\comment-215184178.json . 
merged @klappradla was right next to me approving ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-150983555\issue-150983555.json . 
I've just started trying to implement the changes mentioned in #40 but got super annoyed by the navigation. Here is a small PR that adds breadcrumb navigation and a small overview so one has not to remember and type url's all the time.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-150983555\pr-67790189.json . 
I've just started trying to implement the changes mentioned in #40 but got super annoyed by the navigation. Here is a small PR that adds breadcrumb navigation and a small overview so one has not to remember and type url's all the time.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-152582693\issue-152582693.json . 
When trying to rate applications, I was unable to save my ratings.
This happened with an old reviewer role (which existed from before we added state to the inline-code model); because of that, I assumed that changing the state from "pending" to "confirmed" should do the trick, but it doesn't work. 
I also tried to delete the old role and created a new one, but this hasn't helped.
I'm not quite sure what's going on there and how to fix it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-154699365\issue-154699365.json . 
As requested in rails-girls-summer-of-code/selection_process#34

.
#rails-girls-summer-of-code/rgsoc-teams\issue-154699365\pr-69986990.json . 
As requested in rails-girls-summer-of-code/selection_process#34

.
#rails-girls-summer-of-code/rgsoc-teams\issue-154929295\comment-219309963.json . 
I think they are actually automatically ordered _(by ID => by time)_. But the other way round, oldest on top - same system as here on Github.
Did you have a timewise jumble of comments?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-154929295\comment-219310871.json . 
@klappradla plz look here (application 156)

!screen shot 2016-05-15 at 23 08 58

There are more examples if necessary.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-154929295\comment-219311095.json . 
Oh, definitely worth being titled as "bug" - thanx!
I can take a look at it tomorrow morning. Are you fine with sticking to Github-like ordering? I personally find it very intuitive, but may only be me.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-154929295\comment-219311170.json . 
@klappradla Thank you! I don't mind any order, as long as there is logic behind it :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-154929295\issue-154929295.json . 
Comments should be ordered by date, newest on top.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155001151\comment-220083372.json . 
thanks for the PR, @ramonh! Just saw it :( I'll take a look at this tonight (or tomorrow). 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155001151\comment-220085080.json . 
Thank you, @alicetragedy! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155001151\comment-220133057.json . 
Sorry @ramonh! I wanted to get to this yesterday evening but completely forgot about it :see-no-evil_monkey:.

Thanks for the PR! I've made a comment on the test case … but I don't know if it passes :see-no-evil_monkey: :trollface: 

@alicetragedy: apologies if I ran into you here. :see-no-evil_monkey: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155001151\comment-220246770.json . 
no worries @carpodaster you didn't — I was busy with something else yesterday at my study group, so didn't take a look at the PR :see-no-evil_monkey: 
in fact if you think it can be merged after the changes that Ramon made again, feel free to merge it. Otherwise I'll take a quick look again at it today. :party_popper: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155001151\issue-155001151.json . 
This addresses #253, by showing only the selected teams and offering to show all teams.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155001151\pr-70176854.json . 
This addresses #253, by showing only the selected teams and offering to show all teams.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155001151\pr-comment-63764067.json . 
Almost purely cosmetic, but can we change this to :filter or something? :show clashes with the controller action. Not logically, just in my brain :see-no-evil_monkey: :winking_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155001151\pr-comment-63766170.json . 
This won't stub the inline-code predicate in the controller instance – it will retrieve a fresh instance from the database. The inline-code Team factory already sets inline-code to inline-code so we currently don't have a test case for the teams that should be left out.

Proposal for updated examples (just entered it here on GH, beware of errors ;) ):.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-230746243.json . 
@carpodaster This is the second issue I'm thinking of working on if it fits you.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-231522864.json . 
@agnik5 sure! Please also check #60 and please ping @katrin-k for design implementations (I'm closing #60 – let's continue the discussion here).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-235289898.json . 
@carpodaster @ramonh @katrin-k Sorry for not commenting in this thread for some time. Now I'm back to this issue. Could you please give me more details about your requirements? How is this issue related to #136?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-235299900.json . 
@carpodaster @ramonh @katrin-k My another question arises from differences between #462 and closed #60. In the first case it's a matter - as I understood - of a place, where student will be able to find current info on what's going on in RGSoC. The latter concerns roles other than student's.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-235355264.json . 
I just realize, the reference to #60 is a bit wrong. (Especially the name is misleading. Since I did that back then: Sorry!). 
So: Issue #60 started what is now the supervisor dashboard => implemented via #109.
And yes, @agnik5 you're totally right. The latter concerns other roles. 

Issue #136: @ramonh This is about removing the data from 2015 and moving it into its own place, isn't it? If yes, this is not related. 
@agnik5 We do that every year, so stuff is archived and the organizers can look up previous information. 

#### So the important bit for the student dashboard is:.

"there should/could be a separate spot, ie. in the teams app, where we provide additional information for the students such as instructions on creating a blog post and pull request, instructions for the conference raffle, etc."
==> We have several wiki entries, old blog posts, guides on the public website, gists… with How-To's for the various activities/requirements that you students will to do. 

I agree. We indeed need to define the page a bit better. 
My proposal for the basics is: 
- Organizers can create/edit/delete entries
- An entry consists of a title, a description text (editable with Markdown), (multiple) file attachments, an extra URL field, a category, a state (draft/ready) and visibility (visible for students/not visible). _Is sth. missing?_
- Students will see only entries that are visible and ready. 
- Organizers see all entries of all statusses. 
- In the menu: ??? I'd suggest to put it under the same "Dashboard"-item as the supervisor board. However, there needs to be a solution for users being both organizer+supervisor. 

That's not complete yet. @agnik5 Since you are a student, you probably also have some ideas. E.g. there could also be an announcement area… 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-235883451.json . 
@katrin-k Thank you very much for clarification, it helped me a lot.

I'm thinking about the features right now. What came to my mind immediately is:.
- I'm not sure, if "Help" section will be a proper place for this features. Especially as it's not very visible now and student may not catch the idea to look for instructions there. "Help" might become a part of such dashboard.
- As you wish to make a single place for all info concerning students - instructions, as well as announcements / big 'yes!' to that ;) /, I agree, that "fully-fledged" dashboard would be a good option. Divided to at least those two categories.
- To guarantee, that nobody will overlook some announcement, there may be some option to send notification to roles concerned while adding entry. But I'm not sure if I'm not overcolouring ;)
- You wrote that there may be cases when organizers don't want entries to be visible to students. Did you mean just when they're not ready to publish? I'm thinking of adding an option to define a time, when some earlier prepared entry has to become visible. But again - not sure if I'm not overcolouring ;)
- "there needs to be a solution for users being both organizer+supervisor" - what do you mean exactly?
- When adding an entry, there may be a tick list to select roles, for which some entry should be visible. But it goes beyond the scope of students' dashboard I guess.

What do you think about it? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-235892233.json . 
@katrin-k Sorry I'm a little confused, why would that issue involve removing data from 2015? If I understood correctly it proposes looking through the app for more roles' namespaces. For example, the inline-code one has been added in the meantime.

@agnik5 I think Katrin meant that it would be good to have a dashboard for being both a supervisor and an organizer. Maybe two dasbhoards on the bar? Not sure.

Having said that, a centralized area for news and other student-related daily things is a worthwhile endeavor.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-235906101.json . 
@katrin-k @ramonh If I understood you right, the task contains 3 components:.
- building a students dashboard, where they will be able to access info like instructions and announcements
- modifying an orga dashboard adding option of adding etc. new content for students
- find a solution, thanks to which a person, who is orga and supervisor at the same time, could see all the content they're authorized to access due to both roles?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236123269.json . 
@agnik5 Did you see the supervisor's dashboard? (Team Cheesy added that last year :-) ) It might help clearing things up. I thought the student dashboard is meant to be something like that, but don't take my word for it, ask your mentor :-)  

AFAIK orga's have full access to all the namespaces. So orga's would need access to write to all the student's dashboards at the same time, while one student only has access to her own dashboard. I think this can be done with a setup similar to the current conferences: only orga's add them, and they show up on several places in the app. So, IMO you don't need to build an orga dashboard as well. Again, don't take my word, ask your mentor. 
The supervisor/orga combination is a thing. You probably don't want a supervisor to read her student's dashboards. Nice challenge: how to deny orga's access to the teams they are supervising. If that is possible at all.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236167528.json . 
Good points being discussed here!

A question is: Would/should organizers be able to write different 'notices' for different teams, or would it be more of a program-wide announcement system? If I understood correctly, there seems to be a consensus that this would be overkill.

Having said that, @F3PiX raises a good point. Since they have access to everything, an organizer could just write an entry in the page for students' dashboards and it would eliminate the need for a organizer dashboard if it's going to just be for adding entries.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236167819.json . 
Also, I like the idea of a Help section a lot, @agnik5! Maybe a link that says "Helpful Links" or something like that. What do you think?

I think this would be good as a separate link, maybe above the list of announcement entries.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236193120.json . 
@ramonh And another point is that if it's only about linking general info / instructions / announcements /not specific to particular teams/, will there be a need to block it from access of supervisors.

As for the 'Help" section, I didn't mean I'm against it, but at the moment it's linked at the bottom of the site with small font. So it's not so easy to find ;) I agree that it would be nice to have both announcements sections and instructions section, 'Helpful links' is a nice name for the latter :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236193772.json . 
I'm glad you agree, @agnik5! 

If it's unspecific to teams, I don't think there would be a need to block supervisors from it

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236652272.json . 
I guess a nice thing would be a preview function for team status updates.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236825473.json . 
@agnik5 You mean the daily logs, right? If so, that's a good idea!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236827442.json . 
hey y'all. sorry for being so quiet. I was away for a long weekend. 

Regarding the namespace-stuff: Sorry for the confusion. Apparently I completely misunderstood this issue. :dizzy_face: 

As to the basic purpose: Yeah, I also understood it as being "merely" an announcement/helpful links section. Including the current Help page has a big +1 from me. 

As to the other ideas + questions:.
- There's no overcoloring in collecting ideas! :D 
- Visibility of entries: Upsi, that was obviously a bit confusing. Indeed, I meant it as "make visible for students now". The automatic timer function is a great idea. 
- Supervisors should also be able to see what the students see, since students will likely refer to infos from that dashboard. 
- The organizer/supervisor distinction: That came from the naming of menu item links. There's a menu item "Dashboard" that's currently holding the Supervisors' Dashboard. And since this issue is called the Student Dashboard (filled with content by the organizers), I was thinking of using just 1 menu item "Dashboard" for both, that could then have a sub-navigation for users who are both organizer+supervisor. This is also related to #380. @ramonh As we already talked about it, I feel it makes sense to really approach issue #380 soon :). But we might also simply go for a tabbed content page where the supervisor dashboard is then only shown to the authorized users.  
- The preview of team status updates: @agnik5 Same question, you mean the daily log? If so, that would rather be a separate issue, wouldn't it? (and yeah, good idea :).)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236831515.json . 
- Not sure if it is a good idea that the supervisor has full access to the student's dashboard. I would say: the dashboard is a private place for the students. I can imagine that some of the info provided by the orga's, shows up on the supervisor dashboard too. 
  For shared info, like links to instructions, it would be extra super important to pay attention to the _naming_ of instructions etc.
- Preview team status updates. Kinga, or do you mean write/preview tabs to preview marked down text? That sounds GREAT! In both cases: Why would you want that in the dashboard, and not in the existing status_update_input form? The status updates also show up in the Team page. That is 2 times already. I think showing them on more than 2 places quickly becomes confusing.     

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236861020.json . 
@katrin-k Yes, I meant daily logs indeed, I wrote 'status updates' after the naming used for this in app. It would be helpful to check how a log looks after adding markdown /yes @F3PiX :)/ etc. I was also thinking of the option to save a draft. It may be useful for situations when teammates don't have the opportunity to prepare a log together. For example one teammate writes about her day, saves the draft, and the second teammate adds her part and publishes the whole log.

@F3PiX Sorry, what I wrote may have been a bit confusing. I didn't mean taking daily logs out from where they are at the moment. I just thought that current menu visible after logging in as a student has to be a part of the dashboard. I'm not sure now if I correctly understood the idea of student dashboard.

It seems that one of the main tasks for us is to agree on the /in/visibility of student dashboard for supervisor. A starting point would be answering to question: what exactly this dashboard is expected to contain :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236883124.json . 
I don't want to add to the confusion ;-) Sorry.
Last year we built the supervisor dashboard in an agile/iterative way. So we started with one basic feature, I think it was just the links to the supervisor's own teams. And added another feature in small steps/iterations, step by step. You should ask your mentors and coaches if they agree on working that way, if you would be interested. 
Also, we did a small survey in Slack, asking the supervisors a few questions about their work and workflow in the app, to get a feeling for the most urgent features from a user's point of view. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-236906257.json . 
Nice idea, I'll ask about it.
I also did a small survey in Slack within students, hope to get some feedback.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-237510599.json . 
A small breakdown that this would involve (please feel free to suggest tweaks!):.
- [x] Adding the student's dashboard page and add routing
- [x] Adding the link (or form) to add a daily log
- [ ] Adding a "Help" link or a set of important links
- [ ] Adding a list of announcements
- [ ] Giving organizers a place to write said announcements
- [ ] Making the dashboard the default landing page for students (?)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-237573655.json . 
The first two items are done.
!screenshot from 2016-08-04 16-39-42

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-237573955.json . 
Awesome @agnik5 ! Feel free to tick the boxes as you go

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-237574671.json . 
Under the "Status Updates" there are the same things as were before, just the link is moved from main menu to dashboard. We can 
- leave it as it is or 
- treat the "Status Updates" as a list of posted daily logs and then add a form for creating a new log to the Dashboard
  or...?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-237578231.json . 
As for
3- Adding a "Help" link or a set of important links
4- Adding a list of announcements

I think that:.

ad. 3: the full list of links should be in the separate view, but in the dashboard there can be some most important or latest added
ad. 4: as above, but here there **should** be sth like feed of the newest / current announcements /where deadline didn't passed/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-238869567.json . 
- [x]  Adding the student's dashboard page and add routing
- [x]  Adding the link (or form) to add a daily log
- [x]  Adding a "Help" link or a set of important links
- [ ]  Adding a list of announcements
- [ ]  _Giving organizers a place to write said announcements_ _/outdated due to use of existing mailing feature/_
- [ ]  Making the dashboard the default landing page for students (?)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-238869989.json . 
!screenshot from 2016-08-10 15-41-23
!screenshot from 2016-08-10 15-41-42

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-239383101.json . 
Notepad added :)
!screenshot from 2016-08-12 09-49-08

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-340765947.json . 
It's unclear whether or not this is still a WIP or if it's been dropped (or implemented). @carpodaster do you have any idea about this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\comment-350085815.json . 
I'll close this and open a fresh new issue for Summer of 18. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-155585074\issue-155585074.json . 
Originally created by @alicetragedy on July 21, 2015. Moved from the orga TODO list. It was discussed at length during the orga call on July 15th, 2015.

---

As of now, we have no specific place where we put information that is relevant to **selected students only** – only a spot (the website) where we have the application guides. 
I feel there should/could be a separate spot, ie. in the teams app, where we provide additional information for the students such as instructions on creating a blog post and pull request, instructions for the conference raffle, etc..

There are several possibilities:  
1. to move all information like this to the help section of the teams app
2. to create files for each instruction set in the inline-code or inline-code repos, and link to them from the teams app (eg. from the help section)
3. to create a separate repo for students, which they will have access to
4. to move all such information to the website and make everything completely transparent

There are pros and cons to each possibility, but I would prefer going with either 1. or 2. as I feel that:  
- the teams app is the right spot for such information
- a separate repo would be YET AGAIN another place they have to check regularly, which might overwhelm students
- some of the info is not relevant for applicants or "outsiders", so the website just doesn't seem like the right spot for it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155589086\comment-235908340.json . 
I'll gladly take this one. Best to wait until  # 512 is finished? To avoid complications. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155589086\comment-238188068.json . 
Hey @F3PiX, did you link the correct issue? #512 seems unrelated.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155589086\comment-238188920.json . 
thnx, It is #503.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-155589086\comment-258967822.json . 
Closed by #546 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15591393\comment-19496355.json . 
Awesome, thanks @joneslee85!

I've added you to the collaborators team, so you have push access.

Btw hanging out on irc.freenode.net #rgsoc for this. Let's chat!

I was thinking that it'd be easier for newcomers to work with erb and standard rails tests. But yeah, let's just get started like this and see how it goes :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15591393\issue-15591393.json . 
A basic stack with:.
- postgres
- slim-rails
- rspec-rails
- factory_girl_rails
- database_cleaner

Aim for Heroku deployment

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15591393\pr-6342672.json . 
A basic stack with:.
- postgres
- slim-rails
- rspec-rails
- factory_girl_rails
- database_cleaner

Aim for Heroku deployment

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15628257\comment-19540032.json . 
I delete the users#new action and everything related since registration happen through GitHub

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15628257\comment-19569991.json . 
@svenfuchs @joneslee85 can one of you guys give me push access please? :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15628257\comment-19601477.json . 
@lucaspinto done. you could always ping me on the channel to make sure i react faster :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15628257\comment-19601548.json . 
@svenfuchs you weren't online :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15628257\issue-15628257.json . 
I worked on it with @fannivuniconnu, it should be done later today.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15633603\comment-22056613.json . 
@svenfuchs ruby toolbox turned up nothing, but Sandglaz/maktoub might work.  a super simple hack would be to create a mail link with each email address in bcc.

what features were you thinking?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15633603\comment-22058113.json . 
wait, wat. sorry, @tjmcewan, this has been implemented a while ago.

see URL.

closing this ticket

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15633603\issue-15633603.json . 
I think we should add a function that makes it easy to email everyone

Is there some engine that provides such stuff as a drop in?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15695906\issue-15695906.json . 
- add authorization with CanCan
- manage User authorization for User Model
- remove users#new action

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15695906\pr-6390954.json . 
- add authorization with CanCan
- manage User authorization for User Model
- remove users#new action

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-222332316.json . 
I was not sure if people from outside the project should be **invited** to _just_ fix an existing issue without getting further involved with the project _(I'd see it as the 3rd way of contributing after bug reports and feature requests)_.
If so, a **inline-code** section could be helpful / save some time. I added one in 065de181898fa26f5b00479a72e86b8fce731ef3 - feel free to remove the commit if that part of the guide was not planned to exist.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-222348438.json . 
@klappradla that makes perfect sense, thank you!

Do we want to explain the labels in a separate paragraph futher up and link to them in the 'Finding an issue' section? Or mention/describe them as we go along?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-222355266.json . 
@carpodaster Regarding the labels: I like the idea of explaining them in a separate paragraph (maybe at the end, like in the atom example)? Then we can link to the separate section about labels every time we need to. This has the advantage that the list would probably be easier to maintain than if the label info was scattered across the document.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-222357038.json . 
Another thing: we might want a "getting started" section at the beginning (?) about setting up the project locally? A link to the readme would even be enough, I think.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-222452223.json . 
Atom's label section in the end is nice. I'd give it a try, but it might turn out to be over engineered for the teams app, as the label's aren't that complex and special.

And @carpodaster linking to a label section from **inline-code** is a good idea, but probably won't _dry_ things up to no longer having to explicitly mention inline-code and inline-code there I guess, as these are the key labels useful for finding an appropriate task.

@alicetragedy I thought about adding the **inline-code** section as well, but wasn't sure where to put it. I tend to put it more in the direction of the pull request section, since I think the 3 ways of contributing should still go first. There's hardly people reading things top to bottom at the internet :v:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-223039229.json . 
Though it might be a huge time suck, I love the idea of encouraging pairing as suggested by @ramonh :person_raising_both_hands_in_celebration: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-225718532.json . 
In tonight's weekly call we talked about having a potentially incomplete Contribution Guide being better than having none :smiling_face_with_open_mouth_and_smiling_eyes:  I added some running text but there are still two (maybe three) open TODOs
- [x] the label paragraph
- [x] where to put the _purely code cosmetics_ bit?
- [x] adding anchor tags to the table of contents at the top?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-230907245.json . 
@klappradla @ramonh @alicetragedy does anyone have time / ideas for the three items listed in the previous comment?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-230922450.json . 
Oh, somehow totally forgot about that again :hear-no-evil_monkey:.
I'll have time to look in any one of them on the weekend.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-231014475.json . 
@carpodaster I'd be happy to do the more "boring" work of adding the anchor tags to the table of contents (to be done once we have most of the content, I guess). I can plan some time for this next week. 

Happy to help with the label paragraph as well if help is required, but maybe you & @klappradla want to look into it together? Not sure if it makes sense to have too many people on such a small task, but I'm always up for reviewing things. 

As for point Nr. 2, I think it would fit well at the end of the "Write code" paragraph? It's quite specific and I think it just concerns code anyway, so it would be relevant for that paragraph. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-231014755.json . 
@carpodaster actually, maybe adding anchor links could be something we could delegate in the #ongoing-tasks channel? Would be a nice easy task for someone who doesn't have much time but wants to help, as no background information is really required.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-231015847.json . 
@alicetragedy that's a terrific idea! But shall we wait with adding all the anchors until we have a final version in terms of structure and text blurbs?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-231016448.json . 
@carpodaster +1! when all is done, just post it in ongoing-tasks, I'm sure that some people will jump on the task :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-231090338.json . 
I'll take a look at this too! Meant to do more for it :smiling_face_with_open_mouth_and_cold_sweat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-231878594.json . 
Short update on this: I feel like I lack the knowledge for a section on _"dibs"_ and _"ping via comment/slack"_ - that's why I still left it as bullet points.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-232462177.json . 
I have no good idea for the divs/ping bullet points. Shall we just kick them? If I'm not mistaken, those are the last missing items.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-232463295.json . 
To be clear @carpodaster, the "dibs" is calling dibs on issues, right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-232463500.json . 
@ramonh Yes, at least that's what _I_ thought :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-232463921.json . 
@carpodaster Thanks for confirming! I think this is sort of/could be covered deeper in the "Finding an issue" section in the "Resolving an existing issue" subheading. I'll try and expand a little to clarify on calling dibs on an issue.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-233482200.json . 
What do you think about adding a notice about adding screenshots if a PR changes the way the Teams App looks? My brain is not wired for CSS and I'm so much more likely to just hit "Meeeerrrrge" when I have a visual of what's going to change.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-233549625.json . 
@carpodaster I totally get it :). +1 #screenshots

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-233551577.json . 
Great idea, @carpodaster!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-233552058.json . 
@katrin-k haha, that wasn't supposed to be a less-than-subtle hint :face_with_tears_of_joy: We've had it multiple times and also recently in another issue/PR.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-233571204.json . 
@carpodaster no worries. I'm also less-than-subtly easier convinced by pics :D

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\comment-234707223.json . 
I think we're done here now. Thanks to everyone involved!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\issue-157326342.json . 
Fixes #454.

This is WIP and a basis for discussion. Feel free to comment and/or push changes! :smiling_face_with_open_mouth_and_smiling_eyes: 

Some inspiration taken from:.
- URL.
- URL.
- URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-71795745.json . 
Fixes #454.

This is WIP and a basis for discussion. Feel free to comment and/or push changes! :smiling_face_with_open_mouth_and_smiling_eyes: 

Some inspiration taken from:.
- URL.
- URL.
- URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-64987826.json . 
I'm curious: Code cosmetic contributions are things like changing indentation sizes?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-64987883.json . 
Yes, something like that. Or the style of writing specs. Or line-breaks.

I'm thinking this only creates noise and is somewhat subject to personal taste.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-64999266.json . 
The guidelines at kernel.org are pretty tight, but shall we cherry-pick something? Like 50 characters max + imperative form (»_as if you are giving orders to the codebase to change its behaviour_«)? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-65369670.json . 
Hm, this is a tricky one. On the one hand I like the idea of beginners being encouraged to try writing tests, and having a rich test suite sets a good example, but can at the same time be super daunting.

Some thoughts on this:.
- We could mention our tooling for tests (Rspec, FactoryGirl, Fakerr, etc), maybe link to these?
- We could encourage folks to get in touch for pairing?
- We could link to one of the tests classes that's beginner friendly to give an idea?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-65436923.json . 
I like the idea of providing a good example for a test case (we may need two: a model/unit test and a request/integration test). I'm only afraid that ongoing work on the codebase may render a once good example too complex, thus outdating the Contributor's Guide.

+1 for encouraging pairing.

Maybe we could phrase it in a way that tests are required to ascertain the well-being of a software product (with the Teams App being no exception), but we understand that it's hard to get started. In that case -> we'll help! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-65460258.json . 
Agreeing all over the place @carpodaster !

Maybe put it like this:.



Providing good but still **generic** enough test templates is hard af and I couldn't do it less than 500 loc I guess. **Guidelines** such as _"test instance methods with all possible inputs"_ or _"test the response codes of all possible controller scenarios"_ are probably easier to put together.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-66039344.json . 
Bit late but I like the written suggestion @klappradla 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-66039574.json . 
Indeed! Would you like to add this as a commit to this PR?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-66042873.json . 
Sorry I'm confused, you're referring to @klappradla right @carpodaster?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-66044273.json . 
Yes, @ramonh – sorry :smiling_face_with_smiling_eyes: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-66047637.json . 
No worries! Just wanted to be sure

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70166432.json . 
I wonder, would the above fit better in the "Resolving an existing issue" section? The comment/Slack part is already sort of resolved there.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70166919.json . 
just noticed a minor typo: "Rubucop" instead of "Rubocop" :smiling_face_with_halo:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70167102.json . 
I'd keep the labels as separate, since it's a big text block and a more general thing, topically overlapping with most other sections. As for _"Ping via comment and/or join Slack"_, yes, I agree, that's already resolved further down and not really necessary here. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70167111.json . 
Maybe a link to the section would be better? I can give that a try

Edit: Hm, doesn't look like we can link to it because it's a subheading. Would it be a bad idea to bump all headers up a notch?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70693271.json . 
Oh sorry, totally got that wrong @carpodaster :see-no-evil_monkey: 

As you say you don't like your new wording, how about: "Issues reserved for students working on the Teams App during RGSoC" - just to make it shorter?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70693866.json . 
Sounds perfect!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70694085.json . 
On a related note: maybe we should consider renaming the label – clearly it's not self-explanatory

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70694270.json . 
I wasn't aware that you could do link-shortcuts like that in (GHF)Markdown. Very cool!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70694904.json . 
@klappradla come to think of it, those issues aren't really _reserved_. There are way more issues tagged with such a label than a pair of students could possibly complete over the course of a summer. What about "Issues _intended_ for students working on the Teams App during RGSoC". Still has a lot of the "reserved"-semantics in it, though :thinking_face:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70695501.json . 
I actually thought about skipping the verb entirely when I wrote my comment above :face_with_tears_of_joy:  _(Issues for students..)_ So _intended_ is even more on point here. Would go for this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70713601.json . 
:thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-157326342\pr-comment-70714334.json . 
Good job :thumbs_up_sign: 
That does explain it best!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15754802\comment-19739571.json . 
Some of it drafted: URL.

But there's no way to add these, right now, and the RolesController is tied to inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15754802\comment-19874540.json . 
done

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15754802\issue-15754802.json . 
Both being allowed to do everything :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15789053\comment-325017177.json . 
@carpodaster  what is the status of this task?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-15789053\comment-325019581.json . 
@juuh42dias still a valid one, although this could probably also mean checking which setting in inline-code we still need – quite a few authorization hooks should be obsolete by our different namespaces.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-15789053\comment-41114319.json . 
@svenfuchs wanna pair?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15789053\comment-41196737.json . 
@joneslee85 while i'd love to, i'm pretty swamped with looking for sponsors atm. if you wanna own this then that would be super appreciated :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15789101\comment-209086329.json . 
This issue is still available? I'd like to do.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15789101\comment-220134628.json . 
Hello @dehvmartins and sorry for not getting back to you earlier.

TBH, I don't know if this issue is still valid – I do know that there is no one working on it. It would be of great help if you could verify that we have tests for that.

You can run a code coverage report with inline-code if that helps. Other places to look at are inline-code and inline-code. Thanks a lot in advance!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15789180\comment-19747625.json . 
added `dependent: destroy to the Team associations

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15789180\issue-15789180.json . 
If a team is destroyed, Role and Activity instances need to be destroyed. Check for other relations, too.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15798728\comment-19874543.json . 
done

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15798728\issue-15798728.json . 
on user create/edit attemp to complete empty fields from the GitHub API

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15804289\comment-19976041.json . 
now normalizing github and twitter handles, i guess that should work for now

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15804289\issue-15804289.json . 
should normalize attributes like user homepage (on write) so we always end up with a valid url

possibly the same with repository urls, user github_handle (we've had people input full urls into a field named "github_handle" on the campaign page, even developers)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15818965\comment-19787974.json . 
Done, I guess.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15818965\issue-15818965.json . 
... and possibly other sources. Some teams already have a twitter account, too. Facebook?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853659\comment-19856832.json . 
Done. Just using the Heroku scheduler for now, which will cost a buck or two, but I'm happy to pay that.

Feeds are now aggregated every 10 minutes.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853659\issue-15853659.json . 
This task will fetch the blog updates for the activity stream

cron? sidekiq?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853718\comment-183048477.json . 
We have included a micro blog system into the Teams App last year. While I completely agree that the Github activity would create visibility, I think it would also create a lot of noise. I'm closing this in favor of the Activity Log

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853718\comment-183049274.json . 
I think I can live with that. ;) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853718\comment-19981453.json . 
i'm looking for a solution

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853718\issue-15853718.json . 
either through a webhook/events, or polling

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853749\comment-19874548.json . 
done for now, i guess

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853749\issue-15853749.json . 
needed before: clarify which information to display and how

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853804\comment-20040092.json . 
@joneslee85 wants to look into this

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853804\comment-20053657.json . 
@svenfuchs leave it to me

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853804\comment-20057750.json . 
jap. just wanted to add a note for others that you're on it :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853804\comment-231521521.json . 
Per-team filter is in place. Omitting project filter: it's very unlikely that two teams are working on the same project and projects are listed in the team's name.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853804\issue-15853804.json . 
 must: by team, by activity type

nice-to-have: by participant, by project, other ideas

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853843\comment-117953141.json . 
@roosdebildt do you want to work on this?

Gravatar is probably not a good option since I doubt all teams have a separate email address set up. Maybe grabbing the individual gravatar images of the students and fusing them together client-side with CSS/JS voodoo?

That would remove the requirement to fiddle with file uploads right now.

wdyt?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853843\comment-117960528.json . 
we'll have a look at it as soon as we're ready! sounds like a great first commit for @F3PiX and me :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853843\comment-119113976.json . 
I think I'm first going to try putting both of the individual github avatars of the students next to each other, so no fuzz for the user. In case we want to upgrade this with upload-/fusing-goodies client-side, we can do that later! waddoyousay?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853843\comment-119126146.json . 
Sounds perfect! :+1: :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853843\issue-15853843.json . 
 alternatively, either the gravatar images of  the team members could be used in combination or the project logo

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853920\comment-19874550.json . 
it now lists the team's activities on the team page

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853920\issue-15853920.json . 
Must: Link to filtered activity stream page
Nice-to-have: Show the activity stream on the team page

.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853988\comment-285054877.json . 
When you say "links to the participating teams", do you mean the ones that got selected for that project or the ones that have applied for it?  @carpodaster @ellenkoenig .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853988\comment-285055300.json . 
@amrtanair the ones that got selected to participate.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853988\comment-319812816.json . 
Surprise! This one is done in #791 .
There is also a follow-up issue #784. 
I think we can close this? (@carpodaster) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853988\comment-320198290.json . 
@F3PiX I'm not sure about this — where are the participating teams shown on the project list? I still think it would be great to see the teams + associated projects somehow, not sure if the project page is the best place for it though. wdyt?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853988\comment-320425021.json . 
Oops, good catch! That was done in my dreams....  ;-) I'd really like to add a column with a link to the team working on the project, preferably their activity stream.
When we are showing the 'active projects' (= accepted and with a team working on it), I'd really like to see what team is associated - preferably with a link to their activity stream. I'd say that is the most useful team information from the 'projects page point of view'. 
 See #784 about the Project Page. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853988\comment-320626213.json . 
@F3PiX haha :D Yeah, I agree with you — adding that column with a link to the team working on the project makes a lot of sense. Would love to see this happen <3.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853988\comment-320763195.json . 
Okay, let's do it! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853988\comment-322031515.json . 
It would be also great to show the team's project on the team's page. And on the list of teams, too.
I wonder if it will require changing the way we assign projects to teams and the team model. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-15853988\comment-350047517.json . 
I'll close this one, there is a follow-up issue, #784  where we can collect the discussions. Feel free to reopen if there is something that needs discussing. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-15884477\comment-19857684.json . 
done

.
#rails-girls-summer-of-code/rgsoc-teams\issue-159675158\comment-225246246.json . 
looks good @ramonh, I think we can merge!! :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-159675158\comment-225246419.json . 
Nice! Thank you for having a look @alicetragedy!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-159675158\comment-225247168.json . 
#yolo 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-159675158\comment-225252124.json . 
Seems to work now, thank you so much @alicetragedy!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-159675158\issue-159675158.json . 
Fingers crossed, this should eliminate the error caused by trying to list the rating section's applications

.
#rails-girls-summer-of-code/rgsoc-teams\issue-159675158\pr-73401997.json . 
Fingers crossed, this should eliminate the error caused by trying to list the rating section's applications

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-225685305.json . 
Hey @carpodaster!
We usually need the contacts and some of profile data for several purposes, such as sending acceptance and rejection emails, statistics and afaik we will also need to send the boxes with the merchandise from the sponsors, so we will need their addresses and t-shirt size.
- Name
- Email
- Country
- City
- Address
- T-shirt size

@mkalininait, do you think we need any other field?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-225686541.json . 
Can you also export the project they are working on?

I was also wondering if we could export the contacts of the coaches and mentors associated with a team. We will probably have to send all of them emails...

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-225866087.json . 
@carpodaster We used this table during the selection process: **Email-Name-FullName-Team**.
In order to get it, we had to pull emails and full names from the DB, and then add other missing information manually. This was not super efficient.

Now I need the same information about coaches (names, emails, teams at the very least). Is it something that can be done quickly enough or is it the task for later? In the latter case I will just get the data manually again and hope it will be easier next year :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-226000671.json . 
It looks like we need three different exports:.
1. Users
2. Teams (with mentors and coaches)
3. Projects?

All of this just for the current season (to start with). 

Is it ok to have teams and users in separate CSV tables? You can join them with a little spreadsheet magic (disclaimer: I'm not good at wielding Excel/OpenOffice magic).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-226004622.json . 
@carpodaster Should be fine! We can try :) (I like casting magic in spreadsheets :) )

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-226326710.json . 
@carpodaster Do you think it can be implemented this week or should I pull contacts from the DB this time again? (jftr: I'm absolutely fine with that too!)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-226402888.json . 
@mkalininait I'm on a long-distance train ride this Saturday so I can do it this week. If Saturday is not too late for you.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-226497992.json . 
@carpodaster It definitely works, thank you so much! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-226934769.json . 
Hey @mkalininait, there are some exports ready for grabs at URL – Teams#current containts student + coach info. Ping me if you need more data … I won't be able to get to it until tomorrow night though.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-227023273.json . 
@carpodaster Thank you so much!
I've tested the exports, all work except the users#for_rejection_letter (just to let you know in case you are not aware of it).
I think I will get coaches' emails from the Teams#current export. Is there any way to add coaches' names there?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-227066980.json . 
Thanks for the feedback, Maria. I haven't tested inline-code but I assumed it wouldn't work any more: it's quite old, untested, it even has a comment that it probably breaks at a certain point. I just carried it over because I was too lazy to delete it. It's gone now.

I've added the coaches' names in a separate column. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-227237977.json . 
@anasofiapinho I've added the students' export with location + tshirt sizes.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\comment-227240250.json . 
So awesome @carpodaster! Thank you! <3
This will really make our lives easier! \o/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160021404\issue-160021404.json . 
Hej @anasofiapinho and @mkalininait – you mentioned a CSV export feature today. Could you briefly scetch what kind of data you would need exported on a regular basis? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160279285\comment-226027658.json . 
Works, thank you so much! @carpodaster 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-160279285\issue-160279285.json . 
Here: URL.

So basically once you made a mistake there is no way to fix it without console magic.

!screen shot 2016-06-14 at 22 25 22

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161071259\comment-227010972.json . 
I think that's a great idea @michaelem. I don't have any insight into the email setup, but can maybe look over it with you if @carpodaster is busy. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161071259\comment-227011893.json . 
The Teams App sends mail as summer-of-code-team@railsgirls.com via Google Mail.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161071259\comment-229014387.json . 
Ok, if it's actually sending via gmail it should be fine for now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161071259\comment-229015926.json . 
I've just checked with inline-code: the domain has no SPF data. I don't know how much mail services encorce SPF settings these days, but in any event: we don't control the domain so it's not in our hands. Does anyone know who could add SPF data to railsgirls.com's DNS ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161071259\comment-229016768.json . 
Yep, that was what I originally noticed: no SPF or dmarc.
It looks like the dns provided by linode.
It would help all email sent from the domain so there would be an advantage for the maintainers of the domain as well.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161071259\issue-161071259.json . 
Since we will be adding more notification emails I thought it would be a good idea to review the mail setup. Can someone ( @alicetragedy ?) walk me trough the email setup?
My hunch is that we might be able to improve our delivery rates by adding SPF policies and so on. (And maybe start using a different from address with a domain that we have more easy access to.)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161278419\comment-227253438.json . 


Not yet, no. Maybe add a inline-code subfolder within every namespace and put partials not related to a resource in there?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161278419\comment-227263177.json . 
@carpodaster since that Is my usual approach as well I did that now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161278419\issue-161278419.json . 
Shows the same status icons as in the supervisor dashboard to admins in the /teams view.
The change is simple enough but is there any convention where to put shared partials?
Since they are used in another view now inline-code seems like an odd location for the performance indicating partials.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161278419\pr-74501738.json . 
Shows the same status icons as in the supervisor dashboard to admins in the /teams view.
The change is simple enough but is there any convention where to put shared partials?
Since they are used in another view now inline-code seems like an odd location for the performance indicating partials.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161312605\comment-227363539.json . 
@michaelem I know there hasn't been a test to begin with, but would you mind adding one?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161312605\comment-227386580.json . 
yes, will do so today (THB I was just too tired yesterday :see-no-evil_monkey:)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161312605\comment-227571246.json . 
Added a spec for the class, I'm not that handy with rspec yet (I am more used to minitest), if anyone has suggestions for improvements please let me know.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161312605\comment-227650250.json . 
Hey @michaelem, from a quick look at your tests (I might be wrong), it seems like you're using the _should_-syntax as opposed to the _expect_-syntax RSpec introduced some time ago and recommends to use. It's quite easy to switch to this syntax though.
If your browser is not used to it, googling for the syntax tends to bring you to the old docs.... these are the current ones :see-no-evil_monkey: 

I think using _expect_ is best practice (see here), so more people are used to reading it like this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161312605\comment-227729879.json . 
@klappradla omg, yes, I did not realise I was using the old syntax. Shouldn't (haha) I get warnings by now for doing so? I'll dig out transpec tonight.

Additional though: I'd disable the should syntax entirely?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161312605\comment-227810380.json . 
Well, they just _encourage_ you to use the expect-syntax, not **force**, since there seem to be some cases where you could prefer it... so maybe that's why there are no deprecation warnings. It will at some point maybe extract into a gem - so they kinda seem to want to get rid of it :winking_face: 

Disabling it entirely, don't know if really necessary, but you could give it a try:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161312605\comment-227834126.json . 
Changed to the new syntax (and amended to the old commit).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161312605\comment-228155200.json . 
I am VERY happy that you improved this. :person_bowing_deeply:  And even more that you added tests... 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161312605\comment-228174913.json . 
Looks good! :sparkles:  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161312605\issue-161312605.json . 
This fixes a bug (that was probably not occurring in the app directly) where each time evaluation was called the resulting score would be added to the last score (so after a few calls it would be higher than it should be). Since it's mostly your code @F3PiX, does this look fine to you?

(I found this while building the log update reminder in #256 which I'll add to this class as well, that is the reason why I also moved the self.buffer_days? method to a class method.)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-161312605\pr-74525538.json . 
This fixes a bug (that was probably not occurring in the app directly) where each time evaluation was called the resulting score would be added to the last score (so after a few calls it would be higher than it should be). Since it's mostly your code @F3PiX, does this look fine to you?

(I found this while building the log update reminder in #256 which I'll add to this class as well, that is the reason why I also moved the self.buffer_days? method to a class method.)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16136624\comment-20182092.json . 
good catch, thanks! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16136624\issue-16136624.json . 
Use a full instead of an empty star to signal a sponsored team.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16136624\pr-6613496.json . 
Use a full instead of an empty star to signal a sponsored team.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-228494496.json . 
Are you saying that you would just have a text field and not the checklist nor the button? If that is the case, I agree with you @mkalininait. If it's just to replace the button for the text box, I agree too. It will take one step out of filling the form and for me that's an improvement on UI and UX. I like to make things simple and stupid in forms, even though it will be a bit harder for us to process the information afterwards. If this makes any sense, I would suggest we just put a link there to a web page/github issue that had a list of conferences we know, in case the students don't know any or would like to get some ideas.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-228524880.json . 
I'm not too familiar with the conference raffle logic, but I believe we need actual database records, referenced by an ID for it. I can imagine that having just a free-form text input makes things very tedious during conf raffle round 1 + 2

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-228529432.json . 
@anasofiapinho @carpodaster I didn't actually mean to remove the dropdown. My suggestion was to add a text field _in addition_ to the dropdown. Sorry, I probably didn't make it clear enough.

How I understand the current process: 1) we find interesting conferences around the world and in teams' locations; 2) we contact organizers and arrange diversity tickets and lightning talk spots (if possible); 3) we make a list of conferences who accepted our request; 4) we make a conference raffle.

The reason why I proposed to make an additional field is that there, on the step 1, we might not know about all the interesting conferences, especially local ones. My proposal is to make students suggest conferences they'd like to attend, so that we could add them to our list and process on steps 2-4.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-228533797.json . 
@mkalininait That is fine too. :) Like I said, I am up for removing the button because I takes away one step from the process.

Let me know if you want me to work on the database of the conferences, with all the fields of the database like @carpodaster spoke about or whether you would make any other changes.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-228567671.json . 
@anasofiapinho I'm not sure I understand you. Why would removing the button take one step from the process away? Could you explain please? 
What this button does, it lets you choose yet another conference from the list for the conference raffle.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-228578171.json . 
Hey @mkalininait, I just didn't understand how it worked. I should have asked to try it before giving my opinion. Sorry for taking your time.

So, this means that there is a "block" containing the dropdown, the link "Remove" and the button "I want to add another conference". Every time you click on that button it will duplicate that block allowing people to add another conference or remove it if they click on "Remove". Just like the "Roles" "block" on the users' profile, right?

Yeah, I agree with you. That text field is helpful after those blocks.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-228677904.json . 
inline-code already offers a link to create a new conference for admins. I would rather re-use that … with a bit of tidying up (ie. moving the hardcore conference editing into the orga-namespace).

We can add a inline-code/inline-code/inline-code state-machine to conferences just like we have for projects. That would mean a conference created by an admin (from within the orga namespace) is automatically accepted, admins get an email when a conference is suggested by somebody else. Open question: who is that somebody else? Anyone registered? Members of accepted teams?

How does that sound in general, taking the suggest-a-conf feature out of the form, that is?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-228890462.json . 
@carpodaster That could work. A have a couple of concerns:.

1) It sounds much more complicated to me, than adding a text field to User profile :) I mean dev efforts. It might take some work from our (orga) shoulders in the end, because we won't have to enter conferences from User profiles ourselves, but then again: I don't think there will be that many of them.
2) I feel like if we make this feature outside User profile, very few students will actually fill it out. It's easier to fill it out when it's in User profile, because we remind students to complete their profiles before the program starts.
3) I'm not super acquainted with business logic of the Conference functionality yet... Can we add a Conference which we haven't even contacted yet? Is it called "Conferences (1st round)"? AFAIU at this point, 1st round conferences are all conferences which come to our mind and 2nd round conferences are conferences which will participate in the raffle, right?

Having all these arguments in my mind, I also understand your aspiration to make the Teams app logical and consistent :thumbs_up_sign: 
May be someone else wants to share his/her opinion on this too.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-228977663.json . 
@mkalininait I think having a simple text field that then creates a list of conferences for us, might be a good idea. Nothing too complicated to make it work for this year I'd say. Depends on who wants to take this on, though. I'd say: the goal is for the organizers to have a list at the end of the day of conferences that we can contact. That's also possible by them telling their supervisors and the supervisors filling out that list, if no technical solution is easy enough. But from my side there are no strong opinions. If you want to take this feature on and you think, a text field might be the best, then sure, go ahead (after making sure, Carstens doesn't give a strong veto)! :flexed_biceps:  I don't care too much about the consistency of the logic, since we might have to change / remove that feature anyways in the future. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-228991983.json . 


@anikalindtner do you mean the conference feature? Can you elaborate on this a bit? This has some implications on currently open issues. 

Other than that: I do have strong feelings against adding it to the inline-code model. Yes, it is easy to add a db column, but in my book, suggesting a conference has nothing to do with a user. If we want to go for the least amount of work: why not just send an email?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-229012754.json . 
To answer your question @mkalininait, we do two raffles in the summer, that's why we have "conferences (1st round)" and "conferences (2nd round)". This means any conference added to the "1st round" will be visible for the students and will be a conference they can apply to for a free ticket. 

I agree with @carpodaster on adding the conference to the inline-code model. I don't think that just because it can be done, it should be done ;) Not caring about the consistency of the logic is exactly what leads to big apps that are super difficult to be maintained, and I'd rather avoid that.

When I first suggested that we ask students for local conferences they would like to attend, I saw it more as a "student tells their supervisor about a conference" type of situation, not an extra feature in the teams app, for the simple reason that we don't actually have an exact plan of how this would work, and adding a feature that has been poorly thought-through is imho worse that adding some of the conferences manually into the teams app. Before having the suggested conference in the list of conferences students can apply to, one of us needs to contact organisers of the conference anyway and have the free ticket approval; so at the end of the day, I don't think having it in a text field in the app or in a list supervisors send us would make much of a difference.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-229205203.json . 
Thanks for your input @anikalindtner @alicetragedy 

You won @carpodaster :) We can make a proper feature. It looks to me though, that it won't be ready for use in this season. WDYT? 
If this is the case, would it be possible to ask supervisors ask students about preferred conferences - as a solution for this year? @anikalindtner I can provide a google form or a spreadsheet for that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-230054112.json . 
FYI: I'm going to send an email to students and ask them to suggest a conference for this year. 
But may be we need a proper feature for next years.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-323588788.json . 
Isn't this already part of the conferences milestone @mkalininait ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\comment-323863263.json . 
@klappradla Yes! And it's already implemented <3
I'm closing this issue. Feel free to reopen it, if you think that something still needs to be done.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-162028489\issue-162028489.json . 
Students can choose a conference from our list in their profile. However it's possible, that there is a cool local conference which we don't know about. 

!screen shot 2016-06-23 at 23 11 45

I think we should add a text field where a student can suggest a conference.
Something like "Here you can suggest a conference you would like to attend as a part of the RGSoC program" [text-field].

In inline-code: the field should be available regardless the conditions: inline-code and inline-code

In inline-code: the field should be displayed regardless the condition inline-code, but there should be another condition (that the field if filled out).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162516670\comment-228833172.json . 
Thanks @Althaire for reporting this. Yes, that's a solid bug and actually occurs more often than we would think: luckily there are many alumni who stay loyal to the program and find themselves back in RGSoC in roles other than students :winking_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162516670\comment-232424533.json . 
@Althaire I've removed those conferences 2015 from your profile. Hope it is ok with you :)

@carpodaster @F3PiX I'm not sure, can we close this issue? Was is resolved with this PR URL ? AFAIU, we still need to remove conferences 2015 manually in cases like this one, right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162516670\comment-232425188.json . 
@mkalininait no, it's not fixed. I was planning to get to it tonight or tomorrow :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162516670\comment-232434741.json . 
@carpodaster Ah, I see. 
I guess I spoiled a good case by deleting those conferences from @Althaire 's profile then /facepalm/ Sorry :(

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162516670\issue-162516670.json . 
I just checked the team I am supervising this year and my conferences from last year as an attendee show up under the conferences section for them:.
!screen shot 2016-06-27 at 20 22 00

I'm going to remove them from my profile to avoid any confusion for now.
_EDIT: don't know how to remove them, so they're there_

This bug could be encountered very little but it might get increasingly confusing if people from previous years stay on :octopus:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162700109\comment-229190239.json . 
Hey Maud, thanks for filing that issue. The repos do exists but only supervisors have access to it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162700109\comment-229706519.json . 
:thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162700109\issue-162700109.json . 
Hi!
I was checking the supervisor's dashboard. The dashboard has 2 links to Supervisor's documentation: the guide and the wike. The links are currently pointing to two non-existent github repo's. 
Are there new url's for these guides? 
URL.
URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162809947\comment-229579366.json . 
whoop! thank you so much @michaelem! @carpodaster or @ramonh or @klappradla could you check this PR and merge if it looks good? :sparkling_heart: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162809947\comment-229596786.json . 
Just went through it. Looks good to me, thanks @michaelem! Gonna merge noooow :rocket: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162809947\issue-162809947.json . 
This adresses #256.
If anyone has ideas on how to make the specs nicer - they are more than welcome!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162809947\pr-75566940.json . 
This adresses #256.
If anyone has ideas on how to make the specs nicer - they are more than welcome!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162809947\pr-comment-68862244.json . 
I dislike plucking the id's here but realistically speaking these will not be many - it's limited by the number of teams currently participating.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162901836\comment-230090177.json . 
Hello @F3PiX, thanks for reporting this. The email I got had the same error. I just checked the code and couldn't find any apparent errors. I also cannot reproduce it in my local dev setup.

My initial idea was what the roles have mistakingly been added as coach-roles first (which would trigger the after create callback) and then later edited to supervisor or mentor. That's impossible, though, as the mail body correctly states that one has been added as a supervisor/mentor.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162901836\comment-230096111.json . 
By "the email you got" you mean the _real_ email you received to confirm your _real_ mentorship? Bummer. I hoped it only was a Factory-problem. Anyway, after your commit, the issue is still there when I create user seeds with FactoryGirl. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162901836\comment-230097327.json . 
Yeah, I hate Slim. I think it was an indentation problem. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-162901836\issue-162901836.json . 
When I assign myself as a Supervisor, a confirmation mail is sent by the mailer. In the body of the mail it says correctly that I am a Supervisor, but in the second part it adresses me as a coach.
This part of the mail is supposed to show only if role == "coach".
I don't see why it is showing up with the supervisor role as well. Anybody? Could it be misplaced slim syntax?

Mail: "You have been added to the 6-melting as a _supervisor_.

Visit the team at URL.
Please confirm that you are indeed willing to join the team as their _coach_. You can do so on the team's overview page listed above (make sure you are logged in using your Github account)."

This is the conditional:.
URL.
in this file:.
rgsoc-teams/app/views/role_mailer/user_added_to_team.html.slim

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163025842\comment-230036879.json . 
@mkalininait will deal with it tomorrow!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163025842\comment-230092464.json . 
@mkalininait the exporter is online now. Ping me if you need additional columns or close this issue if it's all good :black_sun_with_rays:️ 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163025842\comment-230574705.json . 
@carpodaster I've looked through the resulting csv, looks great, thank you!
Would it be possible to add data from the additional form there, WDYT? Could be handy to retrieve locations, coaching companies, flags.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163025842\comment-230700206.json . 
@mkalininait I'll look into it tonight

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163025842\comment-230898261.json . 
@mkalininait I've added a couple more fields. Please check if you need more :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163025842\comment-231448858.json . 
@carpodaster Looks awesome, thank you!! :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163025842\issue-163025842.json . 
Hi @carpodaster !
Here is a small follow-up to Issue #467.
Would it be possible for you to add export of the 'applications' table to csv?
I'm collecting statistics on applications 2016. I think this export will be useful next years as well.

Thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\comment-229597140.json . 
Question. The application-drafts and projects doesn't seem to show up in dev-env. I used existing factories, and in the console, both the applications and the projects render data. Am I doing something wrong here?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\comment-230456533.json . 


Where did you check?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\comment-230491589.json . 
Sorry for the mess with other commits. I take it, as there are no conflicts with the base branch that it is not too bad. Or shall I close this one and start over?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\comment-230700070.json . 
Good morning @F3PiX – tbh it confuses me why all the old commits show up in the diff. This PR is based against master, and even if you merged in a recent version of the master, the diff shouldn't be that noisy. It would be cool if you could start a fresh PR, yeah. Sorry for the inconvience.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\issue-163041742.json . 
Issue #225 
Adds seeds for users, teams and status updates.
First try for Application Drafts and Projects.
- [x] An unaccepted team
- [x] An accepted team
- [x] An accepted, but voluntary team
- [x]  Teams from last season
- [x] Status updates per team  
- [x] An application draft, unsubmitted
- [x] An application draft, completed
- [x] A proposed project
- [x] An accepted project
- [x] A rejected project

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\pr-75732758.json . 
Issue #225 
Adds seeds for users, teams and status updates.
First try for Application Drafts and Projects.
- [x] An unaccepted team
- [x] An accepted team
- [x] An accepted, but voluntary team
- [x]  Teams from last season
- [x] Status updates per team  
- [x] An application draft, unsubmitted
- [x] An application draft, completed
- [x] A proposed project
- [x] An accepted project
- [x] A rejected project

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\pr-comment-69345725.json . 
Can you use inline-code here as well?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\pr-comment-69346090.json . 
Assignment of a random team: you can add a Team instance as well (instead of assigning it by id): inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\pr-comment-69346175.json . 
As far as I know, a list will create 5 status_updates for one team. I opted for 5 status updates for different teams. Okay?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\pr-comment-69346269.json . 
Idea: adding a sponsored/voluntary team from the last season?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\pr-comment-69346383.json . 
Oh, you might be right on this one! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163041742\pr-comment-69570146.json . 
I don't like this solution very much. Wdyt @carpodaster?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163509325\comment-232971939.json . 
omg works flawlessly: URL  :smiling_face_with_open_mouth_and_smiling_eyes: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163509325\comment-232972547.json . 
@carpodaster another day, another (aka: the same old) gif.

!css

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163509325\comment-232973320.json . 
Yes, yes :smiling_face_with_open_mouth_and_tightly-closed_eyes:  - but that's not my Baustelle :winking_face:   The image is loaded from URL - it originally referenced imgur.com and is now transparently proxied.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163509325\comment-233056912.json . 
Aaaah no worries. Modern culture values image over text :-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163509325\issue-163509325.json . 
Currently images embedded / referenced to the activity stream ("minilog" feature) that do not use the https protocol scheme cause browsers to display a mixed content warning.

It's more of a nuisance than a real security threat of course, but it still doesn't feel right.

There is a service called camo that proxies insecure assets through a TLS connection. It has to be self-hosted. It's a nice thing to play around with, I believe, but otoh, it adds complexity and takes some time to implement.

Is it worth it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163514388\comment-230097466.json . 
Hah! I just realized what the bug related to #476 is! I completely ignored the fact that we have two mail view templates: one for text-only and another for HTML mails.

That's what I had the coach-paragraph in my mailbox (I have a text-only mail client) but could reproduce it using the mailer previews (which default to HTML).

Could you change the text-only template so that it also includes the inline-code  condition? That should totally fix #476 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163514388\comment-230119084.json . 
Thank you, @F3PiX !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163514388\issue-163514388.json . 
Supervisors and mentors were incorrectly adressed as a coach in the mailer that confirms their role.

Bug #476 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163514388\pr-76062900.json . 
Supervisors and mentors were incorrectly adressed as a coach in the mailer that confirms their role.

Bug #476 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163517865\comment-230118995.json . 
Wow, thank you @michaelem – let's yolo-merge! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163517865\comment-230119023.json . 
Nice one! Thanks @michaelem 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163517865\comment-230119038.json . 
(Ah dang it, didn't squash – more commits for you, @michaelem :winking_face: )

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163517865\issue-163517865.json . 
I've upgraded to ruby 2.3.1, did a bundle update and fixed the resulting breakage and deprecation warnings. So we should be at least up to date with the locks in our Gemfile.
Did I miss something?
If we merge this it might be a good idea to squash the commits.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163517865\pr-76064711.json . 
I've upgraded to ruby 2.3.1, did a bundle update and fixed the resulting breakage and deprecation warnings. So we should be at least up to date with the locks in our Gemfile.
Did I miss something?
If we merge this it might be a good idea to squash the commits.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163812260\comment-230437824.json . 
See discussion in #473 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163812260\comment-230455131.json . 
@F3PiX I've seen it, thanks. I seems to me that this is a different bug. #473 is about conferences 2015 being displayed for the supervisor who was a student last year, whereas this issue is about the possibility to select a 2015 conference on the user profile edit form.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163812260\comment-230465764.json . 
AHA you are riiiiiight. Sorry 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163812260\comment-232079930.json . 
I made it up to you @mkalininait ;-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163812260\comment-232172559.json . 
@mkalininait This was indeed fixed by @F3PiX – is it corrent that we don't have any conferences for 2016 in the Teams App yet?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163812260\comment-232422180.json . 
@carpodaster Yes, this is correct, we don't have conferences 2016 yet.
@F3PiX Thank you! 
I think we can close this issue. If something doesn't work with conferences 2016 (I will test once we have them), we will make another issue.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163812260\issue-163812260.json . 
User profile -> Edit

!screen shot 2016-07-05 at 12 48 27

I see conferences from 2015 in the dropdown. Can we show only this year conferences or upcoming conferences?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163838706\issue-163838706.json . 
Hey @michaelem,
this updates SuckerPunch to > 2.0. I updated the gem and added an initializer file, required to use this version of SuckerPunch with Rails < 5.

Background: SuckerPunch changed its API syntax when moving to 2.0. But as it is integrated as an official ActiveJob adapter (which will only be updated if Rails is updated), Rails' ActiveJob interface of course still wants to talk to the old API. Only when updating to Rails 5 - which also updates ActiveJob, one can skip this intializer.

Does this explain it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163838706\pr-76265143.json . 
Hey @michaelem,
this updates SuckerPunch to > 2.0. I updated the gem and added an initializer file, required to use this version of SuckerPunch with Rails < 5.

Background: SuckerPunch changed its API syntax when moving to 2.0. But as it is integrated as an official ActiveJob adapter (which will only be updated if Rails is updated), Rails' ActiveJob interface of course still wants to talk to the old API. Only when updating to Rails 5 - which also updates ActiveJob, one can skip this intializer.

Does this explain it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163885668\comment-230718051.json . 
@carpodaster looking into this one, if that's ok :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-163885668\issue-163885668.json . 
This year we don't have the bank account info on the students profile so it's better we remove the database column and all references to bank account info (words by @carpodaster), so that we don't get the "Bank info not filled out" note.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164010088\comment-230698185.json . 
It's a valid point! Problem: we need to make the teams list for the select box Season phase-aware.

To get it fixed fast, I suggest we differentiate between "after rejection letters have been sent and coding phase has not yet ended" and "rest of the season" only. In the former case: feed the select box selected teams only.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164010088\comment-230922864.json . 
Cool, I will have a look. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164010088\comment-231180826.json . 
Where does this select-box live? On what page are you working? @anikalindtner 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164010088\comment-232029126.json . 
I will do the quick fix first. Then again, the workflow here looks a bit cumbersome to me for the beloved orga's. :-) Maybe look into this for a future Orga Dashboard?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164010088\comment-233077229.json . 
O sorry. Do we have a policy that only the opener of the issue can close? Or can I close this when it is merged. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164010088\comment-233263946.json . 


We do not have this set in stone, no. I usually ping the author of the issue via a comment when I think I fixed something and assign it back to them (only possible for project collaborators), but I do close issues myself if there hasn't been a response in some time. The original author will get a notification anyway and can re-open if necessary.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164010088\issue-164010088.json . 
Hey all, I've recently added some members to teams and it's really confusing and hard, because we have a seemingly endless list of teams to choose from - not just this year's teams, but also teams from last year and teams who applied but didn't get selected:.

!screen shot 2016-07-06 at 08 47 22

Who can change that? @F3PiX do you want to take that on? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164022765\comment-230906761.json . 
Very cool! Thanks @F3PiX ! :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164022765\comment-230909017.json . 
Thanks for the lesson :dancer: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164022765\issue-164022765.json . 
A fresh and decluttered PR

Issue #225 
Adds seeds for users, teams and status updates; application-drafts and projects.
- [x] An unaccepted team
- [x] An accepted team
- [x] An accepted, but voluntary team
- [x]  Teams from last season
- [x] Status updates per team  
- [x] An application draft, unsubmitted
- [x] An application draft, completed
- [x] A proposed project
- [x] An accepted project
- [x] A rejected project

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164022765\pr-76394242.json . 
A fresh and decluttered PR

Issue #225 
Adds seeds for users, teams and status updates; application-drafts and projects.
- [x] An unaccepted team
- [x] An accepted team
- [x] An accepted, but voluntary team
- [x]  Teams from last season
- [x] Status updates per team  
- [x] An application draft, unsubmitted
- [x] An application draft, completed
- [x] A proposed project
- [x] An accepted project
- [x] A rejected project

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164022765\pr-comment-69691259.json . 
I don't like this solution very much. Wdyt @carpodaster?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164022765\pr-comment-69691780.json . 
I thought we already had a inline-code. Since it's only used in a factory, I suggest to remove the class method again and create the season for the previous year directly in the factory.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164022765\pr-comment-69692271.json . 
Does this work:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164022765\pr-comment-69701866.json . 
I don't understand why, but it doesn't.  If I do it like that ^ or (that^).to_s, it raises a validation error when I reset the db. If I add a :prev_season to the Season factory and create or call that one from the teams factory, it is not recognized (either not registered or unknown constant.) 
???

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164022765\pr-comment-69719639.json . 
I'll check it out tonight

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164022765\pr-comment-69797843.json . 
Hey @F3PiX I was able to create a trait like this:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164022765\pr-comment-69801827.json . 
:person_bowing_deeply: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164057781\comment-230750101.json . 
:confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164057781\comment-230750787.json . 
Awesome! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164057781\issue-164057781.json . 
update system requirements to ruby 2.3.1

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164057781\pr-76419232.json . 
update system requirements to ruby 2.3.1

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164319826\comment-231093728.json . 
Looks good to me! :thumbs_up_sign: Nice one

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164319826\comment-231098007.json . 
Yes, looks good! Thanks @izuroxx !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164319826\issue-164319826.json . 
#484 removed banking_info @carpodaster @ramonh be gentle ;p

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164319826\pr-76602737.json . 
#484 removed banking_info @carpodaster @ramonh be gentle ;p

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164319826\pr-comment-69918740.json . 
Purely cosmetic stuff: the convention for indenting Ruby code is 2 spaces, no tabs. Your text editor can be set to enforce that, but the configuration options depend on the editor.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164319826\pr-comment-69920937.json . 
sorry! i'll keep that in mind! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16444799\comment-20625602.json . 
weeee \m/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16444799\issue-16444799.json . 
If someone wanna have a look on it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16444799\pr-6766021.json . 
If someone wanna have a look on it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16449124\comment-20600560.json . 
And the favicon for the team app 
Commit: 79e70f90b01d6fa19e8f5b3b291468695ea47357

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16449124\issue-16449124.json . 
Hey, just so you know: I changed the logo on this repo to match the logo on the main site (colors of the heart from RG Berlin to Rails Girls).
According to URL.
:)
Edit: here's the commit 00ba379013cdda1a110b69a8462285f2930ab980

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164499544\comment-232170396.json . 
Oh, it's already in inline-code– cloooosing tiiime! :musical_note: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164499544\issue-164499544.json . 
Please include this sentence: 

"If you are on national holidays that you've cleared with your supervisors, please just ignore this and enjoy your day(s) off!" 

@michaelem do you have time to do that quickly? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164504437\comment-231331827.json . 
Excellent! Thanks, @agnik5 !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164504437\comment-231332024.json . 
Gogo RubyCats!!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164504437\issue-164504437.json . 
Ref. to #455 
tickets_left fixed by adding .to_i method to tickets
test in conference_spec.rb changed to reflect that

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164504437\pr-76733473.json . 
Ref. to #455 
tickets_left fixed by adding .to_i method to tickets
test in conference_spec.rb changed to reflect that

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164508665\comment-231521209.json . 
@F3PiX I'm not sure if I can reproduce it correctly. I can confirm that immediately after the current season is destroyed and we are routed back to orga/seasons#index, the 2016 season is gone. However, the first call to inline-code anywhere will automatically re-created it.

I've tried the following change locally but can you apply it on your end and see if it fixes things? Thanks! :smiling_face_with_open_mouth_and_smiling_eyes: 

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164508665\comment-231524883.json . 
@carpodaster Thanks! 
This solves one problem: now in the season's switch view, we DO see the current season. That is far better.

There still is a problem with the seeds. After switching to another phase and switching back to Real Time, the table in the Teams view is still empty. I _think_ because there are no teams in the seeds with the proper (= new) season id.  The teams in the seeds are set only once, when they are created with db:reset.   

Not sure how to proceed. 
What I am thinking: in the seeds, there are only 2 season id's. Maybe in the 'Real Time' case, I could write something to update the season id's for the relevant seeds teams? 
Or? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164508665\comment-231526068.json . 
Ooooooh, that is absolutely right! When we destroy the season, we lose all references to it. So maybe just deleting it isn't the best idea after all. I think to preserve the teams, projects, (…) for a given (ie. current) season, we really should update the current season like in the inline-code methods.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164508665\comment-231527075.json . 
:dancer:  
I'll fix it. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164508665\issue-164508665.json . 
Issue: When switching the season switch to 'real time', we timetravel into 2015. That is definitively not realtime
I checked the season switch because of @agnik5 's comment on #455 (thanks @agnik5) 

This only happens in dev_env.

I think what happened is:.
- In the season switch, we don't set the dates for real time, but we destroy the current season
- In #486 , we introduce a second season in the seeds, ie last year's season (2015)
  => Now, when switching phases from a fake phase to real time, the season is destroyed , I think we fall back to the remaining season 2015.

Proposed fix:.
- replace @season.destroy with a method that ensure we stay in real time.
- OR... ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164732062\comment-231715477.json . 
Looks good. Thanks Maud!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164732062\issue-164732062.json . 
Solves #491
Before, the season switch to real time did season.destroy. This broke the references, especially from the seeds (only in dev env). Now the season switch updates the current season, and the references from the seeds work again.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-164732062\pr-76882477.json . 
Solves #491
Before, the season switch to real time did season.destroy. This broke the references, especially from the seeds (only in dev env). Now the season switch updates the current season, and the references from the seeds work again.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\comment-232486340.json . 
Superb! Thanks @F3PiX ! :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\issue-165072434.json . 
Solves #485 

From the day the acceptance letters are sent through the coding summer, only selected teams will turn up in the user profile editor (for orga's only). 
Plus some refactored Team.scopes

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-77114238.json . 
Solves #485 

From the day the acceptance letters are sent through the coding summer, only selected teams will turn up in the user profile editor (for orga's only). 
Plus some refactored Team.scopes

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70441355.json . 
I can't use the :by_season_scope, because of the visibility thingy in there. Hence the newly added scope here for the team query, and a season query in the season model. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70509351.json . 
I would rename the scope to inline-code or something like that. I wouldn't duplicate the term "team" in the scope since we're already telling inline-code to return teams.

Another idea: maybe modularize the scopes so that there is a inline-code one (with all teams for the current season) and inline-code with (inline-code). The required scope can then be composed with inline-code (and the other scopes can be refactored/DRYed to re-use the new scopes).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70577862.json . 
I was hoping you would say something like that :-) .  Maybe I better open a new PR for that, wdyt?  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70585754.json . 
Nah, we can keep it in this PR

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70642014.json . 
Typo :father_christmas: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70642238.json . 
Can you rename it to just inline-code? We have similar scopes in other models and sticking with the same name keeps it consistent.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70659119.json . 
I will, sure, but I did it on purpose. I like a little more verbosity to makes things more clear and distinctive. And hopefully more beginner friendly. From my experience from last year, I found the fact that different things have similar names the most confusing. But it is probably a Rails convention, isn't it?     

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70672196.json . 
The concrete name »current« is not a Rails convention, but re-using method names on different classes (when the expected behaviour is the same or at least similar) is a _Ruby_ convention. Ruby focusses heavily on the idea of _duck typing_ – meaning it doesn't really care _what_ it is as long as it responds to a certain method.

But I understand what you mean, and the name inline-code is totally up for debate.

What I suggest: let's stick with inline-code in this PR. A follow-up PR can refactor all definitions of inline-code (and its relevant factory traits) to inline-code. It's a longer method name, but it totally reveals its intention. And that's way better! What do you think?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70692039.json . 
See my other comment. Let's stick to just inline-code in this PR

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70697617.json . 
I like it very much! And thanks A LOT for the explanation. 

For the follow-up PR: I checked the factories, I didn't find a factory that uses the season scope of the Team class. The current_season traits all call the class method Season.current. 
You don't mean that the factory trait should have the Team scope instead, do you? 
And we are talking only about renaming current_season to in_current_season? Not current_other_things. 

If I understand it well: just renaming 'current_season' scope in Team class, to in_current_season scope: that is a tiny job, I can do it right away.
Otherwise, please merge and I will open a new PR and figure it out.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70698473.json . 
There are traits that are also referenced by inline-code. They should be called inline-code as well. But let's discuss the details in the new PR.

As for the merge: see my most recent comment below. If that's done, I'll merge in an instant :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165072434\pr-comment-70698808.json . 
Okay! I missed this while I was writing my answer. On it now

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165105204\comment-232169808.json . 
Looks good, let's give it a shot! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165105204\issue-165105204.json . 
Solves #482
Ignore conferences from previous seasons in selection dropdown.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165105204\pr-77137669.json . 
Solves #482
Ignore conferences from previous seasons in selection dropdown.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165174813\issue-165174813.json . 
Merge this to receive a badge indicating the number of issues in the ready column on your waffle.io board at URL.

This was requested by a real person (user carpodaster) on waffle.io, we're not trying to spam you.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165174813\pr-77187157.json . 
Merge this to receive a badge indicating the number of issues in the ready column on your waffle.io board at URL.

This was requested by a real person (user carpodaster) on waffle.io, we're not trying to spam you.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165191116\comment-232278777.json . 
:clapping_hands_sign:  :clapping_hands_sign:  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165191116\comment-232325216.json . 
:party_popper: :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165191116\comment-232427268.json . 
@klappradla @michaelem since you gave me the excellent tips about data transformations in schema migrations, I'd really appreciate a looksie :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165191116\issue-165191116.json . 
Closes #346 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165191116\pr-77198980.json . 
Closes #346 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165191116\pr-comment-70686295.json . 
The inline-code syntax used to be broken for polymorphic, but afaik on the current FactoryGirl version you can now use:.

block-code.

But comes down to personal preference in the end @carpodaster :winking_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165191116\pr-comment-70688297.json . 
_(accidentally deleted my comment again I guess..)_
Awesome approach using inline-code here I wanted to say :party_popper: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165191116\pr-comment-70689049.json . 
Maybe I don't get it, but I don't see the point in creating two comment records here. Wouldn't this be enough?

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165191116\pr-comment-70689251.json . 
Totally! I was just changing the factories to get the tests pass, didn't look at the semantics. Will change it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165191116\pr-comment-70689510.json . 
:thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165384243\issue-165384243.json . 
URL  
Exporters::Projects#current  
Add projects' tags to the export.

Not urgent.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165422843\comment-232968581.json . 
!yolomerge!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165422843\comment-232970117.json . 
and this merge on a Friday afternoon! That's so YOLO of you!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165422843\comment-232970257.json . 
:face_with_tears_of_joy: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165422843\issue-165422843.json . 
This fixes #479

I tested it locally and it works. It was easier than I thought but I'm a bit sceptical if we want this at all: we need another Heroku app (the one that runs the camo app). Otoh, it just keeps everything as is when inline-code and inline-code are not configured.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165422843\pr-77362682.json . 
This fixes #479

I tested it locally and it works. It was easier than I thought but I'm a bit sceptical if we want this at all: we need another Heroku app (the one that runs the camo app). Otoh, it just keeps everything as is when inline-code and inline-code are not configured.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165424743\comment-232497088.json . 
Yes, I saw the code climate score earlier this week and it made me very sad ;-) I would love to improve it.   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165424743\comment-232591272.json . 
Sure Maud! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165424743\comment-267990451.json . 
Goal accomplished :party_popper: 
!season after refactoring

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165424743\issue-165424743.json . 
The season switch methods add some complexity to the inline-code class according to CodeClimate.

There are three steps:.
- [ ] Extract default dates for a newly created season into some form of constant
- [ ] Re-use these constant default values in inline-code (where applicable) and inline-code
- [ ] Move the inline-code and inline-code into a service class

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165527762\comment-232765773.json . 
EDIT I have serious doubts if we want to follow through. It is not super useful to only rename the :current scope in Team, I think. With every step down the to do list, the refactoring becomes reaaaally cumbersome. At the end of the to do list, I had over 150 broken tests. HAHAHA.   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165527762\comment-233256857.json . 
Hej @F3PiX. Yeah, I can imagine a lot of broken tests. Your TODO list above looks good :thumbs_up_sign: 

As for the usefulness: sure, it doesn't improve code quality as reported by CodeClimate and it doesn't speed up things. It "only" improves code readability and the impact of that is very hard to measure. Personally, I think the changed scope better reveals the intention and I think it would be a valuable contribution. If it's too much work: let's not do it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165527762\comment-233263692.json . 
I'll have a look again with a different approach. It is a lot of work, it is also a valuable lesson on refactoring (and of being careful what you wish for LOL).  Thnx.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165527762\comment-235195526.json . 
Continued as #513 after rebasing

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165527762\issue-165527762.json . 
Touches #493
- [x] Step 1: the Team.in_current_season scope
- [ ] Refactor other models' current scope (application_draft,  conference, project, student)  
block-code.
- [ ] Refactor other references (in exporters, etc) 
- [ ] Refactor traits in factories plus seeds.rb

@carpodaster Right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165527762\pr-77432436.json . 
Touches #493
- [x] Step 1: the Team.in_current_season scope
- [ ] Refactor other models' current scope (application_draft,  conference, project, student)  
block-code.
- [ ] Refactor other references (in exporters, etc) 
- [ ] Refactor traits in factories plus seeds.rb

@carpodaster Right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233254791.json . 
Hello @agnik5 and thank you for this PR :) 

My CSS skills are virtually nonexistent but I noticed a repeated inline-code / inline-code class. Wouldn't it be better to define the styles for the outer inline-code element?

Could you add screenshots of how it looked before? (Sure, I could fire up a server, create a conf and see for myself. It's just easier to review a PR with a screenshot attached).

I wonder if we could collapse the styling for season and conference; they only differ by a 10% vs. 20% width. Does the season styling look weird/funny/bad with 20% width? If it can be generalized, a more general class name would be good – alas, I can't think of one right now :crying_cat_face: 

Maybe @alicetragedy can lend some CSS/styling advice?

Oh, and you don't have to state the changes manually. It's quite some work to style all the code blocks and GH already does that for us.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233256136.json . 
Using very specific rules can get confusing fairly quickly, so I'm generally of the opinion to try and make a single class work for several sections (e.g. the inline-code and inline-code views in this case). 
If we could stick to a single class (inline-code or something less general) if would be :thumbs_up_sign:  
I'm going on holiday tomorrow :black_sun_with_rays:️ but I will try and see if I can take a better look at this later. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233258666.json . 
Hey @agnik5, thanks for the PR!

I agree with @carpodaster and @alicetragedy. I think it makes sense to combine both views' styles for consistency. I'm struggling to come up with an overall class name, though. Maybe something like inline-code, since we're using inline-code and inline-code tags?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233615308.json . 
Hi everybody, thanks for your comments.

My intention was to distinguish styling referring to different inline-code files, also keeping in mind probable "Refactoring of styling - global.sass" proposed in #504. I thought such naming would be more intuitive.

But of course there's no problem with changing the code as you wish, with the use of one class instead of two :) 

@carpodaster Don't worry, your CSS skills are much better than mine :D I'm not sure if it's possible to define the styles for the outer inline-code element as I guess the core issue was to make rows containing inline-codes and inline-codes  displayed as block elements. Or maybe I misunderstood your above comment.
Before it looked like in the roxxx33's screenshot at the beginning of the #455 thread. Seasons don't look very bad with 20% width, just names there are shorter than in conferences, so 10% is just a bit better /smaller space between columns/.

@alicetragedy Have a great holiday!
@alicetragedy @ramonh maybe sth like "block-row"?

It's also possible to fix it with inline-code + inline-code, but it looks better with width set in inline-code as names of inline-code have different length.

Just to ask in case of myself learning: does such repeated code for different classes harm app's performance or is it just a case of good practice? I'd like to know your point of view to learn more and apply this knowledge in future.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233616541.json . 
Screenshot of seasons with 20% width
!screenshot from 2016-07-19 14-26-31

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233623097.json . 
Hey @agnik5!

I think the reason is for maintaining the styles. Since we have very similar styles for conferences and seasons, it makes the most sense to try and combine them into one general style, so that if we make any changes we can do them in one fell swoop. 

Furthermore, Having the repeated row classes makes things a little brittle — it could happen that we'd forget to use it.

Removing the row div altogether and trying to make the styles for conferences and seasons the same makes the html a little easier to read and the styles less error prone.

I hope that makes sense and that I got it right!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233623365.json . 
Ahem, please excuse the broken sentence. I'm awful at typing on mobile :smiling_face_with_open_mouth_and_cold_sweat:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233633691.json . 
Thanks @ramonh. If I understood you correctly, you mean not only having one class for styling both conferences and seasons, but also undoing the new divs in slim files, whatever class they are?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233634584.json . 
That's right! Having those repeated row divs isn't fully necessary when we can leave the styling to the concrete tags inside, or the containers.

Generally it makes sense not to create a lot of divs that we can do without, as this also makes the html dom structure harder to read or debug.

Hope this helps :smiling_face_with_open_mouth_and_smiling_eyes:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233924162.json . 
OK so what do you think about changing inline-code

block-code.

into

block-code.

with also changing inline-code to inline-code in both inline-code files for seasons and conference views?

!screenshot from 2016-07-20 13-29-37
!screenshot from 2016-07-20 13-30-01

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233929962.json . 
That looks great, thanks @agnik5! The inline-code would make them responsive, is that right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-233934045.json . 
Yes, to some extent. But not for very small screens I guess. I changed the width to 20% and in my opinion it's the biggest width that will look ok on larger screens. PR or improvements?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\comment-234007737.json . 
Great stuff, thank you @agnik5! 

Hitting the merge-omatic :party_popper: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\issue-165573917.json . 
Files modified:.

**app/assets/stylesheets/global.sass**

Deleted inline-code from

block-code.

Added

block-code.

**app/views/conferences/show.html.slim**

Added divs of class inline-code like

block-code.

**app/views/orga/seasons/show.html.slim**

Added divs of class inline-code like

block-code.

due to distinguish seasons styling from conferences styling (both had inline-code class before) and make the code compatible with above mentioned changes

Result:.
!screenshot from 2016-07-14 14-59-20
!screenshot from 2016-07-14 14-59-25

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165573917\pr-77464486.json . 
Files modified:.

**app/assets/stylesheets/global.sass**

Deleted inline-code from

block-code.

Added

block-code.

**app/views/conferences/show.html.slim**

Added divs of class inline-code like

block-code.

**app/views/orga/seasons/show.html.slim**

Added divs of class inline-code like

block-code.

due to distinguish seasons styling from conferences styling (both had inline-code class before) and make the code compatible with above mentioned changes

Result:.
!screenshot from 2016-07-14 14-59-20
!screenshot from 2016-07-14 14-59-25

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165697963\comment-232883255.json . 
Hi @inescoelho! I like the idea of browsing in the history. I would prefer to focus the UI for the majority of users, for who the current year matters only. And thus, adding the year 2016 adds a bit of noise in the UI. Maybe we can add something like a select box to filter activities by year and/or previous team names and what not?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165697963\comment-232942583.json . 
Hi @F3PiX! When you have someone involved in several teams like this, it's kinda hard to figure out where those teams come from. After opening each profile, you have to scroll down to their activity to figure out from each edition they are and it would be nice to have something more immediate.
The browsing on history feature could be useful to show to the world what is our program and what it has been done throughout the years. This could easily be done with a selection box on the Teams page, where you select the year and the table would display the teams of that year. ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165697963\comment-233076318.json . 
Haha, great profile page. 
I see what you mean about adding the year to the start and end date on the Team's profile page. I do think that is a good idea. 
And sure, browsing the history in one way or another can be useful. I am not sure if the best way is to add a filter to the teams index page. I think the community page is a better place for that? There is not much room for an extra column though. Apart from that, how do you think about that?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165697963\comment-233257756.json . 
Hey @inescoelho. I agree that it would be nice to make past teams more visible, but I also agree with @F3PiX that our main focus is always on the current season and it's therefore not super-high on our priority list. Would you maybe like to work on it yourself and send a PR? :smiling_face_with_open_mouth_and_smiling_eyes: 

You raise a valid point with the date format: that should be fixed. I took the liberty of editing your issue to create a checkable bullet list.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165697963\comment-321573385.json . 
Hello! what do you people think about this layout for this issue?
It is /teams index, as suggested by Ines.
!past_teams

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165697963\comment-328608078.json . 
Closing this via #814 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-165697963\issue-165697963.json . 
- [ ] It would be nice if we were able to browse past teams' activity. Some of this information is still available when people is connected with past teams (like me, since I was a student last year and now I'm a supervisor).
- [x] Moreover, the team profile presents the starting date and finishing date of the team. However, this information only displays day and month. Now that we are in the 4th edition of RGSoC, it get's confusing... It would be useful to add the year as well.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16571046\issue-16571046.json . 
So that people subscried to the rss feed can read the content of each post in their rss reader (rather than having to leave the reader and visit the actual blog)
!no_article_content
!with_article_content

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165808565\comment-233483499.json . 
Hey @agnik5, :thumbs_up_sign: to everything you said :smiling_face_with_open_mouth_and_smiling_eyes: . The numbered items fall all nicely into place as a priority list. I think no. 1 should _really_ be fixed. The inline-code  call raises an exception if the record is invalid. This would have to be changed to a normal inline-code (w/o the bang). The form has to be re-rendered when there was an error and redirected in case everything went well.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165808565\comment-235365223.json . 
There is something strange with the date format as well....
!schermafbeelding 2016-07-26 om 16 20 22

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165808565\comment-241522305.json . 
@F3PiX Can you post on which controller action / URL that is?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165808565\comment-241526878.json . 
Hi Carsten, This was on my profile page. localhost:3000/users/33
And on the team's profile page localhost:3000/teams/4 it is like this:.
!teams profile page

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165808565\comment-302788487.json . 
YAY. Last bullet solved. Thanks to @carpodaster and @klappradla for all the support :hundred_points_symbol:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-165808565\issue-165808565.json . 
- [x] 1/ When trying to add a conference without its name, conference is not being added, but the view is broken. I guess there should be for example some alert like 'fill in the name' or a view informing that a conference haven't been added with "Back to index" option.
  !screenshot from 2016-07-15 16-00-16
- [x] 2/ It's possible to add a conference with end date earlier than start date.
  !screenshot from 2016-07-15 15-42-21
  !screenshot from 2016-07-15 15-44-37
- [x] 3/ When adding a conference it's possible to choose not round 1 or 2, but 16, 21, -11 etc. You get a view like conference has been created /but it's not on the list/. There's no alert about incorrect round chosen. I think there should be only two values to chose from /1 or 2/.
- [x] 4/ Similar problem in tickets and flights. You can create a conf with -50 tickets and -40 flight and it gets on the list.
  !screenshot from 2016-07-15 16-55-35
  !screenshot from 2016-07-15 17-00-40

These are not crucial improvements, as conferences are being added by Orga Team and so risk of mistake is close to zero. Only suggesting.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165814100\comment-233920718.json . 
I also had a few confusions when browsing through the files.  Since I'm currently digging through inline-codeanyways and trying to solve the most obvious mobile issues I might as well work on the sass files. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165814100\comment-238474042.json . 
I'll close this issue. The PR #510 is not yet reviewed/merged, but any remarks can go there, I suppose. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-165814100\issue-165814100.json . 
I think the file inline-code may be reconsidered as global properties got mixed with those applying to certain elements/files. 
Nothing urgent, but a little clarification may be helpful for working with stylesheets files.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166132637\comment-233480261.json . 
Hello @katrin-k and thank you :smiling_face_with_open_mouth_and_smiling_eyes: ! I'm pretty sure it looks awesome but could you attach a screenshot or two?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166132637\comment-233550916.json . 
There you go. 
On the activities page, it's just a little more space between the Team selection dropdown and the label. Almost not noticable ;). 

!pr searchbar

I'll also keep in mind to to assign correct labels for the PRs. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166132637\comment-233551253.json . 
:confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166132637\comment-233551473.json . 
\o/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166132637\comment-233551701.json . 
Yay :rocket: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166132637\comment-233554760.json . 
:party_popper:  :beating_heart:  :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166132637\issue-166132637.json . 
Here's what I did in detail, following the list of changes below:.
In inline-code
- The filter/selection box got a border for better visibility.
- On activities page, the filter for teams got a small margin towards the select dropdown. 
- Styles for the search bar used on community page

In inline-code and inline-code
- Relocate the search bar to be part of the filter/selection box
- Relocate the h4 "Role" to be part of the filter/selection box

In inline-code
- Add button classes.

Edit: Referencing it to #379 for completeness

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166132637\pr-77835586.json . 
Here's what I did in detail, following the list of changes below:.
In inline-code
- The filter/selection box got a border for better visibility.
- On activities page, the filter for teams got a small margin towards the select dropdown. 
- Styles for the search bar used on community page

In inline-code and inline-code
- Relocate the search bar to be part of the filter/selection box
- Relocate the h4 "Role" to be part of the filter/selection box

In inline-code
- Add button classes.

Edit: Referencing it to #379 for completeness

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166142693\comment-238513730.json . 
Additionally, I'll add a inline-code link to all error pages. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166142693\comment-241363451.json . 
@carpodaster Can this issue be closed?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166142693\comment-241513666.json . 
Yes! Thanks a lot, @katrin-k !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166142693\issue-166142693.json . 
The page should also state "500 internal server error" or "404 not found" in addition to the cat cuties.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16624366\comment-20803665.json . 
Hmmm, are you sure? If someone is registered as both a mentor and a coach on a team then we'd wanna see that, don't we? E.g. in order to distinguish that from teams that just don't have a mentor or coach?

I'm probably missing something ... please tell me :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16624366\comment-20806442.json . 
The way I see it, he/she is still part of the same team, no need to list them twice. My rationale would be: "gimme this user's teams!" -> user.teams

I would agree that it would be nice to show the roles, but is that really the concern of the teams assoc?

Something like this would probable nice:.

/users/42

This guy's teams:.
- A-Team (Coach)
- B-Team (Coach, Mentor)

as opposed to:.
- A-Team
- B-Team
- B-Team

Uhm... does that make any sense? :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16624366\comment-20806645.json . 
aaah, i see what you mean now. yeah.

this is an example: URL.

he's both coach and mentor on the same team.

yeah, i agree. ideally it would say there:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16624366\comment-20806832.json . 
after discussing this on IRC it's all cool :)

Thanks, @carpodaster!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16624366\issue-16624366.json . 
Ensure there is only one item listed on users/show if a user has different roles in the same team (ie. coach & mentor)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16624366\pr-6860264.json . 
Ensure there is only one item listed on users/show if a user has different roles in the same team (ie. coach & mentor)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166414928\comment-233741045.json . 
Thank you so much @katrin-k for your help with this!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166414928\comment-233784149.json . 
:confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166414928\issue-166414928.json . 
<img width="633" alt="screen shot 2016-07-19 at 21 31 32" src="URL.

This adds a default option to show all public acitivity on the landing page. This way, one can also revert their choice if one of the two non-"All" options are selected.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166414928\pr-78035266.json . 
<img width="633" alt="screen shot 2016-07-19 at 21 31 32" src="URL.

This adds a default option to show all public acitivity on the landing page. This way, one can also revert their choice if one of the two non-"All" options are selected.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16657531\comment-20850923.json . 
awesome, thanks @carpodaster!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16657531\comment-20868240.json . 
wheeee! 

Travis has deployed this automatically last night: URL.

:heart: :heart: :heart: 

/cc @rkh

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16657531\comment-20868428.json . 
@carpodaster @joneslee85 @lislis @lucaspinto @tbuehlmann 

please note: this means whenever you commit/push to the master branch and tests pass on Travis then Travis will automatically deploy the app

should you not want that, then just push to a branch and/or submit a pull request

:smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16657531\comment-20868538.json . 
Aye!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16657531\comment-20870651.json . 
Great! Thx

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16657531\issue-16657531.json . 
Lists roles for team membership and render bio as markdown

(Also fixes failing spec)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16657531\pr-6878951.json . 
Lists roles for team membership and render bio as markdown

(Also fixes failing spec)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\comment-234225263.json . 
@katrin-k The stage is yours ;-)

EDIT: :electric_light_bulb: How about putting this link into a X icon into the search form? That was my initial thought, but it requires css skills.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\comment-234300832.json . 
@F3PiX I just wanted to take care of the link, but it doesn't render as a link when I run it locally. 
The output misses the HTML:.

block-code.

Did some code snippet play lemming?

Re: the 3rd list item in this PR (hide the link): I'd rather put this into a separate + new issue to not delay the merge of this PR for too long. (Plus, I'm not 100% convinced this is really necessary given the Ajax effort…)

Re: the X icon: I'd rather not use it this way. From a UX pattern/user perspective, the X inside an input field first and foremost removes the entry done by the user, not the result. Usually, the result is then reloaded (more or less) seamlessly. Which again brings us to Ajax… And since we reload the page I'd go for a standard button. Wdyt?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\comment-234367529.json . 
Haha, that got me confused. Turns out, I wrote this in html.erb. I am going to slim it up right now. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\comment-234375463.json . 
Totally agree with everything you say @katrin-k  
I hope the .erb file was the problem, couldn't reproduce it myself.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\comment-234494428.json . 
@F3PiX strangely, .erb was not the problem. Slim also doesn't render the HTML here… :crying_cat_face: 

Could anyone else take a look, plz? 
Tl;dr On my machine, inline-code does not render the HTML. Works fine for Maud, though. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\comment-234553729.json . 
This is taking html escaping to a whole new level.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\comment-234706406.json . 
@F3PiX is this still WIP? Looks good to merge.

That does the inline-code do in Slim?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\comment-234707538.json . 
Good morning karpermeester. It is still WIP, working with katrin_k on the link.
== is output without html escaping. Jury is still out on this solution.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\comment-234874184.json . 
Upsi, I just realized I made a mistake in describing the problem. When there's no search param, the link text is displayed without any HTML tags (but it's displayed, which it shouldn't). The link properly renders when a search param is there. inline-code doesn't make a difference. 

What does the trick is defining an else. 

block-code.

However, the inline-code is then rendered as HTML tags: inline-code. Removing the inline-code helps in the way that there's only an empty a link tag when there's no search param, but I'll keep it since I have a hunch this is better Ruby syntax and thus can't interfere with anything else. 

@F3PiX I'll also add the inline-code to my commit. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\comment-234914350.json . 
Close due to duplicate in #511. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\issue-166794969.json . 
#379 ; moved to #511

Add link to clear search results, disabled until there is a search submitted.
- [x] add link to clear current Search results
- [x] add styling to link
- [x] hide link until search results on display

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\pr-78298355.json . 
#379 ; moved to #511

Add link to clear search results, disabled until there is a search submitted.
- [x] add link to clear current Search results
- [x] add styling to link
- [x] hide link until search results on display

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166794969\pr-comment-71849537.json . 
inline-code would be better in case the param got carried over as inline-code, i.e. w/o a value that could be interpreted as an empty string. An empty string is still a truthy value in Ruby.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166812688\comment-234401096.json . 
The good news is: it works. 
The query returns both user names and team names. 
!find users and teams
I don't understand WHY it works with inline-code.
And if it DOES work, is it an acceptable way as well?  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166812688\comment-234706160.json . 
Morning @F3PiX 



It works in the controller, because line 16 states inline-code. Try firing inline-code in your rails console to reproduce the error I was expecting in an earlier comment.

Since inline-code is part of the public API of that model and therefore can be called out of the controller context, it should bring its own include/join statements. We should probably have a unit test for the class method as well.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166812688\comment-234712975.json . 
Aha. 
I need some time figuring out how to put the associations into the combined query. I would like to, it's something I want to find out and I have an action plan. :rocket:  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166812688\comment-235830502.json . 
 Hi @ramonh. Could you take a look please? 

I solved the ugly pagination logic in the view, which will follow in next pr. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166812688\comment-236450425.json . 
Looks great, thank you @F3PiX! :victory_hand::emoji_modifier_fitzpatrick_type-4:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166812688\issue-166812688.json . 
 #379 
The search form now returns team names too.
- [x] Query for searching team names
- [x] Search result with both users with matching names and users with matching team names
- [x] Make class method work from outside controller
- [x] Write tests

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166812688\pr-78311150.json . 
 #379 
The search form now returns team names too.
- [x] Query for searching team names
- [x] Search result with both users with matching names and users with matching team names
- [x] Make class method work from outside controller
- [x] Write tests

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166812688\pr-comment-71702431.json . 
Hey @F3PiX, I think chaining inline-code statements constructs inline-code queries in SQL. Furthermore, I believe the teams association has to be added with inline-code, too.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166812688\pr-comment-71772149.json . 
Thank you! That helps.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166812688\pr-comment-72599818.json . 
I found a better solution. Following in next pr.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166845225\comment-234910644.json . 
@katrin-k Sorry, I missed your message. Could you tell me a bit more about this merge conflict?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166845225\comment-234915402.json . 
@agnik5 No worries. It was about the styles for inline-code and inline-code (which is now in inline-code) that shows details of a conference. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166845225\comment-235241940.json . 
@katrin-k Is that issue already solved or your request is still pending?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166845225\comment-235255972.json . 
@agnik5 I think, everything's good. I did resolve the merge conflict. I just didn't want to overwrite sth. you did without any word :). 

So yeah, we're good to merge :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166845225\comment-239434105.json . 
Upsi. I realize I've overwritten my own changes… _dumdidum_
I'll close this issue and open a new PR with the changes. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166845225\issue-166845225.json . 
Following issue #504 I went through all the Sass files, moved selectors to the specific files when not used overall, removed unused selectors, added some comments on non-descriptive selectors and removed an unneccessary margin. 

@agnik5 I had a merge conflict with your conference changes _dumdidum_… Could you please double-check that I used your new styles?

No pic today, since hopefully I didn't overlook anything and everything is the same as before ;). 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-166845225\pr-78334486.json . 
Following issue #504 I went through all the Sass files, moved selectors to the specific files when not used overall, removed unused selectors, added some comments on non-descriptive selectors and removed an unneccessary margin. 

@agnik5 I had a merge conflict with your conference changes _dumdidum_… Could you please double-check that I used your new styles?

No pic today, since hopefully I didn't overlook anything and everything is the same as before ;). 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167310102\comment-234902156.json . 
Looks nice @katrin-k !! :balloon:  
About the double PR: I think it would be best to close the original one (#508) and take this one to merge. 
Do you agree?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167310102\comment-234914126.json . 
@F3PiX I agree :).  And will close #508 

@carpodaster Looks good to go

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167310102\comment-234938800.json . 
@ramonh Hi Ramon, could you please have a look? Can we merge? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167310102\comment-234940564.json . 
Looks fantastic, thank you so much! :party_popper: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167310102\issue-167310102.json . 
This belongs to PR #508. 

!508 no search param
!508 search param

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167310102\pr-78642654.json . 
This belongs to PR #508. 

!508 no search param
!508 search param

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167328536\comment-234913494.json . 
@Althaire the thing is that the feed for the blog isn't as quickly updated and recognized by the app as the log entries directly in the app, so the bot thinks there is nothing there.

(@michaelem might have some more technical details here)

so if they decide to do the daily logs on their blog, they have to live with getting a notification every day. one of the only thing that we ask students is to do their daily log and if they want to do it in a special way, they have to deal with the fact that this is not the best solution for them. that's how it is for now. 

in the future we might be able to look into that and see if there is something we can do. since they are the only team doing it this way, i don't see this as a high priority for now, i'm sorry.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167328536\comment-234915206.json . 
It may be that the scope inline-code doesn't take the blog into consideration right now. If we can solve this by adding the inline-code to the scope, it would be a small adjustment. 
@michaelem WDYT? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167328536\comment-234916078.json . 
Not in front of a computer right now but I believe this can be fixed with minimal effort: I think blog updates will be created as inline-code records once fetched. The reminder logic would probably only have to take activities of inline-code feed (don't know the exact value) into account as well.

Von unterwegs gesendet.















.
#rails-girls-summer-of-code/rgsoc-teams\issue-167328536\comment-234916335.json . 
@anikalindtner I know, sorry to bother with this issue :smiling_face_with_open_mouth_and_cold_sweat:  I was going to say but I didn't want to make the comment too long: they don't mind the emails. It's more of a "by the way, this happens" more than "urgent help needed!!" (Also, I think that they were worried that the emails might leave some sort of mark as if they weren't doing the logs, so they checked up on this with me)

No problem at all, thank you! :smiling_face_with_open_mouth_and_smiling_eyes:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167328536\comment-236002699.json . 
Hi Pilar! Just checking.
1) In your Supervisor Dashboard, the blogposts should be listed as updates under 'Activity'. Are they?  
!schermafbeelding 2016-07-28 om 21 37 53

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167328536\issue-167328536.json . 
My team fills out their daily logs on their blog and it gets fed into the teams app. I can read it on the same day it's "due" on the teams app, but they get an email reminder every day nonetheless.

The easy solution would be that they just fill it out on the teams app. I think it would be a huge shame that they abandon their blog (which they can continue to use even after the summer to track their progress) and even more of a shame if we are the ones to encourage them to do so.

The other solution would be that they just copy paste it off their blog, which is a hassle. 

I think the best solution would to find out why the teams app doesn't recognize this feed and sends them the email even though the log is there, on time, on the app, available for everyone to read :smiling_face_with_open_mouth_and_smiling_eyes: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167547757\comment-238188617.json . 
Looks really good, thanks Maud! Tests are passing so LGTM!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167547757\issue-167547757.json . 
Instead of  #500
- [x] Step 1: the Team.in_current_season scope
- [x] Refactor other models' current scope (application_draft,  conference, project, student)  
block-code.
- [x] Refactor other references (in exporters, etc) 
- [x] Refactor traits in factories plus seeds.rb

Scope inline-code for current season refactored to inline-code
All associations now use inline-code, like: @teams.in_current_season, @conferences.in_current_season.
inline-code still exists for inline-code Okay? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167547757\pr-78809797.json . 
Instead of  #500
- [x] Step 1: the Team.in_current_season scope
- [x] Refactor other models' current scope (application_draft,  conference, project, student)  
block-code.
- [x] Refactor other references (in exporters, etc) 
- [x] Refactor traits in factories plus seeds.rb

Scope inline-code for current season refactored to inline-code
All associations now use inline-code, like: @teams.in_current_season, @conferences.in_current_season.
inline-code still exists for inline-code Okay? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\comment-235881281.json . 
58e50ed and f0e9395 @ramonh i hope it all makes some sense :) test pass this time . there's also a email validation to this issue, which i've already started, but wanted to focus on this github_handle first 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\comment-244568463.json . 
The changes made to inline-code in 06c22b8 were alright. I don't think it works without the class method returning an inline-code and inline-code being called with the splat'ed list of immutable attributes.

I think the reason why the tests failed is because inline-code incorrectly removes github_**id** where it should be github_**handle**. You apply the changes in 06c22b8 again (only without inline-code since it is not needed) and modify the spec as stated above? Do the tests still break?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\comment-244878943.json . 
@carpodaster 
c8965d3 - changed inline-code in update action in user controller inline-code toinline-code, deleted changed update attributes in update action in user controller
0a6f1fd - added inline-code in user_controller_spec

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\comment-244962584.json . 
Looks superb now! Let's merge this – thanks a lot!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\comment-244964612.json . 
YAY! Nice one @izuroxx!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\comment-244977546.json . 
Thank You! :bow: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\issue-167828106.json . 
#413

I've added custom validation in users model - immutable_github_handle & added test to it. it should not let the gh handle to be changed on update. before you could freely change it. (commit 61e43fa)
!immutable_gh_before_disabling_field

in the end i've disabled the filed (commit 78326fc)
!immutable gh

Now, few test are failing: 
spec/controllers/users_controller_spec.rb
spec/models/creates_application_from_draft_spec.rb
spec/controllers/application_drafts_controller_spec.rb
spec/models/application_draft_spec.rb

@ramonh i've tried to fix this, tired to exclude github_handle f.ex. in application_draft factory, but I'm a bit lost in tracing the problem. Would you give my some kind of a hint, direction, feedback about the method, tests?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-79005200.json . 
#413

I've added custom validation in users model - immutable_github_handle & added test to it. it should not let the gh handle to be changed on update. before you could freely change it. (commit 61e43fa)
!immutable_gh_before_disabling_field

in the end i've disabled the filed (commit 78326fc)
!immutable gh

Now, few test are failing: 
spec/controllers/users_controller_spec.rb
spec/models/creates_application_from_draft_spec.rb
spec/controllers/application_drafts_controller_spec.rb
spec/models/application_draft_spec.rb

@ramonh i've tried to fix this, tired to exclude github_handle f.ex. in application_draft factory, but I'm a bit lost in tracing the problem. Would you give my some kind of a hint, direction, feedback about the method, tests?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-72452505.json . 
Minor thing here you might like. You can instead write:.
inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-72620365.json . 
Great catch!

I wonder if there would be a way to clean this up so as to not have the application draft know about inline-codes. This separation of concerns allows the application draft be more future proof in case we decide to forgo github for a new up and coming open source platform.

What do you think?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-72626480.json . 
@ramonh yes, that would be great :) challenge accepted :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-72626903.json . 
Awesome! :v:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77442808.json . 
Naming suggestion: inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77442835.json . 
I'm thinking: isn't the validation introduced below enough? If a user changes their GH handle, the validation will trigger and the record won't save. It will also display a meaningful error message.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77589164.json . 
understood :) i've deleted the except method. the github_handle field in a form is disabled, i've added disabled: true in the edit template (commit 78326fc). But when not disabled it displays github_handle can't be changed when trying to change it. shall i leave it disabled?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77591871.json . 
This should be an Array

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77592303.json . 
@carpodaster 
the inline-code where created at first for future-proofing if there might be some changes with github_handle or more params added and also in order to call inline-code in application_draft factory (+ user controller in update action - deleted in last commits). 
Application draft factory needed inline-code to return symbol, but i wanted to test how to pass more symbols, and that's why i made an array and a splat.
As for failing tests - everything passes since  200f387 commit, now it does too.
As for inline-code - "github_id" and avatar_info were in the test before I started to fix it. I guess it passed because i've had filtered Update_attributes in update action. But since i've deleted it -  I added inline-code in the controller test to exclude github_handle. Hope it all makes some sense, if not please let me know how bad i've messed up this time ;p I will try to understad and fix it again :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77592808.json . 
If the class new method returns an array, it needs to be called with a inline-code: 

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77592898.json . 
Needs a splat (inline-code) - see above

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77592984.json . 
@carpodaster 
i've added disabled: true to the form in edit user template (commit 78326fc), so user can't access it  - shall i leave it that way or let it display error when changed

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77593314.json . 
As suggested before: could you name this inline-code please? Rationale: in the context of this AR model, "attributes" is more appropriate. "params" hints at a controller context.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77593369.json . 
The inline-code isn't properly indented :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77594209.json . 
Leaving it disabled is perfect. It doesn't obsolete the validation, though: remember all form data can be forged so it's not sufficient to rely on the inline-code HTML attribute: it's very easy to remove the disabled flag with your DOM inspector / editor of choice. The validation will catch those forged requests.

TL;DR: it's all good with the form :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77601618.json . 
:sob: true, it was suppose to be attributes, sorry for that

indentation - inline-code is in class << self block 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-167828106\pr-comment-77641933.json . 
About the indentation: ooops! My bad. Sorry :disappointed_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-168522052\comment-236450730.json . 
Nice one, thank you @michaelem and @F3PiX!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-168522052\issue-168522052.json . 
This changes the without_recent_log_update scope in order to count feed_entries as well since some teams actually use these instead of status_updates. This fixes #512, using the suggestion from @F3PiX .

.
#rails-girls-summer-of-code/rgsoc-teams\issue-168522052\pr-79487345.json . 
This changes the without_recent_log_update scope in order to count feed_entries as well since some teams actually use these instead of status_updates. This fixes #512, using the suggestion from @F3PiX .

.
#rails-girls-summer-of-code/rgsoc-teams\issue-168539312\comment-238478291.json . 
I've checked it out locally and clicked around a bit: looks good! Thanks a lot, Maud :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-168539312\issue-168539312.json . 
Kaminari provides an array wrapper. This solves 2 things: the ugly checks in views if search params are present, PLUS the empty pages at the end of the user list.

Before:.
!before
After
!after

Very happy that this longlasting issue is solved... (URL 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-168539312\pr-79496605.json . 
Kaminari provides an array wrapper. This solves 2 things: the ugly checks in views if search params are present, PLUS the empty pages at the end of the user list.

Before:.
!before
After
!after

Very happy that this longlasting issue is solved... (URL 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16862351\comment-21177627.json . 
Implemented a simple version of this. 

Supervisors can post comments on teams and review them in the sidebar. Posting a comment will send an email notification to all supervisors.

@benedikt please have a look and see if there's something you'd want to improve. I think this should work for now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16862351\issue-16862351.json . 
- when logged in as a supervisor 
- on the team show view there should be a form text area to submit a comment
- comments are listed next to the team profile along with the created_at date and author name, maybe in the sidebar on the right (only visible for supervisors), newest comments at the top

when a new comment is added an email notification is sent to all supervisors

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16884305\comment-21139571.json . 
@benedikt looks awesome!

I guess we could even remove the date from the individual activities and just keep the time there?

But, more importantly, there seems to be a brittle spec (or a missing order clause depending how you look at it ;) URL ... which, if i would merge the pull request now, would keep Travis from deploying it to production.

Any chance you could fix this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16884305\comment-21139741.json . 
Shame on me for not running the specs! Will fix this :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16884305\comment-21140668.json . 
I think it's a brittle one that only might fail once in a while because of missing order.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16884305\comment-21141339.json . 
Changed both the spec and the helper and removed the date from the activities.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16884305\comment-21146700.json . 
whooopwhoop

Thank you, @benedikt!

Travis is deploying right now, so it should be live in a few minutes.

Btw ... any chance you could possibly look into URL ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16884305\issue-16884305.json . 
The current index page is a little hard to read, because it's a huge dump of activites. This pull requests breaks the list into chunks for each day. 

!2013-07-17 at 21 22

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16884305\pr-6994101.json . 
The current index page is a little hard to read, because it's a huge dump of activites. This pull requests breaks the list into chunks for each day. 

!2013-07-17 at 21 22

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16912745\comment-22010019.json . 
I think this can be closed, right? (Though I dont have rights to do it)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16912745\comment-22010105.json . 
Right!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16912745\issue-16912745.json . 
It would be nice to have the team overview sortable by the date to have a better overview about the progress.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-169237654\comment-238323674.json . 
I like these points a lot, @mkalininait and agree strongly with the first. I think choosing a conference as a team makes a lot of sense.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-169237654\comment-238323853.json . 
About the third point though, just to make sure, you mean adding this comment field to the feature from point 2, right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-169237654\comment-239060023.json . 
I don't have a lot of knowledge regarding the conferences process, but it is logical to have the conferences block on the team's page.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-169237654\comment-239312721.json . 
@ramonh I actually was thinking of adding a comment field in general, not related to feature 2.
The idea is that sometimes teams want to add some additional info about conferences, like: "We would attend conference X only in they provide scholarships / have a LT session" or "We have already applied for the conference selected above ourselves" etc. There might be options.

In general, I need to handle so much information related to conferences this year (incl. info on traveling costs and scholarships which is super important), that I probably need to think a little bit more about how I'd like it to be entered / arranged (should it be just a comment field or something more specific). But your input is welcome anyway!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-169237654\issue-169237654.json . 
I'm working on everything related to conferences this year, and I'd like to suggest a couple of changes in the Teams app.

1) Move the whole conference block from student's page to team's page. Reasoning: we strongly recommend our students to attend a conference (which is part of the RGSoC program) as a team. First of all, when they fill out their preferences on their team's page, that raises their awareness of our recommendation. Secondly, we don't need to merge conflicts manually if two students of one team choose different conferences.
!screen shot 2016-08-03 at 21 30 59

2)  Add a 'Suggest conference' feature. We discussed it already in the Issue #472.
Students should be able to suggest a new conference on their team's page - just the same way as admins do currently. Reasoning: we don't want to overlook a cool local conference which a team wants to attend. Note: may be we should mark conferences created by students with a special flag.  

3) It would be useful to add a 'Comment' field where students could leave additional information about conferences (e.g. 'scholarship needed', 'applied ourselves' etc).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-16924282\issue-16924282.json . 
the user images from this view:.
URL.

add to this view:.
URL.

-would be awesome, if all the coaches, students and mentors are visible with their images

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17010177\comment-22055370.json . 
@kerstin I see what you mean about the double slash and I'll have a go at fixing it.  All of the '/blog/...' links appear to be redirecting correctly though.  The are still two broken links on the page*, but I believe they come from an RSS feed, so they'll have to be fixed at the source blog.
- Broken links for reference:.
- July 26, 2013 post titled "Conference" seems it should link to the plural "/conferences"
- July 15, 2013 post titled 'First Blogpost' is also broken.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17010177\comment-22056523.json . 
@svenfuchs the broken links mentioned in my post above don't appear to be in the summer-of-code repo, although I'm not very familiar with jekyll.  could they be getting cached?  lib/feed.rb seems to suggest all that's needed is to remove & re-add the source.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17010177\comment-22069220.json . 
@kerstin ok, I've fixed the URL bug at the source, so I'm going to close this ticket now.  The teams app will need to refresh the activity feed before the links will be correct though.

@svenfuchs is there a cron time set for the inline-code task?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17010177\issue-17010177.json . 
Hey,

While going through the team pages in order to add people to the corresponding RailsGirlsSoC Twitter lists, I discovered that on the organizers team page, the links to some blog posts are broken.

All the links seem to display as .. **railsgirlssummerofcode.org//blog** .. but while most redirect to railsgirlssummerofcode.org/blog, some do not.

E.g.
- June 13, 2013 - Rails Girls Summer of Code teams announced
- June 12, 2013 - Hello, Rails Girls World!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17010546\comment-105661460.json . 
(Related to the 2013 dataset, closing)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17010546\issue-17010546.json . 
Suggestion:.

For these teams, replace the Twitter handle @railsgirlssoc on their team page with their corresponding Twitter list:.
- Team Helpdesk: railsgirlssoc -> railsgirlssoc/rgsoc13-helpdesk (link)
- Team Organizers: railsgirlssoc -> railsgirlssoc/rgsoc13-organizers (link)

(There are more Twitter lists, but I saw there are no separate "team" pages for the mentors or coaches.)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170113343\comment-238500911.json . 
'users/search' gets the params through the users_controller. If you don't go through that controller, the search field will send a 'no filter'-param to the search method.
That may explain why you can't cut and paste, but offers no solution. I think  inline-code would request the right _page_ but I expect that it is not solving your question.
I just learned :-) how to show a form on a different page with js and ajax. Maybe we could go that way?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170113343\comment-238501178.json . 
But first things first: looks a ton better. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170113343\comment-238511317.json . 
Aah, so the users_info_controller needs to be prepared, too? I had a hunch there was sth. like this necessary. 

I'd be interested in switching to Ajax/JS for loading the results :). However, I'd suggest to open a new issue for it. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170113343\comment-241221365.json . 
This is ready for review/merge, right, @katrin-k ? Or do you want a search form added first?  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170113343\comment-241323042.json . 
@F3PiX naaah. I think it can live without one for now.

So yeah, good to merge. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170113343\comment-241429507.json . 
cool, then let's merge this \o/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170113343\issue-170113343.json . 
Just a minor thing, but a bit annoying whenever I looked at this page. 

Screenshot: (It now looks the same as on users/index)
!pr selection box on users-info

I also wanted to add the search input, but failed. 
- Adding inline-code won't help since it requests the wrong page.
- Pasting the code snippet and adjusting the paths to inline-code did help, but the search results would still show all entries. 
  Any ideas?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170113343\pr-80582907.json . 
Just a minor thing, but a bit annoying whenever I looked at this page. 

Screenshot: (It now looks the same as on users/index)
!pr selection box on users-info

I also wanted to add the search input, but failed. 
- Adding inline-code won't help since it requests the wrong page.
- Pasting the code snippet and adjusting the paths to inline-code did help, but the search results would still show all entries. 
  Any ideas?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17011659\issue-17011659.json . 
cheap way to sort this one column.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17011659\pr-7061828.json . 
cheap way to sort this one column.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170127430\comment-238509480.json . 
Oh dear… This PR contains the commit 6741bf0 which is actually part of PR #518. Sorry, I wasn't aware this would be happening. Does anyone have an idea, how I can 1) solve this and 2) avoid this in the future. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170127430\comment-238516935.json . 
It happened to me recently. I think what happened was that I created a branch on the previous branch, instead on master. 
And the stupid - but fast - way I solved it: closing the PR, open a new branch on master, copy the changes and push them to a new PR. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170127430\comment-238532689.json . 
Indeed, that was it. 
Closing this PR.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170127430\comment-238533280.json . 
Hey @katrin-k, about 2) how to avoid it in the future: it's best to always work in branches. When you start a new feature, be sure to branch them off the inline-code branch. There are several tweaks to your terminal command prompt that always show you which branch you're in. I find that extremely helpful.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170127430\issue-170127430.json . 
On the team/show page, the star left of the team name was at certain points overflowing. The inital problem showed up on a larger screen, but it basically always shows up around the media breakpoints. The star-icon was positioned outside of the main container. 
My proposal: The star is now part of the container and thus follows the overall breakpoints. 

Screenshot:.
!352-reposition-star

Resolves issue #352. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170127430\pr-80592631.json . 
On the team/show page, the star left of the team name was at certain points overflowing. The inital problem showed up on a larger screen, but it basically always shows up around the media breakpoints. The star-icon was positioned outside of the main container. 
My proposal: The star is now part of the container and thus follows the overall breakpoints. 

Screenshot:.
!352-reposition-star

Resolves issue #352. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170143862\comment-238530940.json . 
Aaand again…. I'll close this PR since it contains commits from other PRs.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170143862\issue-170143862.json . 
Here's what I did:.
- Add error type to the page itself
- Add link back to teams app
- Add logo
- Tweak CSS

Screenshot of 422.html, rest looks the same:.
!506-error-pages

This resolves issue #506.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170143862\pr-80604347.json . 
Here's what I did:.
- Add error type to the page itself
- Add link back to teams app
- Add logo
- Tweak CSS

Screenshot of 422.html, rest looks the same:.
!506-error-pages

This resolves issue #506.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170148221\comment-238535158.json . 
Looks fantastic, thank you @katrin-k! Nice work making things consistent too. Merging!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170148221\issue-170148221.json . 
(2nd PR)

Here's what I did:.
- Add error type to the page itself
- Add link back to teams app
- Add logo
- Tweak CSS

Screenshot of 422.html, rest looks the same:.
!506-error-pages

This resolves issue #506.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170148221\pr-80607519.json . 
(2nd PR)

Here's what I did:.
- Add error type to the page itself
- Add link back to teams app
- Add logo
- Tweak CSS

Screenshot of 422.html, rest looks the same:.
!506-error-pages

This resolves issue #506.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170150106\comment-238536480.json . 
Looks great, thank you @katrin-k! Merging now

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170150106\issue-170150106.json . 
(New, 2nd PR)

On the team/show page, the star left of the team name was at certain points overflowing. The inital problem showed up on a larger screen, but it basically always shows up around the media breakpoints. The star-icon was positioned outside of the main container. 
My proposal: The star is now part of the container and thus follows the overall breakpoints. 

Screenshot:.
!352-reposition-star

Resolves issue #352. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170150106\pr-80608847.json . 
(New, 2nd PR)

On the team/show page, the star left of the team name was at certain points overflowing. The inital problem showed up on a larger screen, but it basically always shows up around the media breakpoints. The star-icon was positioned outside of the main container. 
My proposal: The star is now part of the container and thus follows the overall breakpoints. 

Screenshot:.
!352-reposition-star

Resolves issue #352. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170388777\comment-238842664.json . 
@katrin-k is on :fire:  :smiling_face_with_open_mouth_and_smiling_eyes: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170388777\issue-170388777.json . 
This DRYs up the CSS for the error pages in the public/ folder. Belongs to issue #506 and is an addition to PR #521.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170388777\pr-80773621.json . 
This DRYs up the CSS for the error pages in the public/ folder. Belongs to issue #506 and is an addition to PR #521.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-238884865.json . 
What I did so far in commit URL.
I used the existing BS button styles for the various cases:.

#### inline-code

New team, new project, new … 
==> Everything that's newly created

#### inline-code

Save, send mailing, save/update status update, save comment, … also: join team
==> Everything that saves sth. and is then (kinda) finished.

#### inline-code

Edit stuff, add a source/member/conference/role (since it's part of editing whatever profile), link to my team, save application draft (not green since it's not finished and still in the process of editing)
==> Everything that is part of editing sth. 

#### inline-code

Email a team, Tweet about conference
==> Everything that sends out messages to outside the teams app

#### inline-code

Reject project
==> Scarcely used. 

#### inline-code

Delete, remove, cancel
==> All the "negative" stuff

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-238932480.json . 
And here's what I did to the colors. Disclaimer: I'm not a good visual design person. So I took the colors and simply used less "screaming" hues. Plus, I removed the gradients, so the buttons look more flat now. 
Overall, I think it's ok. But plz look at the last pic… this needs inspiration.

==> An add button
!524-button-add

==> A save/cancel combination
!524-button-save-cancel

==> An edit/cancel combo
!524-button-edit-cancel

==> A new… button
!524-button-new

==> That… is a lot more screaming now :(. Currently, those buttons are inline-codeund thus grey. I'd like to use the colors here since they convey a message, but I don't know… Any ideas?
!524-button-edit-mail
For comparison, the page in large:.
!524-button-edit-mail-lrg

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-238934423.json . 
Hey @katrin-k, WOW, this is awesome. Thank you!

I immediately prefer it over the gradients from before.

My one feedback would be to see if it's possible to make the contrast between the button background and border stronger? I feel they're a bit too close, particularly on the orange buttons

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-238935289.json . 
The white text in those bluish buttons (like the "I want to add another conference" button) seems a little hard to read for me, it gets kind of blurry.
But I like the flat - appearance :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-238939786.json . 
@inescoelho good point! I'll double-check on my large screen, too. My laptop is usually displaying things crisper than on many other screens. 

@ramonh possible is everything :). I'll see which colors I can find. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-238983739.json . 
I am not totally convinced regarding the colors. As RG Red is leading, I think it is very hard to combine that fully saturated red with less saturated colors. Regarding the Bootstrap range from succes to danger: I think most of the time it is sufficient to differentiate between the primary choice and secondary choices. I think between all of us we can cook up some other options. How about that? Wdyt @katrin-k ?
What I DO like very very much is the consistency and the style guide for use cases!   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-239094384.json . 
My two cents on this: I also like the idea of flattening the buttons, so I think we should definitely go along with that! Love it :thumbs_up_sign: 
Regarding the colours: green, red and blue send very strong messages, and from a UX point of view, I don't think it's a good idea to stray from these "primary" colours. Turquoise or orange don't really have a "universal" meaning, and it could quickly become confusing and messy. I would suggest sticking to one or two colours (green and red) for straight-forward, important actions, and having all other more "neutral" buttons in grey. If we _really_ want to make huge changes to the button styling, I would keep that for after the program: we are thinking about a redesign for the website connected to a possible rebranding already, and could work on possible colour schemes and, of course, on a style guide so the styles are consistent across the app and the website.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-239101579.json . 
@F3PiX I see what you mean and yeah, I agree, the header color is indeed very strong. I've played around with outlined buttons, that only get a background-color on hover. Makes things way less disturbing. (below are screenshots)

@alicetragedy also brought in a good point. Since any rebranding affects both teams app and website, it totally makes sense to work on both of it together after the program ended and avoid bringing in new styles every other week. 
(It's just… those buttons… :D _scnr_ )

Screenshots with outlined buttons.
!524-edit-add-email
!524-edit-cancel

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-239101765.json . 
I agree with @alicetragedy. However @katrin-k, concerning colors and inspiration: I'm personally bad with coming up with color schemes, so I usually use tools for that. I can highly recommend coolors.co - you can also import images there to extract a color scheme.

Besides that (cc @ramonh :face_with_tears_of_joy: ), there's bootflat, an extension to bootstrap, _"flattifying"_ it. You can also look at their button design + colors (I think they're both pretty good).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-239103124.json . 
@klappradla uuh, URL looks indeed very promising. Nice! What I often do is take one first color and then check out the complementary/triadic colors on URL 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-239107782.json . 
I find complementary colours always difficult to work with, they come with a very strong contrast. You could try with one of the blues from this triad palette. Another great resource for palettes is Dribble's colour search

But as pointed out above, I really wonder if it is necessary at all to add more colours given that the red is _very_ dominant. TBH, I'd simply keep them grey. You could play with shadows and darker greys (or red font) on hover.

Useful resource: URL.

Also, there are so many buttons on that page, that they have more of the function of a toolbar, rather than primary/secondary/whathaveyou actions. Another argument for reducing colour.

And then I have some nitpicks:.
- Something is not quite right with the drop shadow. It should at least have 0px on the x-axis but I suspect there is room for improvement on colour, size, and blur as well.
- I don't like the black(-ish) border between the button groups. I'd suggest making that the same colour as the button border.
- The button for deleting the profile looks disabled. I suggest setting the font-color to the usual text color, rather than a lighter grey.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-239108331.json . 
PS:.



Would that really be a big deal if the designs of the web site and the team app diverge for a little while? I'd personally land the redesign first, and then get to porting it over to the team app.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-239108957.json . 
The white button with outline looks great too!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-239113134.json . 
I like the outlined buttons too. The staple of fairly unrelated actions/buttons is an issue. I wouldn't mind if we don't wait for the redesign to solve this. It seems to me more of an UX structural thingy, and in my book it is never too early to solve that :-)
Maybe some buttons can move a bit? Like the 'add source' could move to where the sources are listed?
Also, I would love to think about the wording of the buttons.   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-239397508.json . 
kchchch… this issue turns out to be a great resource for color choosings ;). 
@troubalex thanks a lot for the smashing mag link. this is really a hugely useful article. 

When I look at the whole thread here, I see 2 basic aspects coming together:.
1. A new visual design (branding) lurking at the horizon
2. Tons of UX issues

Re 1. I feel like leaving the button-dabbling for now and wait for a sincere visual design overhaul. 
The thing is, though, it'd be awesome if this could happen rather soon-ish (= in the upcoming months, especially when I look at #35 being from 2013… ;).). Buuut, this brings in the problem of who can do it :). 
@alicetragedy Are there already specific plans for this?

Re 2. IMO, it makes more sense to work on those UX thingies. For the buttons, those are the placement, the wordings, etc. But also other things like duplicate form fields (#184) or improve display of information (as in #83). (New visuals can easily be put on them later on.)

So all in all, having opened the box of pandora ;D, I'd suggest to close it again. What do you all think?
What I also take away from this dabbling is, it's delightful, but it's surely better to focus on existing issues than opening up new ones. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-239400231.json . 
+1 to focus on the UX thingies for now. 
+1 on closing this one. I wouldn't say that you should not open a new issue if something is bugging you. (Just be prepared that once in a while you will open a box of Pandora.) IMO this discussion produced useful information, albeit not the intended button overhaul. :-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\comment-239400777.json . 
Thank you @katrin-k for summarising it all so well. The primary issue I had with buttons (specifically on the team pages) was less of an aesthetic issue and more of a UX/functionality issue — that button group looks strangely stacked on mobile devices, and I think this should be fixed. 
A big chunk of the teams app is really not created with mobile in mind, and since our audience is global, meaning they will be accessing the teams app from any device possible, I see this as a bigger issue than i.e. the colour of the buttons. I see trying to make everything mobile-friendly as more of a priority than making the interface more harmonious (even though I would really like to get to that point as well).
I would suggest focusing on the UX things you mentioned, and keeping a new styling of buttons, etc.. for a possible redesign after the summer.
There are no concrete plans for this, and it's something we need to discuss as an organisation, but there was the idea of rebranding and moving away from the name "Rails Girls" as it's become increasingly confusing for people who stumble upon our website. This would mean a change in our name, but also possibly moving away from the RG imagery and possibly changing the color schemes, etc.. As you see it's a really big job, and I think that at that point, rethinking the kind of interface we want for the teams app (maybe something cleaner, introducing flat buttons, etc..) would make sense. But: this is nothing concrete YET, I would just see the end of the program as a good possibility to get started (i.e. October).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170404546\issue-170404546.json . 
As mentioned by @alicetragedy in #352, the button group thingy on team/show is a bit unfortunate. Also, I found the button styles are not always used consistently (e.g. "submit a project" is grey, whereas "new team" etc. is blue). Or for projects/edit, the "Cancel" button is missing. 

I'll go through the pages and adjust those. 
In the process I might also come up with a proposal for new colors. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170655688\comment-239194968.json . 
Looks good, thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170655688\issue-170655688.json . 
Fixes TODO from #444

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170655688\pr-80964563.json . 
Fixes TODO from #444

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170669654\issue-170669654.json . 
Belongs to #513

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170669654\pr-80974734.json . 
Belongs to #513

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170875947\comment-240121040.json . 
Great stuff, thank you for taking care of this, @katrin-k! :heavy_black_heart:️ 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170875947\issue-170875947.json . 
New PR for issue #504 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-170875947\pr-81122256.json . 
New PR for issue #504 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-240056414.json . 
Step 1
!first comment

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-240077442.json . 
@carpodaster Could you have a look please? The failing tests are to do with the changes in the routing. Before I adjust the tests, could you check if I am on the right path? 
I had troubles with the redirecting to the PATH_PARENTS in the comments_controller after saving a comment. 
I added an alias to get the right route name. Is this acceptable? Or should I override PATH_PARENTS?
Also, do you object against moving the status_updates#show method into the activities controller? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-240709207.json . 
Hej Maud :waving_hand_sign: 

You moved the inline-code to the ActivitiesController. I would leave it where it is – it isolates the commenting feature to just activities of kind inline-code, otherwise it interferes with feed entries.

The inline-code template can hold all the comment code. You can look at inline-code for inspiration (with the exception that we cannot lock comments for status updates … yet). 

The problems with inline-code / redirection: I'm thinking it tries to redirect to the activities_controller, right? In that case: we probably need a special comments controller that defines inline-code differently but ideally, we can get around that.

@michaelem, do you have a hint on how to deal with PATH_PARENTS and/or the CommentsController subclassing here? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-240711493.json . 


Before we do this, we should investigate how many feed updates are posted and if they are posted instead of a mini log update. Feed updates come from full blown blog sites and they already have a sophisticated comment system. The feed update show partial should maybe make the link to the original page more visible so that people willing to comment can do that on the origin page.

Wdyt?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-240713905.json . 
Hi  :waving_hand_sign:  
Aha, the comments on feed_entries were the reason I was looking for a solution to move the #show method out of the statusupdates controller. 
AFAIK there is only one team currently using the feed instead of the status update input. 
If I can leave the #show method in the status updates controller, that may solve the redirecting at once (as far as I remember that may be the case, but I'll have to check it tonight).
In that case, we definitively start with status_updates comments only. :-) 
Keep you posted.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-240873955.json . 
I moved the comments back to the status_updates_controller. I had to pull the same trick with the routes to make the redirecting working.
(The failing tests are about the routing in the atom feed looking for the non-aliased route.)

So, what to do? Is this ok? Or add a comments_controller and tackle PATH_PARENTS ? 
Or something else?
( @carpodaster, @michaelem  )

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-240879541.json . 
@carpodaster @F3PiX PATH_PARENTS is intended to provide a way to prepend a namespace if one subclasses the comments controller (compare here).

The issue at hand is that we get to the comments controller which redirects back to the object that the comment was created on and that object is an Activity. Thus redirect_to redirects to the activity_path(activity). That we have differnt kinds of activity is nothing that rails knows about.

So the current fix works because it creates an activity_path, but it would fall apart as soon as we have another commentable to which we want to redirect to within the root namespace.
Another possible solution would be to subclass the comments controller and have something like a StatusUpdates::CommentsController? This Controller then could live under /status_updates/comments and always redirect to a status update.

Kinda thinking out loud here, but does that sound reasonable?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-240881461.json . 
@F3PiX other than the redirect thing (which is more of an issue with the existing codebase than your pull-request) this looks very nice. If it helps I can try to explain what is going on there in a more real time medium (slack?) tomorrow.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-240952510.json . 
@michaelem Sounds very interesting and I would love to learn more about it. I will ping you on Slack, thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-241221137.json . 
Here is a different solution. With a lot of guidance of @michaelem :person_bowing_deeply: , and to and fro the PATH_Parents.
Is this is a better solution than the previous one?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-241376127.json . 
I think so but I'm a bit biased :smiling_face_with_open_mouth_and_cold_sweat:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-242647612.json . 
I was thinking: what if we think the other way around? Say we had the validation for inline-code of inline-code in place, and polymorphic comments, before we had Supervisor checks and comments? Would we move the validation to the child comments controllers, like it is now? Or would we solve it by changing the flow after the Supervisor clicks the inline-code button? 
Is this worth exploring? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-244968530.json . 
Sorry Maud for not getting back to you earlier. I would leave the current validation (or lack thereof) as it is and deal with it at another time. I don't know where to go with this myself and probably need to meditate on this with my text editor of choice :shinto_shrine:.

Looking at the check boxes above, what else is missing from your perspective?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-244979684.json . 
No sorries please. :-) 

Okay on the validation meditation. 

Katrin-k and me want to pair on adding some javascript to improve UX.  That will not happen before next week. If we want to have comments before the summer is over :-) we can merge this one as is.  We can open a new PR for the remaining tasks.

Shall I have a look where the conflicts come from? I can do that tonight. Other than that, to me it is ready for merging.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-245254238.json . 
I can't find anything obvious in this PR that is in conflict with Master, so I think it is something that changed in Master after this PR started.   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-246105262.json . 
Hey Maud, you can resolve the merge conflicts when you expand the "command line instructions"  (only step 1 though) in the greyed-out merge area below; it should be displayed for you as well since you're a member of the org.

When you do the git pull in step no. 1 you should get the merge conflict (in inline-code). You can resolve it with inline-code. When you've resolved the mc, commit what's already been staged push it to your remote branch again. This should update the PR.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-246130161.json . 
This looks weird. It looks as I was force pushed myself into step 2.... :grinning_face_with_smiling_eyes:  Help? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\comment-246604014.json . 
Moved to #536. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\issue-171367865.json . 
To do
- [x] Add basic comments setup to status_updates only (Maud)
- [ ] ~~Extend to feed_entries (instead of @status_update) (Maud)~~
- [x] Solve routing error in redirection to PATH_PARENTS after comment is saved (Maud through: :michael)
- [ ] Add javascript to show 'new comment'-form on activities index page (Katrin & Maud)
- [ ] Styling on index page (Katrin)
- [ ] 'Add a comment' button or link 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\pr-81442775.json . 
To do
- [x] Add basic comments setup to status_updates only (Maud)
- [ ] ~~Extend to feed_entries (instead of @status_update) (Maud)~~
- [x] Solve routing error in redirection to PATH_PARENTS after comment is saved (Maud through: :michael)
- [ ] Add javascript to show 'new comment'-form on activities index page (Katrin & Maud)
- [ ] Styling on index page (Katrin)
- [ ] 'Add a comment' button or link 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\pr-comment-75400411.json . 
there is a typo here, missing space in 'ahref'

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\pr-comment-75661753.json . 
This anchor isn't used

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\pr-comment-75662798.json . 
I'm not too sure about introducting this namespace. It doesn't really group anything and only holds a single controller.

Of course it not communicated anywhere, not is it set in stone, but I like to think the namespaces serve the purpose of grouping authorization for the different user roles in the app.

What do you think about a top-level controller named inline-code ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\pr-comment-75682964.json . 
I think the inline-code is a very good idea. This probably was a leftover from the path_parents-path I travelled ;-) As is the anchor in the other comment. 
I will have a look tomorrow. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\pr-comment-75818266.json . 
Let me try to fix this with a validation

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\pr-comment-75833858.json . 
Should I refactor the inline-code and inline-code check in one method that checks the commentables?  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\pr-comment-76015802.json . 
Temp solution until we have a 'Add a comment' feature on the index page.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\pr-comment-76308339.json . 
Does an 'Add comment' link on the index page even work? A comment always references a single record so we can only really offer that option for a show action.

I would remove the flash. It's good to advertise a new feature but the flash system is not the right channel. I've announced the last major changes via twitter; @anasofiapinho retweeted it and I hope that at least a few students interested in the Teams App caught the news. If not – they'll learn about it by some other means eventually :smiling_face_with_open_mouth_and_smiling_eyes: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\pr-comment-76310168.json . 
I don't know what side-effects this may cause. Sure, it only fires when the inline-code is true, but I feel like validating on the two dimensions "by whom" (e.g. supervisor, public user, …) and "what kind of commentable" violates the idea of polymorphic commentable.

An idea would be to have something like a StatusUpdateComment form object that encapsulates the validation, but I think that's too much for this PR.

It's not ideal, either, but I would revert to the inline-code check for the time being and remove the validation.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171367865\pr-comment-76312649.json . 


Don't know yet :-) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144286\comment-349948272.json . 
I'm closing this. A redesign is certainly required but it's also a big project and probably ties into the rebranding, anyway.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144286\comment-75814138.json . 
Hey @anikalindtner – is this still a thing?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144286\comment-75814783.json . 
@carpodaster yes, would be awesome, if we could implement this. (or at least some of the ideas)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144286\issue-17144286.json . 
heyhej,

here are some ideas i collected for the teams app:.

make the user overview a little bit nicer: 
->give every participant a little box with infos like this:.
!screen shot 2013-07-17 at 12 45 55 pm

include a twitterstream, that shows the latest tweets from every team

on the team-site, rank the teams by activity, so that the team with the newest activity is first

make the date in "latest activity" a link that links to the latest blog post

add team pictures to the team overview

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144340\comment-21470594.json . 
isn't this already there?
see my profile for example: URL.

or I am getting this wrong?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144340\comment-21471351.json . 
oh ha, sorry, yeah, i need to change it, i meant the overview :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144340\comment-22051381.json . 
is this still an issue? (:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144340\comment-22051394.json . 
yeah! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144340\comment-22051809.json . 
@pxlpnk are you working on this now?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144340\comment-22052335.json . 
Not yet, if you want to do it, feel free to work on it! otherwise I would do it during the day.

On Sat, Aug 03, 2013 at 01:29:55AM -0700, Tim McEwan wrote:.








## 

Andreas Tiefenthaler
Mail and Jabber: at@an-ti.eu
Web: URL.
PGP: 49C0DBF3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144340\comment-22066687.json . 
@pxlpnk @anikalindtner this feature has now been implemented, but only for admins.  seeing as how this information is publicly available on the individual users pages, I'm guessing this wasn't the intention.  just wanted to clarify before I go opening it up...

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144340\comment-22118040.json . 
@svenfuchs pulled this to the users index. if everyone agrees we can close this! 

also makes more sense there

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17144340\issue-17144340.json . 
just without news fancy design and stuff, just as an info for all the supervisors. until the news, fancy design is out, a simple text field should be enough :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171532467\comment-241514693.json . 
Hello Maud, thanks for reporting this! I could reproduce it locally the other day. It would seem that the current season is fetched from the DB way too often (n+1 problem?). Haven't had the time to dig deeper – if anyone wants to tackle this: it's up for grabs :smiling_face_with_open_mouth_and_smiling_eyes: 

It's a performance issue, but not a really pressing one. I don't have any data too back this, but I should think that inline-code is not our most frequented endpoint.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171532467\comment-241530574.json . 
- About the n+1 : Sometimes it renders very fast. If it would be a n+1 problem, wouldn't it be _always_ slow? 
- What I found: WHEN it renders slow, it is mostly the views that takes a long time (over 200 ms). 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171532467\comment-242686183.json . 
I found that  it has to do with the Google analytics script in application.html.slim  .
With this switched off, everything loads under the recommended 200 ms. With the script switched on, even the plain inline-code view needs way over 400 ms. 

Makes sense?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171532467\comment-262653485.json . 
Cool! This is solved by 33f2021. :dancer: 
!schermafbeelding 2016-11-24 om 00 05 03
Can be closed now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-171532467\comment-262709782.json . 
Nice! And what a cool side-effect :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-171532467\comment-262746949.json . 
hahaha that's brilliant! :person_raising_both_hands_in_celebration: :sparkles: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-171532467\issue-171532467.json . 
It takes a lot of time for the page to load after submitting a search. I found that the Time to First Byte is very long: 

!search page loading

I don't know how to find the cause for this. Hints? Ideas? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\comment-240705143.json . 
Super cool to use a video, thank you @izuroxx! :party_popper: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\comment-240706409.json . 
Agreed, the video-demo is so very cool! :movie_camera: 

Thanks for the PR, it looks really good :confetti_ball: 

Except from the in-line comments made by Ramon and myself, I'd only ask you to add a controller/request spec that fires the Ajax request. If you need help with that – e.g. starting points – let's talk on Slack.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\comment-240874966.json . 
Supercool!! Both the video and the preview tab <3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\comment-242684399.json . 
Let's merge this fella! Thanks a lot – it's a really cool feature and very well done :fireworks: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\comment-242687104.json . 
YAY! Nice one @izuroxx 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\comment-242687414.json . 
@carpodaster @ramonh thank u so much, i'm soooo happy :four_leaf_clover: :tada: :bow: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\comment-242704642.json . 
awesome!!! :party_popper: 
*does a little dance*

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\issue-171885178.json . 
Closes #437 
@carpodaster @ramonh Please take a look - it took a long time, sorry - I had to begin my journey with JS, jQuery + Ajax on this one. 
Since the first time i showed you the preview tab, I had some troubles to make the preview work also with edit on existing projects. Yesterday i managed to fix this, but not sure if it's acceptable (in sendPreview function, preview_project.coffee). 
before writing tests for what I've created - I wanted to show you and ask for review

demo here (vimeo)
(sorry, with sound ;p)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\pr-81804098.json . 
Closes #437 
@carpodaster @ramonh Please take a look - it took a long time, sorry - I had to begin my journey with JS, jQuery + Ajax on this one. 
Since the first time i showed you the preview tab, I had some troubles to make the preview work also with edit on existing projects. Yesterday i managed to fix this, but not sure if it's acceptable (in sendPreview function, preview_project.coffee). 
before writing tests for what I've created - I wanted to show you and ask for review

demo here (vimeo)
(sorry, with sound ;p)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\pr-comment-75295822.json . 
Totally picky, but it would be good not to add this extra new line :smiling_face_with_open_mouth_and_cold_sweat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\pr-comment-75295891.json . 
Super stuff using Ajax! Nice one :thumbs_up_sign: 

I think it makes sense to remove the inline-code call though, how about you?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\pr-comment-75296244.json . 
It's better to get the URL from a data attribute from within the form. The form (created from a view) can then use the Rails routes helper (probably inline-code). This reduces the coupling between javascript and the responsible controller name.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\pr-comment-75296481.json . 
oh sorry, i've missed this one and haven't deleted it :sob: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\pr-comment-75296723.json . 
No worries! I've been there lots of times :smiling_face_with_open_mouth_and_smiling_eyes: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\pr-comment-76306036.json . 
Could you rewrite this as

block-code.

The inline-code directive mimics an Ajax request in the controller test, ie. it sets the request format to something javascripty.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-171885178\pr-comment-76306359.json . 
Just one minor thing: can you use a dash instead of an underscore here? And, concordantly, in the corresponding coffee script as well?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17335702\issue-17335702.json . 
URL 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173413354\comment-242684512.json . 
Note: will still write a quick test for this today :see-no-evil_monkey: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173413354\comment-242739135.json . 
Kühle Bohnen!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173413354\issue-173413354.json . 
creates JSON endpoint to retrieve list of students / teams on our website.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173413354\pr-82860493.json . 
creates JSON endpoint to retrieve list of students / teams on our website.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-247221783.json . 
I can take a look at this issue

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-247295863.json . 
@nbogis awesome! I know that @katrin-k had also started looking at it (see first list item which has already been done) — can you see if you can coordinate with her so you don't work on the same thing at the same time? thanks so much for helping!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-247640143.json . 
@nbogis feel free to go ahead on both the above mentioned header/menu issues :). 

So far, I have only tried to locate the reason for the bug. My enlightenments so far: It only happens on the "Activities" page which is also the root/index page. The only difference to all other pages is that Activities has the rss-feed link. Removing it didn't help, but double-checking also doesn't hurt ;). 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-247866730.json . 
I solved the second one. The one with the collapsed menu needs more research. I think I need to write a js function to move all the stuff down when the burger is clicked

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-247907317.json . 
!image

Does this look good or should I hide the sign in ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-247930112.json . 
IMO: on a phone screen, the dropped down menu should confidently take over the screen, and being the main visual presence on the screen. So I would not mind if the dropped down menu would push all the other content out of the way, or blurr them or something.

One more thing. We had discussions on the navigation previously, and I - being a backender so be gentle, please  ;-) , - have the strong impression that a lot of the issues in the header are caused by the fact that we do not have implemented a proper Bootstrap navigation bar. I know because I implemented part of it. LOL Wouldn't implementing the Bootstrap navigation bar properly be a nice first step? I think it will automatically take care of most of the responsiveness issues. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-248011832.json . 
Awesome @nbogis! I agree with @F3PiX, that's totally okay for me if the menu takes over the screen/hides part of the page. So for item 3, the menu can definitely hide the sign out link, etc...

Regarding the bootstrap navigation: I was actually under the impression that the only changes that had been made were in the styling and colors and that the rest had been implemented as should, but if it's not, I agree that the way to go is to do it "properly". Maybe @nbogis or @katrin-k are interested in that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-248095178.json . 
See #380 Not sure if Ramon is working on the navbar, or only on the issues re: links. @ramonh ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-248162776.json . 
ok thanks all for your insights. I didn't js file. I figured that I would just change the z-index and give more priority to the menu bar. The only problem I'm having is that sign in div doesn't look good. I will see if I can hide it without creating other issues. 

@F3PiX, I think this is the right bootstrap. Most of the boostrap themes have navbars on top with a big image under it so when the navbar is clicked, it covers the image and thats fine. Our case we have text which doesn't look good if they're covered.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-248235273.json . 
Do you mean we have the bootstrap navbar properly installed? I have the impression we have a header with rows, where the header contains the nav items, instead of a navbar class that contains the nav items. Not true?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-248270954.json . 
@F3PiX from what I remember to have seen, you should be right. Bootstrap's way to go is wrapping  a navbar (e.g. using inline-code) around a container. For the Teams app it's the other way round: a container / row containing a inline-codeelement. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-248271143.json . 
Hey @F3PiX! I still own @katrin-k a mindmap draft for which links to use in the navbar :smiling_face_with_open_mouth_and_cold_sweat: 

Sorry about the delay! I should be able to finally get into it this coming weekend.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-248526415.json . 
@klappradla Thanks, that explanation is superclear
@ramonh I only meant to ask if you were working on the navbar, before someone else started to do the same works. :-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-249454776.json . 
ok I will try to implement this. Another way I saw is to implement it as a dropdown menu. I tried it but things look weird on other sizes so I went with the z-index solution. I will see the bootstrap way idea

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-258723706.json . 
I believe this issue is resolved.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\comment-258797047.json . 
closed in URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-173486236\issue-173486236.json . 
While we can safely assume that most users are viewing the Teams App from a laptop or otherwise bigger screen/device, there are still a couple of glitches with the overall mobile experience that we can't really ignore :face_with_tears_of_joy: 

This is a feeble attempt at collecting several "smaller" issues and bugs currently happening on the Teams app. 
- [x] 1) box for content filter on the activities page is smaller than its content (see screenshot 1)
- [x] 2) Signed in as and sign out link info (top right) is being wrapped onto the next line (see screenshot 2) (note from and for Katrin: try margin-left: auto; and different width on this one)
- [x] 3) the burger menu is a little all over the place: it doesn't always show all links (e.g. Community and Home), is at times hidden behind other elements (e.g. behind the Activity filter box), is transparent or makes it difficult for the links to be clicked because of the transparency. On some pages, it even pushes the "sign out" link down out of the way. (see screenshot 3 & 4)

I'd love to have some of these issues fixed <3

On top of those, the tables on the teams and community pages are not responsive (I realise that this is a bigger issue which is why I don't think it can get done at the same pace as the above, but it would be great to think about a way of solving that someday)

screenshot 1
<img width="396" alt="screen shot 2016-08-26 at 17 35 55" src="URL.

screenshot 2
!img_2311

screenshot 3
!fullsizerender

screenshot 4
!img_2313

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17366900\comment-22054187.json . 
thanks @robinboening :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-174911604\comment-244735246.json . 
yay!! thank you for this :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-174911604\issue-174911604.json . 
This solves minor dis-arrangements:.
- On teams#show, the stacked action buttons have now margins
- The filter / selection-box on Activities + Community are now neatly left-aligned in mobile
- The navigation had one size where the "Home" link would line-break -> solved.
- On user#show the list of teams and conferences had unpretty indents -> aligned.

Pic for team#show
!mobile_action-buttons

Pic for selection box/ filter. 
!mobile_selection-box

.
#rails-girls-summer-of-code/rgsoc-teams\issue-174911604\pr-83902886.json . 
This solves minor dis-arrangements:.
- On teams#show, the stacked action buttons have now margins
- The filter / selection-box on Activities + Community are now neatly left-aligned in mobile
- The navigation had one size where the "Home" link would line-break -> solved.
- On user#show the list of teams and conferences had unpretty indents -> aligned.

Pic for team#show
!mobile_action-buttons

Pic for selection box/ filter. 
!mobile_selection-box

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175255151\comment-244961910.json . 
Hi @izuroxx – that's amazing! Looking forward to it :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175255151\comment-244962313.json . 
Super neat, thanks @izuroxx! I look forward to see how it looks! :rocket: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175255151\comment-244964223.json . 
Wow that is super cool!!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175255151\issue-175255151.json . 
@carpodaster @ramonh 
During the past weekend I've created preview function for student updates -> based on preview function for projects, which I recently finished, wanted to practice off-hours what i did in #530 .
I wanted to share this with you and ask if you would like to add this kind of feature to student updates? 

video demo here

There are a few things in my current version (my branch), that still need fixing (like f.ex. "Back" button under preview for edit student update, that will confuse everybody), which I will fix asap.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175692651\comment-246204332.json . 
I am not totally convinced about the table layout for the previous status updates. Is it a necessary in combination with the preview? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175692651\comment-247152535.json . 
@F3PiX The preview function just swaps the form with a rendered preview. Everything else on the page remains the same, including the table view of past status updates.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175692651\comment-247152738.json . 
Let's do this – thanks a lot @izuroxx !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175692651\comment-247157876.json . 
Haha nevertheless, I am still not convinced about the table view :-) But the preview is TOO cool. Love it. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175692651\comment-247243684.json . 
Thank you!!!! :bow: :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175692651\issue-175692651.json . 
ref #534 
new demo video here :headphones: 

@carpodaster @ramonh 
I wanted to not interfere much with existing views and partials and not rearrange much, so came up with a way to deal with inline-code button in edit template (it was confusing while on preview tab). I've created inline-code with inline-code method that checks if it's inline-code action and displays the button if so. What do you think about this?
Also I'm a bit concerned about another thing: while creating a new status update & also while previewing it, we have a inline-code table of all the status updates below (photo).  Maybe while on preview tab, only the preview of student update should be visible?
Please let me know what you think.
Thank you :bow: 

!student_updates

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175692651\pr-84433461.json . 
ref #534 
new demo video here :headphones: 

@carpodaster @ramonh 
I wanted to not interfere much with existing views and partials and not rearrange much, so came up with a way to deal with inline-code button in edit template (it was confusing while on preview tab). I've created inline-code with inline-code method that checks if it's inline-code action and displays the button if so. What do you think about this?
Also I'm a bit concerned about another thing: while creating a new status update & also while previewing it, we have a inline-code table of all the status updates below (photo).  Maybe while on preview tab, only the preview of student update should be visible?
Please let me know what you think.
Thank you :bow: 

!student_updates

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175692651\pr-comment-78274565.json . 
Is it better to name it inline-code instead of just inline-code? I find it to be less generic.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175692651\pr-comment-78274598.json . 
I wouldn't define this in a module since you're only using it once. You can easily write this inline in inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-175692651\pr-comment-78274606.json . 
I _think_ there's also a helper method called inline-code. It's a bit more semantical than querying the params hash.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17592400\comment-22052777.json . 
Seems fine to me. Let's merge and see how it goes.

Thanks @tjmcewan!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17592400\comment-22053024.json . 
it deployed successfully: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17592400\issue-17592400.json . 
Upon initial setup/migration my schema.rb had the inline-code options removed.  I guess my postgres (9.2.4) installation is slightly different.  Anyway, to obviate the issue for anyone else, I've listed them explicitly.

Submitting for review as PR because it has the potential to take the site down.  It shouldn't, as there's no indication that the NULL option has changed for any table, but as they were never explicitly specified, I can't know for a fact.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17592400\pr-7368830.json . 
Upon initial setup/migration my schema.rb had the inline-code options removed.  I guess my postgres (9.2.4) installation is slightly different.  Anyway, to obviate the issue for anyone else, I've listed them explicitly.

Submitting for review as PR because it has the potential to take the site down.  It shouldn't, as there's no indication that the NULL option has changed for any table, but as they were never explicitly specified, I can't know for a fact.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17592542\comment-22118191.json . 
I would take this one.
should it be shown on the teams and on the users index?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17592542\comment-22118552.json . 
on the teams overview is most important. if it's easy, on the users index can come in handy as well :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17592542\issue-17592542.json . 
to see what time it is in the team's time zone, this would be a super cool feature 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17593650\comment-22053655.json . 
\m/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17593650\issue-17593650.json . 
this should work for issue #36

added location to the teams model, and teams overview.
adding irc_handle to teams overview

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17593650\pr-7369298.json . 
this should work for issue #36

added location to the teams model, and teams overview.
adding irc_handle to teams overview

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17594638\comment-22054474.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-176574203\comment-246725333.json . 
LET'S DO THIS! :smiling_face_with_open_mouth_and_smiling_eyes: 

Thanks a lot Maud!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-176574203\comment-246739103.json . 
:balloon: Thnx Carsten and Michael, for your help, I learned a lot.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-176574203\issue-176574203.json . 
Taking the onelegant but pragmatic route: this is in fact #528, but with a brand new PR.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-176574203\pr-85000555.json . 
Taking the onelegant but pragmatic route: this is in fact #528, but with a brand new PR.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-176574203\pr-comment-78527684.json . 
Indentation

.
#rails-girls-summer-of-code/rgsoc-teams\issue-176574203\pr-comment-78527694.json . 
Indentation

.
#rails-girls-summer-of-code/rgsoc-teams\issue-176574203\pr-comment-78527979.json . 
Superfluous new line

.
#rails-girls-summer-of-code/rgsoc-teams\issue-176577150\comment-246629903.json . 
Thanks! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-176577150\issue-176577150.json . 
by updating gem sass-rails

.
#rails-girls-summer-of-code/rgsoc-teams\issue-176577150\pr-85002557.json . 
by updating gem sass-rails

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17711203\comment-38116591.json . 
is this done? ja, oder @pxlpnk?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17711203\comment-38138736.json . 
I think @AlexTi took care of this in #52 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17711203\comment-38174462.json . 
@pxlpnk I think #52 looks good, but don't we then also want to send a single extra email to each of the addresses in each of CC and BCC?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17711203\issue-17711203.json . 
so that people won't get spammed! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17711279\comment-23148335.json . 
this should be fixed. 
see: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17711279\comment-23157162.json . 
Hmm, no, it needs to be fixed where mailing jobs are enqueued. Currently, when you add an address to CC for a mailing, it will enqueue a mailing job for each address, including CC and BCC. So whoever get's CC'ed gets one copy per recipient.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17711279\comment-23157539.json . 
ah I think i got it! try to look into it later

On Fri, Aug 23, 2013 at 1:09 PM, Sven Fuchs notifications@github.comwrote:.










.
#rails-girls-summer-of-code/rgsoc-teams\issue-17711279\comment-24088650.json . 
whoop! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-17711279\issue-17711279.json . 
the address put in cc should only get one email. not be in cc for all the mails to the different people.
maybe you could build it like this: that the person in cc is just added to all the other recipients?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-177118472\comment-247268714.json . 
Looks good, thanks for fixing, @izuroxx!

I'll merge as soon as the Travis is done :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-177118472\comment-247269522.json . 
I beat you to it, @ramonh :winking_face:  Thanks, @izuroxx !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-177118472\comment-247269718.json . 
:face_with_tears_of_joy: Too fast for me, @carpodaster. But yes nice one!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-177118472\comment-247270229.json . 
:smile: very sorry and thank you! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-177118472\comment-247270459.json . 
No worries @izuroxx, so many pairs of eyes didn't see it. No biggy :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-177118472\comment-247271037.json . 
Exactly it happens all the time :smiling_face_with_open_mouth_and_cold_sweat:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-177118472\issue-177118472.json . 
@carpodaster @ramonh 
preview for status updates not working :( 

letter was missing in _form partial 
was: inline-code
fixed to: inline-code

Very sorry!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-177118472\pr-85363424.json . 
@carpodaster @ramonh 
preview for status updates not working :( 

letter was missing in _form partial 
was: inline-code
fixed to: inline-code

Very sorry!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-177770386\issue-177770386.json . 
fixing the controller to return correct JSON data

.
#rails-girls-summer-of-code/rgsoc-teams\issue-177770386\pr-85783105.json . 
fixing the controller to return correct JSON data

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-248911179.json . 
I've also just noticed that this only works on certain screen sizes only (but not on mobile for some reason). Could you look into what the problem might be @nbogis? Alternatively, as suggested in this discussion we might just want to look into implementing bootstrap properly (or double-checking that it's working as it should). Sorry for the trouble there...

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-249486799.json . 
Fixed the issue and pushed the files. Can you please take a look and let me know if something is missing?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-251969754.json . 
Has this issue been reviewed? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-251970002.json . 
@nbogis I started a review for it last week, but had some other stuff that came up. It's on my list for today :) thanks for your patience!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-252387312.json . 
If I placed the menu inside the red header, it will cover the activities and the radio buttons. Do you want me to cover them or move them down?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-252516196.json . 
oh so you want me to stretch the red header as much as the menu?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-252611670.json . 
I'm not sure I understand what you mean—how would the menu cover the activities and radio buttons? 
The menu used to be inside the red header and it was not covering the activities (except when expanded and on mobile, but that's the exact same behaviour it has on mobile right now in this PR and I think it works well). I'd like for the header to have the same height as it has now, and for the menu points to be inside it. Does that make sense?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-255539386.json . 
"the menu is now located under the navigation bar intended for that purpose. The menu should be located inside the (red) navigation bar instead" This is for mobile right? So you want the long menu to be entirely in the red section which means that the red navbar's height will extend to cover the menu?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-255540955.json . 
I think I know what you are taking about. The menu in larger screens is at the bottom now instead inside the red navbar. I'll work on it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-255599978.json . 
I fixed the issues and committed my work. @alicetragedy, please let me know if something else is missing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-255724495.json . 
Hey @nbogis, I think that's a very good improvement, sorry for all this confusion. The menu on desktop still looks a little weird, but I think it just needs some small CSS improvements and will be good to go. See screenshot below.

<img width="1186" alt="screen shot 2016-10-24 at 14 05 07" src="URL.

Before you take a look at that, could you sync your fork and PR with the master branch? There are a few conflicts and since some changes have also been made to the global css file, I want to make sure you have the latest changes :)
From your PR branch, you should be able to run inline-code. It will complain about merge conflicts, after which you can go into both inline-code and inline-code and fix the conflicts manually. You can find a nice and short tutorial about resolving conflicts here but let me know if you need assistance with that, I'd be happy to help you. 

Thanks for your patience!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-256542328.json . 
Can you tell me which screen size is causing the issue? What are the sizes that we care about. It seems my browser defaulted to show sizes that are different from yours. I don't see this issue on my browser

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-256542811.json . 
I did inline-code and it says my repo is up-to-date and I didn't find any merge conflicts.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-256545270.json . 
@nbogis the screen size is full screen on my laptop (viewport: 1438x799px) but it shows up that way from the viewport with a 994px width to what I currently have. That's in both Chrome and Firefox. It looks like Safari displays it ok :loudly_crying_face:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-256545532.json . 
@nbogis I'm sorry, I think part of the instructions I gave are only relevant when you're not working from a fork but from a clone (where you push and pull directly to and from our repo without using a forked repo in-between). Do these instructions help? You will have to sync your fork first, and then merge the master into the the branch you've been using to makes these changes. I hope that helps!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-256547810.json . 
I found one of the conflict that the Home link in the menu is gone. Did you guys remove it on purpose?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-257128804.json . 
Sorry I was using safari and looking at different sizes. I went back to chrome and fixed the issue with laptop. I havent' fixed point number 1 in this issue since @katrin-k was working on it. Is it fixed or should I fix it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-257138339.json . 
@nbogis Awesome! point 1 is fixed (if I remember correctly it was already fixed when you started working on the pull request). Sorry for being non-responsive the last couple of days, I'm back home tonight and will have more time to review the code and see if there's anything left before we merge. Thank you! :sparkles:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-257195056.json . 
I don't see point 1 is solved. Take a look: 
!image

no thanks for answering my questions and my apologies for taking long to fix this. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-257223508.json . 
@nbogis could you leave some details on the device and browser you're looking at it on? It works for me on both Safari and Chrome on an iPhone, but we might have missed something there.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-257481198.json . 
I'm using Chrome. All mobile screens have this problem. 
!image

All the options you see in the pic have the problem except iPad and iPad Pro

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\comment-257539582.json . 
@nbogis this conversation should probably be moved elsewhere, since it's not really relevant to the current PR, but can you double-check that it also looks weird for you on the actual production site (teams.railsgirlssummerofcode.org)? I've just tried it with my inspector and everything looks as it should on every device, so I'd say that if it works fine in production we should just drop it? I can also investigate further, but I'd need to do a bit more set up first so it will take a few days I think.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\issue-178518455.json . 
This is to fix issue 532. The first list is already done so I only worked on the last two lists. See if the appearance of the navbar looks good. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-86277351.json . 
This is to fix issue 532. The first list is already done so I only worked on the last two lists. See if the appearance of the navbar looks good. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-80036312.json . 
please remove this line from the PR as it's not relevant to the current issue. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-80036535.json . 
can you change this to inline-code, it's more compact and easy to read

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-80036689.json . 
same as above, you can write inline-code as inline-code 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-80036806.json . 
please add this file back/don't remove it in this PR.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-80038282.json . 
the z-index set to -1 means that the sign-in-as and the activities body cannot be interacted with at all. 
Maybe you could try to change the value of the inline-code here so something less drastic (e.g. 10) and add a inline-code with a high value (e.g. 100) to inline-code. Then it should work seamlessly. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-80966066.json . 
please remove inline-code from the .gitignore, as we need to track the changes on this file.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-80966279.json . 
I'm not sure this is required — line 7 in the file already has inline-code. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-81315360.json . 
:thumbs_up_sign:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-81315489.json . 
if you are making changes to the styling of a specific inline-code element for the menu only, I would suggest targeting that specific element. This removes the inline-code from all icons across the whole site, and I'm not sure we want that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-82195519.json . 
we still need to have a link to the current_user somewhere (maybe in the menu as well?) since it's the only place from which a user can see and edit their own profile. A link with text "My profile" or something would be enough I think.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-82328517.json . 
My Gemfile contains sqlite3 gem that is not configured originally by the app. That's why I put it in the ignore

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-82335800.json . 
Putting the Gemfile in the .gitignore file is very bad practice — the Gemfile is the only way a team can track the additions of needed components, libraries, etc... If the Gemfile is added to .gitignore, anyone working on the project could add any gem they want and need to their own local file, and push changes that "work on their machine" but obviously wouldn't be working on anyone else's, because needed gems (i.e. libraries) are missing. 
If you absolutely need sqlite in your Gemfile (which you shouldn't, because we use postgres, not sqlite) you will have to comment it out any time you push new changes to the project, which is a lesser evil than removing the Gemfile altogether. I hope that helps!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-82494390.json . 
This <i> is inside a.button-burger so the styling won't get carried on to other <i>s. I'd argue to keep it as is since button-burger only shows for small screens and I already checked that the burger looks good on these screens. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-82525908.json . 
you're of course correct @nbogis, I'm so sorry about this! please ignore my above comment and leave as is :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178518455\pr-comment-82532799.json . 
great!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178648364\comment-248975036.json . 
Hi @anikalindtner – there is no 2015.\* – starting last year, the Teams App just keeps running. There are no database resets after each SoC. So all the data of 2015 should still be in the current teams app.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-178648364\issue-178648364.json . 
2014 and 2013 is working though. maybe something that @carpodaster has an idea about? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-180023729\comment-250449558.json . 
I have only 10 minutes to do something about it, and this is what I found.
In the middle of a method in applications_helper, inline-code becomes inline-code.
I can do a quick fix like this:.
Add inline-code to 
inline-code

I checked locally, and it will show the Conferences list.
Would this help for now?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-180023729\comment-250450336.json . 
Ooh! Thanks for the feedback @F3PiX. Could it be that these users you assigned the conferences to no longer exist? Hm.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-180023729\comment-250545823.json . 
Seems to be fixed after merging #543. Thank you @F3PiX! Could you please confirm, @mkalininait?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-180023729\comment-250599856.json . 
@ramonh Works now! Thank you @F3PiX ! I hope I don't break it again :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-180023729\issue-180023729.json . 
Can't open the 'Conferences' page: URL.
!screen shot 2016-09-28 at 21 24 42

Yesterday this page worked; then I assigned some conferences to the students and added a new one (GitHub Universe). After that I found the 'Conferences' page broken.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-180034090\comment-250544156.json . 
Looks great to me, @F3PiX. Thank you very much! Will merge now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-180034090\issue-180034090.json . 
Not even sure if it solves the functionality :-( 
But it will show the conferences list.
#542

.
#rails-girls-summer-of-code/rgsoc-teams\issue-180034090\pr-87302266.json . 
Not even sure if it solves the functionality :-( 
But it will show the conferences list.
#542

.
#rails-girls-summer-of-code/rgsoc-teams\issue-180717627\comment-251611749.json . 
Hm, at the end-of-summer party in vienna we where talking about how nice it is that writing blog posts involves pull requests and so on. If they are not that familiar with git and github it provides participants a relatively low-risk environment to get going.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-180717627\comment-251615725.json . 
I agree on the goal of getting familiar with git, not sure if this is the right means. Speaking from my experience last year, the first post didn't feel at all like a 'low-risk' environment. As they are doing only 2 blogposts, one very early in the Summer: I am not sure that is the way to ease someone into git. ;-) OTOH, I am very glad that I learned so much git and gh during the summer, and I wouldn't mind if (teaching) git becomes a requirement for project proposals and/or coaching companies. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-180717627\comment-265265929.json . 
Maybe a bit late to the party :see-no-evil_monkey: 
Just wanted to give my +1 for what @michaelem said about blog posts involving PRs. Therefore a minus for Rails CMS... .md as template engine would work and still provide these benefits though. However, people would probably need to run the whole rails app...

I already looked at integrating Jekyll **into** Rails. It works, but is slightly hacky and blowing up a monolith to :collision_symbol:  :winking_face: .  The most difficult and probably hackiest part is getting Rails' layouts and assets into Jekyll then - from what I remember one of the main points / benefits for merging both apps.

So maybe *"aligning"* would be a better approach? One could for instance extract key parts of the layout into a gem and use it in both apps. Gems can now have non-ruby assets, so this can almost be a CSS framework. Just some thoughts on this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-180717627\comment-285484387.json . 
Closing this. I doubt this will be an issue anytime soon.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-180717627\issue-180717627.json . 
Carsten's (open) notepad to evaluate the implications of a merge of the Teams App and the public website.
- [ ] Rails CMS
- [ ] Importing static pages (guides et al) files into CMS
- [ ] Importing blog posts
- [ ] MD as template engine?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-18148158\comment-22757776.json . 
looks good, \m/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-18148158\issue-18148158.json . 
Currently users are listed multiple times for each role they have: URL - this PR shows them only once.

Additionally fixes the stretched gravatar icons.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-18148158\pr-7654506.json . 
Currently users are listed multiple times for each role they have: URL - this PR shows them only once.

Additionally fixes the stretched gravatar icons.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\comment-252635216.json . 
not sure if there is a better way to chain these sql queries. @ramonh @carpodaster can you take a look when you can? :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\comment-252942954.json . 
@alicetragedy the breaking spec is fixx0rd in inline-code. Could you merge it back in or rebase it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\comment-252976030.json . 
@carpodaster awesome! yes, will do \o/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\comment-253331142.json . 
@alicetragedy I took the liberty of adding the spec that I used locally to verify the inclusion of teamleas orgas. Good news: it works! :thumbs_up_sign:  It must be something about the operator precedence of inline-code and inline-code in the SQL statement. When I tried to split it into two chained inline-code clauses, the newly added test failed. /shrug.

Let's wait for Travis to pick up the change and then meeeeerrrrrge!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\comment-253348116.json . 
:party_popper::party_popper::party_popper:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\issue-182026589.json . 
contributors.json should only return contributors whose team is volunteer or sponsored (i.e. not nil). Hopefully closes URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\pr-88670913.json . 
contributors.json should only return contributors whose team is volunteer or sponsored (i.e. not nil). Hopefully closes URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\pr-comment-82673045.json . 
I think that will exclude all orgas since they are not part of a team. I don't have the time to verify it at the moment, but can come back to this tomorrow.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\pr-comment-82673418.json . 
weirdly enough, I tested it locally and it worked (and I have no idea why). It returned even organisers that didn't have a double-role (i.e. supervisor or mentor). 

 ¯_(ツ)_/¯

but yes, please do check it when you can!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\pr-comment-82673702.json . 
Also, if this was the case, wouldn't they already be excluded in the current version? :see-no-evil_monkey:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\pr-comment-82678491.json . 
I think they are in teams: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\pr-comment-82680834.json . 
Hm, you may have found a source code artifact, @F3PiX – I don't recall having assigned anyone to a team with these special names. The _role_ is what makes an organizer:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182026589\pr-comment-82692400.json . 
:ghost:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\comment-253313780.json . 
In order to finish this, I have a few questions:.
1) Can I delete the routing tests? Or what do I do with them?
2) When I type inline-code url, I expect one of two things: either a message that the route doesn't exist, or a message that acces is denied. However, I get a message:  inline-code.  Is this okay, or did I do something wrong with either authorization or the routing?
3) Because all the CRUD is behind the orga base controller, I removed all inline-code-checks in the CRUD views. okay, right? But what about the inline-code? (It is in both conferences_controllers.)  
4) I tried to add a validation to ensure that the end_date will be after the start_date. (issue #503 nr 2) But... it would not allow for ANY end date at all, so I removed it in a later commit. Any suggestions?

(ping @carpodaster , @michaelem , @ramonh )

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\comment-253335979.json . 
Hej Maud!

re: 2) You are right, you should get a routing error. Can you verify that there is no inline-code template in the original view folder? I see it was deleted from the repo in your PR, but maybe it's still hanging around on your computer?

re: 3) Yes, simplifying the authorization is one of the premier goals of separating all the things into different namespaces. I'll shoot from the hip and say: yep, inline-code checks (along with the definitions in inline-code begone! :pistol: 

re: 4) Let's concentrate on just moving the files into the orga namespace in this PR. Always be wearing just one hat at a time.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\comment-253348081.json . 
Thanks Carsten! 
re: 2) Computer says: no inline-code in inline-code. The funny thing is, the inline-code-part is read as if it is an inline-code\- param, so the inline-code-view is called.  ~~I think now that it has to do with the conference helper method here, but I am not sure how to solve it. It is tempting to do a regular inline-code ?~~ 

re:3) Missed a view things ;-)

re: 4) I am going to call you LinkMeister from now on.  And I will watch my hats. Thnx

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\comment-253571967.json . 
re: 1) I found that the inline-code-route behaves exactly the same. => 404 instead of a neat and informative redirect. (TIL: load_and_authorize_resource doesn't work on non-existing routes)
One solution I came up with: restore all inline-code routes, and add a inline-code in the CxUDactions. So, the orga::base_controller takes care of access rights and messages. Wdyt, @carpodaster? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\comment-257596814.json . 
@carpodaster I thought this was about ready. What do you think? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\comment-258251906.json . 
@F3PiX thank you! I have a busy weekend ahead but will look into it next Monday

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\comment-258962021.json . 
Thanks a lot @F3PiX - looks good! Let's merge this one :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\comment-258967705.json . 
:tada: :tulip: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\issue-182344466.json . 
#463

Steps:.
- [x]  Add conferences_controller to orga namespace
- [x] Remove CRUD actions from conferences_controller
- [x] Add _table partial for shared views
- [x] Render table from both index views
- [x] Restore sortable columns in table (translate from slim)
- [x] show
- [x] other views
- [x] Check redirects from orga/conferences to conferences
- [x] Check abilities and authorisations
- [x] What to do with routing tests? Destroy :trollface: 

Other todo's:.
- [x] Translate first round of conferences from slim to erb and add toggle  
- [x] small issues from #503
  - [x] redirect after failing validation
  - [x] restrict numbers in selection fields
- [x] Add tests for authorisations???
- [x] Make 'back to all'-link staying in relevant namespace

Left-overs
- link back from Calendar view
- restrict end dates that are before the start date #503 -2
- adjust js toggle to show the upcoming round of conferences

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\pr-88889484.json . 
#463

Steps:.
- [x]  Add conferences_controller to orga namespace
- [x] Remove CRUD actions from conferences_controller
- [x] Add _table partial for shared views
- [x] Render table from both index views
- [x] Restore sortable columns in table (translate from slim)
- [x] show
- [x] other views
- [x] Check redirects from orga/conferences to conferences
- [x] Check abilities and authorisations
- [x] What to do with routing tests? Destroy :trollface: 

Other todo's:.
- [x] Translate first round of conferences from slim to erb and add toggle  
- [x] small issues from #503
  - [x] redirect after failing validation
  - [x] restrict numbers in selection fields
- [x] Add tests for authorisations???
- [x] Make 'back to all'-link staying in relevant namespace

Left-overs
- link back from Calendar view
- restrict end dates that are before the start date #503 -2
- adjust js toggle to show the upcoming round of conferences

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\pr-comment-82877878.json . 
What should I do with this routing tests? I can move them to an spec/routing/orga/conferences_routing_spec.  But do we need routing_specs in the regular controller as well? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\pr-comment-83093507.json . 
I will remove this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-182344466\pr-comment-83093534.json . 
Personally, I don't write routing spec for "normal", ie. restful controllers. I find them to be useful when you do something fancy with parameter parsing, routing contraints, or generally diverging from the expected pathname for a given controller.

The conferences controller is pretty standard. I'd have no problem with deleting these examples :face_screaming_in_fear: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-18458332\comment-23150268.json . 
AWESOME :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-185962371\comment-268987227.json . 
Assigning a role is solved with #571.
Close this? 
Do we need a new issue for switching teams?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-185962371\comment-269209623.json . 
#571 doesn't assign a role, it merely switches inline-code to a different user record – re-using everything, including roles, that user record had configured before.

Switching roles is not necessarily equivalent with switching teams: e.g. the "orga" role is just a role w/o a team. Students, coaches and mentors require a team, that's true.

It's debatable if #571 can be used to satisfy this feature request, but we'd have to make sure that there are users with various different roles in a local dev environment. Does the seed.rb provide that? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-185962371\comment-270138717.json . 
The seeds.rb provides all kind of users with all the different roles covered. 

That means, you are able to impersonate an organizer or any role. It is not the same as turning yourself into an organizer etc, but I'd say it covers almost all use cases?

Re: the teams I am not sure if the teams seeding and the impersonation covers everything. Hence the new issue. It requires some research.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-185962371\issue-185962371.json . 
Similar to the season switch (#304), we should offer a way to quickly assign a role (and team) to the currently logged in user session – only in development.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-185963260\comment-258641781.json . 
I can take a look :+1:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-185963260\comment-258713323.json . 
Very cool, @pgaspar! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-185963260\comment-264739065.json . 
@carpodaster 1 month later, I finally had the time and headspace to seriously look at this :disappointed_face: I'm so sorry!

I have some questions:.
- Is this something that should live in the orga section? Or should it be a button in inline-code on the public section? 
  - I noticed there's no UserController in the orga section yet - I can certainly create it for this, though.
- Any idea as to how the flow for stopping the impersonation should look like?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-185963260\comment-265570115.json . 
@pgaspar no worries!

My initial thought was to put it into the public inline-code. The main issue would be  to indicate that this is a development-mode only feature.

As for returning back to normal: I haven't given it much thought yet, no. The easiest would be just use the normal logout when the _login is as other_ just sets changes the user id in the session (or the devise equivalent of it). What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-185963260\comment-265609645.json . 
@carpodaster I think that sounds good!

I started doing a couple of things before and had something like this in the public inline-code page:.

<img width="360" alt="screen shot 2016-12-07 at 22 29 35" src="URL.

Alternatively (or additionally) I can also add a new column with a button on inline-code.

I was thinking about using a gem like pretender. I've used it before at work and it makes life a lot easier - what do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-185963260\issue-185963260.json . 
In order locally test the entire application process, a 2nd user (ie. a team mate) is needed.

This feature should allow the currently logged in user to be swapped with a selected user from the listing at inline-code – only in development.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-18617541\comment-23874406.json . 
i'll take care at @vienna-rb

.
#rails-girls-summer-of-code/rgsoc-teams\issue-18617541\issue-18617541.json . 
2013-08-27T16:10:25.513588+00:00 app[web.1]: Started GET "/users" for xxx.xxx.xxx.xxx at 2013-08-27 16:10:25 +0000
2013-08-27T16:10:37.244807+00:00 heroku[router]: at=error code=H12 desc="Request timeout" method=GET path=/users?sort=&direction=&role= host=teams.railsgirlssummerofcode.org fwd="xxx.xxx.xxx.xxx" dyno=web.1 connect=65ms service=30008ms status=503 bytes=0
2013-08-27T16:10:55.432836+00:00 heroku[router]: at=error code=H12 desc="Request timeout" method=GET path=/users host=teams.railsgirlssummerofcode.org fwd="xxx.xxx.xxx.xxx" dyno=web.1 connect=358ms service=30003ms status=503 bytes=0
2013-08-27T16:10:55.848055+00:00 app[web.1]: Started GET "/users" for xxx.xxx.xxx.xxx at 2013-08-27 16:10:55 +0000
2013-08-27T16:10:56.821128+00:00 app[web.1]: E, [2013-08-27T16:10:56.820747 #2] ERROR -- : worker=0 PID:7773 timeout (31s > 30s), killing
2013-08-27T16:10:56.885656+00:00 app[web.1]: E, [2013-08-27T16:10:56.885362 #2] ERROR -- : reaped #<Process::Status: pid 7773 SIGKILL (signal 9)> worker=0

.
#rails-girls-summer-of-code/rgsoc-teams\issue-187075689\issue-187075689.json . 
For some reason the CSS in the last merged PR conflicted with a previous fix from @katrin-k to render the team dropdown in the activities page properly when on mobile. This should fix it :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-187075689\pr-92164618.json . 
For some reason the CSS in the last merged PR conflicted with a previous fix from @katrin-k to render the team dropdown in the activities page properly when on mobile. This should fix it :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-187169239\comment-260443737.json . 
Naming is hard, but I think **"requirements"** is a real good choice - perfect fit in my opinion. I went with this name for updating the guide on it, but used **"tasks and features"**, since I couldn't squeeze _"what will students be working on"_ in in a decent way - but I'll come up with something.

However I don't really think there has to be a 1:1 matching between fields and guide, as I see the latter as a more general overview of _"how to 'apply' as a mentor"_, not an explanation of each field (this would go directly into the form). 

Just for your information @carpodaster 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-187169239\comment-260460871.json . 
Hey @klappradla - thanks for the feedback! PR #553 is up now! :rocket: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-187169239\issue-187169239.json . 
* [x] project submission form: "issues and features" will be renamed to "what will the students be working on?" to make it more general
* [x] project submission form: a new text area will be added with the title "requirements" (or something similar) that will list requirements for the project from the point of view of the mentor (e.g. good knowledge of a language, proficiency with CSS, etc..). This can include a little coding challenge or a codecademy track that needs to be completed; more examples of this will be provided in the mentor guide.
* [X] project submission form: add link to guide at the top of the form, to make sure they've read it

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\comment-263131241.json . 
@carpodaster Back to you.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\comment-269483184.json . 
@carpodaster Can you take a look please? 
It is now like this:  both dates can be left empty, but if one date is set, the other must be set too. 
I think requiring the dates per se is too much. However, if one of the dates is set, the other date must be set too. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\comment-271074554.json . 
Sorry, rebase gone bad. I'll open an new PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\comment-271077737.json . 
Doesn't look bad to me.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\comment-271174699.json . 
Is that new, that merge conflicts can directly be resolved at GitHub? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\comment-271386314.json . 
Looks like git is going to win this one 🤣  .
@carpodaster If we finish the conversation about the validation here, then I will open a new PR with the next commit. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\comment-301619350.json . 
Closing and fresh start in #747 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\issue-188936513.json . 
Closes #503 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-93453085.json . 
Closes #503 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-115997144.json . 
@klappradla We need a decision here about the validation of the dates for a conference. 
The main object for this PR is to not allow a inline-code input to be before the inline-code. 
If you can add your vote for either 'presence validation' or not, I can make the PR ready for review.   
NB: Implementation may be different than I did in this PR, so don't bother to review this PR yet.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-116358523.json . 
Hard to say what makes more sense. If you skip the presence validation, you still need to check for the presence of both fields in order to perform the validation on "a before b"...

What's the problem you want to solve after all? Conferences have "invalid" dates, meaning someone basically made a typo when inputting them? Or they don't have dates at all and therefore cannot be processes / used?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-116391482.json . 
The conf dates input is with a date picker, so that is covered. 
The problem I want to solve: it is currently possible to input an end date that is earlier than the start date. 
That is basically solved (I want to implement it differently than I did in this PR).
The next problem that came up: should the dates be inline-coded.  
TL;DR
~~My vote would be to leave out the presence validation. In theory orga's could enter a conf before the dates are set (RailsConf 2019).  I can imagine use cases for that.~~ 

~~OTOH The data picker will set (both) the dates to today automatically on the client side, so why wouldn't we add the presence validation? It would always pass automatically, and It would make the chronology validation easier.  
Never heard orga's complain about the dates set upfront.~~
Conclusion: I'll add the presence validation.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-87868273.json . 
The bang! version of this method raises an exception if a validation fails. That means the user will only ever see a 500 error page, never knowing what went wrong. Instead, it should re-render the edit template when the call to the inline-code (the one w/o a bang) method fails.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-87868497.json . 
I would go for a more "speaking name". How do you like inline-code or something like this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-87868743.json . 
This method should be made private; it's just an internal implementation detail / helper that should not be made available as part of the public api.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-87869319.json . 
You should also take an empty inline-code into consideration

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-87869443.json . 
An unneeded empty line here :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-87877443.json . 
I see what you mean. I tried to find something with more analogy to inline-code . Can you live with: inline-code or inline-code ? If not, I go with your suggestion. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-87880316.json . 
I thought: the form is taking care of all this. In the form, a value will always be set (today's date). That is where the non-valid dates come from most of the time: when the start date is set in the future, the end date's default will still be today. 
Is it enough if the form handles this? Or shall I still add it to the model?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-87880444.json . 
Ah, I see what you mean. The mean difference I see, though, is that inline-code is a model attribute whereas the custom validation we're adding here isn't. But I'm not super invested into the naming of this helper so you decide! :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-88056637.json . 
If I delete this line (in previous commit) - because it is not needed for the app to run properly - there are 4 test that fail.

block-code.

I can't figure out why? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-89393727.json . 
Hello Maud, I _think_ it's because it attempts to inline-code-compare potential inline-code values on either side of the operator. In order for the inline-code validation to make sense, both inline-code and inline-code must be dates.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-89688331.json . 
I removed the tickets, because they are not a requirement for validation. Plus, the only test that refers to the ticket attributes, overrides it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-89688455.json . 
 It didn't work without the wrapper. I also tested the opposite:.
inline-code and that fails. :thumbs_up_sign:  
Still not sure if this is the proper solution.
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-89688559.json . 
The tests kept failing with the old params, where the dates were split into components. It looks like the components are not needed. (I think Rails converts them automatically?) All tests pass, also no problems with adding and validating dates locally.
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-93867137.json . 
I think it's inline-code that provides a better check: 
block-code.
(or some such, I haven't checked the API). It's better because the model can be invalid for other reasons than the start/end date order.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-93867148.json . 
I think it's inline-code that provides a better check: 
block-code.
(or some such, I haven't checked the API). It's better because the model can be valid for other reasons than the start/end date order.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-93867696.json . 
Why did it fail? I have an idea: the inline-code does a inline-code. It will fail if either is inline-code.  See comment below.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-93867770.json . 
We need two more tests to be complete: where either inline-code and inline-code is not set.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-93867794.json . 
Cool! Maybe that changed with Rails 5.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-93867842.json . 
I would add the error to either inline-code or an existing attribute that's concerned with the validation; e.g. inline-code or inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-94915482.json . 
(The indentation was changed mistakenly)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-94916349.json . 
I am wondering: why is it allowed to create a conference without start and end date at all? Can we not add "normal" presence validations for the two fields and rely on those?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-94919453.json . 
inline-code should be less than inline-code, right?

Comparing strings lexically is a hack that sure makes it work. But in that case, it should also work if either is inline-code, no?

What about this:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-94923491.json . 
Whoops? Why is it the other way round now?

Also: indentation :wink: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-95006477.json . 
I believe that the reasons for presence validations on the dates itself, is only to make our dev life easier, and not per se helping either the user or data integrity. And, on the other hand, I can imagine that orga's life can become harder if it is never ever allowed to add a conference without dates. So, with those considerations, I opted for this solution. But I am not per se against the presence validations, if you think that other considerations are more important?
 

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-95006653.json . 
:see-no-evil_monkey:  Far better.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-188936513\pr-comment-95024867.json . 
O, wait. I am not sure if that is what I meant. 
I suppose you mean:  inline-code (ie "both dates are set, none is nil").

I'll wait for your answer in the previous comment, to be sure that we are aiming for the same thing. :direct_hit:     .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-189224514\comment-260468876.json . 
About the link to the mentor guide: how about adding an acceptance validation? So they need to check a checkbox to confirm that they read the guide. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189224514\comment-260479741.json . 
Added a tiny change to the besides that awesome _"hint"_ (or however you call elements like this) above the form: I think it could be of use to already be consistent about the rebranding goals here. Especially around the project submission form, the word **"Rails"** could be kinda distracting for mentors :winking_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189224514\comment-260623721.json . 
Test to see if we can continue the conversation here.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189224514\comment-260644449.json . 
sorry I did it by mistake. I thought that button merges the changes with my stuff not closing the PR. My bad 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189224514\issue-189224514.json . 
This closes #551 

I would especially appreciate some feedback on the wording of the help text (placeholder values). I've also deployed it to staging so you can play around with it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-189224514\pr-93646815.json . 
This closes #551 

I would especially appreciate some feedback on the wording of the help text (placeholder values). I've also deployed it to staging so you can play around with it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-189224514\pr-comment-87893840.json . 
"You can list requirements here, e.g. skill level of a programming language or framework. You can illustrate the required skill level with a relevant coding challenge that needs to be completed (on Exercism.io, Codeschool course, Codewars or something of your own choice.) " 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189224514\pr-comment-87897076.json . 
I suggest to wide the scope of this question - by making the hint more general :winking_face: 
How about:.



I liked how maintainers came up with special _"projects"_ within their projects for RGSoC including guidance, etc. that's why I think _"How will the students be involved"_ could also help here to a) get more meaningful answers and b) have the mentors think about this in advance.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189224514\pr-comment-87902988.json . 
I'm for some reason pro avoiding _"you"_ in hints :see-no-evil_monkey:  - but I really like your point about



and



However, I don't think it's necessary to repeat _"you can list requirements"_ as it's already the title of the field.

How about something like:.



I deliberately would not put _"framework"_ there, as it gets especially annoying in the JS world where they drop another one every 24hours and I feel forcing people to look at an new DSL for the same concepts all the time just puts additional pressure. Feel free to say I'm totally wrong.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189224514\pr-comment-87904152.json . 
:-) I like your text. I am not sure about 'ideally' - I feel it is about the minimal requirements. So, maybe it is a good idea to name the two things: basic requirements, and ideal.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189292285\comment-260539767.json . 
Hold on I'm confused. Why did I have the control to close this pull request!?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189292285\comment-260552419.json . 
Hey @nbogis, I think that's cause you're a member of the RGSoC Github organization :see-no-evil_monkey: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189292285\comment-260623638.json . 
@nbogis as Max said, you are member of the RGSoC organisation on Github. Without being part of the org, one cannot be assigned to issues which is a good indicator for others that someone's already working on a given feature/issue.

Mishaps do happen. The master is reverted back to its previous state. It does mean some extra work so please double check the buttons you're clicking :winking_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189292285\comment-260644662.json . 
thanks guys and sorry about the confusion

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189292285\issue-189292285.json . 
Reverts rails-girls-summer-of-code/rgsoc-teams#553

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189292285\pr-93696027.json . 
Reverts rails-girls-summer-of-code/rgsoc-teams#553

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\comment-260766192.json . 
**@F3PiX said:**

About the link to the mentor guide: how about adding an acceptance validation? So they need to check a checkbox to confirm that they read the guide. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\comment-260766299.json . 
Added a tiny change to the besides that awesome _"hint"_ (or however you call elements like this) above the form: I think it could be of use to already be consistent about the rebranding goals here. Especially around the project submission form, the word **"Rails"** could be kinda distracting for mentors :winking_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\comment-260768289.json . 
For the idea about _"adding an acceptance validation"_ @F3PiX: for me, this does not really feel like a **useful** feature for the users / mentors. It creates an additional overhead, an additional obstackle on the way to finally submit the form, but does not provide any guarantees that it will impact what the mentors write.

I remember having to use these for cases where it was a legal obligation to have users check something before they proceed. No one ever read it, but usually tried to submit once without checking it.

Therefore, I think it is appropriate _"in your face"_ now how it's sitting above the form. So if mentors really care, they realize and read it. If not, a checkbox would not hinder them from submitting a low-quality project submission. Therefore I think we should spare it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\comment-261185039.json . 



:winking_face:  (SCNR)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\comment-261211958.json . 
Just wanted to give my +1 on most of what has been discussed — I would keep the word requirements, would just stick to the link in the inline-code to the mentor guide (aka no checkbox to make sure they've read the guidelines), would widen the scope of the question by adding @klappradla's suggestions, and would improve the wording on the requirements field as suggested by @F3PiX (with Max' suggestions). Awesome work, y'all :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\issue-189503927.json . 
Remake of @carpodaster 's #553 :victory_hand:️ 

**Original words:**

This closes #551  

I would especially appreciate some feedback on the wording of the help text (placeholder values). I've also deployed it to staging so you can play around with it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\pr-93846097.json . 
Remake of @carpodaster 's #553 :victory_hand:️ 

**Original words:**

This closes #551  

I would especially appreciate some feedback on the wording of the help text (placeholder values). I've also deployed it to staging so you can play around with it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\pr-comment-88111082.json . 
I suggest to wide the scope of this question - by making the hint more general :winking_face: 
How about:.



I liked how maintainers came up with special _"projects"_ within their projects for RGSoC including guidance, etc. that's why I think _"How will the students be involved"_ could also help here to a) get more meaningful answers and b) have the mentors think about this in advance.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\pr-comment-88111248.json . 
**@F3PiX said:**
"You can list requirements here, e.g. skill level of a programming language or framework. You can illustrate the required skill level with a relevant coding challenge that needs to be completed (on Exercism.io, Codeschool course, Codewars or something of your own choice.) " 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\pr-comment-88111318.json . 
I'm for some reason pro avoiding _"you"_ in hints :see-no-evil_monkey:  - but I really like your point about



and



However, I don't think it's necessary to repeat _"you can list requirements"_ as it's already the title of the field.

How about something like:.



I deliberately would not put _"framework"_ there, as it gets especially annoying in the JS world where they drop another one every 24hours and I feel forcing people to look at an new DSL for the same concepts all the time just puts additional pressure. Feel free to say I'm totally wrong.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\pr-comment-88111449.json . 
**@F3PiX said:**

:-) I like your text. I am not sure about 'ideally' - I feel it is about the minimal requirements. So, maybe it is a good idea to name the two things: basic requirements, and ideal.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\pr-comment-88220523.json . 
How about 'prerequisites' instead of 'requirements'? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\pr-comment-88347827.json . 
Valid point about _"basic"_ and _"ideal"_ - maybe this should just be left to the mentors themselves to decide? It probably also depends on the project: for some, defining a minimum entry barrier may be crucial to guarantee students picking the project will actually be able to do something within the 3 months, other may be more flexible different skill levels.

As for the word itself: I really like _"requirements"_ and think it's a choice that fits. Don't see a benefit in changing it to _"prerequisites"_. To me this sounds more like _"you should have your machine set up to work with this, you should have had a look at the Readme and CoC"_.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\pr-comment-88404531.json . 
:thumbs_up_sign: to your proposal, @klappradla.

In general, what do you think about replacing "Github" with "Github/Gitlab/Bitbucket/…"? It's longer, yes, and it doesn't read as well. But Gitlab was also a sponsor this year and I would like to express a bit more openness towards the SCM/PM tool of choice

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\pr-comment-88405105.json . 
I also like the world "_requirements_" – "_prerequisites_" sounds softer. But it's a good suggestion to leave that to the mentors.

What about this:.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\pr-comment-88526076.json . 
Makes total sense - especially given Gitlab was a sponsor, yes.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-189503927\pr-comment-88535714.json . 
:thumbs_up_sign:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19056201\comment-23884226.json . 
AWESOME! thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19056201\issue-19056201.json . 
We joined the users roles, conferences and team roles to reduce the queries.
There were 3 Queries for each user before, now we are down to just 1 query. \o/

Not sure about the naming of the scope :)

This fixes #49 

Done with @khbites at @vienna-rb #pairwithme

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19056201\pr-8111694.json . 
We joined the users roles, conferences and team roles to reduce the queries.
There were 3 Queries for each user before, now we are down to just 1 query. \o/

Not sure about the naming of the scope :)

This fixes #49 

Done with @khbites at @vienna-rb #pairwithme

.
#rails-girls-summer-of-code/rgsoc-teams\issue-190714663\issue-190714663.json . 
Suggested by @carpodaster:.




.
#rails-girls-summer-of-code/rgsoc-teams\issue-191151273\comment-262446593.json . 
I'm done, functionally. Suggestions for wording+styling welcome (you're wholeheartedly invited to just push to this PR)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191151273\issue-191151273.json . 
What do you think about how it looks like so far?

<img width="1211" alt="bildschirmfoto 2016-11-22 um 23 55 32" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-191151273\pr-94918049.json . 
What do you think about how it looks like so far?

<img width="1211" alt="bildschirmfoto 2016-11-22 um 23 55 32" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-191589757\comment-262979705.json . 
@carpodaster Maybe you should change the title on your business card to “Senior Front-End Engineer” ;) Looks awesome :thumbs_up_sign: 
One thing: The preview doesn't show the License as of yet — maybe you could add that as well? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191589757\comment-263001035.json . 
You're absolutely right, it's missing. It's also missing from all other views as I just realized. Thanks!

Will add it later tonight and merge.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191589757\issue-191589757.json . 
Re: URL and tonight's Weekly Call

This PR adds a license field to the project submission form. The licenses are scraped from opensource.org. The input field autocompletes input based on the list of known OSI licenses.

Also, I am becoming a JavaScript god. :joy: 
!bildschirmfoto vom 2016-11-24 21-43-24

!bildschirmfoto vom 2016-11-24 21-42-50

.
#rails-girls-summer-of-code/rgsoc-teams\issue-191589757\pr-95226859.json . 
Re: URL and tonight's Weekly Call

This PR adds a license field to the project submission form. The licenses are scraped from opensource.org. The input field autocompletes input based on the list of known OSI licenses.

Also, I am becoming a JavaScript god. :joy: 
!bildschirmfoto vom 2016-11-24 21-43-24

!bildschirmfoto vom 2016-11-24 21-42-50

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19164861\comment-24059806.json . 
this looks okay with me. what do you guys think? @svenfuchs @joneslee85 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19164861\issue-19164861.json . 
Emails are sent to each address separately - no matter if in "to", "cc" or "bcc". Including cc and bcc in each email caused multiple emails to these addresses. Removing the cc and bcc from each mail solves this.

Fixes #46
# pairwithme with @beanieboi

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19164861\pr-8164588.json . 
Emails are sent to each address separately - no matter if in "to", "cc" or "bcc". Including cc and bcc in each email caused multiple emails to these addresses. Removing the cc and bcc from each mail solves this.

Fixes #46
# pairwithme with @beanieboi

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19165406\comment-24028060.json . 
This is true, classic case of first commit then think!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19165406\comment-24028113.json . 
i would suggest something like 

block-code.

and set RAILS_SESSION_SECRET on Heroku

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19165406\comment-24028273.json . 
hm inline-code sounds like a better name.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19165406\comment-24028596.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19165406\issue-19165406.json . 
the Rails session secret and the devise secret are public, they have to be private to protect the session of a user.

URL.
URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19166282\comment-24028324.json . 
this fixes #53 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19166282\issue-19166282.json . 
any further inputs?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19166282\pr-8165075.json . 
any further inputs?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19167847\comment-49098036.json . 
We're at 40px now. Feel free to reopen!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-19167847\issue-19167847.json . 
- i think it was 50 px? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-191858260\comment-263843293.json . 
:confetti_ball: Thanks!

Is it maybe better to also remove the redirect and all the controller actions from inline-code that are not :index and :show? Probably not as part of this PR, but in another one? WDYT?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191858260\comment-263963144.json . 
Yes, that was the original plan. But when I did that, an url like inline-code would raise a 404: file with id: new not found. That is a bit clumsy, isn't it?
EDIT: 
I found that with the CanCanCan redirecting gone, we lost the nice redirects. So I let the orga basecontroller take over the redirecting. See this commit
Do you agree, or...? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191858260\comment-265575212.json . 
I would let it fail with a 404 cause that's exactly what is: a resource not found. In production, it will display the proper 404 page instead of an exception + stack trace, so that's ok I think.

I'm leaning towards removing the two unused actions, but I let you decide. Merge at your leisure!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191858260\comment-265579942.json . 
Thanks :-)
To celebrate that this is a matter of opinion, I go for YOLO and merge. :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191858260\issue-191858260.json . 
The permitted params are set in the orga/conferences_controller. In the non-orga controller, they are never called.

Leftover from #546 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191858260\pr-95400969.json . 
The permitted params are set in the orga/conferences_controller. In the non-orga controller, they are never called.

Leftover from #546 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191873695\comment-263842239.json . 
hey @F3PiX, could you add a screenshot of how it looks when there _is_ a location for a conference? I feel like there is a whitespace missing now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191873695\comment-263961154.json . 
Yeah, bit weird, isn't it? But there is a space. 
!location

.
#rails-girls-summer-of-code/rgsoc-teams\issue-191873695\comment-265571671.json . 
Visual proof FTW :smile:  Thanks Maud!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191873695\issue-191873695.json . 
(#503, comment)
  
This  date format with a comma:.
!image

.. is now without the comma.

!schermafbeelding 2016-11-27 om 18 31 35

Checked all other usages of the conference_date_formatter, everything is fine. :racing_car: 



.
#rails-girls-summer-of-code/rgsoc-teams\issue-191873695\pr-95409762.json . 
(#503, comment)
  
This  date format with a comma:.
!image

.. is now without the comma.

!schermafbeelding 2016-11-27 om 18 31 35

Checked all other usages of the conference_date_formatter, everything is fine. :racing_car: 



.
#rails-girls-summer-of-code/rgsoc-teams\issue-191890773\comment-263232412.json . 
Closing. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191890773\comment-263233768.json . 
@F3PiX I'm confused, why did you close this PR? Did something not work right?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191890773\comment-263235594.json . 
It works, but I am having second thoughts about the server side. It is making the code less flexible and more rigid, for no good reason.  
Now I think it would be better to solve this at the client side with some nifty javascript. The current 'Add button' is probably built in by the nested_form gem. It must be possible to make it check for the number of attendances as well.
(How is your Javascript?)   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191890773\comment-263236770.json . 
@F3PiX I understand, thanks for the explanation! It's nice to give a little bit of context when closing a PR if there's a reason behind it, that way we know what e.g. didn't work. I haven't looked at the original PR (or at the code) tbh. And I agree about what you said related to the user-friendliness (or rather unfriendliness) of not being notified that there are too many confs chosen until after submitting. This is something that should definitely be solved with JS, and unfortunately my JS is still pretty bad. :see-no-evil_monkey: 
We could move this discussion to the original issue (URL to give more context of what we're trying to achieve, and see if someone could pair with you on this issue? wdyt?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191890773\issue-191890773.json . 
Solves #414
- Add limit to number of permitted attendances
- Hide 'add conference' button if User has 3 attendances: 
- Add flash alert when user wants to save their profile with more than 3 conferences.

One problem left:.
The count of the attendances is updated only when the parent is saved. This means an user is able to add 4 conferences in the Edit Profile form, and will not be notified that 3 = max until after submit.
This is not super user friendly

Todo's
- [ ] Make limit for attendances only, no other attributes
- [ ] Add tests

.
#rails-girls-summer-of-code/rgsoc-teams\issue-191890773\pr-95419755.json . 
Solves #414
- Add limit to number of permitted attendances
- Hide 'add conference' button if User has 3 attendances: 
- Add flash alert when user wants to save their profile with more than 3 conferences.

One problem left:.
The count of the attendances is updated only when the parent is saved. This means an user is able to add 4 conferences in the Edit Profile form, and will not be notified that 3 = max until after submit.
This is not super user friendly

Todo's
- [ ] Make limit for attendances only, no other attributes
- [ ] Add tests

.
#rails-girls-summer-of-code/rgsoc-teams\issue-191891091\comment-263805885.json . 
Thanks for reporting this, Maud!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191891091\issue-191891091.json . 
URL.

When I try to access a conference that doesn't exist, I get this 404:.
!schermafbeelding 2016-11-27 om 22 06 42

instead of this:.

!schermafbeelding 2016-11-27 om 22 07 08

.
#rails-girls-summer-of-code/rgsoc-teams\issue-191981100\comment-263248543.json . 
Great idea! The orga's really deserve their own dashboard. 
I think it will be super easy do: just adding a dashboard controller and view; the namespace and the base controller are in place.
The first iteration would be adding the links to the dashboard.
After that we can try to make it as cool as the supervisor dashboard.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-191981100\comment-263804639.json . 
Super goed! Yes, the orga-only items on the Teams App are totally invisible. It kinda touches #380 but a dashboard/orga-landingpage would definitely be supercool.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191981100\comment-276217693.json . 
Accidentally doing this as part of the navigation things around #581 and #380.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-191981100\issue-191981100.json . 
We might eventually decide to create a small orga dashboard (which would be :thumbs_up_sign: ), but in the meanwhile, it would be great to have a simple index for inline-code. The thought behind it: most organisers don't really keep track of which hidden "features" are found in the dashboard controller, and since there is no menu for this anywhere, it becomes tedious to remember the URLs or look it up in the inline-code every time. Especially for people who are active organisers but not super development-savvy, it would be great to be able to access the orga pages from a simple index for now. Thoughts?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192010512\comment-263807919.json . 
Looks awesome!

Especially the back nav links. These old, unstyled ones keep crawling up the surface.

!

Merge?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192010512\comment-263817251.json . 
@carpodaster yes, yes they do. I searched through all the files this time, so I'm hoping we haven't missed any.
:thumbs_up_sign: on merge! :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192010512\issue-192010512.json . 
This fixes some minor UI details, such as:.

- [x] better margin on the autocomplete for the project submission
- [x] finally remove the hover effect on icons (didn't look very good)
- [x] make all back navigation finally consistent

See screenshots!

improved margin
<img width="654" alt="screen shot 2016-11-28 at 12 27 27" src="URL.

old hover effect
<img width="568" alt="screen shot 2016-11-28 at 12 41 02" src="URL.

new hover effect
<img width="578" alt="screen shot 2016-11-28 at 14 39 43" src="URL.

old back navigation in some pages
<img width="425" alt="screen shot 2016-10-13 at 16 58 52" src="URL.

new back navigation
<img width="1040" alt="screen shot 2016-11-28 at 14 09 29" src="URL.

ugly edit and delete links
<img width="517" alt="screen shot 2016-10-13 at 16 58 36" src="URL.

improved edit and delete buttons
<img width="224" alt="screen shot 2016-11-28 at 14 47 32" src="URL.





.
#rails-girls-summer-of-code/rgsoc-teams\issue-192010512\pr-95501632.json . 
This fixes some minor UI details, such as:.

- [x] better margin on the autocomplete for the project submission
- [x] finally remove the hover effect on icons (didn't look very good)
- [x] make all back navigation finally consistent

See screenshots!

improved margin
<img width="654" alt="screen shot 2016-11-28 at 12 27 27" src="URL.

old hover effect
<img width="568" alt="screen shot 2016-11-28 at 12 41 02" src="URL.

new hover effect
<img width="578" alt="screen shot 2016-11-28 at 14 39 43" src="URL.

old back navigation in some pages
<img width="425" alt="screen shot 2016-10-13 at 16 58 52" src="URL.

new back navigation
<img width="1040" alt="screen shot 2016-11-28 at 14 09 29" src="URL.

ugly edit and delete links
<img width="517" alt="screen shot 2016-10-13 at 16 58 36" src="URL.

improved edit and delete buttons
<img width="224" alt="screen shot 2016-11-28 at 14 47 32" src="URL.





.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\comment-263667326.json . 
A bit more context:.
With less than 3 conferences chosen you get a button to add one more:.
!with 2 conferences

With 3 conferences, the button disappears:.
!with 3 conferences

And it only happens with the inline-code, not with other nested attributes (like  number of members in a team.)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\comment-265588454.json . 
And I am not sure enough to answer the JS questions. Do we know a JS wizzard who can take a look?

About the validations: I tried the client side validation first. That means even an orga can't decide to allow a 4th attendance. And I can think of scenario's where that may be wanted.

I added a validation, and put it in the user model, because everything around the inline-code are handled there. Okay? Or is it better to put it in the attendance model? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\comment-265717548.json . 
I haven't done fontend code in a while @F3PiX, so just some thoughts I have when looking at this PR, eventually not really relevant :see-no-evil_monkey: 

So first, I think it's weird, that this piece of code is **always** evaluated completely, even if the client does not show the respective form (80% of all cases I think). Also, you're right, the application code, e.g. having max 3 attendances, should not be tied as closely to the fontend code. I prefer to use data attributes here to just pass some data from Ruby to JS :winking_face: 

So this would look aprox like this:.
block-code.

I did not run this code, just wrote it straight here in the editor - so it prob won't work :winking_face:  Just added it to easier explain what I mean: init all the callbacks only if the respective form is actually there and get more data from the application.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\comment-267987733.json . 
I don't know how to solve the javascript. I'd say: I close this for now, open a new PR with a validation of max 3 attendances on the model. And I open a new issue for finding a nice frontend solution.

okay?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\issue-192293315.json . 
Solves #414

:dancer: 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\pr-95700290.json . 
Solves #414

:dancer: 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\pr-comment-91389151.json . 
JS / jQuery n00b question: the inline-code only denotes that it's a jQuery DOM object, right? It's not some magic JS trick?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\pr-comment-91389833.json . 
This defines a named function in the global namespace, right? I don't know if that is cool. But then again, I am not a JS person :8ball: :sweat_smile:.

Come to think of it: are the vars inline-code, inline-code  and inline-code global as well?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\pr-comment-91389886.json . 
This is the event fired by simple_form?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\pr-comment-91479235.json . 
The first line inline-codeIt is a shortcut to bind a function to jQuery's inline-code event from what I remember.

So in this context, it basically means: load this anonymous function on inline-code to have it available later.

The inline-code is only convention to tell, this object is a jQuery object, not vanillaJS.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\pr-comment-91481593.json . 
They're declared within an anonymous function, so this should be fine - no global scope.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\pr-comment-91482104.json . 
Yes, the whole JS file is an adaption from an example in their wiki - so best practice I guess.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\pr-comment-91486719.json . 
It looks kinda weird to me to rescue these model-validation-related exceptions in a controller @F3PiX. I guess moving this closer to the User model and its validations would make more sense? 

You could either pack it into some inline-code or whatever callbacks... Or you just don't use the inline-code option for the association but instead just a "normal validation.
block-code.
should work as well I think.

However, since submitting an invalid number of conference attendances is already prevented on client side and then fully enforced on DB level (because save will never happen if the error is raised), I guess its also totally fine to give the client a 500. Because in this case *"something really went wrong"*, e.g. someone by hand manipulated the form, the JS is not working, etc. And these are probably errors we should not cover but act upon.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-192293315\pr-comment-92920006.json . 


I think so, yes. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-192899628\comment-264280728.json . 
hey @jancborchardt, cool to see that you're interested in submitting your Open Source project! We prefer getting general questions about RGSoC sent to our contact email (summer-of-code@railsgirls.com) because it's easier to triage and answer so if possible, could you stick to email for all future communication?
Now that we got this out of the way: yes, we offer stipends for students who participate. Our main website has a bit more info on this, on the landing page and on our about page. I understand the confusion though if you came directly from the Project Submission page, which is on our teams app. Thank you for making us aware of that!
If you have any more questions, don't hesitate to drop us a line. Looking forward to getting your submission! :flexed_biceps: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192899628\comment-264844486.json . 
@alicetragedy ah thanks! I was sure I read everything … if the main site wasn’t redesigned in the last few days, I must’ve been on the teams apps the whole time and mainly read the Help section there, which also listed opening an issue here as first approach. (Which I also prefer since that was a question I assumed others could have too.)

Thanks for the info then, will use email for future stuff. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192899628\comment-264876229.json . 
@jancborchardt that's a very good point, and I think we can definitely improve that help section to make it more understandable :) The line "If you think something is unclear or should be improved" pointing to the issue tracker meant to suggest opening an issue along the lines of, "it's not very clear how to sign up for an account" or "I think the help page could be improved" rather than direct questions about the program, however reading it now I'm realising that it could be understood in another way. I will improve the wording there, thank you for pointing this out to us. :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-192899628\issue-192899628.json . 
Heya, awesome you’re doing this, thank you so much! We’ll see to apply with @Nextcloud :)

One question though because that was unclear from reading the website: We participated in GSoC and Outreachy before. For GSoC, Google is sponsoring the students, and for Outreachy the project has to sponsor the students itself (which is no small investment at 5.5k a student).

Is money at all involved in RGSoC? If so, where does it come from? From having no mention of it on the website it seems like no, but I just thought it would be good to clarify this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193768721\comment-265147041.json . 
Ack, hold on, seems I broke something with the Travis check. Will investigate.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193768721\comment-265154913.json . 
Phew! Seems we had to move the inline-code running into inline-code. I hope I've done this correctly!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193768721\comment-265590551.json . 

inline-code



Could this be it? URL.

(great work by the way!)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193768721\comment-265692607.json . 
Thank you for your feedback, @carpodaster and @pgaspar! 

You were right @pgaspar that did the trick! Great find. :smiling_face_with_open_mouth_and_smiling_eyes: 

I didn't know that it's possible to run an update from the command line, @carpodaster, so I actually did id manually. I actually can't seem to find a command for upgrading or updating rails.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193768721\comment-266202026.json . 
Excellent, @ramonh, thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193768721\issue-193768721.json . 
This should hopefully resolve #549 

There's one deprecation warning I couldn't figure out, namely the following:.
inline-code

This would appear to have been a stopgap between Rails 4.1 and 4.2 and will be removed soon. However, I couldn't find where we defined it.

I've also taken the opportunity to upgrade other gems, while we're at it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193768721\pr-96721182.json . 
This should hopefully resolve #549 

There's one deprecation warning I couldn't figure out, namely the following:.
inline-code

This would appear to have been a stopgap between Rails 4.1 and 4.2 and will be removed soon. However, I couldn't find where we defined it.

I've also taken the opportunity to upgrade other gems, while we're at it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193768721\pr-comment-91386231.json . 
I'm not familiar with passing two version constraints. Shouldn't inline-code  be enough? I thought it would also match inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193768721\pr-comment-91386705.json . 
Ah, good catch! inline-code would be even better.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193768721\pr-comment-91473779.json . 
Good point! I'll admit I took the declaration from RubyGems.org, not thinking much of it :smiling_face_with_open_mouth_and_cold_sweat: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193768721\pr-comment-91473822.json . 
Great, thank you for the suggestion! :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193920804\comment-265567254.json . 
:confetti_ball: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193920804\issue-193920804.json . 
Hello! :waving_hand_sign:.

Running inline-code, I noticed a warning I had never seen before:.

block-code.

The reason for the warning seems to be a mix of two things: inline-code and the inline-code version we're using.

The issue with inline-code seems to be fixed by not including the gem in the inline-code group - see this issue.

This was also addressed in inline-code 3.5.2 as you can see here.

So, this PR does just that - move inline-code out of the inline-code group and bump inline-code to 3.5.2.

Let me know what you think! :person_raising_both_hands_in_celebration: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-193920804\pr-96832443.json . 
Hello! :waving_hand_sign:.

Running inline-code, I noticed a warning I had never seen before:.

block-code.

The reason for the warning seems to be a mix of two things: inline-code and the inline-code version we're using.

The issue with inline-code seems to be fixed by not including the gem in the inline-code group - see this issue.

This was also addressed in inline-code 3.5.2 as you can see here.

So, this PR does just that - move inline-code out of the inline-code group and bump inline-code to 3.5.2.

Let me know what you think! :person_raising_both_hands_in_celebration: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194472620\comment-265888505.json . 
Actually, I think this is easy to fix. I'll have a PR up in a few minutes.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194472620\issue-194472620.json . 
Noticed this by chance in development and confirmed it also happens in production. It happens for windows within the 1315px - 1415px range approximately.

!github-login

The wrapper:.

<img width="251" alt="screen shot 2016-12-08 at 23 10 43" src="URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194476274\comment-266202058.json . 
Rock'n'Roll! Looks superb, thank you Pedro! :bowing_man: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194476274\issue-194476274.json . 
Fixes #569. Removing the inline-code seemed to do the trick.

The media queries seem to work as before, but I may have missed something here...

Anyway, the result:.

!github-login-fix.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194476274\pr-97224584.json . 
Fixes #569. Removing the inline-code seemed to do the trick.

The media queries seem to work as before, but I may have missed something here...

Anyway, the result:.

!github-login-fix.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\comment-266417069.json . 
This is an awesome feature @pgaspar! :person_raising_both_hands_in_celebration: 
I think that since there is not really an icon that really fits with the concept, having the extra popover is definitely a good idea, as it explains what the button does (might be confusing otherwise, with an icon that does not 100% reflect this sort of complicated concept). So from my side, +1 on keeping that.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\comment-266982028.json . 
This sounds just wonderful. I can't assess the actual code implementation, but the UX appears to be well thought out and hell yeah… frontend work for all those many roles will be a lot easier. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\comment-267163936.json . 
Oh, and about the popovers: those are the most beautiful usage hints the Teams App has ever seen! :heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\comment-267490498.json . 
Thank you for the awesome comments @alicetragedy @katrinkampfrath @carpodaster :grinning_cat_face_with_smiling_eyes:!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\comment-267540027.json . 
Merge at your own leisure! :smiling_face_with_open_mouth_and_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\comment-267757061.json . 
This looks awesome! 
It would be great if you would add a line or two to the Quick Start guide as well? Maybe we can simplify the modus operandi as well. 
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\comment-267796944.json . 
Great suggestion @F3PiX :thumbs_up_sign: @carpodaster and others, check the text I added to the readme and let me know if it's ok so we can merge! :smiling_cat_face_with_open_mouth: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\comment-267810814.json . 
Looks great :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\comment-267982573.json . 
I'd also be up for merging this — I think the info about roles in the readme should still be kept for now (I consider it to still be valid information) :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\issue-194802959.json . 
This PR addresses and hopefully closes #548. It allows users to impersonate other users in development. This is useful for testing the entire application process as both team members.

## How it looks & works

In the public-facing Community page (inline-code), you'll see an orange button for every user in the list, except yourself.

!impersonation

As soon as you hover your mouse over one of these buttons, you get a bootstrap popover with a small explanation. (this may be a bit over the top :smiling_face_with_open_mouth_and_cold_sweat: let me know what you think).

<img width="865" alt="screen shot 2016-12-10 at 23 44 21" src="URL.

If you open a user's profile, you'll also see an orange "Impersonate" link. It also shows the same popover on hover.

<img width="988" alt="screen shot 2016-12-10 at 23 44 59" src="URL.

Clicking any of these orange buttons will switch your inline-code to be the impersonated user. I used a gem called pretender that also gives us a inline-code method, which is the original user. This is how clicking the link looks like:.

<img width="1183" alt="screen shot 2016-12-10 at 23 45 21" src="URL.

You'll notice that when in "impersonation mode", the Sign out link is swapped by a "Stop impersonation" one.

<img width="1164" alt="screen shot 2016-12-10 at 21 19 40" src="URL.

Clicking it will stop the impersonation make you _you_ again!

## Some details

### Keeping this out of production

As you'll see in the code, I'm checking for the production environment at the route level and at the view level. Let me know if you feel I should add some controller-level protection, like a guard clause which is what's being used on the Switch Season Phase feature.

### Tests

I wanted to explore testing the route-level production protections and I (eventually) got it working :person_raising_both_hands_in_celebration: . At the end of it I had a feeling that this may be testing _too deeply_, so if I'm happy to remove/alter if you'd like.

### The orange buttons & other visible changes

I picked the inline-code and inline-code icons because it was the best I could find in the Font Awesome version we're using. Open to suggestions, but I'm not too worried since this is dev-only.

The Stop impersonation button isn't great - I wanted to make it "Stop Impersonation", but that would break the menu layout for supervisors (they have an extra link in the menu).

The popover that comes up when you hover the buttons may be a bit too much. I'm ok with removing it entirely if you want.

Oh, and the buttons are orange because the Switch Phase button (another development-only feature) was also orange :smiling_face_with_open_mouth_and_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\pr-97443075.json . 
This PR addresses and hopefully closes #548. It allows users to impersonate other users in development. This is useful for testing the entire application process as both team members.

## How it looks & works

In the public-facing Community page (inline-code), you'll see an orange button for every user in the list, except yourself.

!impersonation

As soon as you hover your mouse over one of these buttons, you get a bootstrap popover with a small explanation. (this may be a bit over the top :smiling_face_with_open_mouth_and_cold_sweat: let me know what you think).

<img width="865" alt="screen shot 2016-12-10 at 23 44 21" src="URL.

If you open a user's profile, you'll also see an orange "Impersonate" link. It also shows the same popover on hover.

<img width="988" alt="screen shot 2016-12-10 at 23 44 59" src="URL.

Clicking any of these orange buttons will switch your inline-code to be the impersonated user. I used a gem called pretender that also gives us a inline-code method, which is the original user. This is how clicking the link looks like:.

<img width="1183" alt="screen shot 2016-12-10 at 23 45 21" src="URL.

You'll notice that when in "impersonation mode", the Sign out link is swapped by a "Stop impersonation" one.

<img width="1164" alt="screen shot 2016-12-10 at 21 19 40" src="URL.

Clicking it will stop the impersonation make you _you_ again!

## Some details

### Keeping this out of production

As you'll see in the code, I'm checking for the production environment at the route level and at the view level. Let me know if you feel I should add some controller-level protection, like a guard clause which is what's being used on the Switch Season Phase feature.

### Tests

I wanted to explore testing the route-level production protections and I (eventually) got it working :person_raising_both_hands_in_celebration: . At the end of it I had a feeling that this may be testing _too deeply_, so if I'm happy to remove/alter if you'd like.

### The orange buttons & other visible changes

I picked the inline-code and inline-code icons because it was the best I could find in the Font Awesome version we're using. Open to suggestions, but I'm not too worried since this is dev-only.

The Stop impersonation button isn't great - I wanted to make it "Stop Impersonation", but that would break the menu layout for supervisors (they have an extra link in the menu).

The popover that comes up when you hover the buttons may be a bit too much. I'm ok with removing it entirely if you want.

Oh, and the buttons are orange because the Switch Phase button (another development-only feature) was also orange :smiling_face_with_open_mouth_and_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\pr-comment-92493127.json . 
Would it be good to guard this with a inline-code? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\pr-comment-92493340.json . 
Oh nice, I didn't know you could do these multi-line thingies with slim.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\pr-comment-92493619.json . 
Or is it enough to not route the impersonation in prod (ie. there is a guard in inline-code) ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\pr-comment-92733633.json . 
We can certainly add more protection @carpodaster. I don't know if doing it here is the best idea though, because this call creates the inline-code helpers (and a couple more).

For now, I think it would work because I think we're only using inline-code after we check that we're not in production in the views. I'll try it out and see if it works!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\pr-comment-92768413.json . 
You're right – it's probably well protected as it is. Thanks for clearing it up!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\pr-comment-92936892.json . 
I wonder: do we still need to add the roles, like student, to ourselves? If not, we can delete the lines 128 + 129.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-194802959\pr-comment-92939458.json . 
I think that instruction is probably still valid. I guess it depends on what you want to do, and there can probably be a role that is not covered by our initial fake data, so there would be no one to impersonate for that role.

We can definitely improve this part of the readme in a separate PR if necessary. @carpodaster let me know if we should change this now and if not, feel free to merge! :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\comment-267767641.json . 
@carpodaster Before I solve the tests: Is this the way to go?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\comment-267828173.json . 
@carpodaster I don't understand how to implement so that "The class can operate on Season.current directly."  So I tried this. 

 

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\comment-267845556.json . 
What I meant is that since the season switch only makes sense on the current season, the season switcher class doesn't necessarily be passed a season instance. It can grab it itself by calling inline-code. Your approach definitely looks cleaner, I was only thinking if passing a season instance to the constructor would suggest that it actually makes any sense to pass a different season.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\comment-267986420.json . 
Thanks @carpodaster for your help.
I chose option b) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\comment-267988227.json . 
Awesome, Maud, thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\issue-196225153.json . 
Take 1 on issue #499
- Store dates in constants
- Move switcher methods out of Season class.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\pr-98445704.json . 
Take 1 on issue #499
- Store dates in constants
- Move switcher methods out of Season class.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\pr-comment-92927839.json . 
Pulling the default dates into a constant is a very good thing! :+1: 

I don't believe you can call inline-code with a string parameter (see line 30). You probably want to use an array with 2 integers instead. But even then you'll have to splat the argument call like this:.

block-code.

A comment on what the values for the constants mean (= month, day) would be good for new devs or future versions of ourselves.

A different approach could be assigning Procs or Lambdas to the constants but that may get a little too verbose.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\pr-comment-92927966.json . 
I would make this a class. Extracting instance methods into a module which is only used by that one class gains little in terms of true separation. On the contrary: it adds cognitive load since the functionality is not stated explicitly anymore. 

How about a class nested in the inline-code namespace?
block-code.

The class can operate on inline-code directly. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\pr-comment-92942098.json . 
O. Splat. Thanks.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\pr-comment-92950321.json . 
You can instantiate the class directly without calling a method on inline-code. Now that there is a dedicated class for it, it doesn't have to be the inline-code's concern to switch phases anymore.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\pr-comment-92950349.json . 
This is what I meant in my other comment: passing the season as an argument is not really necessary since the switcher can grab the current season from the DB itself.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\pr-comment-92950444.json . 
Ok, a bit of a crossroads here:.

I would either

a) remove inline-code from the the public interface, forward the inline-code methods to a private switcher instance transparently and keep calling inline-code on inline-code 

or

b) leave inline-code completely out of the phase switching business by calling the class directly (see comment above). This would also mean moving the phase-switching examples into a separate spec file for inline-code.

I think b) is the better way to go, but I let you decide :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196225153\pr-comment-92950564.json . 
Oh, and when the inline-code ivar is gone, it's questionable if we still need an _instance_ of inline-code at all; there is no state left and all the methods are self-contained. We can make all the methods class methods.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196299539\comment-269210480.json . 


Would it make sense to remove the difference?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196299539\comment-269239959.json . 
It would be nice to DRY this up, but it requires quite a bit of refactoring . Which affects other helper methods etc.
So I decided to only do the bug fix.
I can open a new issue, and sum up the questions that will be raised by that change?   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196299539\comment-271077939.json . 
Closing in favour of #590.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196299539\issue-196299539.json . 
In the never ending story of comma's and spaces:.

The conference texts have different formats on the teams profile page and the user profile page.
This fix solves a missing space on the user profile page when the conference location is given.

The formatting was suspicious and turned out NOT to be okay:.
Before:.
!user page

After:.
!user page after

(Apart from the leading space, that I couldn't solve. I'll leave that for now.)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-196299539\pr-98487573.json . 
In the never ending story of comma's and spaces:.

The conference texts have different formats on the teams profile page and the user profile page.
This fix solves a missing space on the user profile page when the conference location is given.

The formatting was suspicious and turned out NOT to be okay:.
Before:.
!user page

After:.
!user page after

(Apart from the leading space, that I couldn't solve. I'll leave that for now.)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-196443503\comment-269985736.json . 
Update: doesn't just happen in dev mode, it's an issue currently on the production site as well.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196443503\comment-270067771.json . 
Fixed in #584 – thanks @F3PiX !
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196443503\issue-196443503.json . 
When switching to the fake application phase or the fake proposal phase in /orga/seasons
and clicking on Community, 
I get a 500 with this message:.
block-code.

It happens only in dev mode. 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\comment-273409883.json . 
A test for this is missing here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\comment-300803285.json . 
@klappradla I tried to find a way to add the inline-code scope to the inline-code, but I don't know how. 
An option is to close this PR and leave it as is? Until someone takes the javascript solution on (as we discussed before). #576   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\comment-301247531.json . 
Ok, I see @F3PiX. If I remember correctly, then what you need to archive the scoping is just a scoped association. Looks approx. like this:.
block-code.

Then you need to adjust the calls to inline-code and the form and your limit should work. Makes sense?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\comment-303849620.json . 
Did I solve the merge conflict in rebase the wrong way? I am not sure where the :skip_validations came from. Same for the :skip_validations trait; it is too sophisticated to be written by me :-)


.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\comment-304006849.json . 
I don't know what exactly you are talking about @F3PiX, but I'm 99% sure that every inline-code trait you'll find there was probably written by me :winking_face:  It's something like my own *"pattern"*:trade_mark_sign: that I throw into basically every Rails codebase I'm on :v:.

What's the problem with it?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\comment-304225792.json . 
No problem with the trait at all! I am not sure that I solved the rebase conflicts right and if it should be there at all. Because in the same conflict solving that added this, I _removed_ a thing that _should_ be there. 
(...)
Think I know now what happened, and how to check. Thnks.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\comment-304480281.json . 
Temporarily blocked, until we figured out how to incorporate the 'round' attribute (see #751 )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\comment-308669952.json . 
Closed because we are reworking the Conferences functionality.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\issue-196489936.json . 
Part 1 of #414 
This adds a simple limit to the number of conferences a user can attend.
In user profile (user/:id/edit):.
* On submitting a form, the 4th conference will not be saved.
* On loading the form, when more than 2 conferences are saved before, the link to 'Add another conference' will not show up.

TODO after this PR:.
- [ ] better UX (see #565)
- [ ] make the attendances aware of raffle rounds

.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\pr-98617631.json . 
Part 1 of #414 
This adds a simple limit to the number of conferences a user can attend.
In user profile (user/:id/edit):.
* On submitting a form, the 4th conference will not be saved.
* On loading the form, when more than 2 conferences are saved before, the link to 'Add another conference' will not show up.

TODO after this PR:.
- [ ] better UX (see #565)
- [ ] make the attendances aware of raffle rounds

.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\pr-comment-107124917.json . 
quick question. what is the reason to remove the inline-code for roles?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\pr-comment-107128759.json . 
quick question. what is the reason to remove the allow_destroy: true for roles?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\pr-comment-107163400.json . 
Hi @beanieboi Thanks for your review!
The removal is not in my branch locally. 
Can it be that this happens with merging the master into the branch? IIRC I added the inline-code for roles in another PR. So can it be that this PR overrides the other one? 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\pr-comment-107166116.json . 
@F3PiX that makes total sense! I think we should update the PR so that we don't remove it. I also try to figure out the impact of this PR. if we have users in the database with more than 3 attendances, rails would think that the users are invalid and users can't update their profiles (e.g.) anymore. since I don't have access to the database, I also posted that question in slack and hopefully somebody can help us out there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\pr-comment-116358226.json . 
For scoping this down to the current season, it should be as I already wrote in the conversation. However, if that's all too complex, what about "just" a validation? I imagine that something like
block-code.
should already be sufficient. Don't you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\pr-comment-116513484.json . 
The max of conferences is 3 _per raffle round_. That's why I wanted to set the limit on the inline-code: so it only applies on form inline-code for the relevant raffle round. I suspect that either solution above doesn't work on the form only?
I can use either the inline-code option or the inline-code option and add a Proc or a symbol. So I am thinking something like this: 
block-code.
 NB inline-code is an attribute of inline-code. I didn't take that into account yet, just checking if inline-code is a viable way.

Is this a viable way? 


 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196489936\pr-comment-116843962.json . 
Sure, sounds like it should do the job.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196492593\comment-323588600.json . 
I think this is solved by having the new inline-code model with only two possible associations to inline-code
<img width="1035" alt="screen shot 2017-08-20 at 16 30 10" src="URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196492593\issue-196492593.json . 
In the user's profile, a user can select conferences to attend.
No more than 3 attendances are allowed (see #575). With more than 3 conferences selected, an  error is thrown on saving. However, the button "Add a conference" will still be present. Thus suggesting that more conferences can be added.

In an earlier attempt, we try to toggle the button depending on how many 'nested fields' are shown. 
See this file and discussion. 
The solution given in the Nested Form Wiki looks like a good starting point but has undesirable side-effects.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196509140\comment-269242387.json . 
! 
We don't _have_ Capybara. We are not going to set it up just to test this feature, are we?

I did some research, found that testing nested forms is notoriously complex, and I didn't find a solution how to do that other than with Capybara or Cucumber or another way of integration testing. 
Also, I didn't find an example in the Teams app repo with other nested forms, to reuse.

So. I really don't know how to test this. Tips?
 
 
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196509140\comment-271392579.json . 
@carpodaster I am still confused about the Capybara testing. Can you explain please?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196509140\comment-271411348.json . 
We talked about it last year. One day..... ;-)
Thanks. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196509140\issue-196509140.json . 
Solves #154
Removing a role from a user's profile (as an admin), did not actually remove the role. Allowing 'destroy's on nested attributes fixes this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-196509140\pr-98631538.json . 
Solves #154
Removing a role from a user's profile (as an admin), did not actually remove the role. Allowing 'destroy's on nested attributes fixes this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197403166\comment-270904784.json . 
@alicetragedy would it be possible to have an equal character limit for all fields? It would make it so much easier to implement. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197403166\comment-270905069.json . 
@carpodaster the exact character limits were a suggestion by @mkalininait, I'm ok with a 2000 character limit on all these fields instead of having them mixed. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197403166\comment-270905748.json . 
@alicetragedy ok, perfect. The final limit can be easily adjusted (maybe down to 1500 or something?) – that's easily doable when we just flag an attribute as character-limited and define the limit elsewhere.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197403166\comment-271090757.json . 
@alicetragedy @carpodaster I'm afraid that the 2000 char limit won't let us achieve our main goal of making the applications more laconic. I'd totally make the limit lower than 2000 (1500 or even 1000). .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197403166\comment-271142185.json . 
@mkalininait The concrete limit can be adjusted; the main issue here was to agree on a character limit (however high or low) that applies to _all_ fields with input limits.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197403166\comment-273640812.json . 
Tested on Staging: if I exceed the limit in one of the fields and then validate the application, I get the following error message: "There are still some fields missing". It sounds a bit confusing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-197403166\issue-197403166.json . 
There are a few fields in the application form that are a bit too prone to applicants writing long texts, which we wish to avoid. A way to solve this would be to set a character limit on those fields.

**Implementation**
- The character limit should be set at the view level in the form
- The length should *probably* be validated at the model level as well (that would be inline-code and inline-code)
- Each input field should contain a hint about the number of characters allowed
- *Bonus / nice to have*: character count going down as the user types (i.e. like you have on twitter) 

**The fields that need a character limit are the following:**

"Please tell us a little bit about yourself. What is your background?" (1000 characters)
"How did you get into programming?" (1000)
"Please give us a short summary of your programming skills" (1000)
"Tell us about your community involvement" (1000)
"Please summarize what you have been doing to learn programming since your first workshop" (1000)
"What do you want to achieve by the end of the summer?" (2000)
"Why are you applying to this program, and what do you think you can give back?" (2000)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-197412885\issue-197412885.json . 
The section “Project Goals” in the application form was confusing to some applicants, because the fields did not specifically refer to a first choice or second choice project. As we now wish to involve the mentors more in the application “review”, the students should submit motivation and tasks for both project 1 and project 2.

**Implementation**
- Rename fields “Project1” and “Project2” to “Project (1st choice)” and “Project (2nd choice)” (or similar)
- add new database columns inline-code and inline-code (or similar) to have extra, separate motivation and task fields for the 2nd choice project. (This is especially required since the mentors will need access to this) Note: these two fields should be optional, as we might have students who do not provide / choose a second project.
- update labels of inline-code and inline-code accordingly (specify 1st choice project)


.
#rails-girls-summer-of-code/rgsoc-teams\issue-197416077\comment-270382031.json . 
I would propose to extend the list in a way, which helps us differentiate our promotion channels better. Something like this:.

**RGSoC direct outreach:**
 * RGSoC Blog
 * RGSoC Twitter
 * RGSoC Facebook
 * RGSoC Newsletter
 * RGSoC Organisers

**Past participants or 'Partners':**
 * Past RGSoC participants
 * Another diversity initiative outreach
 * Study group / Workshop
 * Conference

**Other channels:**
 * Friends
 * Mass media
 * Other (please specify)
 * [additional text field for other]
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197416077\comment-270931763.json . 
works for me! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197416077\comment-271385043.json . 
Hello! I'll go ahead and give this a go if nobody has yet.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197416077\comment-271393648.json . 
@ramonh awesome! you can use the final list that Maria made. It doesn't need to be split into categories necessarily, those are just for us (I think). .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197416077\comment-271393931.json . 
Thanks for clarifying, @alicetragedy! Just to make sure, you mean that on the actual form the student sees the categories won't be displayed?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197416077\comment-271394686.json . 
@ramonh yes, that's correct — I think it would be ok if it was just a list of all the options as checkboxes, without the user/student seeing what category each checkbox belongs to :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197416077\comment-271397583.json . 
Great, thank you, @alicetragedy!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197416077\comment-276956685.json . 
@ramonh @mkalininait @alicetragedy can we close this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197416077\comment-276957409.json . 
yes :D.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-197416077\issue-197416077.json . 
Right now, the inline-code field is just a text field; having a list of pre-defined answers rather than a free-form field would allow us to have a better overview of how applicants find out about us, which is valuable information.

**Implementation**
- this list could lead either to something like a dropdown (i.e. only one possible answer) or a list of checkboxes (leading to one or more answers). Maybe the latter is preferable.

**Available Options**

Friends
RGSoC alumna
Social media (Twitter, Facebook)
Conference
Study group / Workshop
Newsletter
Other (please specify)
[additional text field for other]
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-270385724.json . 
Depends on Issue #579.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-271897707.json . 
@klappradla is this something you might be interested in working on maybe? (and the related issue URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-271909897.json . 
Yeah, seems fine. I did not dive into details yet, but I'll just assign them to me then.

What in terms of deadlines does inline-code mean @alicetragedy?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-271913488.json . 
@klappradla high-priority means that these must absolutely be fixed by the time we open up the applications, the other ones are more like “small improvements” than anything, I think.

Regarding deadlines: I've left us a bit of breathing room there. The plan was to start testing the app on the weekend already (so ideally, with most of the bigger changes/inline-code issues already implemented, which is obviously not going to happen) so that we have a full week to test, and an extra week at the end as buffer. I think we should look to finish high-priority tasks/features by end of next week at the latest, so we can iron out any weird kinks if needed and still be on schedule. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-272114424.json . 
We also talked about this feature in the call last week, and I wanted to expand a bit on the issue:.

The idea is to have a overview with a list of all the applications that have submitted for the project (as either 1st or 2nd choice). Clicking on a single application (e.g. team name) will take the mentor to the detailed view of the application, where the above-mentioned answers can be found. (similar to the projects overview+detailed view).

This show view should include:.
- a comment box (meant as a note-taking possibility for the mentor, this needs to be clarified / explained in a description)
- picks/favs (see URL.

Alternatively, picks/favs should be available from the dashboard/index, not sure what makes the most sense, UI/UX-wise!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-272268836.json . 
Wow, thanx a million for the explanation @alicetragedy :person_with_folded_hands:  - just perfect!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-272684467.json . 
Quick question @alicetragedy: should the maintainers know whether their project is the team's first or second choice?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-272686103.json . 
That's a very good question, and I'm not sure if I have an answer for this. On the one hand, I think the maintainers would be interested in knowing whether their project is in a team's first or second choice; on the other hand, I think this would probably influence the maintainer's “favourite” teams maybe? 
I think that I would be ok with providing maintainers all the information they need to make a choice: so, informing them about which teams have selected their project as a first choice project. Do you personally have any strong opinions about this, also when it comes to the implementation?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-272686194.json . 
quick (unrelated) note @klappradla: I think @carpodaster is planning to take a shot at URL so there might be some overlap in your work — maybe you can talk to each other to make sure you don't do the same work twice. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-272686898.json . 
@alicetragedy ah, good call. I was planning to create another separate view/action for this, not including the fav in any existing templates. It used to be in inline-code in 2015 iirc, but since we collect more info now, I'm not gonna put it there. I think we can work independently and if we have time later (rofl), we can maybe combine both views when both have been merged to master.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-272687101.json . 
Hm, @alicetragedy I'm not 100% sure if I understand your answer :face_with_tears_of_joy:  - so you mean "yes they should know wether their project was 1st or 2nd choice"?

And @carpodaster I saw you're working on this stuff and did not touch anything related to this yet. I threw in a inline-code namespace with a respective inline-code *(same pattern as for the other namespaces, etc)* so it's all separate.
But I can already push #579 if this is of any help for you.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-272687276.json . 
@klappradla yes, they should know. I think that's the best way to go about it :thumbs_up_sign: 
sorry if that wasn't clear — I just didn't really think about it at all, so thanks for asking :face_with_tears_of_joy: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-272687771.json . 
@klappradla new namespace sounds good! :thumbs_up_sign: Take your time. I haven't written any code yet and probably won't have time for it before Tuesday.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-272687825.json . 
Well, I'm for now skipping anything *mentor-fav* related and just add an empty column in the views, so we can then add the respective data there @carpodaster.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\comment-272835580.json . 
Just to keep you updates: I'm not sure if I find the time to continue on this before Tuesday, but I pushed my current WIP state to this branch *(in case someone wants to have a look / try out things)*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339329\issue-198339329.json . 
Since this year project maintainers will be more involved in the application process, they should be given access to applications submitted for their project (1st and 2nd choice applications). The best way to do so, rather than messing too much with giving access to application drafts, is to create a separate view for mentors to access (for **submitted applications** only). 

The separate view for mentors should only include answers to the following questions:.
- "Short summary of your programming skills"
- "What is your programming level"
- "For how many months have you been learning the language of your primary project?"
- "Please summarize what you have been doing to learn programming since your first workshop"
- "Please provide examples of your code"
- "Project" (1st or 2nd choice correspondingly)
- "Why did you select the project?" (1st or 2nd choice correspondingly)
- "Which features are you planning to work on in the project?" (1st or 2nd choice correspondingly)

:warning_sign:️ The above fields should also have a notice or disclaimer for students in their application form to let them know that the maintainers will have access to those answers.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339870\comment-271254733.json . 
Do we expect them to copy/paste entire code blobs into that textarea field? Why do we not consider external links? If the code exercise is mainly for the mentors, they will hardly be able to blindly select people anyway, right?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339870\comment-271282507.json . 
@carpodaster no, it should/could still be links, sorry if the wording made it sound like we wouldn't take links. what we don't want are links to *profiles* and *complete repos*, as often they're just e.g. super basic, generated code from scaffolds in the case of Rails apps and not necessary concise examples of code. 
But I think we could change the wording to make what we want more explicit. Maybe, “**Links to** completed coding challenge provided by the mentor (if present), commits / pull requests on GitHub or other concise examples of your code.”.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339870\comment-271558522.json . 
Good point @alicetragedy @carpodaster .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339870\comment-271567249.json . 
I've updated the description accordingly :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339870\comment-276228562.json . 
Tested locally, looks good.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198339870\issue-198339870.json . 
The description and hint of this field should be more direct, so a suggested improvement would be to rename to “Please provide examples of your code” and add the following hint: “Links to completed coding challenge provided by the mentor (if present), commits / pull requests on GitHub or other concise examples of your code. Links to GitHub profiles and repositories won't be considered.”

Alternatively, the above could be combined into a single label/description of the field, i.e. “Please provide examples of your code: links to completed coding challenge provided by the mentor (if present), commits / pull requests on GitHub or other concise examples of your code. Links to GitHub profiles and repositories won't be considered.”.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271340917.json . 
The first question is: what is the application form? How do I get it?

Do you have a document somewhere explaining key concepts of the app and the terminology used here?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271341554.json . 
You beat me to it ;-) I am working right now on listing the steps to get there, and post them somewhere. Wiki? Readme? Slack?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271342020.json . 
I would prefer the wiki (and link it in the readme ;) ). That way other people after me will find it easily and it doesn't clutter the readme too much.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271342109.json . 
@F3PiX I think it might be a good idea to have these concepts in the wiki, and possibly linking to them from the readme? it's quite a bit of info.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271342189.json . 
ops, @bitboxer, you were too fast :D .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271345205.json . 
@bitboxer If you are in a hurry, here is the first draft. URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271345415.json . 
Awesome. Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271347468.json . 
Can you let me know if this level of detail works for you, please?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271348179.json . 
Yes, it works. I am now editing the Form :thumbs_up_sign: .

After I added the new input field here, is there a backend view that needs to be updated to show this field? Or is adding the new field in this form enough? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271349333.json . 
Ah and: is the giving back field a required field?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271381842.json . 
@bitboxer you'll find the fields required per student in inline-code; the validations (for context inline-code) are in inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271382451.json . 
Yes, I saw that. The question is: should they be required to fill out by the students in the validation? Or to be more precise: should I add the new field to the inline-code list?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271411087.json . 
Sorry @bitboxer – should have read both the initial issue text and your comment more thoroughly :upside-down_face:.

I would say it's a required field, yes.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271415372.json . 
Thanks! One question left: is there another view where I have to show the new field?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271423403.json . 
No, not for now. We've just discussed in #184 that we'll remove the other option to edit per-user application info.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271538171.json . 
Nearly done. Only one thing left: what should be the text below the field that explains in detail what is expected in that field?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271556963.json . 
I have just remembered, we should probably set the char limit on the new "giving back" field (see URL.

@bitboxer Regarding the text below the field, I wouldn't write anything. We *could* provide some hints like: "For example: mentor newcomers in your local community, run workshops, become a RGSoC coach etc", but I would really like to give our applicants a room for independent thinking. And I definitely don't want copypasted answers. Maybe other team members have a different opinion though.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271557448.json . 
@bitboxer @mkalininait I'm already working on the char limits. Will add the flag to "giving back" once it's merged.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-271558998.json . 
Okay, done. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-273465910.json . 
The "Why are you applying to this program" field still contains the "what do you think you can give back?" part in the name. I guess it has happened while resolving the merging conflict (see this here)

We also forgot to fix the placeholder text of this field: "This is my 750 word essay. I'm applying to this program because it's awesome, and I think I can give a lot back. I will not share information about my age, name or location."
Should be: "This is my essay. I'm applying to this program because it's awesome. I will not share information about my age, name or location."
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-273481851.json . 
Let's discuss this in here. No need to talk in 2 different positions about it ;) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\comment-276228429.json . 
Tested locally, looks good.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198340730\issue-198340730.json . 
This would allow us to separate entirely programming skills from community involvement.

- Create a “Community Involvement” section (maybe somewhere between "Background information" and "Your programming skills")
- Move community-related fields ("Tell us about your community involvement") from the "Your programming skills" section to the newly created “Community Involvement” section.
- Add a new field "What do you think you could give back to the community?". 
- Remove the "giving back" part from the field "Why are you applying to this program".
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198356252\comment-270016749.json . 
 :sparkles:  :sparkles:  :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198356252\issue-198356252.json . 
... where users are not shown in all phases of the season.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-198356252\pr-99877128.json . 
... where users are not shown in all phases of the season.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-270112205.json . 
Hey Maud, thanks for the PR! Before I get into the review, could you please rebase the branch against the current master? It includes your fix from #584 and should make CI pass again.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-270123671.json . 
Sorry, I saw the red cross when I did not have a chance to work on it. 
Also, I did not add extra tests yet. I will after your review, if that is okay?   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-272718285.json . 
@carpodaster Back to you. And thanks again for your explanations :person_bowing_deeply:  . 
  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-273320974.json . 
The season switch specs pass locally. I'll look into the failing check tomorrow. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-273880979.json . 
Yay! :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-274639341.json . 
Huh??  Now it passes? 

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-274639537.json . 
@F3PiX Yeah, that makes no sense at all. Will have to check in more detail – but not tonight I'm afraid :zzz: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-274639840.json . 
Thanks for your help! Very interesting, as always :-) :person_with_folded_hands:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-274844071.json . 
I want to try some things, I'll ping you when I am ready, okay?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-275074458.json . 
Okay, I think I found that it _is_ the timestamps, I wrote it down here: URL.

And about the method stub: I tested it in the all the other switch specs. It works everywhere except in the last two. Rspec says about stubbing the method: " Nothing happens if the message is never received." And that is exactly what the silent fail does, isn't it? Redirecting without sending the message.  

Mystery solved?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-275194421.json . 
@carpodaster I *think* I solved the mystery ^. What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-300799416.json . 
Ping @klappradla .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-300931952.json . 
Thanks a lot, @klappradla!!! 
There is one more unanswered question: about the Travis build failing. See this comment for the error message. And this one  where I _think_ I solved it. (That would be the subject of my blog post, BTW). .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-301159859.json . 
@F3PiX I just restarted the build and it went green. I think my recent ajaxification of the comments controller (URL is to blame here, although I'm not sure yet what exactly causes the test to flake.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-301163025.json . 
And for the _open question_ @F3PiX: I actually don't think that the microseconds can become a problem here. To me this looks more like the object has not been written to the DB before (e.g. via inline-code). Aside that, if you just want to check weather or not the record has been updated, I'd go with something like this
block-code.
checking an already instantiated object won't show the changes.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-301341390.json . 
Thanks again Max for your help. Glad that the tests are now testing what they should test. Phew. 

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-301549317.json . 
Good to :ship:  I'd say @F3PiX

Merging now will break the build because the deploy hook is currently not working, but I can deploy it by hand for you.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\comment-301751339.json . 
:confetti_ball: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\issue-198360711.json . 
Move phases to model. Get rid of the switch statement.

The switch statement has been bugging me since I created it, last year, as a Ruby Nuby. 
The new PhaseSwitcher class looks like the most appropriate place to translate the params to a method call.  


.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-99879996.json . 
Move phases to model. Get rid of the switch statement.

The switch statement has been bugging me since I created it, last year, as a Ruby Nuby. 
The new PhaseSwitcher class looks like the most appropriate place to translate the params to a method call.  


.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116104349.json . 
Just outta curiosity @F3PiX, why did you chose a memorized class method over a constant?
I'd intuitively go with
block-code.
Also I prefer symbols over strings :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116105784.json . 
This is only personal preference, but rather then doing nothing on invalid input, I'd raise an error instead. I think this is more helpful in certain cases
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116106059.json . 
Again personal preference, but these double blank lines before inline-code are kinda oldskool and hurt my eye :winking_face:  - why not just a single blank line before and after?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116106449.json . 
Since we're on Ruby > 2.some, I'd vote for using *"real"* KWARGS everywhere. Plus, since it's only one param, this can also savely be done in one line I'd say:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116107327.json . 
I'm not 100% sure, but doesn't the inline-code end up in the inline-code as inline-code **always**? So depending on your contract with inline-code I'd suggest to do the necessary conversion **before** passing it on to the business logic. Could e.g. look like this:.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116108215.json . 
Sorry, I don't get what this spec is supposed to do. Why does calling the inline-code have an impact on weather there is a current season or not?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116109690.json . 
Maybe I just don't understand the behavior of inline-code... But what is this line for? When should there be another call to inline-code when calling inline-code again *(as in calling the subject)*?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116111384.json . 
Why is it necessary to do timetravel here *(this also applies to the following specs)*? The way I understand it, the underlying methods just update the certain values for the current inline-code. So in theory it should be enough to do something along the lines of
block-code.
shouldn't it?

Besides that, I don't really understand why inline-code is the inline-code of your specs here. Isn't the thing that's being tested the inline-code? So in my opinion, the inline-code should actually be
block-code.
then you can of course also expect the changes on a season record with this. But I think this is outta scope for this test - the inline-code is already tested. I'd simply test if the respective methods get called on the season object.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116111490.json . 
If you go with the inline-code approach, this needs to be updated as well of course :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116222057.json . 
The silent failing is intentional, to diss mailicious input-ters. Do I miss a use case where it would be helpful? Can you think of one? See URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116253623.json . 
I like this very much... but we skipped the magic strings in a previous review. So the phase-param is always a symbol. No conversion needed. Right? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116255383.json . 
This was a temporarily check because of the failing build. TBH I just copied Carsten's prompt. :flushed_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116266560.json . 
I am very bad at writing tests and writing Rspec, sorry. IIRC I _intended_ to test the interface only, and now I understand I did not. 
So, I tried your suggestions and I don't understand what to do. The inline-code things looks to me as it is exactly what we need, I didn't know about that. But I got the strangest errors, never got past the first part where the Season is expected to receive :current. So, maybe you can give me hint in the right direction?
Or I can show a few things I tried? Whatever is easier for you. 
So, I moved to part 2, because it makes totally sense that the season should not be the subject. Here too: all kind of errors. I did a sanity check: 
block-code.
and that failed. :thinking_face:  
Tips?


 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116302329.json . 
Hm, I need to try this out in real code tomorrow. I don't see how Rails could be able to distinguish between symbols and strings in the params hash. It's parsed out of the HTTP request and I cannot imagine how this should work then... But I'll try it out.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116304054.json . 
Aha, no, you are right ofcourse. I turned things topsy turvy. I'll update accordingly.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116357412.json . 
Ok. So I'm having a look at the respective files locally.

First of all, in order to be able to use inline-code, the spec needs to be setup as a proper (model) spec. So start the file with:.
block-code.

Once you've done this, the expectation needs to include the inline-code module as well:.
block-code.
This is necessary because you're out of the inline-code "namespace" in the spec file. You could of course go into it by setting this up like this:.
block-code.
However, I **strongly** advise not to do it! inline-code is not a module but a class and the inline-code class not set up to be within the inline-code namespace. If it would, it would look like this:.
block-code.
However, with Rails :pile_of_poo: autoloading stuff, you'll run into troubles with this anyways :winking_face: 

Once you got the spec files, namespaces, etc. sorted out, let me know how I can help with the tests themselves.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116357544.json . 
:thumbs_up_sign:  but please switch to 2-spaces wide soft tabs - the 4 spaces thing is Python only :winking_face: 
It's just a Ruby Community best practise to go with 2 spaces.

Plus: I prefer the inline-code over the inline-code syntax, since it makes it more obvious that what's being invoked here is actually a function... Aside from that, it's also handy to freeze the constant afterwards:.
block-code.

And on naming: I think it's perfectly fine to reduce this to inline-code, no need to prepend "whitelist" if there no such thing as general inline-code or "blacklisted" phases there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116357566.json . 
May slightly change if we opt into the raise-error-appraoch. But for now, again, just a community best practise, I'd vote for doing this in a single line instead, makes it a bit more expressive:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116357621.json . 
Ok, get it. However, it's a dev-env-only feature anyways, so if someone is trying to shoot down their server with invalid params... their problem. To me "silent failing" sounds like hiding potential problems and increasing technical dept. Therefore I'd vote for using the error approach, it's simply quicker feedback that there's something wrong.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116359530.json . 
While I was changing this, I remembered this conversation about the DoS risk with converting user input strings to symbols. Aren't we reintroducing the risk if we convert upfront?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116361910.json . 
^
URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116366223.json . 
That made all the difference. :see-no-evil_monkey: 
Second try,  to only test the public interface. To understand what is happening, I needed to work on a lower abstraction level than your instructions. I can change that later, unless you are tired of it...
The inline-codedid not want to return inline-code, so I just added a var. 
What I tried to accomplish: see if the season receives the call with the phase, by checking roughly if something in the output changed. 
And now I realised why I added the Timecop: when the test run during the same phase as the fake-phase. I solved it not by adding a test in another phase. 
wdyt?
  
 
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116388453.json . 
Well, it's a dev-env-only feature... But anyways, Ruby 2.2 introduced GC for symbols (cc @carpodaster), so as long as you don't do a
block-code.
DoS from converting any strings to symbols should not be a problem.

However, if you prefer strings, feel free to switch to them. I just proposed symbols because I personally prefer them over strings. But the whole logic works with strings as good as with symbols (just need to switch inline-code to inline-code then).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116388648.json . 
As I said in a previous comment, since I think we can be sure to **always** be on a Ruby version > 2.2, we'll have GC for symbols. Therefore, no problem with DoS when converting strings to symbols in this case.

I'd vote for removing the inline-code condition here. I also cannot imagine it working *(inline-code is defined in a different namespace, would be inline-code)*... plus I don't think it makes huge sense to first check wheather the param is whitelisted, if not, pass on nil and then check again if it's whitelisted.

So, I'd suggest to just go with:.
block-code.
and then to the whole whitelist stuff in the model where the actual business logic lies.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116388694.json . 
Almost :v: (sorry for being so picky, but since it's so close...): put this line on the same level as inline-code and it looks adorable :smiling_cat_face_with_heart-shaped_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116388913.json . 
Since you're only defining methods on inline-code here and use inline-code to invoke them, inline-code does not have any effect here. I'd vote to either really make things private or just remove it in order to not irritate future developers.

If you decide to make things private and only expose the inline-code method to the outer world *(which would make sense, since it's the only method that get's tested and it's the only thing invoked from outside)*, you need to "open up" the class. This looks like this:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116388928.json . 
All these lines are intended one space too deep :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116388930.json . 
All these lines are intended one space too deep :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116388932.json . 
All these lines are intended one space too deep :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116388933.json . 
All these lines are intended one space too deep :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116388957.json . 
Since this is now sorted out, please remove this again, no need to test rspec's internals.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116389002.json . 
Outside of examples, it's best practice and way more understandable for every other developer if you'd use inline-code here:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116389157.json . 
Since what's happening here is basically testing a inline-code's class method, I'd suggest to change this line to:.
block-code.
this makes things more obvious for people who read the test.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116389300.json . 
I'm not a huge fan of this inline-code pattern. How about using a chained expectation instead?
Should look something along the lines of this if I recall correctly:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116389327.json . 
Yes, makes sense. Thanx for explaining!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116390624.json . 
:face_with_tears_of_joy: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116390771.json . 
Junior caught in the cross fire :fireworks:  :fire_engine:  🤣 
Quote: 



.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116391011.json . 
I really care about keeping inline-code instead of inline-code :grimacing_face:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116555177.json . 
Alright. Just out of curiosity, why do you want to have all methods on inline-code? I could also have imagined this class being a service object or a "fake singleton" using inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116560838.json . 
Then maybe I am wrong. I always thought that they were the same, just a matter of personal preference. I also thought this were a service object :see-no-evil_monkey:.
Well, I have homework to do. 
Lots of lesson learned by refactoring away a case statement ;-)
   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116716578.json . 
It's a classic. Katrina Owen has given whole talks about refactoring a case statement :v:.

And yes, for public class methods it's effectively the same. However, if you want to have private ones, only using inline-code is not enough, if I recall correctly, there would be some macros like inline-code or some like this...
Therefore when I want to have private methods (basically all of the time) I use inline-code.

And for service objects: they can be anything as long as you call them "service object". Oftentimes, in a Rails context, the may for instance look like this:.
block-code.

But they can essentially just be anything that suits your business logic needs :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-116718285.json . 
Boom! It never occured to me that inline-code can be made private as well inline-code :person_bowing_deeply: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-94729390.json . 
It's better to use inline-code. inline-code will also call private methods which is ok (but arguably still dangerous) in certain meta-programming contexts. We want to enforce the public API here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-94734678.json . 
I don't have a better idea for the name, but I can highly recommend this Giant Robots podcast episode w/ Avdi Grimm (interesting part starts at minute 7) on naming things. Made me question tons of class and method names I was using at that time.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-94736688.json . 
Assigning an ivar serves no purpose here – the conditional assignment for memoization is missing (inline-code). Memoizing it makes sense, since it's really a static mapping. In that case I would make it a separate (class) method, a private one maybe.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-94745985.json . 
I'm thinking if we should drop the human readable mapping altogether and pass the method names around as strings instead. Reason: the magic values are human readable/understandable, but no one ever sees them. They are hidden in a select box and passed around as POST parameters.

If we decide to use the method names directly, it's imperative to whitelist the values that get passed to inline-code / inline-code. It would be a gaping security hole otherwise.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-94746173.json . 
If you want to stick with the "magic string" mapping, inline-code must be changed to inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-95671472.json . 
Would it make sense to move this traffic control plus the whitelisting back to the controller?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-95671749.json . 
I wouldn't. Right now, the controller just acts as a YOLO-kind of messenger. It just passed whatever down to whatever owns the actual logic. Let that handle the input validation/sanitation.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-95772962.json . 
I opted for :destined, analogue to Avdi's example of a  inline-code class with inline-code method. What I like about inline-code/inline-code is that is has a 'going somewhere'-connotation. 
Other options: inline-code, inline-code, inline-code, inline-code 
Now I am totally into Naming Things, working on a blogpost :-)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-95773294.json . 
Talking about naming things: inline-code or inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-95773406.json . 
So much better without the 'magic strings' , thanks! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-95774916.json . 
- Can it be that the raising Error line slows down the switching? It looks like it took a whole 4ms more to switch after I added the inline-code.  
- Also, not sure if this is the right Error to raise.
- Before that I had a silent fail - not sending,  and not telling so.
I liked that, because a) in the controller we prevent access to the method in production env and b) if someone tries to do something malicious, a smoke screen serves them right LOL



.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-96134142.json . 
I did not know inline-code existed. Thanks! :) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-96134213.json . 
It's more the inline-code condition: converting a String to Symbal and iterating over an Array. Should that take 4ms? I don't know. It's not that we're running at webscale here so it doesn't really matter.

As for the raise: yeah, maybe the silent fail is indeed enough. You'd still need the whitelist check, but don't need to raise anything.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-96134244.json . 
Since you named the memoized class variable inline-code, I would name the method to match that.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-96145578.json . 
I thought we want to test the results of the incoming call (from inline-code, instead of  :fake_*_phase). Is that right? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-96146592.json . 
This doesn't test if inline-code doesn't change things, it merely checks for the _return value_ of that method call. A better way is to make use of inline-code. A good thing to check for in the inline-code block could be inline-code. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-96146671.json . 
Yes and no. The describe block says you're testing the actual inline-code, but that one's now private API. You shouldn't test private methods. It would stick with the changed method call but would update the describe block to a inline-code in inline-code with something human readable .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-96146696.json . 
I don't understand this test. Why is it the wrong phase?

Also, see below for making use of inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-96146778.json . 
I just came to realize: inline-code is user input from the web. In older Ruby versions, converting arbitrary user input to symbols using inline-code could be exploited as Denial of Service attacks (and in some cases even privilege escalation … if memory serves?). I don't know if that is still the case now that symbols are garbage collected, but I would suggest to switch to (frozen) strings.

That is: you can add the Ruby 2.3 frozen string literal magic comment (check the MRI release notes), make inline-code a list of strings instead of symbols and skip the symbol conversion in this line alltogether.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-97083178.json . 
I got this error on Travis:.
block-code.  
This has something to do with rounding. (Either that, or I am reaaaaally good at pointing the exact millinillisecond a few times )
Solved with the inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-97420255.json . 
I'm not entirely sure if that's really about rounding. The timestamp shouldn't change at all. Furthermore, the inline-code gets evaluated in line 56 whereas it has to be evaluated within the inline-code block. Can you update that one and we'll check the timestamp issue after that?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198360711\pr-comment-97429400.json . 
Could you add these two lines right before the inline-code block?

block-code.

If the test outputs a RuntimeError, something is updating the season where it shouldn't get an update. If the date error prevails, it's the rounding.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198492189\comment-270620652.json . 


Can you confirm that it's really just locally? What are the steps to reproduce it?



I think so, yes. We've had quite a few bugs/regressions with the conferences and obviously our test coverage isn't the best in that department. Maybe a helper class that gets conference data for a user (including the formatting, re: weird comma errors) without relying on the underlying inline-code system?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198492189\comment-270760243.json . 
Reproduce the bug:.
In dev env:.
- Click 'Community'
- Select user with conference (I add conferences to my own profile from the user profile page)
- Error occurs

I can't reproduce it in the production. I selected a user who has a conference on her profile, and it shows the profile and the conference as expected:.
URL.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-198492189\comment-270856356.json . 
Thanks Maud. PR is up!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-198492189\issue-198492189.json . 
The fix in #584 causes a new error locally (inline-code) ,  in the user/show view where the conferences are called: 
URL.

It can be fixed by changing inline-code into inline-code  
I can submit this fix as well.
Or do we need another approach? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199027010\comment-271351076.json . 
I added the warning to the Application Form. 

!schermafbeelding 2017-01-09 om 18 30 49


Am I right that it is meant for both the "Tell us about you" and the "Programming Background"? Not for everything after the Basics? 

(Note: I didn't add the warning to the User Profile fields, because I suppose we are going to do a shared partial, right, @carpodaster?)
 




.
#rails-girls-summer-of-code/rgsoc-teams\issue-199027010\comment-271545165.json . 
@F3PiX Actually this warning applies to *all* fields after the "Basics" section. I should have specified this more explicitly :/

I was thinking that we could make a warning like this, so that it's super visible:.
!warning-app-form-2017

We don't need such a warning in the User Profile, because we don't look into user profiles during the blind phase of selection.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-199027010\comment-271546899.json . 


@mkalininait this only means that there are two ways of _filling out_ the info. It's not visible on a user's profile anyway. It's subject to removal (see #184).

The color of the info box should probably be yellow/orange instead of blue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199027010\comment-271548015.json . 
@carpodaster @F3PiX I had something like this in mind
!warning-2-app-form-2017

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199027010\comment-271549205.json . 
We should also remove the same warning from the name of this field: "Why are you applying to this program?"  since we have one global warning now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199027010\comment-272159463.json . 
@F3PiX Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199027010\comment-276228076.json . 
Tested locally, looks good.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199027010\issue-199027010.json . 
In 2016 the blind phase of the selection process wasn't really blind. Although we asked the students not to mention some of the information in certain fields (e.g. location), we still could sometimes tell from the writing where the student comes from (mentions of workshop names, university names etc.)

**Possible solution**  
After the block "Basics" and before the block "Background Information" put a warning, something like: "In your answers below, please don't mention names (geographical features, universities, companies etc.) which can point to your location and introduce bias during the selection process!".


.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-271341185.json . 
Will do this after #583 is finished.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-271375477.json . 
Should I also remove the field from the database? Or should it stay in there?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-271408360.json . 


I'm 80% in favour of removing it. The remaining 20% are doubts about mingling with existing inline-code records. otoh, we do have the lodged inline-code with all data and past students aren't able to browser their old draft anyway. So yeah, let's remove it!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-271415238.json . 
Okay, will do tomorrow!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-273464790.json . 
Weird, but I don't see the "Please summarize what you have been doing to learn programming" field, neither on Staging, nor locally. I see that it has NOT been deleted in the associated PR (#602). I'm wondering where is has gone and why. 
I'm writing it here, because I'm not sure where to write it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-273480615.json . 
It was deleted in this merge. 

@carpodaster can you confirm? I can add that line back, but I think it is better that you check if anything else is strange in that merge.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-273481452.json . 
@bitboxer @mkalininait It may indeed have fallen victim to me using a new inline-code (meld on Ubuntu instead of opendiff on Mac). Would be great if you could add it back, thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-273481542.json . 
Also there are other things missing. Quoting from here:.


>


.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-273481729.json . 
I am now a bit confused what is missing/wrong. Not easy to tell by the pr :crying_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-273483577.json . 
Will try to do my best now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-273486012.json . 
@mkalininait what do you mean with the "750 word essay" text? I can't find it in the application. Can you say where it is so that I can fix it? Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-273569930.json . 
@bitboxer Apparently, I was wrong, it was not a placeholder, but a custom text which looked like a placeholder :/
!screen shot 2017-01-18 at 20 04 09

I don't see this text locally. Sorry for the confusion.

But the name of the field "Why are you applying to this program" seems to be wrong still, unless someone has fixed it quickly.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-273619514.json . 
Yes, the text will be fixed in pr #622.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\comment-276227898.json . 
Tested locally, looks good.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199029275\issue-199029275.json . 
In 2016, the field "For how many months have you actively been learning after your first workshop?" was confusing for students who didn't attend a 'benchmark' workshop. It also didn't help us a lot during the selection process.

**Suggested solution:**  
 - Remove the field "For how many months have you actively been learning after your first workshop?".
 - Rename the field "Please summarize what you have been doing to learn programming since your first workshop"  to "Please summarize what you have been doing to learn programming".
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199148434\comment-270856765.json . 
+1 on the reasoning behind this. no point in having attendances stick around if the conference is removed, I think. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199148434\comment-271078083.json . 
Very valid points, Maud, thank you!

I've added both a inline-code for a user's attendances and a migration that sweeps all orphaned attendances in the system.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199148434\issue-199148434.json . 
Fix #586 – the bug described in the issue must have occurred due to a deleted conference.

This PR will delete attendances alongside its conference. It is possible that the attendance records were intentionally allowed to linger so that we may know of a student's attendance even after its corresponding conference record was deleted. I do not think we need it - knowing that there was some kind of conference attendance without actually knowing _which_ conference exactly hardly provides value. What do you think?

The PR leaves existing attendance orphans intact but avoids the error described in the #586 using the fix @F3PiX suggested.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-199148434\pr-100426339.json . 
Fix #586 – the bug described in the issue must have occurred due to a deleted conference.

This PR will delete attendances alongside its conference. It is possible that the attendance records were intentionally allowed to linger so that we may know of a student's attendance even after its corresponding conference record was deleted. I do not think we need it - knowing that there was some kind of conference attendance without actually knowing _which_ conference exactly hardly provides value. What do you think?

The PR leaves existing attendance orphans intact but avoids the error described in the #586 using the fix @F3PiX suggested.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-199193475\comment-270983834.json . 
Great that they all share the same helper method! I am not convinced about the new format and omitting the comma's entirely. Maybe you can add a screenshot to show how it looks? 

Anyway, if the next step would be to move everything over to a conference helper class, like you suggested, then we can reevaluate the formatting when everything is nice in place. Right?
And covered with tests :yay:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199193475\comment-271074542.json . 
Should have included screenies right away, apologies! 

I replaced the comma with a inline-code so that there aren't two commas for a location in the form of inline-code.

The main difference is that the entire string is a link now. 

### Before
!users-show-before


---

### After

!users-show-after


.
#rails-girls-summer-of-code/rgsoc-teams\issue-199193475\comment-271075484.json . 
Cool, that looks so much sharper! 
The comma/dash thing works when there is no conference location?

The link_to_everything is what I tried to avoid with my solution. I think it requires an extra step of refactoring to get the 'verbose details' out of the link. I would cheer for that, and leave it up to you :-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199193475\comment-271077850.json . 


It does :smile: 

I'm not too fuzzed about the extra info being part of the link, at least it's all part of the same helper now and we have tests for it. It's easier to change now.

Thanks for your feedback!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199193475\issue-199193475.json . 
Some experiments as part of my investigation for #573 led to this PR. I think it supersedes your PR, @F3PiX which is why I would appreciate if you could have a look at this.

I removed the slight difference in displaying conference attendances; they all use the helper logic now. I've also added a bucketload of test examples that will hopefully silence conference formatting error for good now :smile: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199193475\pr-100457019.json . 
Some experiments as part of my investigation for #573 led to this PR. I think it supersedes your PR, @F3PiX which is why I would appreciate if you could have a look at this.

I removed the slight difference in displaying conference attendances; they all use the helper logic now. I've also added a bucketload of test examples that will hopefully silence conference formatting error for good now :smile: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199364195\comment-272278004.json . 
I'd love to take a shot at this. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199364195\comment-273421058.json . 
My proposed list to choose from for now: "Agender", "Bigender", "Cisgender Woman", "Gender Fluid", "Gender Nonconforming", "Gender Questioning", "Genderqueer", "Non-binary", "Transgender Woman". (we can always expand on it if needed, this list specifically leaves out “Cisgender Man” as requested by Anika). 

The field should give the possibility to choose from the above mentioned list, or to add your own (like in a “normal” input field) if your preferred option is not available.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199364195\comment-276100327.json . 
Fixed in #631 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199364195\comment-276221333.json . 
Tested locally. Looks good!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199364195\issue-199364195.json . 
To make it a bit easier for us to process applications we decided to make an improvement over the field "Gender". We've been thinking a lot about how to implement a new/better “Gender Self-Identification” field so that on the one hand it had some pre-defined options and on the other hand wasn't exclusive for anyone. The majority voted for the following solution.

The Gender field should look like a simple text field with autocomplete (similar to how we have the license autocomplete for project submissions). It can look like this:.
!gender

Here is the list of gender options on Facebook, we could use it for starters or find a different one: URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199364685\comment-271555870.json . 
plus one for the special circumstances field.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199364685\comment-271897418.json . 
+1 from my side as well.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199364685\comment-276227609.json . 
Tested locally, looks good.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199364685\issue-199364685.json . 
Our program aims at supporting diversity, and at the same time we don't have a special field for this on the application form. It would be great it we could support not only female/non-binary/trans people, but also take other special life circumstances into account.

**Possible solution:**  
Add an extra text field next to the gender field, something like: "Please tell us about any special circumstances which you want us to consider while reviewing your application (e.g. LGBTQI / people of colour / people with disabilities / single parents / people taking care of family members etc.)”. 

Of course, people should share only what they feel comfortable sharing. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-271408789.json . 
(The Star Wars kid in me got really excited when I read _Force Users_ :winking_face: )

!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272111166.json . 
For 1: What does "only considered complete" mean? Is there a penalty if a users doesn't fill out the form and closes that window?
For 2: What should the wording of the email be?
For 3: What should the message be if a team member hasn't filled out all required fields?
For 4: When I am seeing this correctly, the github profile name is not editable already, or am I missing something?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272136479.json . 
Intro: The step of signing in with a github handle creates a new user in the db and currently allows that signed in user to e.g. create a team. The idea was to have a two-step process: first step, signing in, just requires the user to accept the oauth via github: this would give a user some sort of “read-only” access for anything that isn't their user profile (i.e. they can edit their user profile, but cannot do anything else like creating teams or applications). Only once the user has confirmed with their email address can they have access to everything else a user should be able to do, like creating teams and so on. I'm pretty sure there are situations where this scenario would fail, and it might be that we haven't thought everything through (actually I'm pretty sure we haven't). Would be happy about improvements on this thought process.

1. If the window is closed and the profile is not fully filled out, the user will be able to view things a normal user can view, but not be able to e.g. create teams (see explanation in intro). This would be the only “penalty”. 

2. I would actually already send this email once the profile has been saved with all required fields filled out. The wording could be something like, 

“Hey!
You've recently logged into the RGSoC teams app with your GitHub account and created a profile. In order to get the best out of the Teams app (like creating a team or submitting a project), we'll need to confirm your email address. To confirm your email, click here (link with token). 

Thanks,
The RGSoC Team"

3. Going along with the scenario described in the intro, the profile would show a fixed notice at the top until the required fields are filled out, something like: “Please fill out all required fields below to complete and verify your profile.” I'd still like it to be more specific (what is the verifying for?) but can't find exact wording for now. 

4. You're correct, I also cannot edit my Github handle currently, but Maria tested it recently and she could, so this might have been fixed in the meanwhile. We'll investigate.


I think this feature might not be fully 100% thought through, and I'm worried that you might encounter some issues on the way. I'd suggest to start thinking about how this could be done, and if you see a huge problem, just ping me or comment in here. I'm happy to help out define some of these steps or the process for you together with Maria, and to make some changes according to your developer's opinion :) Unfortunately I'm not 100% confident about how all of the Teams app works, but we can also talk to Carsten and Max to see what they think of the implementation. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272137115.json . 
Also relevant for 3:.

A non-confirmed user can be added to a team, but we should probably wrote a similar notice somewhere to point out that on of the team users has a non-confirmed account.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272138783.json . 
Thanks @alicetragedy ! This clears up a lot of things. Will start working on it this afternoon and report back when I have any questions.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272139594.json . 
It is very good to strive for complete profiles. OTOH we want to keep the user experience as pleasant as possible. As a aspiring student, I'd want to check out things without telling you everything about myself. 
That said:.
- Why don't we grab the emailadresses from GitHub? IIRC it only requires a different permission setting.
- Devise has a cool module :confirmable. It will send a confirmation email, and we can give a user temporary access until the confirmation is required. It is customizable, and I am a big fan, esp because of the user friendlyness, both for the new users and the admins. 
I suppose it is equally easy to email unconfirmed coaches with it.

  

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272141613.json . 
@F3PiX we are grabbing the email addresses from GitHub — unfortunately, since some people have set their email address to private, GH doesn't allow us to access these email addresses directly, which causes the whole problem we have with email addresses missing currently ;)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272145582.json . 
@F3PiX the inline-code will be used to confirm the email address from the user :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272145961.json . 
Aha, of course, sorry.

About the github handle: I think PR #514 handled the non-editability :thought_balloon:    .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272146922.json . 
Okay, will ignore the non editable in this ticket. If it is still an issue, a new ticket should be created that addresses this issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272222360.json . 
Current status: will finish this ticket tomorrow and need feedback on the "to be discussed" section till tomorrow afternoon :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272277605.json . 
awesome! :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272303738.json . 
@bitboxer We will make a decision on the "to be discussed" section by tomorrow 14 CEST ish. Hope it works for you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272311153.json . 
Of course :). I can always delay this and do other things. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272316901.json . 
@bitboxer @alicetragedy I would like to leave some of my thoughts on this issue in addition to what has been discussed above.
The logic of creating users/teams/applications is becoming more complicated, and it's important to try to keep things transparent for users.

For example:.
1. A user can't do certain things until he/she fills out his/her profile and confirms his/her email. It would be good to make it clear why one can't, say, create a team to avoid messages to our support: "I can't create a team, what am I doing wrong?". Maybe we should avoid hiding UI elements, but instead throw an error message on pressing buttons.
2. "The profile would show a fixed notice at the top until the required fields are filled out" + "we should probably wrote a similar notice somewhere to point out that on of the team users has a non-confirmed account" <-- in addition to that, we should probably write the same thing on the Application Form, so that users don't get surprised at the error when they submit the form.
3. We're gonna send an email once a profile has been saved (to confirm an email address). Should we try to send an email to team members once someone added them to a team (to ask them fill out their profiles)? Otherwise how should they learn about it rather than from the person who added them? There is no guarantee that we have a user email from Github, but some of them will be available at least.

Sorry if I'm adding too much stuff into this issue. Don't want to overwhelm anyone :)


.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272385474.json . 
For 1: If you click on apply now without a confirmed account, you get a warning saying you need to confirm it, if you confirmed it and need to create a team, you are shown the team create page with an explanation that you need to do that.
2. Yes
3. Can you create a new ticket for this? This ticket is getting too big for my taste and I would love to prevent to add more features to it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272390761.json . 
And would it be possible to also create a new ticket for the things in the "to be discussed" section? That way I can finish this ticket and we don't have a huge pull requests with tons of feature in it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272390991.json . 
While we are at it: the change of the location input in the user form could also be another ticket because it doesn't touch any of the other things I am doing here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272401462.json . 
@bitboxer Ok, I'll create a few more issues :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272409787.json . 
Awesome. That is a huge relieve for me. This pull request will already be relatively huge with changes all over the place :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-272503453.json . 
Created a PR for this. Hope I haven't forgotten something important.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-274640287.json . 
@mkalininait I'm assigning this to you for verification. @bitboxer's PR has been merged.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-276240991.json . 
Testing results (locally):.

### 1. Window closed and profile not fully filled out



:black_right-pointing_triangle:️  Seems to work if I create my account myself by signing in with Github

 * **BUT!! If someone creates my account in the Teams app by adding me to a team, then I can sign in and edit my team and fill out my application without filling out my profile first.** Bug #629 is a result on this.
 * **Also, once I saved my profile and verified my email, I can change the email right afterwards, not confirm it, and still have access to everything like a verified user.**

### 2. Send (confirmation) email once profile has been saved



:black_rightwards_arrow:️ Seems to work to verify the first email. Once I change my verified email to something else, I don't get the confirmation email and still have full access to the Teams app (_see item 1 in this list_). **<- - UPD Feb 3: can't reproduce it anymore, but there is another minor thing: after I change my email address and save the profile, I see the notification message "User was successfully updated", even though it wasn't (I still see my old email address in the profile until I confirm the new address).**

### 3. Notices in UI

#### 3 a) Fixed notice about required fields



:black_rightwards_arrow:️ We can see this message on the "Edit profile" form, but not on the Profile page. I thought it would be useful to show it on the Profile page. What did you mean @alicetragedy ?

!screen shot 2017-01-31 at 01 14 20

#### 3 b) Give hint about one team member not being confirmed (Generally)



:black_rightwards_arrow:️ **NOT yet implemented**

#### 3 c) Give hint about one team member not being confirmed (Application Form)



* Instead of the Application form, we show the message: _"You need to click on the link in the email to confirm your account before you can create an application."_ Sometimes this message is not relevant, for example when I signed in with my Github account, but haven't saved the profile yet and therefore haven't got any emails yet. I'd better write something like: _"You need to fill out your account and confirm your email before you can create an application."_

!screen shot 2017-01-31 at 01 30 36

 * Also: we don't show any notices, if one of my team members (not me) has his/her profile not filled out.

### 4. Redundant notification about creating a team 



 * If I have my profile filled out, but don't have a team yet, then once I click on "Apply now", I see two notices saying the same thing. I think we can delete one.
!screen shot 2017-01-31 at 01 39 26

### 5. Block UI elements until user is confirmed



:black_rightwards_arrow:️  **NOT yet implemented. I don't see the buttons to create a new team or a new project. They are hidden. It's not critical though.





.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-276509422.json . 
@mkalininait not sure if this will still be relevant after Carsten's upcoming PR, but yeah, I think for 3a it would make a lot of sense to have a general notice at the top of the profile page maybe to show that the profile is still missing something — or anywhere where a filled out profile is required to do something? I'm not sure about the difficulty of implementation there. :( .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-276898645.json . 
Thank you, @mkalininait, for your excessive testing! I took the liberty of tossing in a few headlines to be better visualize the different items. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-326668726.json . 
I'd like to close this task. All the issues from it have been either implemented or moved to separate tasks (#609, #612, #618, #619). Any objections?
On another note, I remember that we wanted to rework the entire sign up / sign in system before the next season. Is it still the plan @carpodaster ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-327083784.json . 


@mkalininait yes, that is still the plan. Haven't poured any further thoughts into this, though, and it's probably more of a UX thing than actual programming.

But aye, let's close the task. Will you do the honours, Marias? :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\comment-327139083.json . 
@carpodaster My pleasure! :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199366330\issue-199366330.json . 
In 2016 we had 2 problems:.
 - Students could submit an application, while for some team members important information was missing (email, location etc)
 - We didn't have enough information about coaches, while they play a crucial role in the program.

**Possible solution:**  
1. After Users sign in with their Github profiles for the first time, they should be redirected to the Edit User Profile form pre-filled with the information from Github. This sign up process should be considered completed only when Users submit this form (with all required fields filled out).  
2. When a user has been added to a team, send an email asking to review/verify their profiles and confirm the membership.  
3. On application submission, validate that all members of the team have filled out all the required fields in their profiles and that they are confirmed team members of their team.  
4. User Profile:.
 - Make the following fields required in the User Profile: Name, Location (Country, City)
 - Consider changing the Location fields so that they are consistent with this requirement 
 - Make "Github handle" not editable

To be discussed:.

 - Add the following fields (all required?): 
  -- "Technologies of expertise" (or "Technologies of interest"? or both?) - tags separated by comma (similar to the "Tags" field in Project)
  -- "Coaching experience" (only for coaches) - multiline textarea field
  -- "Availability (hours per week)" (only for coaches) - numeric field

Please share your opinions on this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-271142384.json . 
It is true that with the Teams App keeping users of past seasons, it's hard to know whether or not someone who once put them on the roster as willing to help would still be up for it in the upcoming season.

I don't know if a filter solves that, since it would require all users on the Teams App to proactively check that option. How would we do that? Emailing all users?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-271248349.json . 
@carpodaster I think that we can't consider a user active, unless he/she explicitly marks him/herself active in the Teams app. Emailing and tweeting would be the most obvious ways to remind them to set a check.
I guess that this check would be most useful for coaches and students looking for coaches. The "Active in the upcoming season" check wouldn't guarantee availability of a coach of course, but it would increase the probability of it. If a student can't find an active coach, she can always try to contact a coach without the "Active in the upcoming season" check.
 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-271249358.json . 
If that is the use case: students finding coaches, how about this: add a filter for NON-active coaches, let coaches be able to adjust their availability in their profile.

Easier for coaches, bigger chance for students to persuade a coach to join their team. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-271260244.json . 
@F3PiX Do you mean that the coaches who won't be available should set a check "I'm not available in the upcoming season"? I'm afraid that people who can't or lost interest in coaching may not bother reporting this. Or did I misunderstand you?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-271260688.json . 
Exactly! And they will set that option in their profile as soon as it is important to THEM, ie, the moment a student asks them (or with a ping from you to the coaches in Slack). .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-271283998.json . 
I agree with Maria: if someone has joined the Teams App once and showed interest in coaching (e.g. in 2014) they might not go back to the Teams app if they've lost interest to say that they will not be coaching anymore and check a box. 
On the other hand, someone interested in coaching will be logging into the teams app again, and would be able to check said box.

I think what we could do once this has been implemented would be to email all users and let them know about this change; that way, if a user from 2014 is interested in coaching again, they might actively log in and select the “available for the next season” box.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-271311322.json . 


Hm, I question that – that is: _I_ would not be that person. As a coach or mentor you only used the teams app once: when you signed up. They probably have long forgotten about the existence of the app, let alone the URL to get there.

I don't like the idea of emailing all users on the teams app every year anew. Because of that, I am more in favor of @F3PiX's suggestion.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-271456043.json . 
We could use our blog and twitter to ask users to "sign up" for the next season if they are interested.

Last year we had quite a few emails from people who wanted to be coaches but didn't know what to do to become one. With the "available" checkbox we could ask them to set the check and wait :) (which btw could be quite efficient if we improve the community page by adding the availability filter and some other ones)

And of course, the "available" checkbox would make it easier to make an active search. I don't see how the "not available" checkbox would make it. I imagine myself looking for a coach: there are 194 coaches in the database, if 50 people mark themselves "unavailable" (which is an optimistic number), I will still have 144 coaches to choose from. If I look for a remote coach, I can't even filter them by location. With the "available" checkbox, on the contrary, if 50 people mark themselves "available", it'd make my choice easier. So it's 144 vs 50, and we should keep in mind that the amount of users in the database will grow and grow with time (and the mentioned difference will grow with it I guess).

Another thing is that we could actively agitate people to support RGSoC and set the "available" checkbox via social media, while with the "unavailable" checkbox if would look weird ("Please set the check 'unavailable' if you don't want to support RGSoC!" :)) So even leaving aside the motivational part, I believe that we will always have more people who want to mark themselves "available" than people who get annoyed by students and want to set the "unavailable" checkbox.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-271533453.json . 
That are quite a few interesting issues. Now I feel even stronger against the availability filter LOL

- Looking for a coach:.
If we want to improve the coach searching for the students, I'd rather add a filter on the languages or frameworks they are comfortable with. 
Plus, with the newly added geocoding, we can add a filter on location.
Also, looking for a 'remote' coach will not be easier with availability; maybe add a 'love to coach remotely' checkbox.
Alll together: would plead for a bit more verbose coaches profile.
And then we can ask them upfront how much time they have available! Yay!
That said: I'd say start with the languages filter, rather than the availability. Wdyt?

- Aspiring coaches:.
When they email us that they wish to coach, we still can redirect them to the profile pages. 

- Filter output
With all of the above, I'd rather add a filter for the 'last touched' profiles, as an indication for actively engaged people.
When emailing existing coaches/users, or on twitter, you can ask them to complement their profile.
(Ever heard of a dev who didn't change at least one language in a year? ;-) )

- And even better:.
I would love if we could offer the students more help with selecting coaches. The languages, remote, and location are some options, but I would love if we could ask the coaches about their, let's say, coaching abilities.  
 



 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-271540199.json . 
@F3PiX I totally agree that we need more info about our coaches, especially tech info. There is an issue about it: URL (see the last suggestion there). Comments are welcome!
And I agree that it would be cool to filter by location and languages/frameworks, and maybe something else. As well as by availability :smiling_face_with_open_mouth_and_smiling_eyes:  :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-323587157.json . 
Moving this into the Community Page(s) milestone, the next project @juuh42dias and @branquinhoaa will tackle :flexed_biceps: 

Let's take this discussion as a starting point to come up with the necessary tickets for this feature. Once the smaller sized tickets are created, we can close this issue right here.

Summing up the so far "decided" upon steps here:.
- enhance coaches' profile information (info about languages, availability, etc.)
- come up with indicator for coaches' profiles to signalize _"availability as a coach for the upcoming season"_
  - behavior: the inline-code is set to "unavailable" again for each season and has to be updated manually by the users themselves
- enhance the community page listing all users:.
  - better general overviw
  - better filter / search possibilities: filter by availability for the season, by location, by availablity in terms of time, by language / fields of knowledge
- mechanism to have users constantly return to the app and keep their profile updated:.
  - none (use other channels to remind people to keep their profile up to date)
  - alternative: one reminder email per pre-season.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-325424693.json . 
We want to start it right now!
Before that, I have some questions:.

- Enhance coach's profile information belongs to another milestone (Application Process 2017). Will the issue #593 be included in the community milestone?  @mkalininait 

- We are not sure if there was a decision regarding the way to search by coach's availability (apparently you guys are divided :joy: ) 

- Are we allowed to create the issues related to @klappradla suggestions? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-325425563.json . 
hey @branquinhoaa, yeah I think we are still divided on that and no real decision has been made.. :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-326401214.json . 
Ok, so the question which channel (email vs. social media vs. whatever) should be used to ping the coaches again to update their profile and availability can be postponed in my opinion - not super necessary to have this in place right away.

For the open question


I would say, there's no huge difference on the technical side. So if we start with **the available approach:trade_mark_sign:** and find out later that "unavailable" would have been a better idea, I'm pretty sure this can be changed within a few simple commits.

Therefore my suggestion to not block @branquinhoaa and @juuh42dias: let's go for **the available approach:trade_mark_sign:** for now. It appears slightly easier to understand and all the wording around it a bit more "obvious" then in the other case - therefore I'd consider it the easier approach and good enough for a beginning.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-326635272.json . 
Are all the users allowed to set her availability or just the coaches?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-326665168.json . 
@branquinhoaa I would say all users, since a user only becomes a coach when they have been assigned that role in a team in a year. Showing interest in something (coach, supervisor, …) should be regardless of whether or not one has previously assumed that role in RGSoC.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-326669973.json . 
@branquinhoaa 



The tasks related to enhancing coach's profile were actually moved here: #609, #612. We still want to discuss them probably. I'm not sure who created the community milestone; whoever did it may consider adding #609 and #612 there :)
Regarding #593: I'd actually like to close it.



I think it makes sense only for coaches.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-326670825.json . 
@carpodaster 



True, but a user can say that they are interested in "Helping as a coach" in their profile. And this is how we find them on the community page when we filter it by the role = "Coach". 
So theoretically we could assign some fields to users who are interested in being coaches I guess.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-326677763.json . 
@mkalininait agreed, I buy that :smiling_face_with_open_mouth_and_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\comment-327284762.json . 
@klappradla in the 





1.  What do you mean by better general overview? Do you want us to change the way user search? like the layout?

2. It is not possible to filter user by language/fields of knowledge because the user does not have this information linked in her profile. The project has tags that we could get if the user was linked to one project, but as @mkalininait has explained in a past issue, the user is linked with all projects that she applied for. With the current user model, we don't have access to this information.

3.  Will we have two fields for availability? one boolean to be reset each season and one with how much time the coach has available? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199367622\issue-199367622.json . 
Users reported that it was hard to use the community functionality in the Teams app, because it didn't allow you to filter users.

It would be useful to provide filters by:.
 - availability in the upcoming season
 - location
 - technologies (see Issue 593)

**One possible way to implement "seasoning":**
 - Add a checkbox "Active in the upcoming season", which is reset to 0 for all profiles at the end of each RGSoC season


.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\comment-271144655.json . 
As for the lat/lng and a inline-code model: I'm not sure if that would make the form less complex. IIRC, you get the lat/lng from the API repsonse; couldn't we just populate two hidden form fields (or one composite inline-code type field) that gets stored under the hood?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\comment-271145740.json . 
Yeah, sounds fine. I'll add the lat/lng thing and update this PR :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\comment-271146710.json . 
Also: we can "lift" the rate limit from 1000 reg per day to **150000** *(which is probably enough)* by "validating our identity" with a credit card. This does not mean, the credit card will be billed when exceeding the rate limit. Same as at Heroku, it's just for validating yourself.

I can use my credit card to do this with the current keys. But for the sake of simplicity, I think it would be better if a person with access to the credit card used for Heroku, etc. would do this, to not have these types of credentials spread over too many people (cc @alicetragedy)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\comment-271147206.json . 
@klappradla sure thing, I'd suggest that we use the Foundation CC that @anikalindtner has access to for this. Possibly, since we were thinking of creating a Google account for everything RGSoC-related anyway as once suggested by Ana (to keep all docs, etc... in the same place) we could also generate new API keys then, if you want (doesn't have to be though).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\comment-271147324.json . 
Sounds like a plan. Just ping me once you're doing it and I can tell you which services to pick, which origins to whitelist, etc.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\comment-271183315.json . 
Added the lat/lng stuff. I also moved the google api key into a global JS var - seemed more env-var-like to me...
Getting my Javascript code to pass with jshint was super hard :see-no-evil_monkey:  *(semicolons hell)*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\comment-271184326.json . 
:clapping_hands_sign:  :clapping_hands_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\issue-199370073.json . 
This adds a new SimpleForm input type called *"city"* which enhances a string input with Google Places powered autocomplete for Cities as explained in #366 .

Loading the required libs from Google and then wiring up an autocomplete field requires an API key. I added one for development *(limited to inline-code)* and will add some env variables for staging and production. I cannot really estimate if we'll hit the rate limit for the free plan on my account. Let's just give it a try :see-no-evil_monkey: 

If you like, I can also add the lon/lat thing @carpodaster (it's super straight forward) but I would probably then add a inline-code model to not make the application form more complex than it already is. Would also do this in a separate PR then I guess. Should I?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\pr-100573657.json . 
This adds a new SimpleForm input type called *"city"* which enhances a string input with Google Places powered autocomplete for Cities as explained in #366 .

Loading the required libs from Google and then wiring up an autocomplete field requires an API key. I added one for development *(limited to inline-code)* and will add some env variables for staging and production. I cannot really estimate if we'll hit the rate limit for the free plan on my account. Let's just give it a try :see-no-evil_monkey: 

If you like, I can also add the lon/lat thing @carpodaster (it's super straight forward) but I would probably then add a inline-code model to not make the application form more complex than it already is. Would also do this in a separate PR then I guess. Should I?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\pr-comment-95076416.json . 
Could you also add this to inline-code ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\pr-comment-95076498.json . 
:heart:.

I don't work with simple form much and thus I have never done custom inputs. While working on the character limited input the other day, I went that route, too. Never seen custom simple form inputs in years, now twice in two days :wink: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\pr-comment-95076937.json . 
Oh, totally overlooked the app is using Foreman. I'll add it there, but would also keep the initializer (e.g. for test env).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\pr-comment-95112213.json . 
I wasn't aware that foreman honours inline-code. For some reason I always thought we were using dotenv :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\pr-comment-95112399.json . 
The test setup looks intimidating! I will copy/paste that for my own custom input :white_smiling_face:️  Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\pr-comment-95115868.json . 
Shall we add the one you created for inline-code here? Otherwise it would override the setting in inline-code. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\pr-comment-95138178.json . 
We can add it, but I thought overwriting was the purpose here anyways.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199370073\pr-comment-95149882.json . 
You mean when someone copies the inline-code, they want to add new keys anyway? Makes sense. I was thinking that Google Maps not working anymore could be a hidden side-effect in the event that people just want to use, say, Mailgun and copied that inline-code for that end.

But let's stick with it as it is right now!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199452920\comment-271225376.json . 
Superb, thanks @klappradla!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199452920\issue-199452920.json . 
Hey @carpodaster,

I just came across a few pre Rails5 era and therefore eventually no longer necessary things while looking into #366. Just thought, I'd share them in a separate PR, feel free to discard all of this if you where already aware of these things or if they just don't matter.

Tiny bit of background: on the way from Rails 3 to 4, they got rid of the inline-code initializer - I just remembered it was part of the upgrade guide. The Teams app already uses the new preferred way - the inline-code file, so the initializer is obsolete, all env vars are already set on Heroku.
*This means one could then also remove the inline-code from the Heroku config.*

Since January '15 Heroku also recommends Puma as a webserver, due to some severe problems with Unicorn. I just added there default Puma config, it's approx. the same as the unicorn config before. Plus: I don't see a reason why not to use it in development as well.

As I said, feel free to discard these commits, I just wanted to not directly forget about these things when I saw them :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199452920\pr-100619330.json . 
Hey @carpodaster,

I just came across a few pre Rails5 era and therefore eventually no longer necessary things while looking into #366. Just thought, I'd share them in a separate PR, feel free to discard all of this if you where already aware of these things or if they just don't matter.

Tiny bit of background: on the way from Rails 3 to 4, they got rid of the inline-code initializer - I just remembered it was part of the upgrade guide. The Teams app already uses the new preferred way - the inline-code file, so the initializer is obsolete, all env vars are already set on Heroku.
*This means one could then also remove the inline-code from the Heroku config.*

Since January '15 Heroku also recommends Puma as a webserver, due to some severe problems with Unicorn. I just added there default Puma config, it's approx. the same as the unicorn config before. Plus: I don't see a reason why not to use it in development as well.

As I said, feel free to discard these commits, I just wanted to not directly forget about these things when I saw them :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199529895\comment-271274268.json . 
Nice!!! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199529895\comment-271277132.json . 
Merci! Documentation feedback and fixes are so incredibly valuable!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199529895\comment-271279922.json . 
:party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199529895\issue-199529895.json . 
When setup up the app this morning I had a little problem understanding a small part of the readme because of layout issues. I fixed those. And I removed a hard to understand word :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199529895\pr-100669184.json . 
When setup up the app this morning I had a little problem understanding a small part of the readme because of layout issues. I fixed those. And I removed a hard to understand word :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199529895\pr-comment-95147487.json . 
'the same way' is not so clear, with the sequence changed. Maybe something as : the same way as creating the organizer role.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199529895\pr-comment-95147797.json . 
fixed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199563261\comment-271305597.json . 
Go ahead and meerrrrrge!

!yolomerge

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199563261\issue-199563261.json . 
Currently emails sent over the app will still show our “old” email address (inline-code). This PR changes it to our new one. OMG IT'S OFFICIAL!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199563261\pr-100692610.json . 
Currently emails sent over the app will still show our “old” email address (inline-code). This PR changes it to our new one. OMG IT'S OFFICIAL!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199583100\issue-199583100.json . 
The season checkboxes for mass mailings (inline-code) are not shown chronologically, but seem listed pretty much at random. Not a tragedy, but it might be confusing when sending out emails. 

production environment:.

<img width="989" alt="screen shot 2017-01-09 at 16 28 28" src="URL.

development environment:.

<img width="1077" alt="screen shot 2017-01-09 at 16 39 21" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199613859\comment-271410090.json . 
@katrin-k maybe? :grinning_face_with_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199613859\comment-271417044.json . 
I'd be up for looking at it later this week if Katrin is not available! :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199613859\comment-271559718.json . 
@alicetragedy yeah, it'd be great if you could take care of this. thanks <3.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199613859\comment-272000724.json . 
@carpodaster this is almost done (see URL — the only issue I have right now is that my development environment shows no problems with the projects#show view, so I have no idea how to fix this problem in production :crying_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199613859\issue-199613859.json . 
Currently these items do not work properly on mobile:.

* The "soft" login required on /projects/new
* The inline-code index
* The table at the top of a project's detail page (projects#show)

Any frontend wizard/witch who can take on this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271553109.json . 
"[...]the answers below[...]" looks confusing to me. It does not apply to the financial part, because there they are _supposed_ to mention the location. -> Looks like it applies only to the Background Info part.
Also, not sure about the English. Do we have native English speakers in da house?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271553575.json . 
!schermafbeelding 2017-01-10 om 12 34 30

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271568219.json . 
@F3PiX Thank you for the fix.
We can rephrase the warning. Any suggestions?
Regarding the financial part: it doesn't really matter if the students mention their location in the financial fields or not. We don't see them during the blind phase of selection. We look at them afterwards, during the next non-blind phase, and then the "Location" field is already available.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271626895.json . 
I don't have further suggestions for the phrase. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271661028.json . 
While I'm not a native native speaker, all of my secondary school education was in an English school, so I think my level is pretty good :) I wouldn't consider “Please do this and this” as 'rude' to English speakers, it just might sound less friendly and is used more in written notices (e.g. instructions) than in the spoken, everyday language. 
I can definitely double-check this with a native speaker at the office tomorrow, but using “Please” at the front of a sentence is always my preferred variant, because it's more common and what people are used to.

About an alternative to “in your answers below”:  maybe we could refer to “Background information” to make our message clearer? Something like, “Please don't mention any specific names (e.g. geographical features, universities, companies, etc...) that may point to your location in the “Background Information” fields. This will avoid bias in the selection process.”.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271663856.json . 
@alicetragedy Cool! That counts as native in my book ;-) 
As I understood, the message applies to more than the Background Information. 
How about you and @mkalininait decide on the final phrase? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271695170.json . 
sounds good @F3PiX! :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271709784.json . 
@F3PiX One more suggestion. 
I would add the class inline-code to the message. It will set necessary paddings. Some info about the Bootstrap alerts: URL.

Here is how it would look like with the inline-code class:.
!screen shot 2017-01-10 at 22 38 08

block-code.
(The message is still to be corrected)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271853862.json . 
@F3PiX We discussed the warning message with @alicetragedy and agreed on the following text:.
"Please don't mention any specific names (e.g. geographical features, universities, companies, etc...) that may point to your location in any of the following fields. This will avoid bias in the selection process." Does it sound good to you?
Would you like to make the final changes yourself or would you like me to make them?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271988197.json . 
@F3PiX can you add one final schermafbeelding (I :heavy_black_heart:️ this word so much!)? I think we're ready to merge then. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271990033.json . 
One schermafbeelding coming up! 
!schermafbeelding 2017-01-11 om 21 47 00

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-271990866.json . 
@mkalininait are you cool with the changes?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\comment-272155935.json . 
@carpodaster yes!
@F3PiX thank you! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\issue-199635577.json . 
Solves #587 

I copied your sentence, @mkalininait, only put 'please' at the end of the sentence, because I learned recently that 'please' upfront sounds rude to native English speakers?
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199635577\pr-100741733.json . 
Solves #587 

I copied your sentence, @mkalininait, only put 'please' at the end of the sentence, because I learned recently that 'please' upfront sounds rude to native English speakers?
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199785266\comment-271699055.json . 
Okay, fixed the migration and rebased the PR to the current master.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199785266\comment-271700178.json . 
Thanks @bitboxer :confetti_ball: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199785266\issue-199785266.json . 
closes #588.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199785266\pr-100847206.json . 
closes #588.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199785266\pr-comment-95455649.json . 
Could you add the inline-code type so the migration becomes reversible (at least on the schema-level) please?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199785266\pr-comment-95455813.json . 
I think the inline-code is no longer needed now. Could you verify that in your branch and remove it from the inline-code model as well?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199785266\pr-comment-95456788.json . 
It is still used for block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199785266\pr-comment-95457128.json . 
Fixed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199785266\pr-comment-95458422.json . 
Ok, thanks for checking.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199804060\comment-271701790.json . 
@carpodaster should I fix the merge conflicts here?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199804060\comment-271702749.json . 
@bitboxer oh yes, please :bowing_man: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199804060\comment-271704967.json . 
rebased.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199804060\comment-271709873.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-199804060\issue-199804060.json . 
closes #583.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199804060\pr-100860858.json . 
closes #583.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199899061\comment-271697000.json . 
Thanks Maud!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199899061\issue-199899061.json . 
Solves #184 (at least, temporarily ;-) )

- [x] Delete application fields from User Profile Page
- [x] Delete hint in Application Field to User Profile Page
- [x] Check guides for references to the possibility of User Info entry on Profile Page. -> Found none.   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199899061\pr-100928852.json . 
Solves #184 (at least, temporarily ;-) )

- [x] Delete application fields from User Profile Page
- [x] Delete hint in Application Field to User Profile Page
- [x] Check guides for references to the possibility of User Info entry on Profile Page. -> Found none.   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199957485\comment-271835280.json . 
@carpodaster Thank you Carsten! It looks good! I didn't try to submit the form yet though.

Re the "giving back" field: yes, I think it should be character-limited, and also look like a multiline textarea (like the other 'essay' fields).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199957485\comment-271971967.json . 
Wow, I never knew how much code was involved for this feature :-)
On staging, I find my own application form for last year. When I try to add and save text  > limit, it doesn't save, AND it doesn't tell me why. (I was only able to test in my own profile, where I can't save any of the changes, so maybe it is not related to the number of characters limit.)   
And in the Preview tab, I can't do the 'ready to submit check' either. I get a warning that I have to save my draft (which I tried) and that my draft was not ready to submit. 
  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199957485\comment-271993707.json . 
@mkalininait "giving back" is a character-limited field now. In order for the styling to work, the _"x characters left"_ needs a hint/help-block (sorry, I don't know better CSS-wise). I had to come up with a hint for "giving back". Suggestions for a better one highly welcome ;)

@F3PiX that is a weird thing you report there. You shouldn't be able to see your past application draft at all. I also got some errors on staging stating inline-code. Would you mind creating a new issue for this? This looks like something different, but something we should look into. Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199957485\comment-272322525.json . 
@carpodaster Thank you!
We could write something like: "Would you like to mentor newcomers in your local community? Become a RGSoC coach? Share your thoughts." WDYT?
Regarding that merging conflict: let's name the field "Why are you applying to this program?" with the hint: "Write a short essay explaining your motivation."
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199957485\issue-199957485.json . 
Fixes #578

It is currently deployed on staging and can be tried out.

I did not go for the HTML inline-code attribute; I thought it would cause negative side-effects (ie. trunking) when pasting text from another source. The counter JS indicates that the limit has been exceeded. The draft can be saved, but the application can't be submitted.

The character limit is 2000 now which I find is not too much. It's _characters_ after all, not words.

Should the new "giving back" field (as introduced in #603) also be character-limited?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199957485\pr-100970768.json . 
Fixes #578

It is currently deployed on staging and can be tried out.

I did not go for the HTML inline-code attribute; I thought it would cause negative side-effects (ie. trunking) when pasting text from another source. The counter JS indicates that the limit has been exceeded. The draft can be saved, but the application can't be submitted.

The character limit is 2000 now which I find is not too much. It's _characters_ after all, not words.

Should the new "giving back" field (as introduced in #603) also be character-limited?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-199957485\pr-comment-95658099.json . 
typo: maxlength
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-272406620.json . 
A explanation about the process on how people work with tickets would be super helpfull, too. What are those labels? Who is setting them, what do I have to do when I want to work on a ticket/finish a ticket?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-272407489.json . 
A lot of this information (labels, picking up a ticket) is found in the contribution guide. I'm not 100% sure about this, but I think external collaborators (e.g. people who have not been added to a team on GH) might not be able to set labels to issues themselves. And because of the way GH works, I think they also cannot assign themselves or be assigned to an issue unless they're added to the organisation/repo?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-272408614.json . 
Yes, you can't set them but there is also waffle.io who is setting labels (i wasn't aware of that and got a bit confused :wink: )

And I am still not 100% clear what "in progress" means with pull requests. When I have a finished pull request, but it is still labeled as "in progress", what should i do? Is this okay? The contribution guide ends at the pull request.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-272412060.json . 
Yeah, I think “in progress” is added automatically by waffle.io. I don't use it, so I have no idea how to turn that off, but we should probably investigate this :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-305337257.json . 
I'm new, but I'd really like to help document the teams app. Partly because documentation is awesome and important, and partly because there's no better way to get up to speed. :) What can I do to jump in? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-305341312.json . 
Hi @acnagy! Welcome aboard!! 

A first step would be to follow the Quick Start Guide in the Readme. See if you can set up the app if you follow the steps, and if not: what and where was different. For example with setting up the database, with signing in, etc.
Maybe take screenshots of each step. Also: what happens when you make a mistake. Can you trace your steps or are you getting lost? (I know I was, when I tried to set it up the first time. :fearful_face: )  

Next step could be to read the documentation that we have, and see if that makes sense to you. There is a kind of an introduction in the wiki. Does that makes sense? What do you miss for an overview?

And what do you think about a home page in the wiki? With an outline of the info it _should_ cover.  @alicetragedy 's list is a great start.  

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-305516891.json . 
@acnagy I think Maud's comment is a great way to get started and see if you encounter any issues there. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-305959216.json . 
@acnagy thanks for taking care of this! <3.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-306971556.json . 
@F3PiX Can do! I'm working on it... - will post notes + relevant screenshots :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-307077377.json . 
Hiya again @F3PiX! I decided to try setup twice, so I knew when to get screenshots... that first time through was unexpectedly confusion :smiling_face_with_open_mouth_and_cold_sweat: - I found myself jumping all over the README for information... that said, some general notes from Testing Round 1: 

1. I'm not totally clear how much background info/ability to infer we assume new contributors have. For example, we give instructions on how to install postgres with homebrew and create a user as a sort of block of commands in _System Requirements_ ... but we do not tell the contributor to start their server.
2. Related: the quick start guide generally doesn't give commands on how to start the application, i.e. inline-code or inline-code... I'd assume that would be the place to find those - rather than before the quick start guide embedded in the discussions on additional services
3. We mention troubleshooting errors for additional services in the docs before the quickstart guide - if you read the docs through sequentially, it's tricky to know _how_ to know if those troubleshooting steps will be relevant. 

Anyway... now that I've fixed some issues specific to my environment (yay, permissions....), I'm going to start from scratch again and take screenshots and/or copy/paste console output for the docs. I'll do a PR to the README as well to restructure/edit text based on my experience.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-307121355.json . 
Interesting adventures :-) So, you are creating ONE doc that features all the steps in the right sequence, right? And maybe with links to the wiki for background info for special cases? I love that. 
About the details: I think in docs where we give detailed steps, we need to include where and how to start the server. Otherwise the detailed steps make no sense. 
Great that you are working on this!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-307743305.json . 
@F3PiX That's the plan - yes! Updates to the README for getting started/general setup, with additional (especially, troubleshooting) information on the wiki. I should have a PR with the README changes incoming soon :) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-310357582.json . 
I opened up a WIP PR over in URL - still quite a few "interesting" behaviors to investigate/document, but that's the structure of the readme I've written so far :) I anticipate that some of this content will turn to wiki pages soon, but I'd like to get everything written before I go moving it around. Contributions to the inline-code branch are more than welcome :yellow_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\comment-310358581.json . 
Awesome @acnagy! :sparkles:  I've added myself as a reviewer, I should have time to look at it tomorrow or early next week — but of course I encourage anyone (@F3PiX ?) to make comments on and review the PR as well :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200079656\issue-200079656.json . 
Even for pretty experienced developers, it's difficult to get started contributing to the Teams App without any information about context. The tests do provide some information, but I think it's not enough for people who have never used the Teams app before. My suggestion is to create documentation that will provide the following information for contributors and core organisers who sometimes just need to know how certain things work, but don't have knowledge of the code base:.

- [ ] a breakdown of the different roles and quick overview of what they mean and do (example: a student should be able to do this and that)
- [ ] an explanation of the different phases (e.g. Project submission phase, Application phase, Selection phase...)
- [ ] Information about how mail delivery works in production (e.g. sendgrid)
- [ ] maybe style-guide preferences? 
- [ ] other information that might be valuable for organisers who are not devs: 
- do participating members in a conversation for project submissions get notified about new comments?
- different pages that can be accessed via inline-code (since we don't have a dashboard yet)
- [ ] information about db backups? production env? yearly cloning of the repo? Rollbar? this can also be in a private repo, but it should be **somewhere** (and not just in someone's head) ;)

There is probably a lot of stuff I've missed, so feel free to post comments with more suggestions (or get a conversation going about items you don't agree with). 
I could imagine a 2017 team working on it as their feedback would be incredibly valuable, but we could/should also get started internally as soon as possible, as it might help us to get things shipped in the next weeks. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-200133539\comment-272006868.json . 
@carpodaster done! :party_popper: 
some of the values didn't seem super up-to-date in the locale file, so I wasn't sure if it needed updating. We might want to review it separately to make sure it's not missing anything :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200133539\issue-200133539.json . 
closes URL.
I've also updated the wording for the rating app tooltips, lest we forget...

here's a screenshot if what it looks like, just so you get an idea of what information can be found where. We can definitely a) remove the hint and add all the text to the label or b) add the rest of important info (“we don't accept links to github profiles”) to the label, and leave the examples of what we want as a hint.
<img width="1220" alt="screen shot 2017-01-11 at 16 54 33" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-200133539\pr-101094877.json . 
closes URL.
I've also updated the wording for the rating app tooltips, lest we forget...

here's a screenshot if what it looks like, just so you get an idea of what information can be found where. We can definitely a) remove the hint and add all the text to the label or b) add the rest of important info (“we don't accept links to github profiles”) to the label, and leave the examples of what we want as a hint.
<img width="1220" alt="screen shot 2017-01-11 at 16 54 33" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-200212259\comment-272399055.json . 
Looks good! Let's merge?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200212259\comment-272399335.json . 
@carpodaster go ahead and #yolomerge!!
(I just have an issue with the projects#show, which looks fine to me in development but weird in production – meaning, I made no changes to it, because I don't know where the problem is.)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200212259\comment-272404643.json . 
@alicetragedy I don't recall what the problem with inline-code was so i'll yolomerge :smiling_cat_face_with_open_mouth: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200212259\issue-200212259.json . 
:warning_sign:️ Achtung: work in progress still!

This aims to close URL.
- improves the index views of projects (both the “normal” and the orga one)

<img width="315" alt="screen shot 2017-01-11 at 22 04 01" src="URL <img width="317" alt="screen shot 2017-01-11 at 22 04 25" src="URL.

- makes the login screen on mobile prettier (don't know why it doesn't look centered in the browser device inspector, on my iPhone tested locally with ngrok it looks centered :thinking_face: )

<img width="314" alt="screen shot 2017-01-11 at 22 26 06" src="URL.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-200212259\pr-101150013.json . 
:warning_sign:️ Achtung: work in progress still!

This aims to close URL.
- improves the index views of projects (both the “normal” and the orga one)

<img width="315" alt="screen shot 2017-01-11 at 22 04 01" src="URL <img width="317" alt="screen shot 2017-01-11 at 22 04 25" src="URL.

- makes the login screen on mobile prettier (don't know why it doesn't look centered in the browser device inspector, on my iPhone tested locally with ngrok it looks centered :thinking_face: )

<img width="314" alt="screen shot 2017-01-11 at 22 26 06" src="URL.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-200683300\comment-276909818.json . 
I'm not so much in favor of adding more required fields. Even more so as the "coaching experience" may take some time to fill out – with meaningful data, anyway; you can always get past the validation by entering "I have coached before", effectively providing zero value for us.

I also find it a bit harsh for a person showing their _interest_ in coaching. On the other hand, making it a required field as soon as a user is actually added to a team as a coach gets us back into the merry-go-round of how to enforce the data input.

Afaik, we removed the "hours per week" last year since it is too hard to estimate anyway and it won't safe them from life that happens anyway. The coaches supply no data for the application as of 2016 other than their active confirmation of their status as a team's coach.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200683300\comment-328091169.json . 
@alicetragedy What do you think about this task? We have two different opinions here :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200683300\comment-329105269.json . 
I think we have to differentiate two things:.
- the user profile of a coach offering to help coach a team (in the same way that a coaching company would offer a space), findable through the community page
- the information of a coach attached to a team and an application

unfortunately, these things don't necessarily overlap. Sure, a coach will have the same experience regardless, but objectively, if a coach is attached to, say, two teams we end up choosing, and that in their profile they write down “availability: 40 hours / week” I doubt they'll have 40 hours / week for both teams, if that makes sense. So, I think if we need more info from the coaches in order to rate the applications better, this needs to be done by the coaches after signing up and once they have a better idea of which teams they plan to coach.

I'd be up for adding a single extra field with technologies (similar to the technology / programming language tags we have for projects). We can still think about whether we want the coaches to be more involved in the application process and give them space in the application... but I am not sure if we can or should do it over the user profile?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200683300\comment-334154325.json . 
Thanks for your opinion @alicetragedy 



I was thinking that it could be useful for the students when they look for a coach on the community page. Maybe the info about how much time a coach can dedicate to RGSoC can help them make a decision whether to contact her/him or not (together with the info if this coach is already involved in another team or not). What do you think about this use case?


 
I think this is already implemented for all users in PR #863.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200683300\comment-334691848.json . 
As @carpodaster already wrote, “we removed the "hours per week" last year since it is too hard to estimate anyway and it won't save them from life that happens” — so I'd be in favour of sticking to that, and not adding the hours/week again as it's often not really a good indicator of how much time they will ultimately spend on the program helping a team.
I'd suggest to close this issue then, since the technologies bit has already been implemented — I see it as already a good step for applicants to find their coaches through the communities page.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200683300\comment-334715034.json . 
Ok, closing the issue @alicetragedy .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200683300\issue-200683300.json . 
This issue originates from this one: URL.

We would like to have more information about coaches to evaluate quality of teams' support.

**Suggested solution:**
1. Add two required fields for users who checked the "interested to help out as a coach" checkbox:.
 - "Coaching experience" - multiline textarea field with the placeholder text "Do you have experience coaching junior developers, helping out newcomers to the dev community? Share your relevant experience."
 - "Coaching availability (hours per week)" - numeric field
2. Once an application is submitted, we probably don't want this info to be changed during the selection process. Possible solutions are:.
 - "freeze" the fields OR
 - make a snapshot of them and add it to the application snapshot (just as we do with the team members on application submission, AFAIK) <-- looks more preferable to me.

This is a thing to discuss.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-200690494\comment-273151457.json . 
@bitboxer I'm not familiar with advanced Devise Fu but will look into it later tonight. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200690494\comment-273151630.json . 
Don't worry. I totally understand. This is a rather big PR with changes all over the place.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200690494\comment-274634368.json . 
Sadly I can't. Have to wake up in 6 hours to fly to copenhagen.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200690494\comment-274634775.json . 
Alright + no worries. I'll do it. Good night and safe travels :sleeping: :airplane: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200690494\issue-200690494.json . 
The ticket was rather big, I hope I haven't forgot some part of it while implementing it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200690494\pr-101488827.json . 
The ticket was rather big, I hope I haven't forgot some part of it while implementing it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200690494\pr-comment-96134282.json . 
I think this causes CI to break. Is it a local debug artifact?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200690494\pr-comment-96134929.json . 
Oh, sorry. I thought I already pushed a fix to this. Fixed now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200690494\pr-comment-97415969.json . 
Shall we be a bit more picky and only confirm those who were part of a selected team in any of the past seasons (as a student, coach, supervisor or mentor)?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200690494\pr-comment-97418262.json . 
I think it would confuse users who come back and don't expect this. There is no easy way for those users to understand what is wrong and why they now need to confirm their accounts when those accounts are years old.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200690494\pr-comment-97427404.json . 
Makes sense, I buy that!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805501\comment-276898963.json . 
@F3PiX I'm thinking of importing a fresh production DB dump to staging just to see if the error was not due to some messing around with existing teams.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805501\comment-277664312.json . 
I'm getting this super weird 500 on staging when I access the Mentor Dashboard. The weird thing is that I can access it once, but if I navigate away from it and then click on the “mentor dashboard” in the navigation again, I get that error.

Other info which might be relevant:.
- I access the dashboard as a mentor
- Clicking on the application I see in my dashboard also fails

The error can be found in Rollbar, filed under item 45 and 46.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805501\comment-278945400.json . 
When I make a status update (daily log), it also assigns to my last year's team. Writing it here just in case all these things are related; will write the same in #621. 

PS: it looks like there might be more bugs of that sort, when things are being applied to last year's object :/
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805501\comment-302342730.json . 
@carpodaster Did you ever tried the db dump? URL 
And/or: Can we make this issue actionable?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805501\comment-303014776.json . 
@F3PiX I _believe_ there had been one or two fresh imports, but I've never tried to reproduce this bug after that. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805501\comment-303027570.json . 
I tried to check my application form, but I can't even log in in the staging app (nor in the teams app). URL.
I get a 422 at GitHub auth/login path. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805501\issue-200805501.json . 
#605 revealed unexpected behaviour in the rgsoc-teams-staging.

* The  application form was pre-filled with my info from last year. 
* Carsten reported an error  inline-code. 
Looks like data is persisting that is not supposed to be.

Needs: researching the things :trollface: that are haunting the staging app.  
Before that: Let's take inventory of other unexpected behaviour in the staging app. Please add here:.

- [ ] Prefilled info in application form (Maud)
- [ ] Validation error with GitHub (Carsten)    .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\comment-285342252.json . 
Hey, we are team Bundledore, we would like to work on this issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\comment-285945552.json . 
@mkalininait I have submitted a PR for this issue. Please suggest changes if any.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\comment-287275378.json . 
@mkalininait I have submitted the PR with all the changes mentioned. Please review it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\comment-288085425.json . 
Hi @Anagha22 Both of your PRs are closed. Are you going to make another one? I'm confused.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\comment-288099856.json . 
@mkalininait Yeah, sorry for the delay, I got some technical issues. It's fixed now. Will send a PR soon.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\comment-327565422.json . 
I'm not sure if this will be done by @Anagha22 or if I can take it. It is part of the community milestone, I would like to work on it if she is not going to. :smile: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\comment-329234693.json . 
@klappradla  do you think this issue can be part of our community milestone?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\comment-329248180.json . 
Sure :thumbs_up_sign:  Good point!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\comment-330622509.json . 
@mkalininait 
- Do you want to show the technologies fields in the user page? or this info will be there just for searching reasons?
 - Also, these fields should be mandatory? 
 - What do you think about this layout on user/edit page?

!tech_fields_edit

.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\comment-330988164.json . 
Regarding the layout I already left some comments in #863 

For whether or not the fields should be mandatory:.
I see some difficulties here...
1. From a technical perspective: it would make all existing user profiles invalid :see-no-evil_monkey:. I know we had something similar with the "city" or "country" field one, but I don't remember how we solved it...
2. From a human perspective: we may eventually insult or scare off groups of people unsure about the level of their knowledge and experience by "forcing" them to come up with some technologies and languages they are experienced in...

Maybe we have to come up with "softer" approaches to get this data. I could for instance imagine adding a reminder to fill out the profile information into the confirmation email or showing a friendly reminder when a user without a filled out profile logs in... there are several possibilities. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\comment-333801625.json . 
Closed via #863 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200805775\issue-200805775.json . 
This issue originates from this one: URL.

We would like to have more information about user technical skills primarily to make it easier for students and coaches to find each other.

**Suggested solution:**
Add the following fields (all required):.
- "Technologies of expertise” - tags separated by comma (similar to the "Tags" field in Project)
- "Technologies of interest” - tags separated by comma (similar to the "Tags" field in Project)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200905716\comment-272747994.json . 
Screenshot:.
!screen shot 2017-01-16 at 00 48 07

.
#rails-girls-summer-of-code/rgsoc-teams\issue-200905716\comment-272955074.json . 
@carpodaster It would look a bit confusing, because there are the "Name", "Age" and "Location" fields in the first section, don't you think so? Maybe we make a mini-warning in the field hint?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200905716\comment-273040687.json . 
Yeah, I guess so. Putting it as a hint seems good! :+1:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200905716\comment-273309821.json . 
@carpodaster Done! Can I merge it now?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200905716\comment-273410896.json . 
@mkalininait I'll merge. I will add the character limit after that.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200905716\issue-200905716.json . 
Closes URL.

One thing to think about: this field is not hidden during the blind phase at the moment. Together with other information people may mention their age and location there, which we kinda don't want to know before the non-blind phase. Should we ask students not to mention this info?

There was the issue "Blind selection warning" (URL but it only applies to the fields which go below the 'Basics' section.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200905716\pr-101614407.json . 
Closes URL.

One thing to think about: this field is not hidden during the blind phase at the moment. Together with other information people may mention their age and location there, which we kinda don't want to know before the non-blind phase. Should we ask students not to mention this info?

There was the issue "Blind selection warning" (URL but it only applies to the fields which go below the 'Basics' section.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200905716\pr-comment-96205432.json . 
Shall we make this field character-limited as well? In that case, we need a inline-code in the form + it has be added to inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-200905716\pr-comment-96299599.json . 
@carpodaster I don't have a strong opinion on this. It seems to me that it's pretty hard to write more than 2000 chars about your special circumstances, but what do I know. The limit wouldn't harm anyone, I guess.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201015687\comment-274792112.json . 


Oh yes! I had to google to find it on the website :D 
I think the link should be on the Nav bar. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201015687\comment-276956962.json . 
I'm closing this. The help page looks waaaay more informative now and the link to it is more prominently positioned.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201015687\comment-279400050.json . 
Also: add instructions about how to add coaching company info to application form (i.e. needs to be added to the “Anything else to add?” field, cannot be named, can also be added to coach profiles and named there if necessary)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201015687\comment-282753314.json . 
@mkalininait taking over this, as discussed this morning — if there is any work you've already done and/or committed, let me know, you can maybe push it to a branch so that I can take over easily?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201015687\issue-201015687.json . 
The help page(s) for students were a bit confusing last year, so we should definitely review and improve them (especially if some things have changed in the application process) before the open the applications. This includes:.
- [x] review “How to create an account” and “how to fill out your application” pages
- [x] review text on the main help page
- [x] make a link to the help page more prominent?
- [x] improve headings and structure of the help page 
- [x] improve “how to confirm your coach status” (add screenshot for coaches to confirm themselves, improve wording)
- [x] add page “how to contact your mentor” (could also be part of “how to fill your application”) — with screenshot of where to find user information
- [x] add instructions about how to add coaching company info to application form (i.e. needs to be added to the “Anything else to add?” field, cannot be named, can also be added to coach profiles and named there if necessary)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201200233\comment-273046871.json . 
Thanks for spotting this! Impact is very low since only Orga-people have access to that controller currently. It's still a bug :bug:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201200233\comment-273047477.json . 
Yep, that is true. And this is the only place in the codebase that is using inline-code. When I fix this I will also run brakeman to check if it finds other problems just to be on the safe side.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201200233\comment-273149177.json . 
I checked with brakeman and also fixed 2 other minor things. Brakeman also found a few unscoped calls to the inline-code method of models, but I think in those cases it is okay to do them. 

There are two things marked as inline-code that I am not sure if and how we want to fix them: 

The inline-code has redirect_to's to an url you can define in the parameter (see why it warns about them here ). Ideally we would check if the redirect_to is not going to another site using a fixed list of domains or check if the urls are only relative and not absolute.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201200233\comment-273151010.json . 
About the inline-code: It only appears in inline-code and from what I get, we could easily ditch the param and go for a inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201200233\comment-273151389.json . 
I was worried that the static site (or something else) links to it with a specially crafted inline-code url. If this isn't the case, then a inline-code would be totally fine. If you can confirm this, I will create a PR to fix this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201200233\comment-273152935.json . 
I am positive external links aren't an issue: it's the inline-code page, meaning the linking page needs a user's id to create the route. It's also a inline-code request which is even harder to construct from the static site. I say: let's kill it with :fire: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201200233\issue-201200233.json . 
In the ExportsController we have this starting at line 10:.

block-code.

Instead of constantizing a random user input and calling a method on it, we should check against the whitelist that is generated in the inline-code method in that class to prevent a security problem.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201276342\comment-273150468.json . 
:top_with_upwards_arrow_above: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201276342\issue-201276342.json . 
closes #615

I also checked what brakeman found and fixed a few minor things.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201276342\pr-101859311.json . 
closes #615

I also checked what brakeman found and fixed a few minor things.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201317393\comment-273202371.json . 
I fixed another security problem here that I overlooked: you could change the attendance status of every user in the database.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201317393\comment-274615106.json . 
Awesome – thanks, @bitboxer !
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201444512\comment-285071285.json . 
my partner is facing a problem an hasn't received any confirmation mail. Please resolve this asap.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-201444512\comment-285073403.json . 
hey @28Ritu, please send us an email to our support email address (contact@rgsoc.org) to handle this. thanks.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201444512\comment-285076976.json . 
Please resolve this asap. She is still facing the problem.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201444512\comment-285077141.json . 
I have already sent the mail to (contact@rgsoc.org).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201444512\issue-201444512.json . 
This issue originates from this one: #593 (see this comment)

We're gonna send an email once a profile has been saved (to confirm an email address). We should probably try to send an email to team members once someone added them to a team, too (to ask them fill out their profiles). 

We already send emails to coaches (once they are added to a team) and ask them to confirm their coach status:.
block-code.
It doesn't seem to be sufficient.

Here how the whole process could look like:.
!user-profiles


It looks a bit bulky, in fact it reflects the following use cases:.
**1. Coaches with an email address:**
**1a. Straightforward:** follow the link from the email, get their email confirmed, edit their profile info, save changes, get their coach status confirmed automatically (we want as little clicks as possible I guess).
**1b. With email address change:** follow the link from the email, get their email confirmed, edit their profile info including the email address, save changes, confirm their new email, get another email with a link to confirm their coach status.
**2. Coaches without an email address:** can't confirm their coach status until they fill out their profile and confirm their email; when they do so, they get an email with a link to confirm their coach status (or maybe get redirected to the team's page?).
**3. Other users with an email address:**
**3a. Straightforward:** follow the link from the email, get their email confirmed, edit their profile info, save changes.
**3b. With email address change:** follow the link from the email, get their email confirmed, edit their profile info including the email address, save changes, confirm their new email.
**4. Other users without an email address:** edit their profile one day and confirm their email address.

Please share your opinions. Maybe we could make it all simpler?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201445298\comment-284322351.json . 
Hey I, along with my partner(Team Bundledore) am applying for RGSoC 2017 this year. I would like to try my hand at this issue :) 
I just wanted to ask,  can I use the geo_complete plugin for this issue ? Seems to be really interesting :) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201445298\comment-313398214.json . 
Let's do it @branquinhoaa ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201445298\issue-201445298.json . 
Came up from this issue: URL.

Implement one Location field with Google autocomplete just as we did it on the Application form.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-273459862.json . 
It's kind of hard to test / look at this in the browser *(since it relies on certain data being available)*. The way I did it was:.
1. import a dump of the production db
1. update all existing applications to the current season
1. impersonate a mentor with a popular project (with multiple 1st and 2nd choice applications)
1. go to inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-273482083.json . 
I don't have access to the production data, but I will review the code changes anyway.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-274054660.json . 
So I guess this is ready now. Thanx @bitboxer for the review :person_with_folded_hands: 
@carpodaster / @ramonh or @alicetragedy do you also want to have a look at it?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-274254655.json . 
Also looks good to me :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-274477859.json . 
@klappradla it looks like there's a merge conflict, but I can try to fix it from the command line :grinning_face_with_smiling_eyes: I'd be up for merging as soon as possible, since it was reviewed by Bodo already and I trust his judgement. thanks so much! :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-274478109.json . 
@alicetragedy small warning: since I didn't had a production dump at the time of reviewing this, I haven't had the opportunity to try it out, I just reviewed the code :wink: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-274478514.json . 
@bitboxer yeah, I saw this :D I also haven't had time to try it out :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-274479438.json . 
Sorry for the silence - I just returned from Berlin. I can record a tiny demo of how things look like either tonight or tomorrow if u like @alicetragedy. I did not yet add any navigation, but now that @bitboxer refactored it, it could be worth a look.

Also for merging: if it's too much of a pain, I also do it myself.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-274480033.json . 
no worries @klappradla. A small demo would be great if you have time; Maria and I would like to do a bit of a test run with the application this week (with other testers) so I think the earlier a lot of these PRs are merged, the better. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-274583943.json . 
My video is way too big and way too shitty for uploading it here - I put it on Slack :winking_face: 

Quickly what this all does:.
* allow mentor to view a list of applications **from the current season** for their projects (they may have multiple) and a show view for each
* don't allow to view other applications - 404
* don't allow to view a teams other project choice - 404
* the values shown are already adapted for this year's data model.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-274596528.json . 
I just examined this and the video. Everything looks great to me!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-274605069.json . 
Ah, now I get what @alicetragedy meant with *"notes"* :see-no-evil_monkey:  - saw it somewhere else.
I'll also add this feature, but in a separate PR then.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-275546248.json . 
So @carpodaster I updated the PR according to your feedback and added the comment feature as well. Sorry it took me so long, I had a deadline at work and then a 2 day project out of town.

Quick note on how I implemented the comments:.
**Notes** by mentors on applications for their projects are internally represented as inline-codes in the mentor namespace -> inline-code and use the inline-code table under the hood. It was not possible / is super difficult to just use the existing inline-code model with it's polymorphic inline-code association, since there are already comments on applications. Including the mentor's personal notes here would cause confusion in other parts of the application plus interfere in the project proposal logic.
Using the exiting inline-code model is also impossible - they are only tied to a user *(and I did not want to change this)*.

So the inline-code is just a inline-code, not interfering with other comments and each mentor only has one per inline-code, using it as a kind of personal notes field that she can also empty again.

**missing:**
What is still missing, is a navigation for mentors to these views. I did not know where to add them, since there was ongoing work on the navigation. For now, we can just replace the inline-code button once we need it there. But I wanted to look into this again on the weekend, maybe adding a dropdown to the navbar...?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-276212519.json . 
Follow up to my last comment about **missing parts** (the navigation): I cleaned up the current navigation and basically replaced it with a classic responsive bootstrap one in order to find a place to *"squeeze"* in this new item I called inline-code.

In order to not have the navigation overflow one line one displays smaller than "huge", I added to dropdown groups:.
1. Summer of Code
  Contains phase-dependent everything around participating at the program, such as inline-code, inline-code, inline-code, inline-code - grouped into logical groups
1. User (displayed via avatar)
  Contains everything concearning the user: inline-code, inline-code, links to dashboards depending on phase and role, etc.
  *(When logged out, there's just a button to log in, no dropdown)*

Tiny demo:.
!navigation

I based these changes on the state of this branch. So one this is merged, I can open up another PR for the navigation - and we can continue the discussion about it there. Fine?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-276213526.json . 
:clapping_hands_sign:  :clapping_hands_sign:   :clapper_board:  <- = clapper 
Awesome!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-276320673.json . 
This looks so good!!! thank you! :smiling_face_with_heart-shaped_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-276320891.json . 
Shall we merge this? :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-276321523.json . 
Aye, let's do it!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\comment-276416766.json . 
Thanks, this came just in time ^^
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\issue-201550635.json . 
This adds some more fields to the inline-code model and respectively also the application form (#579 ) and an additional index and show view for mentors to get insight on parts of the fields of applications for their projects (#581).

What's still missing: I need to clean up a few methods in the inline-code model, add some proper view code to the show-view and implement a currently pending controller test.

Quick note on why I used SQL and added a new index to a certain path in the hstore: From what I have seen in the Teams app in terms of view code (especially related to ratings), I prefer to have more complex things unit-testalbe as server-code rather then untested view helpers with global scope.
I could have (and also did first) written the SQL statements with AR, but they just end up far less readable with nasty Node-js like brackets and stuff. The way I have it now, it may be a huge statement, but it's super easy to read and understand (if one knows about hstore).
By only pulling out the fields mentors should have access to, we won't have a *"security problem"* of showing them too much information about the applications they should not have access to.

*(sorry for the weird explanation, I'm kinda in a hurry)*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-102049059.json . 
This adds some more fields to the inline-code model and respectively also the application form (#579 ) and an additional index and show view for mentors to get insight on parts of the fields of applications for their projects (#581).

What's still missing: I need to clean up a few methods in the inline-code model, add some proper view code to the show-view and implement a currently pending controller test.

Quick note on why I used SQL and added a new index to a certain path in the hstore: From what I have seen in the Teams app in terms of view code (especially related to ratings), I prefer to have more complex things unit-testalbe as server-code rather then untested view helpers with global scope.
I could have (and also did first) written the SQL statements with AR, but they just end up far less readable with nasty Node-js like brackets and stuff. The way I have it now, it may be a huge statement, but it's super easy to read and understand (if one knows about hstore).
By only pulling out the fields mentors should have access to, we won't have a *"security problem"* of showing them too much information about the applications they should not have access to.

*(sorry for the weird explanation, I'm kinda in a hurry)*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-96639597.json . 
This is missing fields. If this is on purpose, ignore this comment :wink:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-96639734.json . 
is this commented out code needed? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-96749352.json . 
It's copied over from somewhere else and I was not sure yet if I could use it for the not yet fully implemented show view - but will probably delete it. Thanx for pointing out!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-96750349.json . 
Missing field that are part of the form? That should probably not be the case :winking_face: 
I'll have a look at the list again, should not miss any fields I think, thanx!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-96805869.json . 
So just took a look at it again - seems like it covers all attributes from the form, so missing the rest should be on purpose :victory_hand:️ 
*(btw: wifi and "beinfreiheit" on ICE is awesome :party_popper:  did not know about this)*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-96805996.json . 
Perfect!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-97407348.json . 
Just a minor thing in terms of keeping the project accessible:  inline-code isn't widely used. Since it just saves a few extra colons, I'd vote for being more explicit and write the literal symbols instead.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-97407950.json . 
It should work with symbols, we could probably spare the #to_s.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-97408808.json . 
How about this:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-97411886.json . 
Holy :cow:  – very elegant!

It took me some time to wrap my mind around it, though, what with the 3 levels of indirection. Do you see a way to rewrite this in a less inside-out object modification manner?

Does this work:.

block-code.

But that still modifies the passed inline-code value, no? It would rather work with inline-codes. Or is the mutation a desired/required effect?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-97413424.json . 
Would you mind adding a few sprinkles of (YARD) documentation for future versions of ourselves?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-97418409.json . 
Interesting, I wrote it like this on purpose, cause I thought it would be **better** readable, since you can basically read it from left to right and have every step visible. To me the other approach looked more inside-out, since you have to wrap in in brackets... But if it looked more familiar to you on the first glance, I can easily change it.

And yes, I went for mutation on purpose. The whole process is basically just mapping database columns to model attributes. So there's no point in allocating memory for the intermediate steps and have their results lying around.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-97418648.json . 
Oh nice, did not think about this :person_with_folded_hands: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-97421600.json . 
Yeah, I agree with the inside-out brackets (if only we had a pipe-operator in Ruby … :wink: )

I'm just unsure if binding the return value of higher order functions/methods to methods as their block parameter which in turn inline-codes the (implicit) block arg isn't something anyone with less than 4-5 years of Ruby experience immediately shies away from.

I don't know what weighs more so I'll totally shove the responsibility of making a decision back to you :trollface: 

As for the mutation: I don't think memory usage will be an issue for the Teams App anytime soon. Otoh, I can foresee a very nasty debugging session when we try to figure out where certain keys in the passed inline-code hash went to. But I don't have strong feelings here, either. You decide! :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-97421973.json . 
Makes sense! I'll come up with something. Just quickly add the "notes" before now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-98098623.json . 
:heavy_check_mark:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-98101281.json . 
Unfortunately not - it does not have *"indifferent access"* and since it's serialized down into an inline-code column, it does only work with String.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201550635\pr-comment-98111023.json . 
:heavy_check_mark:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-274101020.json . 
@mkalininait I think the problem is in the definition of current team
inline-code
and on your profile ,it seems like the teams are sorted by chronological order, so if I wasn't mistaken, this makes "Team Rackless pinguins [2016] " the first team , therefore = @current_team
inline-code

Hope this helps :smiling_face_with_open_mouth: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-274102035.json . 
@Nada1996 Cool, I think that's the problem! Thank you for the investigation :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-274103248.json . 
I hope that this solves the issue.
I'm glad to help :smiling_face_with_open_mouth: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-274110182.json . 
@Nada1996 Would you like to make a pull request? If you have time of course. Investigation is often the hardest part, and you already did it :)
Otherwise we will make it, not a problem either.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-274116660.json . 
@mkalininait yeah sure, I'll start working on it :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-275557774.json . 
@Nada1996 I've just noticed the following thing: in my application draft, on the "About your pair" tab, I see my partner from 2016, not the current one, too. Will the currently submitted PR resolve this issue, too?

UPD: It's actually not just the partner. The whole application draft is of 2016, and not the current one.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-276913146.json . 


@mkalininait that sounds like a different problem. This sounds like one of the problems that Maud described in #611.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-276913772.json . 
As for the original bug report: what is our expected behaviour for the "My Team" button, considering one can be part of more than one team (past and present)?

Can we just remove it or add a "My Team(s)" item to the nav bar that leads to a filtered inline-code with only those teams I am part of?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-277983857.json . 
@carpodaster Sorry for not replying earlier, I've missed this comment somehow.

The initial idea was that the "My team" button opens my team in the current season. You are right that some people can be part of multiple teams, for example coaches. Although it's not a very popular case, we should take it into account, too.

Your solution sounds good to me. Maybe we can even add this filter to the teams page explicitly (instead of the button):.
 * [ ] My Team(s)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-278945059.json . 
When I make a status update (daily log), it also assigns to my last year's team. Writing it here just in case all these things are related; will write the same in #611. 

PS: it looks like there might be more bugs of that sort, when things are being applied to last year's object :/
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-314428859.json . 
Ok, the team ProdyoGEEKY (Padawans in 2016) have the problem mentioned in the comment above :( They can't write daily logs.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-314448628.json . 
@mkalininait button disabled too? I'll see this problem...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-314717763.json . 
@juuh42dias No, there is actually another problem. The students have two teams, because they applied twice: in 2016 and 2017. They have been accepted this year. Now when they try to write daily logs, the logs get associated with their team of 2016.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\comment-315081718.json . 
The issue is fixed for the moment. I've also created a related issue #790.
Closing this one.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201667980\issue-201667980.json . 
I have two teams in different seasons: 2016 and 2017. The "My Team" button opens the team of 2016 for some reason.

!myteam

.
#rails-girls-summer-of-code/rgsoc-teams\issue-201708190\comment-274062251.json . 
looks good, thank you! :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201902649\comment-273819704.json . 
Ahem, I forgot to attach a screenshot :smiling_face_with_open_mouth_and_cold_sweat: 

!screen shot 2017-01-19 at 17 12 22

.
#rails-girls-summer-of-code/rgsoc-teams\issue-201902649\comment-274265771.json . 
Hey @alicetragedy, many thanks for the feedback! This makes a lot of sense. 

What I've done is changed it so that at least one option needs to be selected. What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201902649\comment-274266886.json . 
@ramonh that sounds perfect. thank you! :person_raising_both_hands_in_celebration: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201902649\issue-201902649.json . 
This addresses #580 by adapting the model of inline-code to allow to have several inline-code options.

We've got predefined options this as outlined in the issue, categorised accordingly.

The applicant can also write down a value for inline-code. Although the issue mentioned a checkbox to "activate" the "Other" field, I felt we could forgo this, as it might create an extra click in the workflow, and applications can disregard the "Other" field if they don't wish to fill it in.

This also removes the presence validation for inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-201902649\pr-102296147.json . 
This addresses #580 by adapting the model of inline-code to allow to have several inline-code options.

We've got predefined options this as outlined in the issue, categorised accordingly.

The applicant can also write down a value for inline-code. Although the issue mentioned a checkbox to "activate" the "Other" field, I felt we could forgo this, as it might create an extra click in the workflow, and applications can disregard the "Other" field if they don't wish to fill it in.

This also removes the presence validation for inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202063114\issue-202063114.json . 
closes #420.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202063114\pr-102409326.json . 
closes #420.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\comment-274266114.json . 
If you need any help writing the test, I can do a hangout with you to pair on this :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\comment-274347242.json . 


Sure this will be so helpful,Thanks a lot :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\comment-274347708.json . 
In what timezone are you and when would you be available? Lets find something that works for you. Small disclaimer: will be on a short city trip starting on tuesday and will have to check my hotel wifi if it is good enough for hangouts.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\comment-276327617.json . 
@Nada1996 Do you think you could write the test and finish the issue? Or should we take it over? We would like to merge it before applications open tomorrow.
Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\comment-276380707.json . 
@mkalininait I've working on the test but I'm having some issue with my Virtual machine, I'll keep working on it even 
I understand that you have that you have time constrains ,I think it's better if you take over , because I don't know when the error in my VM Ubuntu will be solved but I'll push the changes the minute I finish it anyways.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\comment-283316469.json . 
@Nada1996 did you have any luck fixing the issue with your VM and finishing writing the tests for this? :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\comment-284386105.json . 
@alicetragedy @Nada1996 It actually appeared to be more complicated as always :D], read [here. So we probably want to reconsider the solution.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\comment-303104621.json . 
@Nada1996 I am going to close this for now. Feel very welcome to open it again when you are ready to finish it! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\issue-202200054.json . 
This PR solves the issue of issue #621 , where the "My team" button goes to the oldest team instead of the current one.
So Teams.last correspond to the most recently added team therefore the current team .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\pr-102505478.json . 
This PR solves the issue of issue #621 , where the "My team" button goes to the oldest team instead of the current one.
So Teams.last correspond to the most recently added team therefore the current team .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\pr-comment-97194818.json . 
This could also be problematic if you allow to create a team in the next season or so. Maybe there is a way to actually get the team from the current season? Would something like this inline-code work?

Also it would be great if you could add a test for this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\pr-comment-97195462.json . 
We even have inline-code ;-)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\pr-comment-97229081.json . 
This sounds like a much better approach definitely prevent future issue 
So we can change it to this 
inline-code
?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\pr-comment-97229243.json . 
Yes, this could work. Haven't tried it myself yet. Would be awesome if you could check it and reply back here with your findings.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\pr-comment-97402561.json . 
One other thing: do we need to check for the current team where the user assumes a inline-code role? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\pr-comment-97418501.json . 
I don't understand that question. Can you explain what you mean by that?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\pr-comment-97419270.json . 
While you can only access the controller as a student, it might be possible that you have once been a student but your most recent team membership is as a supervisor or coach. That way around inline-code could yield an irrelevant team, ie. one where you are not a student on that team.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202200054\pr-comment-97419630.json . 
Ah, I see. I have no Idea what is actually preferred here. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202255376\comment-274266461.json . 
@alicetragedy Fixed both issues. And yes, side effects are always an issue. I tried to click through the pages and saw no other obvious css problem. Hope I haven't missed one :wink:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202255376\comment-274267034.json . 
thank you @bitboxer for making the changes so quickly. :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202255376\issue-202255376.json . 
The dynamically created methods overwrote the param injected
into the method. This lead to the problem that the instance
could only export one thing. Every export after it was damaged
because of a wrong value in the season variable.

The navigation was kinda broken on all browsers because of
a wrong nesting of rows and widths of columns inside of the
row. For example in Safari you could not click on anything that
was close to the top navigation because of an div overlap.

I replaced it completely with a new, cleaned up navigation and
made it look like the old one.

<img width="1022" alt="bildschirmfoto 2017-01-20 um 23 08 58" src="URL.

<img width="763" alt="bildschirmfoto 2017-01-20 um 23 08 52" src="URL.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-202255376\pr-102545919.json . 
The dynamically created methods overwrote the param injected
into the method. This lead to the problem that the instance
could only export one thing. Every export after it was damaged
because of a wrong value in the season variable.

The navigation was kinda broken on all browsers because of
a wrong nesting of rows and widths of columns inside of the
row. For example in Safari you could not click on anything that
was close to the top navigation because of an div overlap.

I replaced it completely with a new, cleaned up navigation and
made it look like the old one.

<img width="1022" alt="bildschirmfoto 2017-01-20 um 23 08 58" src="URL.

<img width="763" alt="bildschirmfoto 2017-01-20 um 23 08 52" src="URL.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-202255376\pr-comment-97195855.json . 
For some reason, there's now a side effect: the burger icon is getting a black border. Not exactly sure where it comes from :thinking_face: but a inline-code should fix it.. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202549625\issue-202549625.json . 
Reverts rails-girls-summer-of-code/rgsoc-teams#623

running the migration fails in production because of a value type conversion. Reverting this until further notice :) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202549625\pr-102729452.json . 
Reverts rails-girls-summer-of-code/rgsoc-teams#623

running the migration fails in production because of a value type conversion. Reverting this until further notice :) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\comment-274604773.json . 
Thank you very much for your review @klappradla! Helped me a lot. I've made some cleanups. Turns out I needed the cleanup inline-code callback to remove empty strings, but the rest worked out, hopefully.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\comment-276076172.json . 
I'm not sure what the current status is here. @ramonh, do you still need someone to review this? I feel a bit unsure about taking a look at it, but it would probably be good to merge it soon so we can also test it before opening applications. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\comment-276077356.json . 
Hey, thanks @alicetragedy. I think it would be good to have another look at it. I re-reviewed the migration command string inline-code and it seems safe, but one can never be too sure. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\comment-276077426.json . 
Oh but there's conflicts here, do I need to rebase? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\comment-276084483.json . 
@ramonh yes, I think rebasing would be the way to go (I have tried resolving conflicts from the command line using the GH instructions in the past but iirc it just created an ugly merge commit)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\comment-276094251.json . 
Alright! Rebased and cleaned up. Thanks for your help @alicetragedy .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\comment-276648887.json . 
Once this branch is put back up to date with current inline-code I think this should be fine. After all, I also don't see a problem in having the inline-codes removed on not as long as the other relevant information from the schema is there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\comment-276685871.json . 
@ramonh sorry, could you rebase this again? we might be able to merge then... Right on time for the applications opening at 18:00 UTC :face_screaming_in_fear: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\comment-276699911.json . 
Alright, we should be in business! Thanks for the feedback again.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\comment-276702346.json . 
@klappradla you want to merge this one? ;)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\comment-276716394.json . 
ok, I'm doing this. :grinning_face_with_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\issue-202603908.json . 
This should fix #623, which was reverted in #627, and addresses #580. :smiling_face_with_open_mouth_and_cold_sweat: 

The fix is brought about by replacing a broken migration with one that uses Postgres' inline-code function to convert the field.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-102767289.json . 
This should fix #623, which was reverted in #627, and addresses #580. :smiling_face_with_open_mouth_and_cold_sweat: 

The fix is brought about by replacing a broken migration with one that uses Postgres' inline-code function to convert the field.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97397630.json . 
You should be able to get the same behavior with
block-code.
Since you already set the array type on db level. So you could spare both, the before-save callback and the custom validation.

I'd just add a test for it and give it a try.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97399041.json . 
I'm not sure if I understand this correctly. So this will submit 4 values for the same key and therefore and up as an array? How do you make sure it preserves the order?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97399189.json . 
Is this really reversible with inline-code? Probably...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97399599.json . 
Why did you remove **all** char-limits without adding a migration? Is this done automatically via an update to Rails? I don't really get this :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97400737.json . 
Huh?! This was not intended. Will need to fix this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97401352.json . 
For what it's worth, I think it was done automatically, but don't know why I wasn't informed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97401498.json . 
I've yet to get behind how Rails generates the schema.rb. It would seem the schema dump depends heavily on the actual pgsql patchlevel used when the migrations were run. :woman_shrugging: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97401769.json . 
Oh! No it's not. Will need to add a inline-code and inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97402699.json . 
Having the inline-code allows to have any number of inputs with the inline-code attribute. 

From what I understand, the order doesn't make a difference.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97403024.json . 
Is this about this comment by Raphael Franca  URL.

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97403551.json . 
You're right! Arg, thank you for catching this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97403700.json . 
Good catch @F3PiX. Does this mean, if I understand correctly, that it's not relevant anymore?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97405462.json . 
I think so, yes.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-97428361.json . 
Yes, it relies on the used psql version. Because of that I am always in favour of using only one postgres version everywhere. From dev over staging to production. Even small version differences can have huge changes in behavior. I have a tool called pgvm on my machine when switching between projects. Other people I know use separate docker containers for each project and only work inside of the container.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202603908\pr-comment-98555434.json . 
Interesting, I didn't know that you could have more than one input field adding up to the same array param value. Does the form keep the selected values over its different input elements? As in: if you select values, save and (hard)reload the form: are the previously selected values still there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202676870\comment-276037214.json . 
I think the biggest problem, as a user/student filling out the application, is that I don't have this information (some fields are missing!) before filling out the draft, and may risk losing information I've added to the application form. 
I think there are two ways in which we could solve this:.
- force all users that have a profile not filled out correctly to fill it out before they can even create an ApplicationDraft (which is anyway consistent with what we want)
- show a note at the top after creating a new ApplicationDraft if the user has an incomplete profile (e.g. “Your user profile seems to be missing some fields, you will not be able to save this draft unless you fill them out”). I think this note might be a little cryptic though.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-202676870\comment-276214055.json . 
Another possible option could be to only validate the country when an application is submitted. This has he implication that we only require this for students / applicants, not mentors and coaches. The pro side would be that it's the least obtrusive approach.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202676870\comment-276225528.json . 
Just to make it accurate, this bug applies to the following User Profile fields: Email, Country, City.

!screen shot 2017-01-31 at 00 22 42

.
#rails-girls-summer-of-code/rgsoc-teams\issue-202676870\comment-276321947.json . 
@carpodaster if I understood correctly, this is not consistent with the changes made to force users to fill out their user profiles. (all users are asked to fill out their location and other fields upon registering). Do you see value in changing this though? 
One other point: we **need** to have the locations of coaches when the application is submitted, as this is part of what we rate applications on (though not a hard requirement). Maybe it could be changed for other roles, but that might be more confusing or difficult to handle the different use cases (meaning: maybe forcing all users to fill out their location is just the easiest way...)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202676870\comment-276323503.json . 
@alicetragedy yeah, you're right.

I fiddled with the validation error locally yesterday night after my comment on this issue. I am more in favor of either redirecting to the user profile directly (the unpolite, but easiest approach) or add an intermediate step where an applicant can edit their profile in-place (the more convenient, but also slightly hackier way).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202676870\comment-276387329.json . 
Connected: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-202676870\issue-202676870.json . 
When I try to save an application draft, I get this error: 
"Validation failed: Country can't be blank"

!save-app-draft

This happened because the Location field in my User Profile was not filled out (it was not required before URL 

We should show a normal error message on the application draft edit form in case some fields in associated User Profiles are missing. 



.
#rails-girls-summer-of-code/rgsoc-teams\issue-202689566\comment-275649197.json . 
Can't reproduce it on Staging anymore. Closing.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-202689566\issue-202689566.json . 
Each time I try to add a user, which doesn't exist in our DB, to a team, I get Error 500. Adding existing users works fine.

This bug reproduces only on staging, locally everything is fine.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-203351228\comment-275608648.json . 
I checked it out locally - looks good! One thing I did notice though: I can imagine many applicants want to just enter "female", possibly meaning "cisgender female" because not everyone is familiar with the more specific gender terms. "female" doesn't trigger the autocomplete list, suggesting that it's a "wrong answer"?

This is nothing about this PR but more about either the list of autocomplete options or the way jQuery Autocomplete works.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-203351228\comment-276074560.json . 
@carpodaster yeah that's a good point.. but typing “Woman” works (as we have “Cisgender Woman“ and “Transgender Woman” as options), so it's not really an issue of how the autocomplete works, more a problem of the original list I made. We could definitely add the option “Female” maybe? wdyt @ramonh?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-203351228\comment-276075003.json . 
Could definitely do, @alicetragedy. Thanks for the feedback, @carpodaster! 

In your opinion, should this be a separate commit for documentations' sake, or just squashed? Or am I perhaps overthinking this :fearful_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-203351228\comment-276076585.json . 
@ramonh I have no real opinion there, but I think squashed sounds good :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-203351228\comment-276090660.json . 
Alrighty, I've added the field! Thanks again for the feedback.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-203351228\comment-276098485.json . 
I'm going to go ahead and merge this.... #yolomerge.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-203351228\issue-203351228.json . 
This addresses #591 by both adding autocomplete to the gender identity field, as well as turning the field itself into a single line textfield from a 2-line text area.

The values for identities come from the proposal here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-203351228\pr-103292698.json . 
This addresses #591 by both adding autocomplete to the gender identity field, as well as turning the field itself into a single line textfield from a 2-line text area.

The values for identities come from the proposal here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-203523118\comment-275556454.json . 
Not a bug. The confirmation link was pointing not to staging, but to production. Once I changed the base url, everything worked out fine.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-203523118\issue-203523118.json . 
**On Staging:**
Open profile -> Add email address -> Save -> Get confirmation email -> Click the link -> Error

!add-email

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204073709\comment-281044035.json . 
Hello @alicetragedy  and @carpodaster ,
My name is Dorcas and I am excited to participate rgsoc2017...my teammate and I would like to work on this rgsoc app team project... For a start we would like to work on this issue just to familiarize myself with the application .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204073709\comment-282552045.json . 
Hey @techchic, sorry for not getting back to you on this one — I was about to reply with some clarifications on the feature last Friday, but then I saw the PR :) @carpodaster has already reviewed it, so once you make the necessary changes, I can take a look at it as well. Thank you for your interest and for your contribution! :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204073709\comment-282645713.json . 
@alicetragedy Thanks for the response @carpodaster thank you for your feedback.Lemme work on the changes and send another pull request.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204073709\comment-282646434.json . 
@techchic quick tip: if you stay on the branch you created to make the first pull request (inline-code in your fork), you should be able to make the changes there and push — that way, you won't have to create a new PR, the changes will be added automatically to your current PR ( #668 )
Let me know if you need any help with that :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204073709\comment-312806435.json . 
Hey @branquinhoaa, I think you expressed interest in working on this with your team mate Juliana. Please go ahead if you're interested, your mentor @carpodaster should be able to answer any questions you might have :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204073709\issue-204073709.json . 
Currently, when reviewing projects we only have 3 states available: “proposed”, “accepted” and “rejected”. Usually reviewing projects is pretty straight forward and we can make decisions right away, but in some cases, I found myself needing to check something with the maintainers (it usually takes a couple of days) or asking for feedback from the rest of the team, and then moving on. As I usually review projects in batches, I sometimes forget which projects I've commented on or am waiting for an answer from; this leads to me clicking projects I've already partly “reviewed” when I go through new applications. Maybe a new tag or state could be added to at least give me some visual aid? 
I could imagine that a yellow tag would fit well with the current tags we have for project status :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204260711\issue-204260711.json . 
The current placeholder page for inline-code shows the date and time on which applications will open. The system is smart enough to translate that into the user's set timezone (which can be set in the user profile by the user), but we've hardcoded “UTC” into the sentence, which leads to showing two timezones instead of just one. Example:.

message with my original timezone (timezone set to Europe/Vienna)
<img width="944" alt="screen shot 2017-01-31 at 11 38 48" src="URL.

message with a random timezone I set (inline-code)
<img width="995" alt="screen shot 2017-01-31 at 11 39 13" src="URL.

The best fix scenario would be to show the opening time in the user's timezone as a default, and fallback on the time value in UTC if no user timezone has been set. (I am not sure if every new user has a timezone default that we could use for that).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-276371168.json . 
Hey @hobarrera, thanks for this — we're looking into it now. Just to make sure — you're not able to sign in at all, which means you can't access your profile, right? It seems like there's a bit of an issue in the user confirming workflow. As a quick fix I should be able to fill out the missing information in your profile to confirm it and we will look into the bug later...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-276386225.json . 
@hobarrera right now I've fixed your issue manually, so that you can submit your project on time.  You should have received an email for confirmation. Let me know if this doesn't come in for some reason! And thanks for reporting, it's really useful. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-276389041.json . 
For documentation's sake, I've looked into this briefly and this is what seems to be happening here: when the profile is created, the location (pulled from github?) is added to the “city” field in the profile, but the country is left blank. This causes a validation error (user can't be saved because country is blank) causing some impossible-logging-in-loop-of-doom. Because the profile isn't saved, the user isn't logged in and hence, not allowed to fill out/edit their own profile. Because the profile doesn't get saved, it also doesn't send a confirmation email. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-276436456.json . 
I got the confirmation email now (I guess you manually triggered it), but I get 500:.

!2017-01-31t14 43 16 914966105-03 00

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-276453250.json . 
@hobarrera where does that happen? When you click on the link in the confirmation email?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-276523158.json . 


Immediately after clicking the confirmation link on the email.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-276523427.json . 
@alicetragedy Out of curiosity, how has registration worked so far? I don't see any alternative mean to register/log in, so how did other users get a country?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-276535265.json . 
I managed to sign in, but looks like I can no longer apply (it's probably past the deadline already in UTC time).

Any change of getting some sort of extension for applying due to bumping into an app error?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-276604726.json . 
@hobarrera to be honest, I'm puzzled because this (and another email we got at the same time) is the first report of this issue, no other users seem to have had that problem, but we're looking into it. are you still seeing the 500 though? you said you managed to sign in? 
Getting an extension would not be a problem, I get the frustration and issue there, and don't want this to hinder anyone submitting a project. Maybe we could continue this conversation by email, would you mind dropping us a line at contact@rgsoc.org? Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-276950689.json . 
I got the same problem as URL when clicking on the link in the confirmation email (that I received right after signing in with my GitHub account).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-277361918.json . 
I had the same issue with the broken confirmation link a few days ago, but I can't reproduce it anymore. Is it reproducible for you @hobarrera @thibaudcolas?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-277378338.json . 
Clicking on that same email link still produces the same error page, although it doesn't seem to affect what I can and cannot do on the site.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-277527845.json . 
Another use case that triggered this same issue:.
- User had filled out his fields completely, but didn't receive an email (only me “editing” his profile and saving it triggered the mail).

So this seems to be an issue specific to what triggers the confirmation email and how the profile is saved. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-278295293.json . 
New cases of this bug: URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279073435.json . 
@alicetragedy I think the email not sent out could be a separate issue. But I am not sure what it was. Will look into the validation error.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279236177.json . 
Okay, I tried to reproduce it. My findings

* This is a 2 step system, after the user clicked on sign in, that person is redirected to
  a profile edit page where more details need to be filled out
* The system only sends a mail if the profile is filled out completely. This is as specified in the
  ticket. So it is totally okay that the stuff is not mailed. We only send the mail when the person
  finished registering. We might need to clearify the wording and add a banner to all pages directing 
  to the profile edit page as long as the person hasn't finished that step.
* I can't reproduce the endless loop locally but I suspect it has something to do with a profile in a wrong state. Since I have no access to the production system I can't look up the state in the database for some of the users that have that problem.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279379174.json . 
@bitboxer I think the problem is that some users don't get to the edit profile page at all. These are the reports we usually have incoming — it's not that they wrongly save their profile with missing information, it's that they don't see the “Edit Profile” screen (which is weird). 
+1 on the mail — it makes sense not to receive it if the profile is not filled out, so I don't think there is a problem there. I have manually edited the profiles of some of the users who had the problem, and once the profile was saved with the correct information, the confirmation email was triggered.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279390374.json . 
Sorry, but I don't think so. They see the edit page. There is no way around it. But they don't understand it and click on something else in the navigation and leave that page :wink:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279390512.json . 
The user *must* click on the save button on that form, but some users don't understand that.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279391391.json . 
thanks for clarifying this. I was just getting reports from “I tried logging in and got this message” but in that case you are right and it makes a lot of sense to make the message clearer so that they understand they must click on save. I'll take a look and see if I can improve that somehow. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279532230.json . 
I would vote for:.

* remove all navigation header stuff on the profile edit view until the user has filled it out correctly and pressed save
* redirect to the profile edit page when a user logs in or opens the page with a not correctly saved user that is already logged in.
* adding a banner on the top saying "one last step till you finish your registration"
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279532254.json . 
@bitboxer Unfortunately, it doesn't always work as you say. I had this problem with one of my test users too.
What happens is that:.
1. I press the "Sign in" link.
2. I get error messages immediately, on the same page. I don't see the edit profile form.

There is a gif in the issue #646. In case it's not clear, at first I try to log in with the test user and then switch to another user (with the "orga" role) to show the profile of this user. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279532542.json . 
I cannot reproduce that here @mkalininait . I tried. Have no idea what goes on there. And I think we are now mixing 2 issues here. One is a UX issue, the other might be a bug that I don't understand yet.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279532934.json . 
@mkalininait was that user already in the database when you pressed the sign in link? If yes, it is still the same problem as I mentioned. If it was not in the database but a completely new user, I have no idea what went wrong and someone needs to check that.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279535926.json . 
@bitboxer The problem is that I also couldn't reproduce this issue with other users :/ 
This user, which could not log in, was already in the database. I think she was added there by another user, who added her to a team. I looked in the DB and didn't notice anything strange in her record.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-279573591.json . 
@bitboxer Ok, anyway, you are right that this happens because users don't fill out their profiles.
They ignore the edit form once they logged in for the first time, and then, after some magic actions, they can't sign in anymore (such a strict punishment!). I'm just not sure about those UI workarounds which you proposed, because then it would mean that an unconfirmed user has less permissions in the system than an anonymous user (the one who is not logged in at all). I wish there was a way to allow all users (confirmed or not) to log in – regardless of which UI solution we choose to force them fill out their profiles (if any at all).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-280725071.json . 
Hello! I was trying to sign in on the Teams App as a mentor, but am unable to do so and even if my team tries to add me as a coach, I do not receive a confirmation. Must have something to do with leaving the profile un-filled at the beginning. Please let me know if there is a workaround to this? This is the message displayed every time I try to login with no confirmation email being received. 
[
!rgsoc
](url)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-280787824.json . 
Hi @chhavip Please tell me an email address you want to be associated with your Teams app profile. I'll fix your account. You can send your email address here: contact@rgsoc.org.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\comment-281533607.json . 
I've extended the period of unconfirmed access to the Teams app from 2 to 30 days: URL.

It should significantly reduce the amount of users who can't sign in. However, it's not a real solution of the problem. We still need to implement tricks which would motivate/stimulate people to fill out their profiles and make it possible for them to re-send a confirmation email manually.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204300764\issue-204300764.json . 
I'm not entirely sure if this is a valid place to report this, but there seems to be no other channel anyway.

I'm trying to submit my project, but when clicking sign in, I get the following messages:.




However, I haven't received any confirmation email, and if I click sign in again, it's an infinite loop. Looks like a bug, though I may be missing someting.

Here's a screenshot just in case:.

!2017-01-31t10 44 21 900577361-03 00.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204442808\comment-276515127.json . 
Do you think this might also fix URL .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204442808\comment-276515366.json . 


I don't think so :crying_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204442808\comment-276521501.json . 
Wonderfull, this should feel like a totally natural step in the workflow. :chapeau: :top_hat: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204442808\issue-204442808.json . 
Fixes #629 

!output_low

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204442808\pr-104037071.json . 
Fixes #629 

!output_low

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\comment-276659184.json . 
Another thing: in your next PR (as I know you're working more on this later, but we want to have a first version up), could you move all the old inline-code files that are currently in the inline-code to inline-code which you just created? that way all files are in the same spot. I'm pretty sure those files are just used on the help pages :) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\comment-276666911.json . 
@alicetragedy Those files are not even used anymore. I wanted to delete them. Just need to verify I'm not deleting anything useful.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\comment-276667303.json . 
@mkalininait awesome! I wasn't sure. You can always delete them in the next iteration of the help page changes if needed then. :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\comment-276677866.json . 
@alicetragedy Yeah, I'll delete them in the next iteration then. The other changes should be in the latest commit.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\comment-276678065.json . 
@mkalininait will take a look and merge as soon as possible. thank you for your great work on this so far <3 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\issue-204562836.json . 
!joxi_screenshot_1485949573019

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-104121070.json . 
!joxi_screenshot_1485949573019

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98892432.json . 
could you remove this file? I think it's not required anymore :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98892896.json . 
Something minor that doesn't have to be changed right now: the indented links look really weird on the page. This likely has something to do with some css we've added somewhere else for general styling of unordered lists; I'd suggest to (at a later point, when you have time) add a class to the unordered list and override the margin values.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98893020.json . 
small typo: change to  “Country”.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98893315.json . 
could you remove the inline-code here? so just “Student Application Guide”, “Coach Guide”, “Mentor Guide”.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98893498.json . 
not sure if I would add a link to the issue tracker here. they will potentially file a lot of random bugs, and I'd prefer that they email us about it first.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98893576.json . 
change to “Drop us a line on Twitter”.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98898234.json . 
Oops, you are right, if was a temp file and I committed it accidentally.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98898867.json . 
Do you mean that there are no bullets in the lists? Then yes, I saw it but didn't have time to fix it. It's on my list of things to do.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98898995.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98899374.json . 
no, I mean that each link has a very huge margin on the left (I think each item should be left-aligned with the header of each section). regarding the bullet points, they can be added but that's optional I guess. We can think about it later :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98899844.json . 
It was there in the previous version of the page. I'll remove it.
For "advanced" users, there is a link "Fork me on Github" on the top right corner, which kinda hints that you can submit an issue :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98900098.json . 
yeah, true :D 
I just remember last year a couple of duplicate issues being submitted; we can always put it back if we see this is a huge problem? what do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98901885.json . 
Would this be better? 
!joxi_screenshot_1485958761105

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98902039.json . 
definitely looks better! :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204562836\pr-comment-98902364.json . 
Sure. I agree.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204686841\comment-276765678.json . 
!Amazing!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-204686841\comment-276918685.json . 
!mindblown

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204686841\issue-204686841.json . 
This changes the navigation to a *"classic"* Bootstrap navigation as specified in #380, grouping some items and moving them into dropdowns - in order to have enough space. If you want to *"highlight*" a certain item more prominent, there'd be still enough space for it. Just not for putting **everything** in one line.

I already added a video for how it looks in URL.

This also adds an *"orga dashboard*" page, which is for now basically just an aggregation of all links relevant for organizers. The approach for the *"sub-navigation"* there is similar to how it is done for the inline-code and inline-code space, using breadcrumbs (adapted from @michaelem :green_heart: )

See here:.
!navigation_new

.
#rails-girls-summer-of-code/rgsoc-teams\issue-204686841\pr-104208641.json . 
This changes the navigation to a *"classic"* Bootstrap navigation as specified in #380, grouping some items and moving them into dropdowns - in order to have enough space. If you want to *"highlight*" a certain item more prominent, there'd be still enough space for it. Just not for putting **everything** in one line.

I already added a video for how it looks in URL.

This also adds an *"orga dashboard*" page, which is for now basically just an aggregation of all links relevant for organizers. The approach for the *"sub-navigation"* there is similar to how it is done for the inline-code and inline-code space, using breadcrumbs (adapted from @michaelem :green_heart: )

See here:.
!navigation_new

.
#rails-girls-summer-of-code/rgsoc-teams\issue-205432731\comment-292144491.json . 
May be this error: URL.
(based on what user 2458 wrote to our support).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205432731\comment-325219585.json . 
I get an error if I click on the confirmation link while logged out. I could solve this by redirecting to the root path, instead of the sign in path. The difference is that now the user is not automatically signed in. I don't think this might be a problem, as this is the default behavior of devise and is the recommended procedure in terms of security URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205432731\comment-325900613.json . 
Would someone find the time to check if this error has been solved by #843? Merci beaucoup!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205432731\comment-326623591.json . 
@carpodaster @LuisaAPF 



I can't reproduce this anymore. If this is the only use case when we get the error described in the issue, then we can probably close it :thumbs_up_sign:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205432731\comment-326650967.json . 
I have never been able to reproduce the error deterministically do. I can't tell if this has been fixed :(
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205432731\comment-327860050.json . 
I at the time forgot to comment it on #843, but I could reproduce the problem locally and then have the new code fix it @carpodaster. So I guess it's fine :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205432731\issue-205432731.json . 
This bug is probably related to URL we've had a couple of reports of people being unable to:.
- receive a confirmation email and
- confirm their account once the confirmation email was triggered manually

When clicking on the token in the confirmation link, users are directed to a page that throws an internal server error (500). It seems that all users affected ended up with a confirmed account after clicking the link, so the issue might really just be in the page users get redirected to? 



.
#rails-girls-summer-of-code/rgsoc-teams\issue-205444277\comment-277792556.json . 
Ouch. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205444277\comment-277792838.json . 
@F3PiX can you give any other details, e.g. if this happens in a specific browser or in all of them, is this on staging, production, locally... or everywhere? 
I'm sorry you have to see this, it's a little big :face_with_tears_of_joy::flushed_face:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205444277\comment-277986946.json . 
I had the same bug :) MacOS Sierra 10.12.3, Google Chrome Version 55.0.2883.95 (64-bit).

!screen shot 2017-02-06 at 12 17 15

How it happens:.
 1. I added **@mkalininait-test** to my team; this user didn't exist in the DB yet.
 2. **Then** I logged in as  **@mkalininait-test** and got this 'sore' thumbnail.

The thumbnail looks fine if I sign in as **@mkalininait-test** for the first time without having been added to a team.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-205444277\comment-278512258.json . 
With a different user @unknownuser365 I get a huuuuge thumbnail whatever way I sign in... just as F3PiX describes. So weird.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205444277\comment-278913504.json . 
This should have been fixed with URL :party_popper: 
@F3PiX, can you confirm and close the issue if it's fixed? thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205444277\comment-278978046.json . 
:party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205444277\issue-205444277.json . 
I use the github avatar and this happens with the thumbnail in the navbar

!schermafbeelding 2017-02-05 om 19 40 47

.
#rails-girls-summer-of-code/rgsoc-teams\issue-205650254\comment-277776448.json . 
Thanks, @untitaker, for reporting this.

@klappradla @alicetragedy could this be a side-effect of the new navigation bar?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205650254\comment-277776941.json . 
If I delete the inline-code element this issue is gone, IIRC the problem has been there before too.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205650254\comment-277783073.json . 
Oh thanx @untitaker :green_heart:  - that has to to with the new navigation, you're right @carpodaster. I had to adapt some of the styling, since the old ribbon was not *"bootstrap-confirm*". I'll get Firefox and take care of this *(unless it's super urgent)*.

*Note to myself: the default image is also too big for the new nav.*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205650254\comment-277840898.json . 
Hm, to be honest, I'd prefer to fix this issue by just replacing the current approach with an adapted version of this one - it's simply the best :green_heart: 
The one we currently have uses an approach like this, which results in overflowing edges and is way harder to fix than just using a single inline-code tag.

I'm way too tired now, but I'll find time during this week I think.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205650254\comment-277917623.json . 
Sounds good @klappradla. Thanks for looking into it! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-205650254\issue-205650254.json . 
On Firefox 51, the GitHub ribbon causes a vertical scrollbar for the entire page. After scrolling sideways to the right:.

!2017-02-06-181144_280x298_scrot

.
#rails-girls-summer-of-code/rgsoc-teams\issue-205744195\comment-277856693.json . 
I'd also remove the word "Please" from some questions. 
Some questions start with please and some without. For example:.
 * Tell us about your community involvement
 * Tell us about any special circumstances which you want us to consider while reviewing your application

BUT

 * Please tell us a little bit about yourself. What is your background?
 * Please give us a short summary of your programming skills
 * Please summarize what you have been doing to learn programming
 * Please provide examples of your code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-205744195\comment-277976178.json . 
@carpodaster I'm not sure. I support politeness, it's just that the usage of "Please" is inconsistent.
Since you are indifferent and Anika voted for leaving "pleases", let's keep them and just merge this pull request.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206048018\comment-278295660.json . 
Closing as a duplicate.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206048018\comment-280088598.json . 
I am also facing a similar issue. I haven't received a confirmation mail yet.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206048018\comment-280790460.json . 
Hi @Aastha23 I've fixed your account on the Teams app. Please check your mailbox, you should get an email to confirm your email address. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206048018\comment-280831216.json . 
Thanks a lot!!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206048018\issue-206048018.json . 
Today we got a message from a student on Slack: "Hi. My team member is trying to log in with her GitHub account for the first time on RGSoC website. However, she is not receiving any activation email or getting signed in."
 * Team Pixelate
 * User Aqsa Ahmed

------
I faced the same issue testing the app locally:.
 - Tried to log in as @mkalininait-test, failed
 - Opened the profile of @mkalininait-test, didn't find anything special about it

!cannot-sign-in

Can't reproduce it on Production though.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-278401990.json . 
While working on this task I discovered that inline-code is always null, as long as it is not equal to inline-code. As we discussed in the dev channel on Slack, we could implement Issue #342 or choose an easier solution and state that project mentors must submit their projects themselves (meaning that we would always count project submitters for primary mentors).

**FYI:** This year (2017) we had 58 project submissions. Three of them have inline-code:.
 * The Processing Foundation - has 2 mentors
 * Wikimedia Foundation
 * OpenDF

(all have been accepted)

If we choose the easier solution, then the question is what we do with the **mentor fields on the project submission form**:.
* Mentor name
* Mentor github handle
* Mentor email

We could:.
* a) just hide them or
* b) make them not editable or 
* c) rename them to "Additional mentor name/github_handle/email" and remove pre-set values – which means that we allow projects to have multiple mentors and students to see them all. 

On the **project overview page** we could then display:.
  * "Submitter / Primary mentor" (we don't display this field at the moment)
  * "Additional mentors" (what's currently called "Mentor") <– this would be a bit confusing though, because for almost all projects of 2017 it would show the name of the primary mentor (unless we implement a trick and don't show an additional mentor who is equal to project's primary mentor).

That do you think?






.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-278414011.json . 
Or, we can ignore my previous comment for the moment and just implement a super quick solution for this task:.
 * show links to the Teams app for those projects where inline-code (95% of all projects)
 * leave everything as is (no links) for those projects where inline-code (5% of all projects)

!joxi_screenshot_1486576221858
!joxi_screenshot_1486577415159



.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-278602298.json . 
@mkalininait I think the latter is a good compromise. Besides, two out of the three projects (Processing and Wikimedia) have offered their preferred ways of being contacted in the project overview anyway, so the only one that doesn't offer information on contacting the mentor is OpenDF. I will get in touch with them (OpenDF submitter and mentor) and ask which information we should provide in the project overview. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-278603666.json . 
@alicetragedy Ok. We should think about a good solution for the next year though. Some day :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-278913282.json . 
Closed in URL.

Quick note: We should probably double-check that email addresses are visible for students before closing the issue because right now, user addresses are **not** visible for users that are not logged in. :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-278918784.json . 
@alicetragedy you are right, the emails are not visible to users, even if they are signed in and confirmed :face_with_tears_of_joy: :see-no-evil_monkey: I'll look into it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-278919576.json . 
!crying-pikachu

.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-278924825.json . 
Hm. They _should_ be visible unless a user has explicitely checked the "I don't want my email address to be published EVA!" option.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-278926846.json . 
@carpodaster Hmmm... As a *confirmed* teams app user (**@unknownuser365**, id 1613) I don't see any emails, even those of the users who didn't hide their emails (e.g., **@mkalininait**, id 622).

!screen shot 2017-02-10 at 12 56 36
!screen shot 2017-02-10 at 12 56 46

There is a check here app/views/users/show.html.slim
block-code.

If someone knows how to fix it quickly, that would be cool. I still have tasks on my plate for today. Otherwise I'll look into it on the weekend.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-279211103.json . 
I looked into the code. How it works now:.
 * Only users with the roles Admin and Supervisor can see emails and timezones of other users.
 * The checkbox "Never show my email address" doesn't do anything (probably because there is no need in it, see the previous statement).

When easiest thing I could do it to show emails and timezones to *all* confirmed users, if the checkbox "Never show" is false, and to *nobody* if the checkbox is true. But I don't think that this is the right thing to do. At least, there should be roles which see email addresses regardless the inline-code value (admins, orga, supervisors?). 

@alicetragedy what do you think? How should it work?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-279211310.json . 
I think emails should be visible to admins and orgas regardless. :)

otherwise, the rest of the solution you outlined (showing emails to all other confirmed users unless the checkbox is checked) makes a lot of sense. :thumbs_up_sign: 
About the supervisors: I would probably think it through a bit more and then decide if they should be added to the list of people who can view emails regardless of what the checkbox says. Right now they anyway get the contact information of their teams through the supervisor lead, so I don't think they require to view this info through the teams app. (and it would have to be a complicated thing like: users who are supervisors in the current season can only view hidden information of members of their team).

I hope that helps! thanks!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-279216306.json . 
@alicetragedy Btw, do you know why we hide timezones together with emails? I can't think of a reason. Can we display the Timezone field like all other normal fields?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-279388970.json . 
@mkalininait I'm not sure really.. I think it's ok to show this as well. :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-293695642.json . 
Is this done now that PR #684 is merged?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\comment-293698604.json . 
Yes!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206166055\issue-206166055.json . 
As we discussed some time ago with @carpodaster, it would be useful to have a link to the teams app user who submitted the project (i.e. mentor) on the overview of each project (right now we just show a link to the github profile of the mentor) so that interested students/teams are able to contact them. 

Note: mentors have been informed that they can provide additional / preferred ways of contact, for example a mailing list or link to IRC/slack/gitter, if they want to, which will be added to the project description as a “Note to Students”.

Maybe next year we could think about adding an additional field: “How to contact the mentor” or something like that, so mentors can input their preferred way of being contacted.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206168645\issue-206168645.json . 
Right now the mentor dashboard is only visible to mentors who **have been added to a team as mentors**. 
Since we are not particularly explicit to applicants or coaches about adding mentors to their teams anywhere, it might be that some teams do so and some don't (or alternatively, that some teams add one mentor only when they've applied for two projects... basically, a lot could go wrong). 
To avoid penalising some teams over others, it would be good to allow the mentor dashboard to be visible to all submitters of a (non-rejected?) project. 

Note: I'm not sure if we want to make this open to all Seasons or not. Ideally it would have to be only for the **current season**, I don't think it's relevant for past mentors to have access to their dashboard in any season if they don't have an accepted project in the current one.

Note from Max: Would be nice to have a shortcut for grouping them all — something like inline-code. Otherwise I’d probably have to do some heavier queries around “all projects of the season, give me your submitters” just to find out which navigation elements to render.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-206220458\comment-278509374.json . 
@alicetragedy Do we really show "How did you get into programming?" (it was not on the list here#other-changes), that's why I'm clarifying).
Do we not show "For how many months have you been learning the language of your primary project?"?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206220458\comment-278510645.json . 
Maybe we can add notices for the blocks of fields?
 * "Your programming skills"
 * "Your 1st/2nd project choice"

And I wouldn't probably put them in the yellow/blue box (we already have plenty of notes and warnings on the form!), but rather write as a normal text under the title.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206220458\comment-278567487.json . 
I've taken the list from the current existing mentor view, we can also make changes to this if needed (but then it has to happen now). I'm also not sure about the “for how many months”, I also feel like we wanted to actually remove that field entirely from the application...? Anyway it's in there now, so we should probably keep it that way and fix the mentor view accordingly. :see-no-evil_monkey: 

I think if we manage to make it so that we share entire “sections” of the form, it would make sense to use a real inline-code element (the yellow or blue boxes) to make it visible — that's what the element is there for. 
if it's single fields we are picking out, it makes sense to have single lines of “normal” text under each label (or each field, depending on how we want to do it) to not overwhelm the user with a bunch of notices scattered everywhere. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206220458\comment-278569488.json . 
@mkalininait I had created an issue for the mentor view originally, and I took the list of fields from the doc you linked to — but it could very well be that I missed some or added one accidentally that we didn't want to have in there. Anyway, I'll look at this later today and can make whatever changes are required :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206220458\comment-278618754.json . 
@alicetragedy 
**"I'm also not sure about the “for how many months”..."** – there were 2 fields: "For how many months have you been learning since your first workshop" and  "For how many months have you been learning the language of your primary project". We removed the first and left the second.
And the thing is that now we show mentors all the fields from the "Your programming skills" section with the exception of this "For how many months..." which looks strange. 

Re **"How did you get into programming?"**  (the field from the "Background information" section) I have the following concern: from what I remember, students tend to write 'essays' there, which are not necessarily about programming skills. I feel like reading them would take mentors' time for no good reason.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206220458\comment-278622521.json . 
good point. I will add the former and remove the latter then :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206220458\comment-281844556.json . 
I've tested this task on production. It seems to be working.
One little issue: 

!screen shot 2017-02-23 at 00 50 37

It's not entirely clear what the unit of measurement is. Maybe rename it to "For how many months have you been learning the language of your primary project?" .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206220458\comment-281918587.json . 
Ah thanx @mkalininait !
The view actually pulls all its labels straight from the translation file - so the labels should be identical with the ones in the students' application. Seems there is either a mismatch or some value missing.
I'll reopen and reassign this issue. I'm pretty packed with work at the moment and would forget otherwise...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206220458\issue-206220458.json . 
For some reason, I thought this was already done, but it's not. 
The application form should show which fields will be visible to mentors: 

- Why did you select this project?
- Which features are you planning to work on?
- What is your programming level?
- Provide examples of your code
- What you have been doing to learn programming
- How did you get into programming?
- Short summary of your programming skills

Not sure if we should place a notice with a list of fields, have single notices for each field, or add a sentence about it as a inline-code for each field. Thoughts? :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206468612\issue-206468612.json . 
The link displays only on the project overview page and only for the projects where 'submitter.github_handle = mentor_github_handle' (95% of all projects) (see Issue #647).

We don't display the link on the project preview, because the project doesn't exist yet and we can't use inline-code or inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206468612\pr-105402395.json . 
The link displays only on the project overview page and only for the projects where 'submitter.github_handle = mentor_github_handle' (95% of all projects) (see Issue #647).

We don't display the link on the project preview, because the project doesn't exist yet and we can't use inline-code or inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-278770430.json . 
@alicetragedy I've checked out the branch locally to reproduce the JSON error but got an inline-code instead. That was because I inline-codeed application data from last year.

I could get around that fix with this patch:.

block-code.

Do you have a stacktrace for your error?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-278780691.json . 
@carpodaster 

block-code.

I don't know if it has something to do with the content of that “skills” field rather than anything else. 
the rest of the (long) stack trace is pretty cryptic, but there's a inline-code which points to the inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-278801751.json . 
Could be that the value inline-code is not valid json. No idea how it got there w/o quotation marks, though. Gonna check tomorrow.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-278874869.json . 
You're right @carpodaster: inline-code is invalid JSON (and invalid Ruby) and not parsable by the default JSON parser from stdlib. It should be inline-code as a string @alicetragedy. Do you have an idea how this value ended up there?  I don't even know how it could have been serialized to *non-string* :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-278876448.json . 
@klappradla @carpodaster I honestly have no idea how that ended up there. I should probably get a clean production db dump to avoid this stuff in the future. :see-no-evil_monkey: will try to get that cleaned up asap. Sorry for wasting your time there :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-280599709.json . 
Ok, @alicetragedy (cc @carpodaster ) I made some experiments :man:‍:microscope::.

I think you found a _"bug"_ in inline-code from stdlib Ruby < 2.4.

This is Ruby inline-code:.
block-code.

This is Ruby inline-code:.
block-code.

Suggestion: **Let's just switch to 2.4.0** - shouldn't impact anything else.

*UPDATE*
A colleague of mine says it's already fixed in inline-code. But I'd still go for straight to 2.4.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-280604854.json . 
Just if you wonder: yes, 2.4 is available on Heroku.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-280659276.json . 
Not in front of a computer until Monday. Do the tests pass on 2.4? I wanted to upgrade some apps st work and noticed one or two gems not coping too well with the Integer unification .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-280744539.json . 
Yeah @carpodaster depending on how up to date the dependencies are, an update to 2.4 would also mean updating **them all** :winking_face:  - everything else would end in warnings-hell.

I gave inline-code and using inline-code a quick try and this looks good.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-280759938.json . 
Hey @alicetragedy, you wanna give this another try? I added some commits updating to Ruby 2.3.3, this should fix the JSON problems *(I hope)*.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-280781722.json . 
@klappradla sure, I'll give it a try tomorrow or Sunday, whenever I find stable internet :victory_hand:️ thanks so much for looking into it, I'm kind of happy to see the issue wasn't really on my end :D .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-280935730.json . 
@klappradla I seem to be getting the issue still, also when I run the tests. Do they all pass for you? :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-280945411.json . 
Yes @alicetragedy they should be passing - see Travis.

Are you sure you're on Ruby inline-code and the tests are also ran with inline-code? I don't know which Ruby version manager you're using, but they pretty much all work with inline-code files. So I'd suggest you just put one in the root directory of the project, containing just this string: inline-code - then your Ruby version manager should pick up the right version.
I'm for instance using rbenv - which does not work with specifying a Ruby version in the Gemfile.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-280948502.json . 
@klappradla is there anything else that could cause “my” tests to fail? I use rvm and had already set it to inline-code,  inline-code also returns inline-code, I've added a inline-code file just in case too, but it seems like something's still not quite right. :thinking_face: 
I still get inline-code every time I run all tests. This must be clearly some issue on my system then, because otherwise it makes no sense :( .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-280957265.json . 
And the failures are still due to JSON-parsing issues I suppose...?

Only thing I can think of right now would be around *"there has to still be something wrong with your dependencies"*. Your Postgres version should probably be around the one used on Travis *(>= 9.3)*, this shouldn't impact anything.

Maybe still gem dependencies. Are you using rvm's "gemsets"? If so, you could create a new gemset for Ruby 2.3.3, e.g.
block-code.

If you don't care about gemsets and do not need your installed Ruby 2.3.3 to have things setup a certain way, you could also just empty your current gemset and pull in stuff from scratch there. Would be like:.
block-code.

It's been years that I used rvm, but I think the workflow should be still approx. like this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-281517993.json . 
Just randomly saw your commit-message around Ruby 2.3.3 @michaelem - maybe you can could also take a look here and see if you run into any issues with the state of this PR...? Especially after updating to the here locked gem versions (JSON for instance).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-281581172.json . 
yes, the failures are still due to the JSON parsing issues. I will see if that problem comes from my dependencies as you suggested, maybe I can find something there. Will create a clean gemset and see if it helps :smiling_face_with_open_mouth_and_cold_sweat: thanks so much for painfully going through all this with me :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\comment-281803406.json . 
:heavy_check_mark:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\issue-206520803.json . 
this should close URL.

I've added info alerts to the application form to show students which fields will be visible to mentors, and removed the inline-code field from the mentor view, which was replaced by the inline-code. 
Tests have been updated accordingly.
For some reason though, I get a weird inline-code when I try to view the application now. Is there anything I've missed? Would love a push in the right direction :grimacing_face:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\pr-105438137.json . 
this should close URL.

I've added info alerts to the application form to show students which fields will be visible to mentors, and removed the inline-code field from the mentor view, which was replaced by the inline-code. 
Tests have been updated accordingly.
For some reason though, I get a weird inline-code when I try to view the application now. Is there anything I've missed? Would love a push in the right direction :grimacing_face:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\pr-comment-100892270.json . 
It's not a must, but it kinda hurts my eye to not see the inline-code's aligned :winking_face: 
There's "aligning" or "not aligning", but the compromise, I don't know...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\pr-comment-100892674.json . 
Seeing this, I would probably have kept both. Is inline-code *too much* or *too little* information for the mentors? Or is it just to personal?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\pr-comment-100893751.json . 
From what I remember, inline-code is a string of numbers, e.g. inline-code, etc. I'd suggest to also keep it like this in the Factories, e.g. using something like
block-code.
It may be personal preference, but I always tend to think, having ones test data as close to the *"real world"* as feasable without too much effort, helps keeping the test suite sane and readable *(and hopefully powerful enough to find out weirdnesses)*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\pr-comment-100894978.json . 
I'd spare the inline-code here. The field is not intended to contain html-links and I'd suggest to just keep things as simple as possible here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\pr-comment-100995621.json . 
haha, yeah, I totally get you. :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\pr-comment-100996030.json . 
inline-code tends to get a little on the personal side, and is often just a lot of information that is not super necessary to mentors. I think we were mainly worried here about how much time mentors would spend reading this info if it's not particularly relevant to the skills they would bring to the table. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\pr-comment-100999725.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\pr-comment-101006242.json . 
For some reason adding inline-code gives me a ton of failures on the test suite (inline-code and inline-code specs), all related to the inline-code I was getting before with my local application. Because of this I'm wondering whether that parsing error is an error with my local data after all – the test data shown when running the tests gives me stuff like inline-code which as you and Carsten already pointed out, is invalid. 
I'm confused and not sure how to best look into this :loudly_crying_face:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206520803\pr-comment-101016841.json . 
Sucks, but good to know. Seems we're doing something wrong with either serializing the data from the inline-code or retrieving in from the DB later... From what I remember the inline-code array is Strings only.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206621595\comment-278888496.json . 
Hello @gargi-gupta and thank you for taking the time to contribute to RGSoC!

It is not really clear why this change is necessary. This change also only affects a feature of the Teams App that's not visible to the public.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206622787\issue-206622787.json . 
This *"renews"* the Github ribbon I described in #644 and also fixes the problems mentioned there. I simplified the behavior in terms of visibility, but the outcome is still pretty much the same as before.

Besides that, I also went for a slightly lighter gray. I think this better fits the app's overall appearance and is less in your face than before.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206622787\pr-105508444.json . 
This *"renews"* the Github ribbon I described in #644 and also fixes the problems mentioned there. I simplified the behavior in terms of visibility, but the outcome is still pretty much the same as before.

Besides that, I also went for a slightly lighter gray. I think this better fits the app's overall appearance and is less in your face than before.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206625741\comment-278887776.json . 
Awesome!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206625741\issue-206625741.json . 
As I briefly noted in URL the "default" avatar image returned if there is no Github-provided avatar for a user kinda bloats the navigation bar.

This PR aligns the behavior of both types of images, default and "normal" avatar to just work fine with the navigation layout.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206625741\pr-105510553.json . 
As I briefly noted in URL the "default" avatar image returned if there is no Github-provided avatar for a user kinda bloats the navigation bar.

This PR aligns the behavior of both types of images, default and "normal" avatar to just work fine with the navigation layout.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206631869\comment-278783252.json . 
@carpodaster omg yes! finally someone addresses this, I've been thinking about it forever — every time I see the Rollbar warning. We **do** have a favicon.ico already though and it's in inline-code. Sorry to rain on your (rainbow) parade :face_with_tears_of_joy: 

Not sure why or how it's not being found. Any ideas? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206631869\comment-278880399.json . 
@alicetragedy oh cool! There is a .png one, the .ico, sadly, is only 0 bytes. The png is very small (16x) and I was told by @axlwaii that you offer several sizes for different devices nowadays. Does anyone have an SVG version of the Rails Girls pixel heart? Or will it be a rainbow parade after all? :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206631869\comment-278880981.json . 
@carpodaster in that case, it makes sense to create one, apologies! :see-no-evil_monkey: 
we do have the heart logo as an illustrator file I think (link); I can look into making it an svg and pushing it so that whoever is interested in this task can take it :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206631869\comment-278904080.json . 
URL does a great job creating all favicons you need :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206631869\comment-278930396.json . 
Update: an SVG of our current logo can be found here; @carpodaster feel free to add this in your original comment for anyone who wants to take over this task :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206631869\comment-287500201.json . 
Hey everyone! I did the favicons of our logo in red and also rainbow colors because I was confused about what you wanted. Thanks @axlwaii for your tip about that website!

### Red logo favicon
The folder is here.

### Rainbow logo favicon

The folder is here.  

### HTML code

In case you wanted, I added the code they suggested here:.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206631869\comment-287573650.json . 
Hey @anasofiapinho I already submitted a PR updating the favicons _(using the red one)_. But I just realized I totally mixed up branch names and issue number with those from work :see-no-evil_monkey:.

I'll clean up the mess and then add you to the PR so that you can have a look.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206631869\issue-206631869.json . 
Rollbar is full of warnings á la inline-code

Anyone willing to play with a favicon? Personally, I would vote for one that's already rainbow-heart-schemed :face_with_open_mouth: inline-code :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206660713\comment-278925427.json . 


I believe we only assign mentor roles when the team has been officially picked.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206660713\comment-278925915.json . 
@carpodaster Ah sorry, I think I am confused about the roles again... What's a person that is assigned to a team as a Mentor called? Currently there is the possibility for people that have been added to a team as “Mentors” to view the mentor dashboard — this PR would remove that possibility. so I was wondering whether we would still want that or not. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206660713\comment-278932841.json . 
@alicetragedy maybe we just ignore those 3 projects where *"submitters are not “necessarily” the final mentors"* for the moment and implement a good, consistent solution for the next year? I'm a bit afraid of making the app logic even more complicated while fixing things in a rush. Maybe we could find custom workarounds for those 3 projects...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206660713\comment-279405504.json . 
anyone want to do the honours of pressing the Merge button? ;) :man_dancing: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206660713\issue-206660713.json . 
Hey @alicetragedy, this adds the changes specified in #648: submitters of accepted projects for the current season have access to the mentor dashboard during application phase.

The applications they see are of course also from the current season.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206660713\pr-105535738.json . 
Hey @alicetragedy, this adds the changes specified in #648: submitters of accepted projects for the current season have access to the mentor dashboard during application phase.

The applications they see are of course also from the current season.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206766044\issue-206766044.json . 
It's a bit tricky though.
The orga role has access to the orga dashboard.
The reviewer role has access to the rating dashboard (/rating).
A person who is a reviewer but not an orga won't see the orga dashboard and thus the link to the rating dashboard.
We could create a separate reviewer dashboard and show it on the nav bar (is it a bit excessive?). Or we could give reviewers access to the orga dashboard, but show only one link to the rating dashboard there. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206782567\comment-278930103.json . 
@mkalininait the “Submit Your Project” link in the navigation bar only shows during the project submission phase, so it should be alright as is.
+1 on removing the other button.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206782567\comment-278930222.json . 
@alicetragedy Ah, ok, thanks, I wasn't sure about it. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206782567\issue-206782567.json . 
We should probably show this button only during the Project Submission phase. The same applies to the "Submit your Project" link on the Nab Bar. 

!screen shot 2017-02-10 at 13 21 11

.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-279157555.json . 
could you give more details, e.g. which browser you're using, which device, your resolution, etc.. thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-279157708.json . 
@alicetragedy Chrome browser, on HP laptop 13inch screen! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-279158046.json . 
we will look into it! thanks for reporting this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-279725628.json . 
I have the same issue on an 11" Macbook Pro.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-285483950.json . 
I cannot reproduce this on a MBP 13". Has this secretly been fixed already?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-285487778.json . 
@carpodaster no, it hasn't been secretly fixed :loudly_crying_face: I wanted to look into it because I saw it in a couple of other screenshots from applicants. Also not reproduceable on my MBP 13".
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-312271723.json . 
On my laptop Acer 15" has same problem. Reducing Width 40px* from class Container would already solve the problem in my case.

!captura de tela de 2017-06-30 10-44-36
!captura de tela de 2017-06-30 15-57-47


.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-313216747.json . 
@juuh42dias very cool, can you send a PR?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-327254372.json . 
@juuh42dias I've assigned you to this issue as you said you already have a working fix. Feel free to unassign yourself of course.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-342615596.json . 
@carpodaster Hi there! I'm a first time contributor. I've written a solution based on @juuh42dias' screenshot and I'd be happy to submit it here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-343070078.json . 
Hi @katiekeel – that's great! Could you do a pull request with your change?

Also: a very warm welcome :waving_hand_sign:  :smiling_face_with_open_mouth_and_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-350321164.json . 
@carpodaster Certainly! Sorry I forgot about this for a bit.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-352188058.json . 
Can I report here that, on my Ubuntu, I don't even see the ribbon?! :see-no-evil_monkey:🤣

!screenshot from 2017-12-16 14 43 08.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-352190562.json . 
What's your screen resolution @inescoelho ? The badge is hidden for smaller widths than 1360px.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\comment-352197099.json . 
You are right, @klappradla! My screen resolution is 1366 x 768, but since I have a lateral menu on ubuntu, the browser resolution is smaller and the badge is hidden. On my windows partition, the browser opens full length and I can see the badge! That's why I was confused and thought it was a ubuntu specific problem! :rofl:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-206851600\issue-206851600.json . 
!image

.
#rails-girls-summer-of-code/rgsoc-teams\issue-206908027\issue-206908027.json . 
add "preferably in the language of the project you're applying for" to the coding examples help text. 

<3 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-207227171\issue-207227171.json . 
- Closes URL.
- Adds a note about the coaching company in the team section of the application form.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-207227171\pr-105899223.json . 
- Closes URL.
- Adds a note about the coaching company in the team section of the application form.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-207231674\issue-207231674.json . 
closes #658 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-207231674\pr-105902493.json . 
closes #658 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-207243847\comment-279560674.json . 
@alicetragedy I've committed the changes. Although the bug with signing in happens because users don't fill out their profiles, we can't really control this. We can shout about filling out the profiles on every corner (an this is probably the right thing to do), but we can't force them to click the "Save" button in the end. 
All I want to say is that updating Help is good, but we need to fix that bug with signing in anyway.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-207243847\comment-279660423.json . 
@mkalininait yep, I agree with that, there's nothing we can really do about it too much (except fix the bug :p )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-207243847\pr-comment-100821605.json . 
can you change this part to the following and remove the image?

“once signed in for the first time, you will be redirected to the ‘Edit your profile’ section. In order to keep using the app, you MUST fill out your profile with the mandatory fields (see list below). Don't forget to click on the ‘Save’ button to save your profile — otherwise you will not be able to proceed.”

The problem seems to be that users log in and disregard the “edit profile” screen they get. Then they just click elsewhere in the app, and are automatically logged out/unable to do anything.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-207243847\pr-comment-100821847.json . 
which happens.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209315936\comment-281792089.json . 
Thanks @michaelem! I'm not too familiar with Devise (in fact, I don't like it at all because of all the hidden magic). Where is inline-code defined? It's not a named route helper known to inline-code.

I don't think this error is triggered for unconfirmed users only. It seems to appear when the GH authentication fails for whatever reason. Sadly, that is hard to reproduce locally :disappointed_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209315936\comment-282483849.json . 
I think this is good and should be merged. What is the policy here to do so?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209315936\comment-282647437.json . 


I don't think so, no. See comment above: not familiar with Devise, but it looks like we'd exchange the error message in the no method error:  inline-code is not defined, either.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209315936\comment-282651657.json . 
Ah, yes, that is right. If you open the documentation it says that
you need to add this, too:.

block-code.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-209315936\comment-292778362.json . 
Is this still relevant / decided yet @michaelem & @bitboxer ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209315936\comment-295170851.json . 
So, apparently I had that path defined locally when I tried to fix this back in February, sorry for the confusion. Added an additional commit to use the github auth path instead, which is actually defined.
What do you think @carpodaster ?

(If this gets merged, please squash :winking_face:)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209315936\comment-295205398.json . 
Thank you, @michaelem ! :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209315936\issue-209315936.json . 
This should address the error thrown when some unconfirmed users log in.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209315936\pr-107310161.json . 
This should address the error thrown when some unconfirmed users log in.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209318899\issue-209318899.json . 
We're getting lots of support tickets from people who didn't manage to confirm their accounts within 2 days after the confirmation email has been sent. Partially it happened because they didn't receive those emails.

Anyway, in order to stop this flow of support requests, I'm extending the period of unconfirmed access to the Teams app – till the moment when we decide how to handle unconfirmed users better.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209318899\pr-107312172.json . 
We're getting lots of support tickets from people who didn't manage to confirm their accounts within 2 days after the confirmation email has been sent. Partially it happened because they didn't receive those emails.

Anyway, in order to stop this flow of support requests, I'm extending the period of unconfirmed access to the Teams app – till the moment when we decide how to handle unconfirmed users better.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209773226\comment-282006348.json . 
(**Edit**: changed the first screenie to protect the reporter's privacy)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-209773226\issue-209773226.json . 
This PR fixed the issue submitted by one of our coaches: 

!0b020062-f9db-11e6-8fc4-70119f990c25


It happens when a team doesn't have a name. 

**Before changes:**

!joxi_screenshot_1487859415557
!joxi_screenshot_1487859451698

**After changes:**

!joxi_screenshot_1487859432134
!joxi_screenshot_1487859468480

.
#rails-girls-summer-of-code/rgsoc-teams\issue-209773226\pr-107633074.json . 
This PR fixed the issue submitted by one of our coaches: 

!0b020062-f9db-11e6-8fc4-70119f990c25


It happens when a team doesn't have a name. 

**Before changes:**

!joxi_screenshot_1487859415557
!joxi_screenshot_1487859451698

**After changes:**

!joxi_screenshot_1487859432134
!joxi_screenshot_1487859468480

.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\comment-290236801.json . 
Hello @techchic – will you have time to add the requested changes in the next couple days?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\comment-303104375.json . 
@techchic Closing due to inactivity. Feel very welcome to open this PR again when you are ready to finish it! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\comment-312743953.json . 
Juliana and I think we can do it!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\issue-210039786.json . 
[feature request] add new tag “in review” to projects overview #633  

My team-mate and I were familiarizing ourselves with this project before we applying for#rgsoc2017 and we've enjoyed doing it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\pr-107823021.json . 
[feature request] add new tag “in review” to projects overview #633  

My team-mate and I were familiarizing ourselves with this project before we applying for#rgsoc2017 and we've enjoyed doing it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\pr-comment-103023077.json . 
Since we have an additional state inline-code now, we need to also allow transitioning from inline-code in addition to inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\pr-comment-103023134.json . 
Since we have an additional state inline-code now, we need to also allow transitioning from inline-code in addition to inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\pr-comment-103023248.json . 
(trailing whitespace)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\pr-comment-103023279.json . 
(trailing whitespace)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\pr-comment-103023438.json . 
(new blank line)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\pr-comment-103023967.json . 
This error message looks like copy/paste error. It should be something like "There has been an error marking this project as pending."
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\pr-comment-103024081.json . 
Suggestion: "Successfully marked project as pending!"
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\pr-comment-103024590.json . 
(Indentation)

This trait isn't used anywhere and should be removed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210039786\pr-comment-103024996.json . 
I wonder if inline-code is the best name for the event. You introduced a trait for the projects factory called inline-code below (see also my comment there), suggesting that you had a different name in mind earlier. What do you think about inline-code as the event name (whilst keeping inline-code as the state)? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210046991\issue-210046991.json . 
One applicant reported the following problem:.

"I am applying for RGSoC 2017 and had created my team [team_name] and received confirmation from both my coaches as well. My teammate and I had started filling out our application too, saving drafts periodically.

However, we are suddenly finding ourselves unable to see any information listed for our team and our application draft is unavailable too. We were able to view and edit all of this information even until a few hours ago."

----

I investigated this problem.  It looks like all team members were somehow removed from the team at one point.  Because of this, the students lost access to their application. However, the application data persists in the DB.

I added one of the students back to the team so that she could add the team members again and submit the application. But she reported: "I tried adding the rest of my team members to my team, as you suggested. I'm getting an error message with error 500". I had to fix the entire team myself.

The question is: how did it happen that the data disappeared from the team?

Here is what I got from the production DB, the Users table:.

!joxi_screenshot_1487941847332

Ask me for more data.

----
Basically, all users were removed from the team in one go, but the roles stayed there. 
I can see three possible scenarios:.
 1. The users have been removed accidentally by someone in the team. 
 1. Someone got unauthorized access to this team and removed the data.
 1. Something else happened and triggered this bug.

Can someone look into logs/rollbar?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-210050355\comment-282882859.json . 
The third case:.

3. "We're still facing a lot of issues in our application. Somehow, in spite of saving our application draft, our response are not being recorded in the application. Even if they're being displayed for some time (a few minutes at most), the draft is repeatedly being restored to a previous revision. [...] Fields like our team information (the answer to the question of how we plan to work together), my pair's personal information, the information about our second project choice are repeatedly being restored to a previous revision."

.
#rails-girls-summer-of-code/rgsoc-teams\issue-210050355\comment-283654556.json . 
A relevant thought: maybe we should let users export/import their application draft data. It won't solve the problem of simultaneous editing, but will help in other cases of data loss (if they exist) and will make users feel more secure.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210050355\comment-283660087.json . 
@mkalininait do you have Team IDs where that happens? Can you send them to me via Slack?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210050355\comment-284398331.json . 
@carpodaster Done.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210050355\issue-210050355.json . 
We got two support requests:.

1. "I am facing some trouble locating the saved draft of my application form for RGSoC 2017. I began to fill the application form this evening and saved the draft after completing the first section by clicking the 'Save Draft' option at the end of the page. However, when I opened 'My Application' on the website again, the answers previously entered were not visible. Kindly let me know where I can view my saved application as I did not copy my answers elsewhere."
AND "The issue was resolved after saving it the next day, although I had to fill the answers again."

2. "I'm currently trying to save a draft of my application but it deletes everything every time I press the "Save as draft" button. Is there a bug or is it possibly because me and my pair are both writing our applications at the same time?"

We had the same issue once or twice last year, too.

Can this be the result of simultaneous editing by two students? Can someone investigate this? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210229905\comment-282893051.json . 
Thank you @klappradla !
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210229905\issue-210229905.json . 
Hey @mkalininait,

this fixes the problem described in #649. It's basically just duplicating an existing translation and skipping the *"(student<nr>)"* part to make it fit the presentation form of the mentor dashboard.

<img width="751" alt="screen shot 2017-02-25 at 12 42 25" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-210229905\pr-107958188.json . 
Hey @mkalininait,

this fixes the problem described in #649. It's basically just duplicating an existing translation and skipping the *"(student<nr>)"* part to make it fit the presentation form of the mentor dashboard.

<img width="751" alt="screen shot 2017-02-25 at 12 42 25" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-210232935\comment-282892982.json . 
Thank you Max @klappradla !
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210232935\comment-282997793.json . 
Correct me if I'm wrong @carpodaster, but from what I remember, there were changes to the applications' data model that have not yet been reflected in the rating parts of the app. Therefore I think the big application table is not yet renderable...

So ways to avoid this: make the applications table more defensive or adjust the rating model. Would vote for option one for now, since the rating process is not fully sketched out, missing mentor picks, etc.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210232935\comment-283007359.json . 
If you want me to adjust (in some way) the application table for this, I'd suggest to simply throw in a new issue and assign it to me. For its core functionality, I think this PR could be savely merged before that. No reason to access the applications' table now anyways.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210232935\comment-283029940.json . 
@klappradla @carpodaster We want to come up with a list of things which need to be adjusted in the rating parts of the app this week. But it's not done yet.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210232935\comment-283341878.json . 
+1 on merging this. By beginning of next week we should have a full overview of the changes that need to be made to the “ratings app”, and we will not need to start rating until later in the week. :partyparrot:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210232935\issue-210232935.json . 
Hey @mkalininait,

this adds a link to the rating dashboard to the user navigation, as described in #657. The link is displayed throughout all phases, I could not find a specification for something like a *"rating phase"* (cc @alicetragedy).

Be aware of the fact that the current implementation of the applications-table will probably not work with the current DB schema - and therefore break :collision_symbol: if you try to access it now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210232935\pr-107959946.json . 
Hey @mkalininait,

this adds a link to the rating dashboard to the user navigation, as described in #657. The link is displayed throughout all phases, I could not find a specification for something like a *"rating phase"* (cc @alicetragedy).

Be aware of the fact that the current implementation of the applications-table will probably not work with the current DB schema - and therefore break :collision_symbol: if you try to access it now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210237151\comment-282492461.json . 
I added a PR for this. In that I also change that if a user has a incomplete Profile, that user is automatically redirected to the profile edit form. Just to be sure.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210237151\comment-282516572.json . 
Hey @bodo, thanks for your work! A couple of comments from my side:.

1) I think you sent your PR to bitboxer/rgsoc-teams, not to rails-girls-summer-of-code/rgsoc-teams

2) Just to clear this up: do we redirect a user to the profile edit if she filled out her profile, but didn't confirm her email address?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210237151\comment-282550388.json . 
For 1: this is fixed now.
For 2: No. We only redirect if the user is not valid or was just imported using the github data import.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210237151\comment-282595495.json . 
@bitboxer That's clear, thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210237151\issue-210237151.json . 
When user email address is not confirmed, we should display a warning about this with the “Re-send confirmation” button which triggers sending an email with a confirmation token.
**UPD from Bodo:** "we can add that to all pages to the top right below the navbar. that way no user can say that they haven’t seen it :slightly_smiling_face:"

**Context:** many users don’t get confirmation emails. In some cases we send them, but they don't reach users and in some cases we don’t even send them. I can’t say in which cases specifically we don't send emails, this needs to be tested thoroughly. But the Resend button would be a sufficient hot-fix for such cases for the moment.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-210238470\issue-210238470.json . 
**QUESTION:** Should we implement it before we close applications? It might cause troubles to users and to us. On the other hand, we will have complete profiles for all  who applied.

1. We should restrict submitting an application with unconfirmed users in the team. Now one can apply with unconfirmed coaches on board, which partially defeats the benefits of implementing this feature: URL.

2. We should show a big warning on the application form and on the team's page, that the team has unconfirmed users to avoid avoid unpleasant surprises on application submission.

**Additional proposal:**
3. Coaches shouldn't be able to confirm their coach status, if they are unconfirmed users.

The warning can look like this:.

!joxi_screenshot_1488032515811

.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\comment-282892489.json . 
@carpodaster What do you think about this part of the PR: "It will redirect the user to the profile edit page when..."? Do you think it's risky to push this change so close to the applications deadline (March, 8)?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\comment-282993249.json . 
@mkalininait @bitboxer yes, I'd feel more comfortable with splitting it into two PRs, too. The _resend confirmation mail_ is just an uninvasive addition, changing the workflow of user registration at this time is a bit risky.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\comment-283302380.json . 
+1 on splitting this if possible.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\comment-288040079.json . 
hey,

whats the current state on this PR? the application deadline mentioned by @mkalininait is past us now. can we move forward with this PR? I can help rebasing it against the current master.

thanks
ben.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\comment-288044473.json . 
@bitboxer it looks like you deleted your repository


not sure what the best way is to move forward. I would like to cherry pick your commits and rebase against master. I also don't want to lose all comments in this PR here. but it seems like there is no way moving forward other than just to copy the changes and open a new PR.

would like to get your input on this! :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\comment-288049238.json . 
Oh, sorry. I thought this was already taken care of?! I have the code on my computer. If you want, I can push it to github again in its current form. I am moving to a new apartment right now, so I might not be able to respond as fast as I usually do with these things.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\comment-288057440.json . 
@bitboxer no worries, all good! it would be great if you can push the code when you find the time to do it. I can take care of rebasing it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\comment-288358362.json . 
I pushed it again to here: URL . Sadly I have no idea how to update this pr.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\comment-288411477.json . 
Awesome! Thank you so much. I will try adding as a remote and cherry pick your commits!










.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\comment-289464645.json . 
I created a follow up PR for this over here: URL.
I don't know of a better way to handle that. I cherry picked @bitboxer's commit to preserve him as a author and merged master in the new branch.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\comment-291501938.json . 
Superseded by #713 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\issue-210310217.json . 
Okay, this changes a few things in the OmniAuth flow.

It will redirect the user to the profile edit page when

* the user is freshly imported from github
* the user is not valid because data is missing

Additionally it shows a warning box if you haven't confirmed
your account yet with a button to confirm it manually.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210310217\pr-108000597.json . 
Okay, this changes a few things in the OmniAuth flow.

It will redirect the user to the profile edit page when

* the user is freshly imported from github
* the user is not valid because data is missing

Additionally it shows a warning box if you haven't confirmed
your account yet with a button to confirm it manually.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210435764\comment-282708085.json . 
Heyy, I'd love to work on this. I am applying for this years RGSoC, this seems to be a good task :) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210435764\comment-284216228.json . 
Sent another PR with the requested changes. Please let me know if I should change anything else :') .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210435764\issue-210435764.json . 
Currently, the season's show view looks like this:.
<img width="1192" alt="screen shot 2017-02-27 at 10 42 32" src="URL.

In order to view all information about a season's application opening and closing dates, we need to go into the edit view (see below), which is unpractical. 

<img width="1409" alt="screen shot 2017-02-27 at 10 36 09" src="URL.

I'd suggest having all important season dates in the season “show” view directly.

This should be a fairly quick fix, even for someone not extremely familiar with the Teams App architecture. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210489143\comment-285043953.json . 


All the fields are date *time* fields. While I am not a native speaker, I believe »at« is more appropriate for a concrete time. I don't have strong feelings about it, though. Let's merge this and maybe change the preposition later. :shipit: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210489143\comment-285044141.json . 
Thanks @amrtanair !
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210489143\comment-285044167.json . 
:partyparrot:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210489143\issue-210489143.json . 
Added the important season dates like application open date in the season's “show” view directly.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210489143\pr-108117888.json . 
Added the important season dates like application open date in the season's “show” view directly.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210489143\pr-comment-103568020.json . 
This seems like a backup file, automatically created by your editor. Can you please remove this from the PR again? Hint: it's always best to select/stage the files for a commit individually; avoid using inline-code which will also add unwanted backup files like this one.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210489143\pr-comment-103568079.json . 
This seems like a backup file, automatically created by your editor. Can you please remove this from the PR again? Hint: it's always best to select/stage the files for a commit individually; avoid using inline-code which will also add unwanted backup files like this one.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210489143\pr-comment-103568199.json . 
There is also inline-code and inline-code. Could you please add those, too? Thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210489143\pr-comment-103568422.json . 
(Additional empty lines – can you please remove them?)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210633923\comment-283081010.json . 
Maybe as a quick fix (since some applications might have been submitted with no team name already) we could concatenate the word “Team” with the team name to produce “Team [Team Name]” when the name is present and “Team” when the team name is missing? Just a thought :smiling_face_with_open_mouth_and_cold_sweat: I'm not sure if there is a better way to do this, we could of course force team names to not be blank and “fix” the already submitted teams/applications manually.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210633923\comment-283157883.json . 
@alicetragedy I was thinking of the same solution (adding 'Team' to the team names).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210633923\comment-283164137.json . 
@alicetragedy @mkalininait I'll tackle this real quick.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210633923\issue-210633923.json . 
URL.

There is no link to an application without team's name

!joxi_screenshot_1488236110469

.
#rails-girls-summer-of-code/rgsoc-teams\issue-210635756\comment-283366488.json . 
Done in #681 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210635756\issue-210635756.json . 
NOTE: I thought we had this issue from the last years, but I can't find it anymore; sorry if this issue is a duplicate.

Now one can create a team without a name. We should make the Name field required. 

This is not only confusing, but also can cause bugs, e.g.:.
 * URL.
 * URL.


!joxi_screenshot_1488201548078

.
#rails-girls-summer-of-code/rgsoc-teams\issue-210804888\comment-283317045.json . 
@mkalininait this is pretty much ready from my side. The troubleshooting section under “Teams” still says work in progress, but I don't have an overview of the stuff that should go in there. Probably an issue with roles and adding members to a team? I think it could definitely be cleaned up to look a bit better, but the content is mostly done. Would you mind reviewing it when you have some time, or do you just want me to merge it?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210804888\comment-284381799.json . 
@mkalininait are you able to review this today, or should I go ahead and merge it?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210804888\comment-284558558.json . 
Hey @alicetragedy Thanks for this job. The PR looks good to me. 
I'd add one minor change: inline-code and inline-code properties in the inline-code class. It's not necessarily the subject of this PR, but since you've added this class... :) Otherwise I can add it later!

Re further improvements: I agree that we can continue working on the help pages (there is a room for improvements), but it definitely shouldn't stop us from merging this PR.
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210804888\comment-284673621.json . 
I agree on the styles needing to be cleaned up a bit — I will merge this for now, and we can improve them further in the future. There is definitely room for improvements :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210804888\issue-210804888.json . 
Closes URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210804888\pr-108342743.json . 
Closes URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210919786\comment-283340781.json . 
awesome, thanks @carpodaster. Looks good on my end :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210919786\comment-284393020.json . 
Hey @carpodaster @alicetragedy I think this issue is not resolved: URL.
I see all the changes @carpodaster made (on the team's add/edit form, list of teams), but I still see the empty line here: inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210919786\comment-284396907.json . 
it looks like the rating shows the “Application name”. Just a guess, maybe this is part of the application data, meaning that the team name is frozen when the application is submitted and the “Application name” is the submitted team name (aka, in our case, nothing). 

A quick fix would be to change the link to inline-code in the index, and probably to change that inline-code in the show view as well, so it doesn't throw an error. I can submit a PR in a sec :grimacing_face: 

cc @carpodaster .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210919786\comment-284399059.json . 
I've just examined the data. The PR did indeed fix the bug. What we see now is an application whose team was deleted. :face_with_rolling_eyes:  Shall we take this to a new issue?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210919786\issue-210919786.json . 
Closes #678

* inline-code was explicitely allowed to be blank before; I don't know and I can't see why.
* Makes inline-code a required attribute
* Adds a bogus name to all existing teams w/o a proper team name.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-210919786\pr-108424808.json . 
Closes #678

* inline-code was explicitely allowed to be blank before; I don't know and I can't see why.
* Makes inline-code a required attribute
* Adds a bogus name to all existing teams w/o a proper team name.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211103730\comment-283472393.json . 
Thanks @daiyi. A fix is underway.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211103730\issue-211103730.json . 
To reproduce: add a coach to a team. their github username must be capitalised to match, or else the app saves it as blank.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211211543\issue-211211543.json . 
Fixes #682 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211211543\pr-108630965.json . 
Fixes #682 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\comment-285674786.json . 
Hi @ramonh Could you please take a look at the tests I wrote? I'd be very thankful!

Note: Some a/the articles might be missing; English is hard! :D.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\comment-285676988.json . 
Sure thing, @mkalininait! Will do this today.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\comment-286398473.json . 
@mkalininait I have a longish train train coming up today. I'll look into it later!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\comment-286828627.json . 
Hey @mkalininait, I just added a few minor stylistic notes, but it looks great otherwise!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\comment-287344708.json . 
@carpodaster Carsten, are you planning to look at this PR or should we just merge it? No pressure!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\comment-291620895.json . 
@carpodaster @ramonh Thanks for the review. I made the changes and tested them. Works fine. 
I just didn't understand where Carsten suggested the additional lines. It looks like they are in place already.

Can we merge this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\comment-291641738.json . 
@mkalininait I meant there were extra lined that should be removed. But it doesn't matter too much, it's just :nail_polish:  LGTM!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\comment-291645486.json . 
@carpodaster Ah, I see :) I thought those extra lines would improve code readability. Will keep this in mind for future PRs!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\issue-211374787.json . 
This PR should fix this bug: URL.

I didn't write the tests yet, because I don't know how to do it yet, and then I got sick. I decided to make this PR in case someone wants to add the tests and release the bugfix. Otherwise I'll add them to this PR after I recover.

Here is the logic of permissions for the tests:.

**email address is hidden:**
 * allow: admin, user's supervisor in current season (must be also a confirmed user)
 * disallow: not admin, not user's supervisor in current season

**email address is not hidden:**
 * allow: admin, confirmed user, user him/herself*
 * disallow: not admin, not confirmed user, not user him/herself

_\* A user sees his/her email address only if it's not hidden, because it looks like a good UX for me: a user can change the "Hide email" option and see the changes on his/her profile._

@carpodaster I was not sure if I should add something to the users controller inline-code It works without adding anything there, too :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-108747327.json . 
This PR should fix this bug: URL.

I didn't write the tests yet, because I don't know how to do it yet, and then I got sick. I decided to make this PR in case someone wants to add the tests and release the bugfix. Otherwise I'll add them to this PR after I recover.

Here is the logic of permissions for the tests:.

**email address is hidden:**
 * allow: admin, user's supervisor in current season (must be also a confirmed user)
 * disallow: not admin, not user's supervisor in current season

**email address is not hidden:**
 * allow: admin, confirmed user, user him/herself*
 * disallow: not admin, not confirmed user, not user him/herself

_\* A user sees his/her email address only if it's not hidden, because it looks like a good UX for me: a user can change the "Hide email" option and see the changes on his/her profile._

@carpodaster I was not sure if I should add something to the users controller inline-code It works without adding anything there, too :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-106238441.json . 
Looks great! Minor stylistic note here: You can use double quote markss around a single quote to avoid having to escape the single quote mark:.

inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-106239358.json . 
Maybe here it would be good to clarify that the admin does not supervise the user? What do you think? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-106640213.json . 
In all other specs we use single quotes for inline-code and inline-code. If I change my single quotes to double quotes, it will look inconsistent. Is it ok? Or should I fix the quotes everywhere? (seems to be a nightmare :smiling_face_with_open_mouth: ) 
Idk, what do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-106641639.json . 
Then I kinda need to add it to every context "when a [roleX], but not a [roleY], [conditionZ]"?
e.g. "when a confirmed user, but not an admin", "when user's supervisor in current season (confirmed), but not an admin", "when an admin, but may be unconfirmed" etc.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-108797097.json . 
Since we are only interested if they are a supervisor in at least one team, the entire method body can be rewritten as:.

block-code.

(Disclaimer: written from memory, not tested)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-108797482.json . 
(We don't use single or double quotes consistently, so don't bother changing it everywhere. I, too, prefer single quotes but I'll also switch to double quotes when I have to resort to escape sequences)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-108797626.json . 
(additional new line)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-108797642.json . 
(additional new line)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-108798212.json . 
Since we always require the user to be confirmed, how about:.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-109653480.json . 
Makes sense. Nor sure why I didn't notice this :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-109654455.json . 
This looks much cooler :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-109659605.json . 
Hm, good point. In those contexts, it seems like overkill.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211374787\pr-comment-109659897.json . 
Good point! I didn't think of consistency, but rather that, as Carsten said, to avoid escaping quotes .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211390867\comment-283653566.json . 
Oops, the bug has been already added. Sorry, my bad.

URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211390867\issue-211390867.json . 
One of our students couldn't add a coach to her team. She added the github handle in lowercase (e.g, inline-code), while in GitHub and in the Teams app DB that coach's github handle was written with uppercase letters (e.g., inline-code).

As a result, the Teams app created an empty coach role in the team.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-211436603\comment-283785580.json . 
Ironically, the howto illustrates uploading the custom error page to … wait for it … Amazon S3 :face_with_tears_of_joy: It wouldn't have done us any good during the recent outage.

I wouldn't bother. Sure, if anyone wants to get their hands dirty with this (dirty is meant in a positive fashion I might add), we can upload a custom one. The application error one is probably what we need, I don't recall having switched on maintenance mode for the Teams App over the course of the last years. Otoh, it's indeed not very pressing and just a minor issue and I wouldn't like to have this open linger for months on end just in case someone wants to grab it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211436603\comment-284381616.json . 
@carpodaster it seems like during the outage Heroku was showing a “maintenance” page (which is a bit confusing). I understand your reasons, so we can close this issue if no one wants to pick up this task and work on it. I know how you feel about long issue lists ;)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211436603\comment-293696463.json . 


Maybe they changed their plattform during the S3 outage to show a Heroku-provided maintenance page since they knew no custom S3 error pages would load?

inline-code 

I'm voting to close this. Is that ok with you, @alicetragedy ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211436603\comment-293717651.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-211436603\issue-211436603.json . 
Heroku gives you the possibility to create custom error and maintenance pages. While I've never done that, maybe we could look into doing it? With the recent AWS outage, the site was down for a while and showed a page that was not particularly informative. We also got a tweet suggesting a better / more informative page.
I don't think this is particularly pressing, but does anyone see value in doing it? Would love for everyone's thoughts on this. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212696107\comment-285006952.json . 
Hi @rehrumesh – what do you mean by »proposal«?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212696107\comment-285007359.json . 
I meant student application. Sorry for the misunderstanding.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212696107\comment-285007633.json . 
@carpodaster I rephrased the issue title.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212696107\comment-285007968.json . 
@rehrumesh ah, makes sense. Thanks for clearing this up :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212696107\issue-212696107.json . 
It will be really great to have this feature so that the mentors get real time updates whenever a student uploads a proposal to the teams app.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-285350539.json . 
Somewhat unrelated, but something that came to mind:.
if we have applications without a team (i.e. where the team has been deleted because, for example, they wanted to submit a new application), do we show this “old” application to mentors? this could potentially cause an error or be an issue (also, no need for them to review something if it's “void” by default).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-285352177.json . 
Also another thing that came to mind:.
Would it make sense to show the mentor their comments in the table as well OR to offer sign-off or fav directly in the show view? Here's my thinking behind this:.

I am a mentor and have a shit-ton of applications because my project is the best. I look at the applications and make notes to myself in the appropriate field. However, by the time I'm at the bottom of the list, I honestly can't remember which teams were my favourites, so I have to click through every single application again, look at my comment, then switch back to the index view, and click the fav button.


Anyway, these are more ideas thrown out there than anything else (and I think it works well without). It's just smtg I realised after looking at the (long) list of applications in the screenshots. Judging by our current numbers, it's not quite as bad.. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-285352353.json . 
@alicetragedy it could be that they're already filtered out, if I read this line of code correctly. Maybe @klappradla can verify?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-285354538.json . 
Very nice feature. :ice_cream: :cookie: :party_popper: . 
One question: it looks like a mentor can fav an application without signing it off. Is it worthwhile to require the signing off before enabling fav-ing?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-285354614.json . 
Looks fantastic to me! :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-285355412.json . 


Hah, yes. I've noticed that after I've uploaded the screenies. I wouldn't enforce it and rely on some common sense (famous last words… :upside-down_face:). Not having signed-off an application will rule it out anyway. Otoh, it's not too difficult to implement, but I won't have time for that until tomorrow evening. If we want that extra check, we should probably still merge first and then add it later. Would you like to send a PR for it? :winking_face: 

Related: you could also fav *all* your teams which doesn't make any sense at all.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-285454118.json . 
For what you wrote concerning **deleted** / **non-existing** teams @alicetragedy: @carpodaster is right -> putting together the inline-code object requires some values originated by the corresponding team.
So if no inline-code, no inline-code :heavy_check_mark:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-285481996.json . 
@klappradla I made the requested changes. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-285791486.json . 
Looks really cool, I've checked on production (didn't test though).

I also like the comments to this PR.
I think it makes a lot of sense to: 

1. Implement the undo feature (people always want to undo! :smiling_face_with_open_mouth_and_smiling_eyes:  )
1. Show comments in the table (as @alicetragedy suggested)
1. Also, I'd love to see mentors' comments during the application rating process (application page, application table).
  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-286042498.json . 
@mkalininait thank you for your feedback. I will try to find time to add the undo and comments-in-index view feature tonight.

I'm very much against implementing item no. 3 this year: we've already stated that this would be a comment only for the eyes of the mentor. We would be violating this privacy promise.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-286044979.json . 
I feel the same way about item nr. 3 — I don't like the idea of making something “public” which we specifically mark as private. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-286356710.json . 
@alicetragedy @carpodaster I agree with you, but maybe we can consider making those comments 'public' (available to the reviewers) next year. Let's see what lessons we will learn from this year's selection process.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-286364385.json . 
My personal vote would be: make comments public, and let a mentor have their own notepad to make notes.
This is part of my ongoing quest to let every web app in the world give you a space to make notes. :donquichote: :windmills:  :face_with_tears_of_joy:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\comment-286365249.json . 
haha :) yeah I actually think giving the mentor the possibility to make personal notes as they go through the applications (especially if those notes are then visible for them in the application list/overview in the mentor dashboard, see URL quite useful. 
Also see the value in them adding their comments to the selection committee about why they're faving teams, so having both would somehow make sense maybe..
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\issue-212885309.json . 
Fixes #364 – see below for screenies.

Feedback about the confirmation dialogues' text blurb most welcome.

Right now the sign-off and the fav is a one-way ticket. One cannot undo this. If an undo-function is desired, I suggest we still merge this first so that mentors can do their thing already.

The feature is currently deployed on staging.

**General overview**
!1
----

**Confirm blurb sign-off**
!confirm_signoff
----

**Confirm blurb fav**
!confirm_fav
----
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\pr-109805497.json . 
Fixes #364 – see below for screenies.

Feedback about the confirmation dialogues' text blurb most welcome.

Right now the sign-off and the fav is a one-way ticket. One cannot undo this. If an undo-function is desired, I suggest we still merge this first so that mentors can do their thing already.

The feature is currently deployed on staging.

**General overview**
!1
----

**Confirm blurb sign-off**
!confirm_signoff
----

**Confirm blurb fav**
!confirm_fav
----
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\pr-comment-105160922.json . 
maybe we could add something that lets people know that it can't be undone, like “This cannot be undone. Proceed?”.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\pr-comment-105161102.json . 
same as with the mentor sign-off, adding a line about it not being undo-able.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\pr-comment-105162415.json . 
Good point! Done.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\pr-comment-105162436.json . 
Good point! Done.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\pr-comment-105164482.json . 
We have two kind of 'comments' in the project: the polymorphic comments, like for projects etc, and the 'notes', like the notes in the supervisor dashboard. I think this is the note-kind, right? In that case, I'd prefer to reserve the term comment for the 'polymorphic' comments. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\pr-comment-105165176.json . 
Yes, it's just a personal note for the mentor. It's already in production and this PR doesn't target the commenting function. I'm not too invested in whether it's gonna be note or comment. Comment has the bonus of riding on already existing logic.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\pr-comment-105251991.json . 
Not sure about how smart Rails is about having already queried for the inline-code. To play save, I'd suggest to rather use
block-code.
and memorize it before here, since this won't need an additional query.

Same for the flash in inline-code of course.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-212885309\pr-comment-105268596.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213044661\comment-285358300.json . 
@F3PiX I really wouldn't handle the "all teams fav'ed" case. I can see a lot of checks and flash notifications for very little gain.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213044661\comment-285375347.json . 
Aha, okay. I just copied that from the comments without thinking about it. :see-no-evil_monkey: Thanks for the warning. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-213044661\issue-213044661.json . 
Follow up for #688 
- mentor can fav an application that is not signed off
- ~mentor can fav all her teams.~ 




.
#rails-girls-summer-of-code/rgsoc-teams\issue-213186030\comment-285506835.json . 
@mkalininait it's a deleted team again :crying_face:  I've pushed a changed that should fix it. Can you verify it once it's deployed?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213186030\comment-285513399.json . 
@carpodaster It works now, thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213186030\issue-213186030.json . 
URL.

 * Exporters::Applications#applications_2017
 * Exporters::Applications#applications_current

Error 500.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\comment-285954297.json . 
Hi Anagha! Congrats with your first PR in the teams app! Thanks!
Before your PR is ready for review, the merge conflict should be solved. 

It looks like the master branch of your own fork was not in sync with the upstream master. (GitHub tells you so when it say that your master branch is 'x commits' behind . 
 
<img width="632" alt="screen shot 2017-03-12 at 16 45 06" src="URL.

I would suggest: save the changes you made yourself in a separate branch (not master). On your computer. 
Then, get the changes from upstream in your computer : inline-code
Then, get your fork (on GitHub) in sync by pushing the recent changes: inline-code
And only then, push the changes of your new branch to your own fork: inline-code
After that, you should be able to open a PR in upstream, and compare it with your own fork. And there should not be a merge conflict. 
Let me know if you need help or if you have questions. 

(@carpmeister ping)    

.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\comment-286738498.json . 
I forked a fresh copy and made the changes to fix the issue. I will send a new PR. Should I send it to some other branch?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\comment-287402962.json . 
Hi Anagha, Thanks for the update. 
Next time, can you reference the new PR in your closing message please? 
We usually do something like this:.
"Closing; moved to #694"  (and in the new PR, in the future please add a meaningful commit message, telling again about the changes you made)
When you reference the new PR like that^^, GitHub will add a link for you in the new PR.
I just realise by reviewing your pr, how many little rules are involved before your first contributions. No worries, it gets better with each PR! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\issue-213605242.json . 
Added tech fields in users profile so that users can add their interests and expertise once they are registering.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-110299062.json . 
Added tech fields in users profile so that users can add their interests and expertise once they are registering.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105855301.json . 
Please do not change the Ruby version.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105855473.json . 
Since there are no changes to the gems used, it is best to leave inline-code untouched.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105855525.json . 
Please remove this new empty line.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105855540.json . 
Please remove this new empty line.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105855648.json . 
Indentation error.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105855660.json . 
Please remove this new empty line.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105855669.json . 
Please remove this new empty line.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105855691.json . 
Please remove this new empty line.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105855717.json . 
Please remove these new empty lines.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105855756.json . 
Please remove thesenew empty lines.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105856197.json . 
inline-code and inline-code are not the best choices for a name. Can you think of a more descriptive, intention-revealing one?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105856481.json . 
This is not about fixing #612 and shouldn't be in this PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105856734.json . 
This is not about fixing #612 and shouldn't be in this PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-105856766.json . 
This is not about fixing #612 and shouldn't be in this PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-106111548.json . 
I didn't add that or might be added by mistake.Should I delete that?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-106112415.json . 
All the extra's are in your PR because of the problem with the syncing. As Carsten suggested, it is easier to close this PR, update your fork and make the changes again. Then this extra additions will not be in your PR.
 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-106113655.json . 
This is present in the cloned repository too. should I remove that?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213605242\pr-comment-106146034.json . 
Okie. Will send another PR soon.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213887731\comment-286396990.json . 
I didn't test, but the screenshot looks super cool to me :smiling_face_with_heart-shaped_eyes:  I'd just merge it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213887731\comment-286397802.json . 
A PF Connaiseuse, maybe? ;) 

!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213887731\comment-286417528.json . 
@carpodaster Supi, works on prod!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-213887731\issue-213887731.json . 
Another late addition to #688.

It ain't pretty but I have neither the time nor an idea how to make it look better. Feel free to grab this branch and add some styling.

!bildschirmfoto 2017-03-13 um 21 17 14

.
#rails-girls-summer-of-code/rgsoc-teams\issue-213887731\pr-110490874.json . 
Another late addition to #688.

It ain't pretty but I have neither the time nor an idea how to make it look better. Feel free to grab this branch and add some styling.

!bildschirmfoto 2017-03-13 um 21 17 14

.
#rails-girls-summer-of-code/rgsoc-teams\issue-214001492\comment-286356622.json . 
The link's target is based on the user's role. It was an explicit feature request and was added in 144c4487.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214001492\comment-286358159.json . 
Thank you for the link @carpodaster 
This logic still looks a bit non-transparent to me. As a user, I'd expect to return back to the list where I came from. Especially because those two lists contain very different information about the projects.
Maybe one day we can make breadcrumbs everywhere.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214001492\comment-286359061.json . 
@mkalininait I totally agree, Maria. I prefer to have all admin-related stuff in the admin namespace and ideally have every role see the same thing – or don't allow access altogether. We've had this confuse us before.

@alicetragedy wdyt?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214001492\comment-286360509.json . 
@carpodaster @mkalininait I'm ok with making this change. At the time, we didn't have a place from where orgas could access all their different links, and during the project reviewing phase, it was easiest to deal with getting back to the main project page that way :)
Also +1 on the breadcrumbs.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214001492\comment-286361144.json . 
You are absolutely right, @alicetragedy  – we didn't have our shiny dashboards at that time. I've reverted the change in 7afdbd78559f0629334579580284fbdc65f1b827 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214001492\issue-214001492.json . 
1. Open a project from the list inline-code
2. The link 'All projects' leads to inline-code (which is unavailable for everyone but the organizers)

!joxi_screenshot_1489480426269

.
#rails-girls-summer-of-code/rgsoc-teams\issue-214389624\comment-287406434.json . 
Hi Anagha!
Getting close!! 
There seems to be a problem with your db/schema.rb still.
- It looks to me you still use the schema from an earlier migration. The only changes between the versions of a db/schema.rb are allowed to be made via a migration file. Exactly like you do with the two files that removes the unwanted columns.
However, in the db/schema.rb the new column names are present, while we do not have the migration file in the PR. 
- I don't know how much you know already about the database, schema and migrations in Rails, so let's see how we can solve this. Just checking: did you perform a rollback of previous migrations? (If you don't know what I am talking about, the answer is no ;-)  ) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-214389624\issue-214389624.json . 
Edit by Maud: closes #612
Added two fields to the user profile; Expertise and Interests.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214389624\pr-110844245.json . 
Edit by Maud: closes #612
Added two fields to the user profile; Expertise and Interests.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-287280403.json . 
@mkalininait Hello, we the team Bundledore would like to work on this issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-287398056.json . 
Hey @Anagha22, sounds like a good idea. Please ping me if you need details on the requirements.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-288118778.json . 
Hi @mkalininait I have added a filter with a radio button for "current season" and added filters like 
"Applied " and  "Selected".Applied lists out the teams in current season and selected lists out none. Is this the changes that you were expecting? Please give me your suggestions.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-288199911.json . 
@Anagha22 Could you please upload a screenshot here in case it's possible to make one?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-288727518.json . 
Hey @mkalininait  I have attached the screenshot here. Please help me with this.
!user_info

.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-289012159.json . 
Hi @Anagha22 
Thank you! It looks good to me. One suggestion: is it possible to make a checkbox instead of the radiobutton for the season filter?

I can't judge if your filters work correctly or not without seeing the code and testing it. 
I'd say that the "Applied" filter should list **all** teams that applied from **all** seasons. If the "Current season" filter is on, then, of course, we should see only teams from the current season. Same applies to the "Selected" filter. 

Looking forward to seeing your PR!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-289037824.json . 
@mkalininait Yeah, I will work on that and will send the PR as soon as possible :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-289078758.json . 
@Anagha22 Thank you, no rush! :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-305623669.json . 
Hi @Anagha22 Do you still want to send your PR or should we take this issue over?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-306228748.json . 
Looking at the goal: 


Wouldn't it make more sense to add the filter to the Mailer view (or even the Exporters)?
If that would solve the problem, I'd vote for that. (Because I am not a big fan of stapling filters in the view. I consider adding a third filter a 'design smell', and a sign that we should rethink the filtering options.)
AFAIK you can't DO anything with the filtered students in the ~students/info~ inline-code screen, can you? What do you have to do with the filter results in order to actually emailing them?  
@mkalininait  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-306774835.json . 
@F3PiX 


You probably mean inline-code, right? You can't do anything directly in the Teams App. What we would do is: a) copy email addresses to send emails from HelpScout (small groups, e.g. accepted teams); b) copy email addresses to send emails from MailChimp (large groups, e.g. all students who applied in the current season); c) copy/print addresses to send swag (accepted teams); d) copy a view and paste into a google spreadsheet for any other purposes.



We can make an export (or multiple exports) for this, of course. But then the inline-code page will stay useless.
What is the Mailer view?





.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-306775637.json . 
Oh, btw, I've just discovered another page inline-code, and it looks pretty useless, too.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-306779829.json . 
Yes, users/info. 


How do you copy them now? One by one? 



.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-306938098.json . 
@F3PiX 
There are a few use cases:.
1) We need contacts of all students who applied in the current season. What I did this year:.
 - I got the export Teams#current; it gives you contacts of all teams ever existed;
 - I got the export Applications#current; it gives you all applications of the current season, but without contacts;
 - I wrote a simple script, that filters the list of teams based on the team names from the list of applications.
2) We need contacts of students who have been accepted:.
 - Theoretically you can use the export Users#current_students, but we usually need their contacts **before** they are marked as accepted in the teams app;
 - Thus we take them one by one from the user profiles;
 - Having them in the applications export (here) would help.
3) Then we also need contacts of rejected teams, but it's relatively easy to make from the list of all students who applied minus all students who were accepted. Although it's still a manual work.

All contacts are then stored in Google Spreadsheets.

I may be missing something (want to sleeeep), but hopefully nothing important.

It may look like the time we spent on fetching the data this year is comparable to the time we could spend writing a new data export or something :D 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-307231624.json . 
a) So, you don't use the mailing functionality? (.../mailings/new). Is anybody using that at all? 
 
b) Re use case 1) You happy when we start with adding a filter to the Exporter with the Applications#current including the email addresses? (Or what do you need as 'contacts'?) 

c) Re: use case 2) and 3) : Are they relevant _before_ the start of the current season?


.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-307382107.json . 
@F3PiX 

a) OMG, I didn't even know about this feature :see-no-evil_monkey:  It looks useful, but I never heard of anyone in the team using it in 2016-2017. What about you @alicetragedy @anikalindtner ?

b) I think that having names and emails of students and coaches in the export of current applications would help a lot. It would actually solve the use cases 2) and 3) as well.

**NOTE 1:** We actually use this export of applications -> URL the "Download as CSV" button at the bottom of the page. I don't know if this is a part of what you call the Exporter or not.

**NOTE 2:** Not entirely related, but I want to mention it here, too. There is a major flaw in how we save data about an application when it is submitted. We have data from two students, but we don't save their names (or ids), thus we don't know who is Student 1 and who is Student 2 in an application. Thus, until we fix this bug, we can show student names and emails in the table/export of applications, but we won't know, who is Student 1 and who is Student 2.

c) Yep, they are. We have to contact the students whom we would like to select *before* they are selected. But the solution mentioned in b) will help us to do it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-307396036.json . 
@mkalininait 
:-) There are many jewels hidden in the teams app.
I am looking for the Smallest Change with Biggest Impact. Because the season starts shortly. So let's take it step by step. 

Two more questions:.
1.
As I understand it now, if you can download an csv with 
- [ ] names and email addresses of the coaches
- [ ] names and email addresses of  all the students who applied: excepted, volunteers and not excepted

It would give you a basic 'contacts' spreadsheet, and you can import that in the different  Spreadsheets and apps. 
Right?

2.
Can you please test the output of; inline-code, -> inline-code 
You said before: 
 > I got the export Teams#current; it gives you contacts of _all teams ever existed_;

That is not what the code _intends_ to do.
It intends to give the teams in the 2017 season with names and email addresses of all the members.
Can you check this in the output please? 
(3)
I also would like to know if it returns the accepted teams only, or the not accepted teams as well.

I think we are already close to a solution. I wouldn't be surprised if we just need some finetuning in the existing filters. :person_raising_both_hands_in_celebration: 
In next iterations we can work on the overall workflow. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-307435034.json . 


I used it a few times this year already (to ask past participants what they are up to and to send reminders about the project submission deadlines to past mentors); we also used it quite a bit in 2016: reminders regarding all the feedback forms, an info email about the video, and info about the RGSoC celebration events around the world. 

So, to make a long story short I think it's a very useful feature during the summer, or to communicate specifically with a certain group of people (i.e. sending feedback forms)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-307435927.json . 
@alicetragedy Cool! And it is only orga's who should use the mailer, right? Or do you want to have it available for supervisors, for instance? And maybe other non-orga users?
If it is only for orga's, it would make sense to move it to the orga namespace.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-307437173.json . 
@F3PiX I don't think it makes sense for anyone other than orgas to use it in its current state (the email comes from our orga email address, which is where all replies to the email will go). 
In order for it to be useful for supervisors, for example to get in touch with their own team, quite a lot has to happen on the filter side of things — and all mails sent are visible to everyone, which makes “private” communication difficult. Fixing all of that (to basically “reinvent email”) would I think be too much hassle, for a use case we don't really have. I hope this answers your question properly!

So yeah, I agree that it would make sense to move it to the orga namespace.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-307929748.json . 
@F3PiX 

2\) Regarding inline-code. I've tested it again. You are right, I was mistaken that it gives you all teams ever existed, BUT it looks like it gives you all teams of the current season **regardless** if they applied or not. At least I think this is how it works. I see 294 teams in the exported list, while we got only ~189 applications this year. Maybe there were 294 application drafts?

1\) Almost. Would it be one csv? 


Of the accepted teams (sponsored and volunteer).



Do you mean *accepted* instead of *excepted*? We need all the students who: a) applied, b) have been accepted (sponsored, volunteer separately), c) have been rejected (= not accepted).

One comment: if this data comes separately from the application data, we will have to make a list of contacts of accepted teams manually. Use case: we export the Applications Table, we import it in Google Docs, we run a complicated selection process, select top-20 teams and then run interviews with them. To run these interviews we need their contacts. We mark these teams as Accepted after the interviews, if everything goes well.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-307940782.json . 
LOL yes, accepted, not excepted, sorry.
Thanks for testing!! 
It makes sense to have an exporter for the current_teams who actually applied. And also add  their 'status'.
But I am getting confused. Isn't the application phase over? I so understand that the Exporters are not fully optimized yet for all the use cases, but let's take it step by step. I am looking to make all of this actionable. 
I _expected_ that a 'general contacts sheet' for the _accepted_ teams would be the most helpful overall, but it is not?  
If not, could you pinpoint one use case that will help you the most in the weeks upto the start of the season?  And then we can take it from there. 
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-308241930.json . 
@F3PiX 


+1



Oh, it looks like I confused you. The application and selection phases are over indeed. We don't need any exports with email addresses this year anymore, because we already have them. But we will **definitely** need them next year. What we still need this year is the list of *postal* addresses of the accepted teams. I think the best would be having the list of all team members (incl. coaches, mentors and supervisors), but with their role in the table (so that we could filter it by role). 
Maybe we could make a brand new export called contacts#current where we list team members of all teams which applied this year with their team name, status, role, email, postal address and t-shirt size? Basically what we have in inline-code, but in the form of exported csv and filtered by the current season. WDYT @alicetragedy ?



Yes, probably. It doesn't cover only one use case (as far as I can tell): when we need contacts of students whom we want to interview during the selection phase (what I mentioned in my previous comment). We don't have this issue this year anymore, but we will have it next year.

Does it make sense?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\comment-308263398.json . 
Well, let's focus on this year first. (I want to start working on the conferences in time for this season, so I don't want to take on things for next year right now.) If @alicetragedy agrees, we'll go for the "swag exporter" first.

  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214399864\issue-214399864.json . 
inline-code

Add the third filter by season: either a checkbox "In current season" or radiobuttons for all ever existed seasons.

Add the option "Applied" to the "Type" filter (it should allow to see only the teams which applied (have an associated application), doesn't matter if they were selected or not). I'd actually make 5 options there: All, Applied, Selected, Sponsored and Volunteer.

Motivation: we want to send an email to all students who applied this year about the crowdfunding campaign.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-287223533.json . 
Looks great to me! 
I was thinking about flagging remote. In case it helps: We do geolocation, don't we? So we have coordinates? In that case something like a distance less than x would help with NYC and Brooklyn.
Else, maybe geonames can help make the matching less fuzzy. But, this is only trying to be helpful, if you would like to make the matches more precise. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-287285922.json . 
Oh hell @F3PiX you're totally right! I completely forgot I added those coordinate fields :see-no-evil_monkey:  Thanx a ton for the reminder :person_with_folded_hands: 

I should definitely use them for this - will close this one until I updated the matching accordingly.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-287301292.json . 
Thank you @klappradla! Just curious: How many applications have been flagged when you've run the task locally? Just to get a rough idea of what to expect on prod.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-287301826.json . 
I cannot remember @mkalininait, but I can look it up once I'm on my home machine again.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-287484152.json . 
So thanx to @F3PiX's tip, I changed the uber fuzzy city matcher to use lat-long coordinates instead. I put **70km** as a threshold for what I would consider _"remote"_ - open for suggestions for a better value here :waving_hand_sign: 

Another thing about the inline-code flag: I skipped checking for the distance between the two locations if there's location data missing and respectively did not set the flag. Since this is coming from Google, it's definitely not the students fault not having it provided. It's **93** applications where this is the case. These are most probably cases where students could not find their location via autocomplete.

With this setup it flags **22** applications @mkalininait.

Would be thankful for suggestions on how to handle all these thresholds and cases best. Also for the regex I'm using to find out if people not identifying as women applied:.
block-code.
am I missing something obvious here? inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-288054886.json . 
@klappradla Could you please clarify what you mean by "location data missing"? It means that a location is entered but it's not a Google location with lat-long coordinates, right? Do you think it makes sense to use the distance approach for the applications with two Google locations and the name matching approach (which you implemented before) for other applications (since we have so many of them)?



I don't have a strong opinion about this. I'd say that this should be a distance, which one of the students can make on a **daily** basis, something like 1h of travel one way, because we expect our students to work together. The distance/traveling time ratio obviously depends on where people live, which kind of transportation they use, how busy the traffic is etc. I looked a little bit at this ratio for Delhi and Frankfurt (just two random ish places) and I'd probably reduce the maximum distance to 40-50km or so. Then again, it's just an opinion. What do you think @alicetragedy?



Yeah, inline-code is probably a possible option too, I'd add it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-288063426.json . 
I don't know from the top of my head if **all location data** would be missing, have to look at the production data again tonight. If only lat-lng are missing then falling back to the text-maching would be indeed a good idea.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-288090881.json . 
It sounds like a quite complicated setup to use the location data, with the fuzzy text matching as a back up. Wouldn't it be cleaner to solve the location data where it is entered?  
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-288560313.json . 
Ok, I ran a script on production to fetch the missing inline-code and inline-code values. So when I run this task here on the updated production data, it flags **29** applications. I think that' fine. Would be good to merge...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-288637824.json . 
@klappradla the code looks good to me!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-289014388.json . 
Thank you Max @klappradla ! Should we now run this task on the production database to flag the applications? Is there anything we should know/prepare before running this task? And could you run it? (I have no idea how to do it yet).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-289015340.json . 
No, the _preparation_ would have been the geo data update and I already ran them in production. I can run the task in production now if you want, the command is approx. like this btw:.
block-code.
Do you want me to run it right away?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-289023732.json . 
@klappradla yes please! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-289025102.json . 
Ok, ran it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\comment-289026517.json . 
Great! Thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\issue-214854183.json . 
Hey @mkalininait, this is the script you described in selection#47. Due to the _"freeness"_ of the application fields, the matching is rather _"fuzzy"_. It will for instance flag a team as inline-code if the students set these two locations:.
block-code.
The best trade off for me was to match the first and last word, no matter now they are separated. So some false matches will still be in.

Same goes for gender.

I ran it locally on a dump on the current production DB and found the results quite ok. It for instance also flags teams without locations as inline-code - which is fine in my opinion.

Codewise: I know the usage of instance vars within the inline-code looks kind of nasty for people having seen the light of Elixir. But I think it's still an okish approach for a service object only exposing a single method to the outside.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\pr-111177021.json . 
Hey @mkalininait, this is the script you described in selection#47. Due to the _"freeness"_ of the application fields, the matching is rather _"fuzzy"_. It will for instance flag a team as inline-code if the students set these two locations:.
block-code.
The best trade off for me was to match the first and last word, no matter now they are separated. So some false matches will still be in.

Same goes for gender.

I ran it locally on a dump on the current production DB and found the results quite ok. It for instance also flags teams without locations as inline-code - which is fine in my opinion.

Codewise: I know the usage of instance vars within the inline-code looks kind of nasty for people having seen the light of Elixir. But I think it's still an okish approach for a service object only exposing a single method to the outside.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\pr-comment-107178910.json . 
Can you write the regex like: inline-code ? Or would it not be the same?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214854183\pr-comment-107258279.json . 
Yes, could be - looks way cleaner actually :party_popper: 
I'm not a regex-ninja, just quickly hacked this one together...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214867279\comment-287225781.json . 
Hm, wanna do this differently - closing this one again.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214867279\comment-287280391.json . 
No problem, just ping me whenever you need a review/feedback @klappradla. :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214867279\comment-287488924.json . 
ping -> @alicetragedy 

So I first used a generator to create **all the favicons** (based on the .svg file from the design repo). However, after reading a bit more upon favicons, I decided to instead keep it basic. Covering all platforms is barely possible and also not really what I'd consider a useful feature for the teams app.

Having a favicon available in most browsers is an okish goal I'd say, so I skipped everything related to Windows tiles and what not. _"Decent"_ browsers like Chrome use the inline-code one, so there's also a inline-code version for all those retina and <num>k displays - since I thought they'd be quite common.

The reason why I moved the files in inline-code rather then having them in public: *"control"*. It's even recommended like this in the Rails docs.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-214867279\comment-287491327.json . 
One little note: make sure to have a favicon.ico in the root folder. Or a route that rewrites that to the real location. Otherwise your webserver will serve a 404 for some MS IE versions that have that check hardcoded (they don't look into the html for the correct location :( )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214867279\comment-287491868.json . 
Bummer, but thanx @bitboxer - I thought they'd update their values once it's specified explicitly... But anyways, I'll just copy a fallback one over.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214867279\comment-287573932.json . 
So after realizing I also mixed up branch names and issue numbers, I think it's simply the best to close this for good and start with a fresh one and maybe more sleep. Sorry for the hassles :see-no-evil_monkey:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214867279\issue-214867279.json . 
This adds all the favicons.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-214867279\pr-111186010.json . 
This adds all the favicons.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215221174\comment-288014801.json . 
Anything to add upon this? Should I use more favicons or update to the rainbow one? If not, I'd merge it rather soon, keeping it up to date while lingering around is a bit of unnecessary work :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215221174\comment-288025269.json . 
No worries, didn't want to stress anyone. Just thought it does not really make sense to have it lying around if there's nothing to add. Will do a merge party later today :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215221174\comment-288066592.json . 
@klappradla awweeesooomme 

!awesome.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215221174\issue-215221174.json . 
3rd approach on an accurate PR trying to solve #655 .

I generated the favicon based on the inline-code icon from the design repo. It's in my opinion out of scope for the Teams App trying to support *all* use cases for favicons (e.g. Windows Tiles, Android shortcuts, what not) while staying maintainable. However, since _"normal"_ browsers use the inline-code version and lots of people have retina displays, I at added a inline-code one, since this already seems to be a standard use case.

Thanx to Bodo's hint, I also added a inline-code version to the root (in inline-code) in order to allow old browsers that don't look at the HTML tags to get the favicon as well.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215221174\pr-111425334.json . 
3rd approach on an accurate PR trying to solve #655 .

I generated the favicon based on the inline-code icon from the design repo. It's in my opinion out of scope for the Teams App trying to support *all* use cases for favicons (e.g. Windows Tiles, Android shortcuts, what not) while staying maintainable. However, since _"normal"_ browsers use the inline-code version and lots of people have retina displays, I at added a inline-code one, since this already seems to be a standard use case.

Thanx to Bodo's hint, I also added a inline-code version to the root (in inline-code) in order to allow old browsers that don't look at the HTML tags to get the favicon as well.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\comment-287636160.json . 
So I added the missing things to this PR as specified by @carpodaster on Slack:.
* adapt / add tests for new structure now inline-code and inline-code are handled
* add a single-run task to *"fix"* the existing data

The data is *"fixed"* in a sense that **sign-offs are migrated** and **favs are simply dropped**. However, this does not really mean that the state of inline-code is perfectly fine: before, a inline-code was per inline-code, now it is per inline-code with in the applicationinline-codesign-offs` (the time-wise most recent one) is kept. The other one cannot be reconstructed from the data we have.

There was also a bug-report for mentors' comments / notes - but that is already fixed an no data has to be migrated.

Since @carpodaster is on an island :desert_island:, maybe @bitboxer, @pgaspar or @ramonh could have a look this codewise?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\comment-287722500.json . 
Thanx for all the _(and quick)_ feedback :party_popper:.
I'll try to address all this once I get home from work. It it's super urgent and this should have been deployed basically yesterday, someone else need to take over here, sorry. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\comment-287888432.json . 
I forget to update schema.rb..... stupid me :)
Will update asap. 



















.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\comment-287889285.json . 
Oh, no worries @beanieboi, I'll update it since I'm already on it and merging back master into my other branches. Was just not sure if you finally wanted the column there or not :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\comment-288068760.json . 
Checked on Prod. The issue seems to be fixed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\issue-215227180.json . 
This implements the fix w/o adapting the tests.

It also does not fix the existing data.

See Slack.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\pr-111428954.json . 
This implements the fix w/o adapting the tests.

It also does not fix the existing data.

See Slack.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\pr-comment-106824994.json . 
Extra "set" here, I think.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\pr-comment-106825118.json . 
I believe inline-code should be inline-code here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\pr-comment-106825559.json . 
Maybe change "add" to "adds" to conform with the "It does something" form, here?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\pr-comment-106861905.json . 
we might consider moving the existing indexes from the old columns to the new columns. I don't think it's urgent but we should not forget about it, since it can has an impact on the application performance.

old indexes
block-code.
possible new indexes, just theoretical, we should look at the query in production (ideally development staging :D)
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\pr-comment-106862423.json . 
I'm not super familiar with the data in the database. just as an idea.
should we can keep this for a while? maybe it's helpful to partially backfill the data?
if yes, I suggest renaming it to do inline-code or something similar.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\pr-comment-106862812.json . 
should we test this also for inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\pr-comment-106862829.json . 
should we test this also for inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\pr-comment-107007376.json . 
Sorry @beanieboi, I don't really get it - where's the newly named column now? :see-no-evil_monkey: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-215227180\pr-comment-107008538.json . 
If I pull the changes from master and migrate the DB it's there - that's what i wanted to say :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215286505\comment-288013176.json . 
Good to merge in my opinion then. Would do so tonight if no obligations.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215286505\issue-215286505.json . 
Ok, this would be ready to merge now.
I aligned this to go the @beanieboi  - way:trade_mark_sign: and just rename the deprecated columns, so that we can remove them all together after the selection phase.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215286505\pr-111463122.json . 
Ok, this would be ready to merge now.
I aligned this to go the @beanieboi  - way:trade_mark_sign: and just rename the deprecated columns, so that we can remove them all together after the selection phase.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215298668\comment-287900140.json . 
Ok, so this would be ready to be merged. And since this PR touches a lot of files, I'd also love to merge it within not too long, because it's kind of pain to keep it up 2 date otherwise :winking_face: 

I skipped updating inline-code and inline-code for now, it seemed out of scope for this PR to me: both gems a) interact with each other and b) are so outdated that there API changed significantly since then. I'd volunteer to update them and their integration into the Teams App, but I'd open up a separate issue for that and tackle this later someday in a separate PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215298668\comment-287919153.json . 
@klappradla I updated the PR. it would be great if you can merge since I don't have access to Rollbar. dependency upgrade are usually good candidates for exceptions :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215298668\comment-287919348.json . 
Alright, will do in a few min. Thanx for the review :person_with_folded_hands: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-215298668\comment-287921421.json . 
:clapping_hands_sign::emoji_modifier_fitzpatrick_type-3:🤙:emoji_modifier_fitzpatrick_type-5:.










.
#rails-girls-summer-of-code/rgsoc-teams\issue-215298668\issue-215298668.json . 
After having certain moments of enlightment with updating dependencies in other apps, I had a look at the Teams App's dependencies.

Rails 5.1 is around the corner and certain deprecated things the Teams App is using / doing won't be possible anymore :winking_face:  - such as, e.g
* non-kwargs syntax for controller specs
* have stubs access the DB

Also: providing the inline-code with Devise-related specs is no longer recommended since Rails 4 - there's no benefit in doing it now IIRC.

Still, this is WIP, I just pushed it in order to be able to continue on it from other machines and be reminded that it's still open :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215298668\pr-111470042.json . 
After having certain moments of enlightment with updating dependencies in other apps, I had a look at the Teams App's dependencies.

Rails 5.1 is around the corner and certain deprecated things the Teams App is using / doing won't be possible anymore :winking_face:  - such as, e.g
* non-kwargs syntax for controller specs
* have stubs access the DB

Also: providing the inline-code with Devise-related specs is no longer recommended since Rails 4 - there's no benefit in doing it now IIRC.

Still, this is WIP, I just pushed it in order to be able to continue on it from other machines and be reminded that it's still open :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215298668\pr-comment-107028940.json . 
is there a technical reason for that? does FactoryGirl not support the syntax anymore? the reason why I ask is that I really like the explicit method call. it obvious to everybody that this is inline-code from FactoryGirl. you don't need knowledge about the dependencies that are used in the app.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215298668\pr-comment-107029388.json . 
**HUGE** :heavy_plus_sign:  **1** on that!
I removed it in a few places already :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215298668\pr-comment-107029543.json . 
yay and nay! :woman_with_bunny_ears:‍♂️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215298668\pr-comment-107029741.json . 
Feel free to go ahead on it. I'm on a dirty branch right now and will stay there for some time as it seems :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215298668\pr-comment-107029876.json . 
cool. will do it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215579971\comment-288013529.json . 
Anyone with domain-knowlege of the current selection process wants to have a quick look at this( ping @alicetragedy , @ramonh )? Aside from that I think this should be good to merge then.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215579971\comment-288398219.json . 
this makes sense to me @klappradla (in the context of the current sign-off and selection process) and it should be good to go. :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215579971\issue-215579971.json . 
As @pgaspar already pointed out in #699 , there is a lot of unused / duplicated code related to signing-off inline-code and inline-code causing confusion for anyone not familiar with previous iterations of the Teams App's internal processes.

* Anything related to signing-off inline-code is now moved over to the inline-code model
* Signing-off inline-code is not used any more _(none of the inline-code from this season was signed-off and the code is not invoked from anywhere)_

Therefore, in order to not grow legacy, I think it should be fine to remove this logic and deprecate the attributes @beanieboi -way until the selection process is over and they can be fully removed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215579971\pr-111669021.json . 
As @pgaspar already pointed out in #699 , there is a lot of unused / duplicated code related to signing-off inline-code and inline-code causing confusion for anyone not familiar with previous iterations of the Teams App's internal processes.

* Anything related to signing-off inline-code is now moved over to the inline-code model
* Signing-off inline-code is not used any more _(none of the inline-code from this season was signed-off and the code is not invoked from anywhere)_

Therefore, in order to not grow legacy, I think it should be fine to remove this logic and deprecate the attributes @beanieboi -way until the selection process is over and they can be fully removed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215778169\comment-288183237.json . 
Great steps Anagha! Thanks.

I have one comment that needs to be reviewed by one of the other reviewers. 
Otherwise looks good to me. 

And just about making the life of reviewers easier:.
- It is recommended to give your PR a meaningful title, that is: meaningful to anyone _else_. Can you please edit the title of the PR, to reflect what is happening _with the code_. Normally, the title of the issue you are referring to contains that information.

ping:  @ reviewers






.
#rails-girls-summer-of-code/rgsoc-teams\issue-215778169\comment-302926118.json . 
@Anagha22 Closing for now. Please feel free to reopen when you are ready to address the changes. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-215778169\issue-215778169.json . 
Adding a PR for issue #612. Please review and suggest changes.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215778169\pr-111805732.json . 
Adding a PR for issue #612. Please review and suggest changes.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215778169\pr-comment-107245171.json . 
Question for reviewers: can the capitals stay?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215778169\pr-comment-113455949.json . 
I feel like it's no big deal, but I'd prefer for this to be consistent (so: no capitals). @Anagha22 could you change this, please? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215778169\pr-comment-113457672.json . 
I'm not sure why the inline-code for most fields was removed in the schema file — I'm guessing this might have happened automatically with your newly added migration.I don't know how badly we need those limits on fields, but since this is not relevant to the PR, could you change all of them back to their previous state? (i.e. add inline-code to the fields again where it's been removed). Thanks :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-215778169\pr-comment-113946202.json . 
@alicetragedy Okay! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-288757086.json . 
Something I just thought of when looking at this: do you think it would make sense to change the boolean values (inline-code & inline-code) to display as something like "yes" and "no" instead (using a locale or a helper method)? It's definitely not a requirement, more like an enhancement. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-288760260.json . 
Hey @alicetragedy, thanks for the feedback! 

I thought of this too, but wasn't sure what would be preferred. inline-code and inline-code sound good to me though. Will add this today :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-288763245.json . 
awesome, thanks @ramonh! And I think it's definitely something we can reuse — I took a quick look to see if we had anything like that but it doesn't look like it, and it might be useful for the conferences table too. ;)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-288763831.json . 
Great idea! I'll make it a huge scoped one then :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-289024983.json . 
@ramonh did you get a chance to look at the helper method enhancement thing I suggested yesterday? or, better said: is there anything we can help you with there? I have some time today and over the weekend so am happy to jump in if needed <3.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-289033468.json . 
Hey @alicetragedy! I've got it ready to go, just had to step out a bit earlier. Will commit and push!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-289100456.json . 
All set! Thanks for the patience.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-289152580.json . 
@ramonh I'm sorry, but I wasn't thinking straight... I realised that application_data["voluntary"] actually returns a string, not a boolean, and so inline-code will always show “Yes” in this case. The quickest way I can think of for fixing this is a conditional checking for the content of the value (ie. if true return yes) but maybe it's kind of "dirty"? what do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-289160322.json . 
Oh dear, good catch, @alicetragedy. I didn't think this through :loudly_crying_face: 

I had initially misunderstood what you wrote, but I think that's a good idea! I don't think it's too dirty, because we're ensuring that we're passing the correct value type.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-289160467.json . 
And done! Thanks for the feedback again :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-289452451.json . 
@klappradla Do you think we can merge it (after solving the merging conflict) or does it not work well with your new application table model?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-289538837.json . 
Hm, it's ok to merge it, but the benefit is not huge unfortunately (sorry @ramonh), since the two files are basically gone in the new view :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-289553825.json . 
Hey! No worries. If I understand correctly then, we should close this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-289560167.json . 
Yes @ramonh. Resolving the conflicts and then merging to master just for removing the files after all is not worth the effort - you know :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\comment-289563286.json . 
Fair point, thanks @klappradla! I'll catch up and try again.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\issue-216208704.json . 
As discussed for the new selection process, this adds the "Volunteer?" and "Volunteer hours" columns to the application rating table.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216208704\pr-112111059.json . 
As discussed for the new selection process, this adds the "Volunteer?" and "Volunteer hours" columns to the application rating table.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216460763\comment-288824333.json . 
Note to self: inline-code, since we don't need it at all, should also be removed from e.g. the list of permitted params in the inline-code. Not sure if it should also be removed from the db (we have other unused fields, like inline-code, in the db, which are now not used anymore). .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216460763\comment-289005377.json . 
PR has been updated. I'm not sure what the policy is on removing fields from the database though, so I'd love an opinion there: should I additionally remove the inline-code field from the inline-code table?
ping @carpodaster @klappradla @michaelem .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216460763\comment-289005708.json . 
I'd vote for removing it :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216460763\issue-216460763.json . 
This fixes the first four points in this issue: removing some fields in the additional info form and changing flags as needed.

Note: I've also removed this attribute from the permitted list of params in the controllers, and from the Applications exporter. I'm not sure what the policy is on removing fields from the database though, so I'd love an opinion there: should I remove the inline-code field from the inline-code table?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216460763\pr-112259939.json . 
This fixes the first four points in this issue: removing some fields in the additional info form and changing flags as needed.

Note: I've also removed this attribute from the permitted list of params in the controllers, and from the Applications exporter. I'm not sure what the policy is on removing fields from the database though, so I'd love an opinion there: should I remove the inline-code field from the inline-code table?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216821219\issue-216821219.json . 
this should fix the first two items of this issue. It's a pretty straight-forward one!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216821219\pr-112481854.json . 
this should fix the first two items of this issue. It's a pretty straight-forward one!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216825080\issue-216825080.json . 
Removes the blind selection.

I branches this off of this branch, so best wait with reviews until the parent is merged.

**Edit:**
I also added the removal of some leftovers related to former ratings of inline-code and inline-code to this PR, since it's not much stuff to look at.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216825080\pr-112484655.json . 
Removes the blind selection.

I branches this off of this branch, so best wait with reviews until the parent is merged.

**Edit:**
I also added the removal of some leftovers related to former ratings of inline-code and inline-code to this PR, since it's not much stuff to look at.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216929365\comment-289244183.json . 
@klappradla Thanks for the review Max! +1 to rearranging things around the table if necessary.
Merging this PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216929365\comment-289856270.json . 
Hm, for some reason I cannot find these changes on inline-code... Was this overwritten by later commits? I'm especially missing the inline-code column. I mean, I can add it again by hand, but still, this is kinda weird.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216929365\issue-216929365.json . 
This PR closes the "Nice to have" part of the Issue #54.

I implemented it the same way as the "My pick" checkbox on the rating sidebar (minus fancy background colors on the applications table).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216929365\pr-112560916.json . 
This PR closes the "Nice to have" part of the Issue #54.

I implemented it the same way as the "My pick" checkbox on the rating sidebar (minus fancy background colors on the applications table).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216953272\comment-292811057.json . 
Thank you @amrtanair ! :smiling_face_with_open_mouth_and_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216953272\issue-216953272.json . 
Adding a PR for #199  Please review :)  Also, please do inform me if any changes required :) @alicetragedy @mkalininait .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216953272\pr-112575754.json . 
Adding a PR for #199  Please review :)  Also, please do inform me if any changes required :) @alicetragedy @mkalininait .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289209183.json . 
Sidenote: all these tiny little changes around icon-names are related to switching from the Rails 3 age inline-code gem to still-maintained inline-code gem, there are no changes in behavior or appearance.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289246310.json . 
Thank you @klappradla @beanieboi!
I'll try to test this tomorrow. 

Should we finish this before merging -> inline-code?

Another question: Do we need someone to review the code? I don't know if @F3PiX is reviewing all the changes (are you, Maud?) If not, I'd try to find someone asap. I'm definitely not in the position to judge this code. But I want to make sure that we can merge it in the next 1-2 days.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289247334.json . 
God damn, I tried to solve a merging conflict in the inline-code (which looked pretty straight forward), but apparently messed it up, the builds fail now 🤦‍♀️  I'm so sorry! Looking into how to fix it now. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289249195.json . 
Looks like it's just a pending migration (lines 253/244 on travis) :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289273628.json . 
@mkalininait thanks for merging master, I fixed the inline-code there was just 1 change that didn't make it through the merge :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289322148.json . 
I've tested the PR locally. It looks really great! We could probably already merge it and use. Thank you @beanieboi @klappradla :heavy_black_heart:️ 

I checked several 'random' reviewers, all of them have 30 (or sometimes 29) applications, which totally makes sense. A quick look into the inline-code table showed that all applications seem to be assigned to three different reviewers, which is also :thumbs_up_sign: 

I didn't understand how exactly we distribute applications from eligibility/ineligibility prospective. Some reviewers have 3 ineligible applications, and some have 7. Could you please clarify how exactly this works @beanieboi? Do we distribute all eligible applications first and all non-eligible applications after? Or do we distribute them all together at once? It looks like the latter from the code.

One minor thing I noticed while testing this PR @klappradla This nice eye icon disappeared. But I'm not even sure that this is the result of this PR. WDYT?

!screen shot 2017-03-27 at 00 27 26

**BIG QUESTION:** do we want a code review now or can we just merge it considering that two people worked on this? #yolo cc @alicetragedy 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289355103.json . 
Oh, thanx for mentioning @mkalininait :person_with_folded_hands:  If the icon is missing, then it's definitely because of these changes. I thought I updated all icons accordingly - seems I've forgotten this one.
I have a long day at work (and basically no sleep) and won't be on my home machine until about 9pm - so if someone else can fix the icon, perfect, otherwise I'll take care of this then.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289460515.json . 
@mkalininait 


right now we take all applications from the current season and assign them randomly to reviewers. as you mentioned, it is possible that some reviewers get more ineligible applications than others. 
right now we show the reviewers all assigned application and additionally show a little icon that indicates if the application is eligible or not (see URL.

would you like to change that behavior? I think I read somewhere in slack that we want to assign all application because we are not sure how accurate the flags are? is that correct?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289566611.json . 
Is that how the icon should look like @mkalininait ?
!screen shot 2017-03-27 at 21 54 37

*(no clue how I could have forgotten this one)*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289576897.json . 
@mkalininait we will go ahead and merge the PR. we want to keep the number of open PR's low. I'm happy to open a new PR to adjust the behavior regarding eligible applications. let me know how it should behave.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289733924.json . 
@beanieboi Thanks for the clarification! It's fine how it works now.
Initially I had an idea that we can distribute eligible and ineligible applications separately - in order to guarantee that all reviewers have the same amount of ineligible applications. The reason for this is that ineligible applications don't require rating in most cases --> reviewer spends much less time on them. 
But I think that this feature it is not super necessary. Let's just affirm that some reviewers are luckier than the others to get more ineligible applications :)

PS: Thanks for merging this PR!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\comment-289734168.json . 
Looks good @klappradla, thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\issue-216971074.json . 
In collab with @beanieboi solving rails-girls-summer-of-code/selection_process/issues/50.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\pr-112584761.json . 
In collab with @beanieboi solving rails-girls-summer-of-code/selection_process/issues/50.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\pr-comment-108035279.json . 
May be personal preference, but as this is not necessarily "just" a *one-off-data-correction-migration*, it could also live in the inline-code task namespace. From how I see it, it can without a problem be run multiple times @beanieboi ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\pr-comment-108040599.json . 
I would think that inline-code after inline-code, would ~level out~ override the shuffling. Wouldn't it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\pr-comment-108172239.json . 
@F3PiX good question. since we only give sort the todos count, it does not sort the users by itself.

I did a quick example to show it a little better. lets represent the users as a little hash with user id and the already assigned applications.

block-code.

after shuffling it looks like this

block-code.

and after sorting
block-code.

since we want to evenly distribute we somehow need to pick the users with less assigned applications first.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-216971074\pr-comment-108181501.json . 
Thanks for enlightening me!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217025621\comment-300765885.json . 
Can I try tackling this issue?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217025621\comment-301020752.json . 
@amrtanair that would be really cool! I'm happy to help if you have questions.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217025621\comment-317264060.json . 
Hi @amrtanair ! I take it you are not working on this, so I assigned myself. If you do want to take this on, please unassign me and assign yourself!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217025621\comment-317721023.json . 
Hi @F3PiX  ! I am sorry I took so long to reply. I am currently working on another project for RGSoC'17 and I would love to solve this issue. it kinda was on the back of my head, but I never got around to working on it :( If you want to, do go ahead, else just notify me and I will make it a point to resolve it :') .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217025621\comment-318818343.json . 
@carpodaster I'd like to add the very cool geocoder gem in addition to solving this. Is that okay?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217025621\comment-318850062.json . 
@F3PiX Why do you think we need exact geocoords? I'm not against geocoder, but I don't currently see why we would need it to de-duplicate locations. Your solution in #807 seems like the better approach to me.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217025621\comment-318858187.json . 
Apart from  all the cool things we can do with it... 
The solution on #807 works, given the user input is correct. If someone enters a city incorrectly, or one student calls their city "Beijing" and the second student "Peking", we can't catch that now. With geocoding we get one unique name.
(We do not need the geocoder gem for that, Max already introduced geocoding for the application forms, but the gem offers a lot of possibilities. ) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217025621\comment-319099576.json . 
Hmmm either way, it is probably a bad idea to do this mid-season. 
Closing this, and I'll check back in after summer. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217025621\issue-217025621.json . 
For example, if the students are from the same place and have entered the location in a different fashion(say, one has entered it in capitals while the other has not). 

Image attached below: 
!whatsapp image 2017-03-26 at 9 34 55 am

.
#rails-girls-summer-of-code/rgsoc-teams\issue-217102353\comment-289459751.json . 

!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-217102353\issue-217102353.json . 
This PR closes some of the "NICE TO HAVE AND EASY TO IMPLEMENT" items from Issue 51.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217102353\pr-112650665.json . 
This PR closes some of the "NICE TO HAVE AND EASY TO IMPLEMENT" items from Issue 51.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\comment-289464827.json . 
this is a new PR that addresses the issue from URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\comment-290239450.json . 


good question. sadly I can't answer it, because of my lack of knowledge of the codebase. but I would love to know the answer :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\comment-290398027.json . 
@carpodaster updated the PR accordingly.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\comment-291061260.json . 
@beanieboi shall we merge this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\comment-291165134.json . 
I'm up for merging!










.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\comment-291165919.json . 
yes, do it :person_raising_both_hands_in_celebration: :party_popper: :balloon: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\comment-291468064.json . 
Let's do this!

!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\issue-217257833.json . 
Okay, this changes a few things in the OmniAuth flow.

It will redirect the user to the profile edit page when

* the user is freshly imported from github
* the user is not valid because data is missing

Additionally it shows a warning box if you haven't confirmed
your account yet with a button to confirm it manually.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\pr-112753470.json . 
Okay, this changes a few things in the OmniAuth flow.

It will redirect the user to the profile edit page when

* the user is freshly imported from github
* the user is not valid because data is missing

Additionally it shows a warning box if you haven't confirmed
your account yet with a button to confirm it manually.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\pr-comment-108778907.json . 
I would prefer to have the inline-code'ed checks as one named composite predicate, like inline-code (disclaimer: not a cool name, don't use it :wink: )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\pr-comment-108794483.json . 
One very minor thing: I would swap the two lines so that it returns inline-code; one would expect an assignment to return its value.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\pr-comment-108797838.json . 
fixed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\pr-comment-108797990.json . 
I used inline-code for now. since I'm not 100% sure what this check is for. 
@bitboxer could you help me out with the naming here?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217257833\pr-comment-108798807.json . 
Now we need to change inline-code to ref. the local variable inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217293733\issue-217293733.json . 
this upgrades to the latest ruby version.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217293733\pr-112779568.json . 
this upgrades to the latest ruby version.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217330103\comment-289565244.json . 
totally agree, we should have 1 place where we define all available fields and which fields we should display. I honestly see little value that we automatically show new fields. I'd prefer that we explicitly add fields that we want to show.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217330103\comment-289565559.json . 
+1 in what you both said — I think @mkalininait also agrees with this. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217330103\comment-289565778.json . 
Yes. I wouldn't even go with a view object, etc., but just use a plain old Rails view rendering out the things. Same as I did for the mentor view on applications. I think this one is okish regarding readability.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217330103\comment-289590574.json . 
@alicetragedy oh yes, I do!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217330103\issue-217330103.json . 
this PR takes care of removing the location data from the application as requested in URL .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217330103\pr-112805773.json . 
this PR takes care of removing the location data from the application as requested in URL .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217330103\pr-comment-108283088.json . 
:thumbs_up_sign: :thumbs_up_sign: :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217382196\comment-289595803.json . 
First read it as: "selection table, filters, ordering, etc. [all] not working." :)

Gonna test now. Thank you so much @klappradla! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217382196\issue-217382196.json . 
Hey @mkalininait as promissed: a wip version of the selection table, filters, ordering, etc. not working.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217382196\pr-112843949.json . 
Hey @mkalininait as promissed: a wip version of the selection table, filters, ordering, etc. not working.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\comment-289941690.json . 
Testing in progress, please don't merge yet.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\comment-290166139.json . 
Tested locally, looks good to me!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\issue-217664835.json . 
Request: URL.

Show the name of Student 1 and Student 2.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\pr-113046400.json . 
Request: URL.

Show the name of Student 1 and Student 2.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\pr-comment-108647974.json . 
This is just personal preference, but I don't see the point it writing inline-code blocks if they aren't actually used in the test itself. The fact that one needs to use the bang version since the lambda is otherwise never being called is also kind of an indicator for me that these inline-code calls should either go into a inline-code block or the example itself and do not need to be assigned with names.

However, just a style preference :nail_polish: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\pr-comment-108648545.json . 
I personally don't see a huge benefit in outputting **both** names in the beginning and then just throwing in the whole application. In my opinion it would make more sense to have a layout like this:.
block-code.

But this might not be in the scope of this PR. Just came to my mind when I saw this line.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\pr-comment-108648979.json . 
I'm not working with Rails on a daily basis any more, but from what I remember, inline-code will already return a paragraph anyways. So you could reduce this to:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\pr-comment-108671589.json . 
yes, you are right, I just copy & pasted from the current implementation. it's fixed in the unrolled partial.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\pr-comment-108671732.json . 
I just unrolled the current structure. it's now way easier to make those kind of changes. I won't include them in this PR to keep it focused on the core issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\pr-comment-108744125.json . 
Nifty! Haven't seen inline-code for a while!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\pr-comment-108745963.json . 
Depending on how easy it is to handle this large file, one could also extract a inline-code partial here. Would require string-interpolating the keys however... .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\pr-comment-108746342.json . 
Maybe add a separator / some headline between these sections (student0, student1, etc.)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217664835\pr-comment-108768408.json . 
great idea, added a horizontal line between all of them.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217701418\issue-217701418.json . 
Reverts rails-girls-summer-of-code/rgsoc-teams#718.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217701418\pr-113073802.json . 
Reverts rails-girls-summer-of-code/rgsoc-teams#718.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217729831\comment-289956689.json . 
!7jbqeti

.
#rails-girls-summer-of-code/rgsoc-teams\issue-217729831\issue-217729831.json . 
Add-on to this task: URL.

The **Additional Info** section in the Application view reflects the contents of the **Additional Info form** better now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-217729831\pr-113094336.json . 
Add-on to this task: URL.

The **Additional Info** section in the Application view reflects the contents of the **Additional Info form** better now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218025658\comment-290385943.json . 
I removed the S3.setup call, since the inline-code will pick those ENV vars automatically (see URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218025658\comment-290392983.json . 
fyi: @klappradla did set AWS_REGION on the Heroic apps to inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218025658\issue-218025658.json . 
regular dependency bump.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218025658\pr-113307109.json . 
regular dependency bump.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218025658\pr-comment-108853527.json . 
Cool, I wasn't aware of that!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218025658\pr-comment-108891097.json . 
What @carpodaster said about the region could also go in here from what I remember.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218175422\comment-290392827.json . 
!dyax4oudfz4uk

.
#rails-girls-summer-of-code/rgsoc-teams\issue-218175422\issue-218175422.json . 
Covers URL "Split the application page into sections (and add Titles) like on the Application form"

@beanieboi I removed your inline-codes from the **Submitted application** section. I added sub-section titles there, and inline-code started adding a bit too much structure. I hope you don't mind.

I added inline-codes between different sections in the application view though. I don't know if it improved the view or not (not a designer) :D.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218175422\pr-113412409.json . 
Covers URL "Split the application page into sections (and add Titles) like on the Application form"

@beanieboi I removed your inline-codes from the **Submitted application** section. I added sub-section titles there, and inline-code started adding a bit too much structure. I hope you don't mind.

I added inline-codes between different sections in the application view though. I don't know if it improved the view or not (not a designer) :D.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218340500\comment-290557806.json . 
Actually, I should have probably created this issue in the orga repo. Not sure.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\comment-290774772.json . 
I'd love to merge this soon if there are no obligations.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\comment-290849829.json . 
Hey @klappradla I've tested the PR locally.
The table looks great! 
I found a couple of issues with the csv export.

1. When the table is already exported, I continue seeing this button:.
!joxi_screenshot_1490999288291
I can make a new export only after I refresh the page.

2. I think something went wrong with the last table columns: I'm not sure what Picks1,2 and Likes 1,2 mean; what the next two columns mean (the average rate for one team is 1.55, but there is no such number in the exported table); the last two columns don't have a header.

!screen shot 2017-04-01 at 00 31 19
!screen shot 2017-04-01 at 00 31 56

---

Another thing: these changes URL disappeared for me, when I tested this PR. I guess it's just me not merging with the master branch.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\comment-290869297.json . 
@mkalininait I would like to address the changes within this PR. I can also help out. I will check with max, to not step on his toes. If fear if we merge this now and want to address it later that we pile up technical debt and maybe don't address it at all.
If it's really urgent, then we can merge it now, I don't want to block it.

Thanks for the PR and review <3.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\comment-290910210.json . 
Oh, thanx for the info @mkalininait :person_with_folded_hands: 

**Ad a) *(the button)***
I know it stays like that - I thought it would be a *"feature*" actually :face_with_tears_of_joy: 
So as the rendering takes hours, I want to prevent people pressing the button a million times, that's why I disable it after the first click. It then stays like this, since it's not an ajax request (the content type is inline-code).
**But**: pressing it again after that does not make any sense - the data would be exactly the same. Therefore I thought it would actually be useful to have it disabled all the time...

**Ad 2)**
Picks / Likes 1 and 2 are the number of inline-code and inline-code the application got from the mentors for inline-codeand inline-codeaverage_points` being wrong and the last column overlapping I honestly don't know right from the top of my head now. Maybe it even has to do with #725 not being merged into this branch yet *(I did not have the time to do this yesterday)*.

And @beanieboi, feel free to go ahead with implementing the fixes if you're already on it. I won't have time until around 4pm CEST. I could then ping you again on Slack whether the things are already covered or not.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\comment-290957888.json . 
@mkalininait I fixed the CSV output, it looks now the same as the HTML table. could you please check it again.

thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\comment-291005044.json . 
Did not (yet) check it in the browser with current data, but looking at @beanieboi's changes, this should have been it @mkalininait. Good to merge I'd say.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\comment-291018019.json . 
@klappradla Thanks for the clarification about the button. It makes sense.

@beanieboi I've tested the exported data. The spreadsheet looks good now. Thank you!

I agree that this PR is good to merge.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\issue-218353063.json . 
Update of the rating table according to the specs in rails-girls-summer-of-code/selection_process#53 (still missing the median column though). I also added a CSV-export, since this seems to be a common use case. Note that the export always exports **the exact same data that's available in the table** - so it takes all filters and sorting, just like the table itself.

On the way, I also removed unnecessary view helpers, etc. and generally tried to reduce the usage of (global) view helpers.

There's still some more cleanup to, but this is at least a working version to get the selection process started.
The PR is pretty huge - sorry for that, but I did not know how to sanely split this into multiple smaller ones.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\pr-113543265.json . 
Update of the rating table according to the specs in rails-girls-summer-of-code/selection_process#53 (still missing the median column though). I also added a CSV-export, since this seems to be a common use case. Note that the export always exports **the exact same data that's available in the table** - so it takes all filters and sorting, just like the table itself.

On the way, I also removed unnecessary view helpers, etc. and generally tried to reduce the usage of (global) view helpers.

There's still some more cleanup to, but this is at least a working version to get the selection process started.
The PR is pretty huge - sorry for that, but I did not know how to sanely split this into multiple smaller ones.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\pr-comment-109083970.json . 
omg, yes! <3.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\pr-comment-109084144.json . 
I wonder if we should introduce a ApplicationData class, gives access to all the attributes. I don't like that we leak the application_data hash everywhere. what do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\pr-comment-109134833.json . 
How do you imagine this? _"Just"_ as a data transfer object or as a model persisted to the database?

But related to that: it's super hard to render these types of application overview views. I'd need to preload the teams and projects associated with an application in order to make this more sane (snappy would be the wrong word). However, I only know how to do this in raw sql...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\pr-comment-109148640.json . 
I would say as a data object first. if we have the data object, moving it to the database as persisted is already half way there. since we can keep the same abstraction. I will work on a proposal for this today, to better show what I mean :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\pr-comment-109158718.json . 
Ok, just to quickly clearify my understanding of DTOs. The way I usually use them, they are POROs taking KWARGS and then internally just delegate to the underlying objects. So they are basically just a wrapper around objects that are passed around in business-logic as this one pack which then can be easily stubbed in specs.

So they usually just have a few private inline-code and some large lists of inline-code :winking_face: , no *"real"* methods.

But yeah, curios of what you have in mind here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218353063\pr-comment-109316126.json . 
:face_with_tears_of_joy:  oh hell, I already thought it must be something like this. I originally wrote a inline-code style array but did not know how to use this in slim :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218509908\comment-290731558.json . 
Tested locally, works! Thank you @beanieboi! 🥇 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218509908\issue-218509908.json . 
based on feedback in slack
- fixes a bug where we don't show the rated date
- changes redirect after the rating.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218509908\pr-113655223.json . 
based on feedback in slack
- fixes a bug where we don't show the rated date
- changes redirect after the rating.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218532606\comment-290740945.json . 
Yes, voting for inline-code - this will however mean, that last / this season's ratings aren't compatible with the schema any more. But I don't think this should be a problem, the whole process changes over time anyways.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218532606\comment-293695307.json . 
I stumbled over this inconsistency today myself. I also +1 inline-code – we probably only ever rate applications, no other model.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218532606\comment-346305133.json . 
Closing via URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218532606\issue-218532606.json . 
Right now the ratings tables has 2 possibilities to reference an application.

you can reference an application using the polymorphic inline-code association (inline-code and inline-code) or you can use inline-code directly.

We should settle on one style of connecting applications and ratings, either via inline-code  or inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218733070\comment-292708811.json . 
Any objections for merging this? I think it's a nice improvement _(even reducing technical dept I'd say)_ with no impact on functionality, so I'd go for it :ship: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218733070\comment-292813588.json . 
yay, thank you.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218733070\issue-218733070.json . 
This is meant as proof of concept. I started extracting application_data into it's own class.
Right now we just pass the hash around, which has a couple of drawbacks. We treat it like an AR Model but we are leaking the everywhere.
This introduce an API for ApplicationData which is easier to extend and maintain. It also brings us halfway to extracting application data into it's own AR model. 

it does not implement the setters yet. if we want to change application data, we still have to use the hash methods. Any input on that is appreciated. 

What do you think about the direction we are heading here?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218733070\pr-113800452.json . 
This is meant as proof of concept. I started extracting application_data into it's own class.
Right now we just pass the hash around, which has a couple of drawbacks. We treat it like an AR Model but we are leaking the everywhere.
This introduce an API for ApplicationData which is easier to extend and maintain. It also brings us halfway to extracting application data into it's own AR model. 

it does not implement the setters yet. if we want to change application data, we still have to use the hash methods. Any input on that is appreciated. 

What do you think about the direction we are heading here?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218733070\pr-comment-109316181.json . 
Debugging leftover.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218733070\pr-comment-109316286.json . 
This is personal preference, but I'd skip the inline-code here. Being an AR model, there's a accessor for the attribute and it does not seem to be a pattern to use inline-code in this app *(at least from what I see in this PR)* :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218733070\pr-comment-109316320.json . 
Again personal preference, but I'd make this a default and keeping the assignments as simple as possible:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218733070\pr-comment-109316371.json . 
Also a personal habit of mine with no impact on the functionality or visibility: I'd like to define a private inline-code for things that get assigned within the constructor and then spare all the inline-codes afterwards.

But as I said, just a personal habit of mine, no need to adapt this here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218733070\pr-comment-109316414.json . 
+1.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218735481\issue-218735481.json . 
I'm taking 1 dependency after another :)
This removes the version lock on Feedjira. The main problem is that feedjira switched from inline-code to inline-codeas HTTP framework and therefor does not support inline-code URL's anymore.
My workaround is to server the local files over HTTP via a small webrick server. This allows us to upgrade Feedjira and still maintain the same test coverage. 

I also included a regular inline-code which upgraded the AWS gem, but this is safe since we switched to the inline-code version.

Let me know what you think about that approach.

Thanks
Ben.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-218735481\pr-113801823.json . 
I'm taking 1 dependency after another :)
This removes the version lock on Feedjira. The main problem is that feedjira switched from inline-code to inline-codeas HTTP framework and therefor does not support inline-code URL's anymore.
My workaround is to server the local files over HTTP via a small webrick server. This allows us to upgrade Feedjira and still maintain the same test coverage. 

I also included a regular inline-code which upgraded the AWS gem, but this is safe since we switched to the inline-code version.

Let me know what you think about that approach.

Thanks
Ben.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219217850\comment-291631670.json . 
@carpodaster All changes are done :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219217850\comment-291642594.json . 
Superb! Thx :sunflower: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219217850\issue-219217850.json . 
Can't test it locally, we may want to try it on Staging first. Or on Production - and see what happens :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219217850\pr-114124665.json . 
Can't test it locally, we may want to try it on Staging first. Or on Production - and see what happens :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219217850\pr-comment-109664426.json . 
This looks like we should set it via the inline-code. And we need a new pair of username/password since it's now public.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219217850\pr-comment-109664928.json . 
Ah, apparently inline-code will automatically pickup a inline-code environment variable so we don't actually have to configure it manually. Let's hope that it doesn't complain when it can't find any DSN – if it doesn't, we can just keep on hacking in development without bothering about configuring an exception tracker.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219217850\pr-comment-109665288.json . 
Do we really need this? It's not mentioned in URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219217850\pr-comment-109665995.json . 
Oh wait, it does mention it in URL but it also states that it should be the default for production. I'd rather try it without this setting first.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219217850\pr-comment-109666397.json . 
We can set: 

block-code.

But let's do so in an initializer (inline-code).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219217850\pr-comment-109771972.json . 
Yeah, I was not sure about this, too. I'll remove it for the moment, and we'll see how it works.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219217850\pr-comment-109776995.json . 
Good points @carpodaster! I regenerated username/password in Sentry, added the SENTRY_DSN variable to Heroku and removed this line from inline-code.  I also set inline-code in inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219302703\issue-219302703.json . 
Some reviewers asked to hide the financial info from the application view, because "it is hard not to read it and get influenced by that".

We will return this info once the rating phase it over.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219302703\pr-114186206.json . 
Some reviewers asked to hide the financial info from the application view, because "it is hard not to read it and get influenced by that".

We will return this info once the rating phase it over.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219388998\comment-291697840.json . 
looks good to me, can't wait to move the ApplicationData into the database and have real data types :woman_with_bunny_ears:‍♂️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219388998\comment-292107578.json . 
Did you find the time to take a look at this already @mkalininait ? If it's fine, I'd actually straight merge it together with #732 _(which does basically the same just as a "non-fix")_ and run the rake task to clean up the DB (cc @carpodaster ).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219388998\comment-292168503.json . 
Tested locally. Looks good to me, thank you @klappradla!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219388998\issue-219388998.json . 
Updated the application table and application-rating view to show a
heart for each mentor-fav (updated the csv export to contain the
respective "true" and "false" values as well).

closes rails-girls-summer-of-code/selection_process#57.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219388998\pr-114247549.json . 
Updated the application table and application-rating view to show a
heart for each mentor-fav (updated the csv export to contain the
respective "true" and "false" values as well).

closes rails-girls-summer-of-code/selection_process#57.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219388998\pr-comment-110114509.json . 
What about inline-code? That way we also support "real" booleans.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219388998\pr-comment-110115219.json . 
Sound defensive and *"future-proof"* love this :green_heart: 
I have it in several places, will update it.

Does it need to be within this PR? It does not directly impact rating, so I could also do it a day later...?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219388998\pr-comment-110128774.json . 
We can do it later, of course!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219388998\pr-comment-110132062.json . 
Ok. Will take care of merging and adding the respective task tonight. Nice, thanx :person_with_folded_hands: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219388998\pr-comment-110257619.json . 
Ok, already addressed it when merging inline-code into #732 - it was only a few places where it made sense.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219400950\comment-291698212.json . 
I'm up for just deleting the key from the hash.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219400950\comment-292778279.json . 
Any objections on merging this? I just merged inline-code back in.

This PR does not introduce dramatic changes to the way how mentor favs and sign_offs are handled, it just aligns their behavior which in my opinion makes it easier to understand for people who were not involved in the implementation process.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219400950\comment-292778476.json . 
sounds good to me @klappradla :thumbs_up_sign: 
makes sense to align the behaviour. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219400950\comment-292778524.json . 
Ok, going to merge it and run the rake task then.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219400950\issue-219400950.json . 
Hey @carpodaster,

we had some misunderstandings when preparing the rating views about how inline-code and inline-code work when being revoked (rails-girls-summer-of-code/selection_process#57).
In my personal opinion, it makes sense to align their behavior and just fully *reset* them to inline-code (as in just removing the key from the hash as if nothing ever happened) or do you see a value in having a inline-code string there instead?

I also added one of these one-off rake tasks to correct the production data.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219400950\pr-114256096.json . 
Hey @carpodaster,

we had some misunderstandings when preparing the rating views about how inline-code and inline-code work when being revoked (rails-girls-summer-of-code/selection_process#57).
In my personal opinion, it makes sense to align their behavior and just fully *reset* them to inline-code (as in just removing the key from the hash as if nothing ever happened) or do you see a value in having a inline-code string there instead?

I also added one of these one-off rake tasks to correct the production data.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219400950\pr-comment-109830909.json . 
Small info: my import used the methods inline-code and inline-code. Both are changed in the pr. Maybe it is also good to change the signed off here, too.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219400950\pr-comment-109845516.json . 
inline-code was ever since resetting both attributes (user ID and timestamp) to inline-code from what I remember, so it should be fine, shouldn't it?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219400950\pr-comment-109857424.json . 
Yes, that is true. Hope there is no false somewhere in the database for this. Maybe worth a check :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219400950\pr-comment-109858120.json . 
Yep, will for sure do a check :v:.
Will do tonight though, when I'm back on my home machine.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219400950\pr-comment-109991637.json . 
Ok, had a look. Only inline-code and stringified IDs for the sign_off values. Should be fine :ok_hand_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219496248\comment-291784366.json . 
Ok, I think it's good now :)

!2017-04-05-095759_168x113_scrot

.
#rails-girls-summer-of-code/rgsoc-teams\issue-219496248\comment-291786187.json . 
Awesome, thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219496248\issue-219496248.json . 
Run all the bigger free text fields through simple_format(). This turns newlines into <br>, and also runs the text through sanitize().

.
#rails-girls-summer-of-code/rgsoc-teams\issue-219496248\pr-114314597.json . 
Run all the bigger free text fields through simple_format(). This turns newlines into <br>, and also runs the text through sanitize().

.
#rails-girls-summer-of-code/rgsoc-teams\issue-219956162\comment-292459349.json . 
Any objection to merging this? It would be pretty satisfying to see that todo list gradually turn green :) :green_apple: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219956162\comment-292459882.json . 
!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219956162\comment-292461592.json . 
:face_with_tears_of_joy: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219956162\comment-292497514.json . 
@plexus Funny, I got this 2 minutes ago :smiling_face_with_open_mouth_and_smiling_eyes:  Yay!

!img_3093

.
#rails-girls-summer-of-code/rgsoc-teams\issue-219956162\comment-292508184.json . 
nice!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219956162\comment-292508305.json . 
whoohoo, thank you @plexus! :person_raising_both_hands_in_celebration: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-219956162\issue-219956162.json . 
Give them a nice "washed green" background so it's easy to see which ones still need doing.

!2017-04-06-182805_1845x253_scrot

.
#rails-girls-summer-of-code/rgsoc-teams\issue-219956162\pr-114642679.json . 
Give them a nice "washed green" background so it's easy to see which ones still need doing.

!2017-04-06-182805_1845x253_scrot

.
#rails-girls-summer-of-code/rgsoc-teams\issue-220346269\comment-292672178.json . 
Hm, I'm actually not really a Heroku user, no idea. I did
block-code.
and it did not return anything...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220346269\comment-292672479.json . 
**Edit:** seems one can enable it to be set (by opting into certain defaults ) but it's not set automatically.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220346269\comment-292707655.json . 
Ok, let's give this a shot then :monkey:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220346269\issue-220346269.json . 
I looked a bit into the inline-code problem on Heroku *(production app)*. It looks like I configured too many Puma workers. See e.g. this section in Heroku's docs around the topic.

Using two workers is *theoretically* possible with a Rails app running on one dyno - but it does not work for every app.

TLDR: I think reducing the workers to just one should fix the problem of exceeding the memory quota basically 10min after app start.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220346269\pr-114913868.json . 
I looked a bit into the inline-code problem on Heroku *(production app)*. It looks like I configured too many Puma workers. See e.g. this section in Heroku's docs around the topic.

Using two workers is *theoretically* possible with a Rails app running on one dyno - but it does not work for every app.

TLDR: I think reducing the workers to just one should fix the problem of exceeding the memory quota basically 10min after app start.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220349350\issue-220349350.json . 
Hey @beanieboi,

just a cosmetic change for your nifty WEBrick setup in the specs: this silences the logging output to not disrupt all the green dots :winking_face: 

Feel free to discard this PR if you think it's not necessary.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220349350\pr-114915628.json . 
Hey @beanieboi,

just a cosmetic change for your nifty WEBrick setup in the specs: this silences the logging output to not disrupt all the green dots :winking_face: 

Feel free to discard this PR if you think it's not necessary.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220464801\comment-292809666.json . 
The inline-code page is actually the only page where I ran into that problem. If someone knows other places (cc @alicetragedy ), please tell me.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220464801\comment-293625563.json . 
Wow, this is awesome! <3.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220464801\issue-220464801.json . 
This prevents Chrome from responding with the wrong format when using
the back button. Background: Chrome's cache does not distinguish between
the formats otherwise.

Video fuck yeah:.
!header

.
#rails-girls-summer-of-code/rgsoc-teams\issue-220464801\pr-114982378.json . 
This prevents Chrome from responding with the wrong format when using
the back button. Background: Chrome's cache does not distinguish between
the formats otherwise.

Video fuck yeah:.
!header

.
#rails-girls-summer-of-code/rgsoc-teams\issue-220502722\issue-220502722.json . 
Just some tiny little things I came across when running some benchmarks locally. Thought I'd better open a PR before I forget about them again.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220502722\pr-115003994.json . 
Just some tiny little things I came across when running some benchmarks locally. Thought I'd better open a PR before I forget about them again.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220954286\comment-293312795.json . 
Yolo! Let's ship it!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220954286\comment-293387049.json . 
Hey @ben, I’ve tested it, thanks! My two comments: 1) the average points are not rounded anymore (while the median points are), could you please fix it? 2) Could you please add "Median points" to the csv export too? :person_with_folded_hands: 

!joxi_screenshot_1491941582874



.
#rails-girls-summer-of-code/rgsoc-teams\issue-220954286\issue-220954286.json . 
as requested in URL this shows the median points nest to the mean (average) points.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220954286\pr-115322153.json . 
as requested in URL this shows the median points nest to the mean (average) points.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-220954286\pr-comment-110941713.json . 
Nifty!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-221077575\issue-221077575.json . 
fixes for the issues mentioned by @mkalininait in #739 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-221077575\pr-115412623.json . 
fixes for the issues mentioned by @mkalininait in #739 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-221377813\comment-293708870.json . 
I've tested it quickly. Do I get it right that we added one column with the corrected average to the table?
I'd suggest to round the numbers to two decimal places. Other than that, it looks interesting and promising. I'd probably merge it. However, I still need time to look at the numbers more thoroughly.

Thank you Carsten and Robin!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-221377813\comment-293746267.json . 
I think we should add some very high level tests. I would create 2 reviewers, 2 application and some arbitrary ratings. then we run the inline-code and record the outcome and do assertions on that. the algorithm looks deterministic, so we should always get back the same results. this way we run the code at least and it allows for some basic refactoring. it also does not complicates the tests too much.

what do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-221377813\comment-293816749.json . 
Thank you for your feedback, @mkalininait and @beanieboi. 

@mkalininait yeah, rounding it would make sense. I did not add any rounding because the average and mean values were also not rounded. Would it be okay to round all floats in the rating table after after we've merged this PR?



Yes, that's right.

@beanieboi Doing a couple of high-level tests is a very good suggestion. We've started already and will continue later.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-221377813\comment-294109140.json . 
Thank you for your feedback, @klappradla! 

I've just pushed our basic test coverage (and the rounding to the 2nd decimal). I'm gonna merge now since this is non-destructive and just adds another column to the ratings table.

@mkalininait, @neumanrq and I had a quick call and looking at how the adjusted ratings fare with actual production data and Maria's expertise in interpreting its effects. We had mixed feelings. We discussed taking the variance into account; Robin and I have scetched out an implementation but we'll leave that for another PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-221377813\issue-221377813.json . 
Targets rails-girls-summer-of-code/selection_process#60.

Big shoutout and credit to @neumanrq :green_heart: 

Oh and yes, no tests :crying_cat_face: Not proud of it. But since it's so dependend on the actual data, we skipped it for now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-221377813\pr-115626354.json . 
Targets rails-girls-summer-of-code/selection_process#60.

Big shoutout and credit to @neumanrq :green_heart: 

Oh and yes, no tests :crying_cat_face: Not proud of it. But since it's so dependend on the actual data, we skipped it for now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-222691897\comment-295207514.json . 
:waving_hand_sign: @klappradla .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-222691897\issue-222691897.json . 
I was annoyed during the rating process that every time I submitted a comment before rating an application all my entered data would be lost, so this should fix that.

Maybe it would be wise to have some integration testing for stuff like this, then again it is a bit hard to implement those, any opinions?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-222691897\pr-116515957.json . 
I was annoyed during the rating process that every time I submitted a comment before rating an application all my entered data would be lost, so this should fix that.

Maybe it would be wise to have some integration testing for stuff like this, then again it is a bit hard to implement those, any opinions?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-222691897\pr-comment-112263887.json . 
Is there still a non inline-code form somewhere? If not, one could get rid about the inline-code as well as everything related to inline-code and inline-code since this won't be used for the ajax request anyways.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-222691897\pr-comment-112263916.json . 
Hm, maybe out of the scope of this PR, but I kinda don't like that we here first query for the comments and then **again** for the comment's user *(even though we in the end only want his or her name...)*. Do you think it would make sense to add something like a inline-code method to the concern used to make model commentable that would do a inline-code? One could then eventually also simplify the helper method used here a bit...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-222691897\pr-comment-112265219.json . 
Personal preference, but I prefer to use data attributes, e.g. `data-behavior="comment-container" for things related to scripting in order to be able to fully leave IDs and classes to styling. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-222691897\pr-comment-112266945.json . 
I'd add a inline-code here _(probable need to switch the input to a button then)_, users will probably hit the button multple times if there's no direct feedback and I currently don't see an option to delete a comment again.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-222691897\pr-comment-112806670.json . 
Yes, the CommentsController is used all over the app, fore example projects are comment-able:.
URL.

The following models seem support comments:.
- Application
- Activity
- Project
- Team

.
#rails-girls-summer-of-code/rgsoc-teams\issue-222691897\pr-comment-112807240.json . 
Generally in favor, but I would do this in a separate PR. (Also affects all sorts of parts of the app.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-222691897\pr-comment-112807590.json . 
Yep, totally agree :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\comment-296434949.json . 
Failing test is *"just*" a flaky spec I think - restarted it..
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\comment-297129826.json . 
@F3PiX @klappradla thanks for noting / looking into the mobile thing, did not realize this when I looked at the boostrap classes. I'll try to fix this as soon as I have the time.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\comment-297412982.json . 
Whoohoo, I'm excited about this :person_raising_both_hands_in_celebration: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\comment-298427112.json . 
@klappradla @F3PiX I (think) I've fixed the avatar collapse issue by just hiding the image collapse in the xs breakpoint, any comments?

!current solution

.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\comment-298749085.json . 
Good idea @michaelem :flexed_biceps:  - don't know why I had it up that complicated in the beginning... Guess we're good to :ship:  then.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\comment-298752390.json . 
Sorry, cannot deploy right now, there's a problem with bundler missing on Travis - see URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\comment-298754439.json . 
seems like a suggestion for a workaround is to add 
block-code.
to our travis.yml file, this should fix the issue momentarily. 
We can always try it. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\comment-298761961.json . 
Deployed and reverted it again afterwards @alicetragedy :winking_face:  - I don't wanna switch to the legacy builds :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\issue-223557896.json . 
Remove some global css directives to make way for applying more standard boostrap buttons instead of default submit buttons.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\pr-117105793.json . 
Remove some global css directives to make way for applying more standard boostrap buttons instead of default submit buttons.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\pr-comment-112813112.json . 
Why inline-code here? I'd intuitively have gone with inline-code for the submit and inline-code for the clear button.
But probably comes down to personal preference after all :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\pr-comment-112818751.json . 
Ah, that was just the way it was before - I just did not change it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\pr-comment-112819133.json . 
fixed in URL.
(review got detached by my rebase)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\pr-comment-112819880.json . 
UX nitpicky, but: I called the button 'Go' because the directive "Search" is already in the placeholder. If you change the button text to 'Search', I would change the placeholder as well. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\pr-comment-112819915.json . 
Ah, any preference about reverting the button or changing the placeholder?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\pr-comment-112820047.json . 
Well, I am biased of course. Then again, I hate 'Search' on buttons LOL.
If there are no complaints from users, I would vote for reverting.   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\pr-comment-112830892.json . 
I'm not 100% sure why I extended so many classes... Guess it had something to do with how I wanted the collapsed, mobile menu to look like, it has a slightly different structure then the normal one.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223557896\pr-comment-112831100.json . 
So just for a quick reference: with dropping these classes, you end up getting an extra empty dropdown:.
!screen shot 2017-04-23 at 13 02 03

vs. the *"old"*:.
!screen shot 2017-04-23 at 13 07 56

.
#rails-girls-summer-of-code/rgsoc-teams\issue-223669321\comment-296811405.json . 
You mean because people want to e.g. use their own specific user with a password or use a completely different database name @carpodaster? I honestly did not think about this use case :see-no-evil_monkey:.
I expected this not to be a common thing to do... Or at least I'd expect the people who do this to also be used to taking the necessary actions to not accidentally commit this file..

Do you see the problem for newcomers to Rails / the project or for anyone?

A tiny disadvantage I see with not having the file under source control would be not being able to set things like the pool size. Heroku also has a blog post on the topic of inline-code files where they mention this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223669321\comment-298081077.json . 
Hm, does anyone have an idea how to solve this in a better way? I'm not too familiar with Heroku...
Otherwise, I think it's fine to close this again :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223669321\comment-298316294.json . 
Ok, could not come up with a better solution, let's close this :waving_hand_sign:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223669321\comment-298343823.json . 
Sorry, @klappradla, didn't mean to sit this one out. I couldn't come up with another solution, either.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223669321\comment-298344538.json . 
No worries @carpodaster - not that important after all :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-223669321\issue-223669321.json . 
Looking at the configuration for the production and staging apps on Heroku, I found the current database config unnecessarily complicated. We do not provide a inline-code with a inline-code section, so Heroku just creates a default one after each deploy. However, recent versions of Rails allow to specify the DB connection via a url *(which Heroku provides us)* - see e.g. the comment in a fresh Rails 5 app's inline-code file:.
block-code.

When deploying the app with a inline-code file including an inline-code section, Heroku skips creating a own one and uses this configuration. This will then allow us to have more specific settings, such as the pool size just specified globally for all environments, which is more transparent in my opinion. Rails 5 now also even suggests this in their default inline-code:.

block-code.

However, feel free to close this PR if you think the old setup makes more sense, just wanted to propose this alternative :v:.

PS: I adapted the Readme and inline-code accordingly. There was a special *warning* section about Postgres on OSX - I could not verify this being an issue any more, so I removed it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-223669321\pr-117166983.json . 
Looking at the configuration for the production and staging apps on Heroku, I found the current database config unnecessarily complicated. We do not provide a inline-code with a inline-code section, so Heroku just creates a default one after each deploy. However, recent versions of Rails allow to specify the DB connection via a url *(which Heroku provides us)* - see e.g. the comment in a fresh Rails 5 app's inline-code file:.
block-code.

When deploying the app with a inline-code file including an inline-code section, Heroku skips creating a own one and uses this configuration. This will then allow us to have more specific settings, such as the pool size just specified globally for all environments, which is more transparent in my opinion. Rails 5 now also even suggests this in their default inline-code:.

block-code.

However, feel free to close this PR if you think the old setup makes more sense, just wanted to propose this alternative :v:.

PS: I adapted the Readme and inline-code accordingly. There was a special *warning* section about Postgres on OSX - I could not verify this being an issue any more, so I removed it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-228540716\comment-307036125.json . 
Related to this issue: URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228540716\comment-307090406.json . 
Sorry, I closed this PR by accident. Reopened it already.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228540716\comment-307934710.json . 
Hi @neumanrq First of all, sorry for not showing up for some time. We had an exhausting selection and then were exhaling for a couple of weeks :D 

I've tested this PR on the production data and prepared a spreadsheet where you can compare the OLD corrected average and NEW corrected average. I'll gladly share it with you if you give me your gmail account. Briefly speaking, we have 186 applications; 9 applications have absolute difference between the old and new corrected averages more than 0.5; two versions of top-20 applications (sorted by the new and old corrected averages) differ only in 1 application, which is not a lot, but can be significant for those specific people from flesh and blood.

I'm still digging through the theoretical part of the research and will leave my feedback here once I finish.

Thanks again for your work! We really appreciate it!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228540716\comment-328600472.json . 
Thanx a million for your efforts on this @neumanrq :person_with_folded_hands: 
And sorry for leaving this lingering around for so long :see-no-evil_monkey: 

I tbh cannot really say whether or not this fixes the problem we have (plus I don't even recall what the problem was) - but I trust your brain, so I'd just 1, 2, 3 merge this is no one is against it (cc @mkalininait )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228540716\comment-328618137.json . 
Thanks @klappradla for taking care :) 

Oh yes, I'm completely aware that this is hard to jump in. I'm still convinced these changes will fix the problem described above. I should take the time and do a little write-up to clarify and document the motivation behind these parts for you, the other maintainers, and also future-me :grimacing_face:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228540716\comment-328618851.json . 
Anyways :heavy_black_heart:️:yellow_heart::green_heart::blue_heart::purple_heart:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228540716\issue-228540716.json . 
When @carpodaster  and me have proposed the first version of reviewer strictness computation I made a mistake because of oversimplification. As @mkalininait correctly pointed out, our current formula gets slightly unfair when the amount of ratings is not equal for all reviewers.

Because I was a bit confused at all I started formalizing our problem en détail here, where the new formula is taken from (It is the formula for inline-code, currently Definiton 9 on page 5).

The short version is: After merging this, the strictness will be computed by determining the expectation value for each reviewer and comparing it to the "overall" computation value, instead of a more simple comparison of "amount of points assigned by reviewer A" with "amount points assigned by an average reviewer". 

I'd love to take @carpodaster into account: Maybe we could pair on this during next week and check it against real data. Of course, everyone is invited to ask sceptical questions on this :eyes:  :smiling_face_with_open_mouth_and_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228540716\pr-120485391.json . 
When @carpodaster  and me have proposed the first version of reviewer strictness computation I made a mistake because of oversimplification. As @mkalininait correctly pointed out, our current formula gets slightly unfair when the amount of ratings is not equal for all reviewers.

Because I was a bit confused at all I started formalizing our problem en détail here, where the new formula is taken from (It is the formula for inline-code, currently Definiton 9 on page 5).

The short version is: After merging this, the strictness will be computed by determining the expectation value for each reviewer and comparing it to the "overall" computation value, instead of a more simple comparison of "amount of points assigned by reviewer A" with "amount points assigned by an average reviewer". 

I'd love to take @carpodaster into account: Maybe we could pair on this during next week and check it against real data. Of course, everyone is invited to ask sceptical questions on this :eyes:  :smiling_face_with_open_mouth_and_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228555756\comment-303942813.json . 
:confetti_ball: Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228555756\issue-228555756.json . 
The country is a required field, and now the user can tell before they get a warning inline-code .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228555756\pr-120493804.json . 
The country is a required field, and now the user can tell before they get a warning inline-code .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\comment-301892035.json . 
Re: my refactor fest. I'd really like to refactor the Conference's inline-code to a DateRange object. I think the correct order is do the refactoring first, and the new validation afterwards. 
So, two questions: 1) Do you agree with the refactoring itself?
2) If so, should I do that first? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\comment-301902795.json . 
On refactoring vs. feature first: do as you wish :victory_hand:️ 
It totally depends on the state of the code base and how easy it is for you to work with its current state. The "classic" approach is feature first, then refactoring. But of course, if that part of the codebase has not been touched in a while or whatever other reason one could find, it may of course also be way more efficient to do the refactoring first.

Sometimes you even know upfront, that you cannot use any of the existing code - it makes of course sense to just throw it all away and implement your new way of doing things from scratch then.

**TL;DR** do however it suits your workflow to best archive what you want to.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\comment-302509215.json . 
I leave the daterange refactor for after this one is done.
Re: Removing/simplifying the application helper method: see the commit message.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\comment-302517563.json . 
New application helper method 
<img width="675" alt="new application helper" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\issue-228858288.json . 
Closes #503 (bullet point 2)
Replacement for #552 

- Add custom validator method + specs + factory
- Minor cosmetics.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-120703983.json . 
Closes #503 (bullet point 2)
Replacement for #552 

- Add custom validator method + specs + factory
- Minor cosmetics.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116611913.json . 
Okay to add this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116612816.json . 
These tests are related to formatting the location and the dates in several views, handling the layout of conferences with and without info with dates.  
Now with the inline-code, is that code still relevant? (For example, existing records.) Or should it be removed.     

.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116613946.json . 
I removed the tickets, because they are not a requirement for validation. Plus, the only test that refers to the ticket attributes, overrides it.
(Copied from old PR)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116832712.json . 
(Regrouped and reformatted for better readibility.)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116846918.json . 
If the view helper is no longer used, yes, remove both, the helper and the tests. If it is still used, I don't see a point in removing the tests for it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116848278.json . 
It's maybe just aesthetics, but I personally prefer inline-code over inline-code. inline-code is a left-over from Rails 3, inline-code essentially does the same and is in my opinion also descriptive enough. So since it's Rails 5 now, I'd suggest to use inline-code:v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116864600.json . 
I'm not sure if I get this correctly here :see-no-evil_monkey: 

What's the point in **either** using strong parameters or just an empty hash? Aside from that, in what situation would you need the empty hash?

If that's not needed, I'd suggest to just use plain old strong params here, so:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116866177.json . 
Semantically speaking the check for whether or not inline-code and inline-code are present should probably go here - otherwise you won't want to validate this at all. So you could for instance a a proc here:.
block-code.

So later on, you can use shorter validation method:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116866496.json . 
Just out of curiosity, what's the benefit of putting both values in an array? Isn't
block-code.
Doing exactly the same?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116866646.json . 
Guess so. Why not?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116867290.json . 
I'd prefer to also use inline-code for the dates. As far as I can remember (I don't know this exact gem), there should also be the possibility for ranges, etc. And for making sure that inline-code is after inline-code, you can also reference inline-code when generating the value for inline-code.

Not using inline-code would result in more or less always the same times throughout one run of the spec suite and therefore put us more away from "real world" I guess.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116867449.json . 
This example is missing an expectation.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116868595.json . 
Using inline-code anywhere within a spec fine is kind of an *"rspec smell"* :winking_face: 

The purpose of the inline-code block would be to group some examples. So here, this could for instance be:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116870181.json . 
It's a common best practise and in my opinion also increases readability to leave a blank line between inline-code and the first example.

I'm also in general not sure about the use of inline-code here? I'm not working with Rails on a day to day basis, but from what I remember, the inline-code field is only appended to a model and updated accordingly if inline-code is called... So I'm not sure if your expectation here actually does what it should.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116870798.json . 
Personal preference, but I'm not a huge fan of the inline-code gem (I would love to remove it from the Teams App :winking_face:  ) since it also continues to ship matchers from RSpec < v3, such as inline-code... In my opinion there's probably a reason why this is no longer in RSpec.

How about just using plain RSpec here?
block-code.
Shouldn't it do the same?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116919592.json . 
IIRC,  the has errors matcher internally calls inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-116926373.json . 
Ah, would make sense @carpodaster, thanx :person_with_folded_hands: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117085973.json . 
Which reminds me: are there currently records of conferences without the dates set?
I don't have access to the database. 

(As far as I can see, the input form that prepopulate the dates was present from the beginning of the Conferences model   ) 


 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117088672.json . 
Also ancient code. I am not sure when I should and shouldn't touch existing code that is not explicitly part of the issue I am working on. 
I really _like_ the concept of leaving code cleaner than you found it, but isn't that the opposite of doing one thing at the time? (Refactor hat or Feature hat, IIRC) . 
How do I know when to clean up, or when to leave it alone? 
   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117107827.json . 
I had a quick look into the current production data - could not find any conferences with inline-code or inline-code set to inline-code. So I guess that's not a problem...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117108799.json . 
You usually know it when you remove it, run the tests and everything still works :winking_face:  But yeah, risky, let's just focus on what you actually want to change.

I also had a quick look at the whole controller code. There's this line:.
block-code.
This for instance causes looking for a non-existing conference to just create a new one instead of raising an error (Record not Found) - so that's why the hack with the empty hash exists :electric_light_bulb:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117115694.json . 
:thinking: It looks is doesn't after all. 
Without inline-code inline-code is always empty. 
I can either add inline-code, or do 
inline-code (and skip checking the error). Does it matter? 



.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117116466.json . 
Thanks for checking :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117323738.json . 
(Noticed the CheesyLingo lib in the FFaker gem ^ ? That was created by Team Cheesy during Soc15, and dedicated to SoC.) #thingsrailsgirlsdo.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117361351.json . 
block-code.
would generally be fine, if you can make sure that the error is not triggered from a completely different validation. So if doing it like this maybe also quickly check if the subject otherwise is valid

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117362958.json . 
Please remove the extra '#' *(or tell me what's the purpose of this :winking_face: )*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117362985.json . 
Again: Please remove the extra '#' *(or tell me what's the purpose of this :winking_face: )*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117363350.json . 
Is this a scenario that could ever happen? As far as I understand it, there are presence validations on these fields already...?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117364445.json . 
Since the helper method is already doing quite a lot, I would suggest to also move inline-code and inline-code there. It looks kind of weird to me, having a rather long method called inline-code not returning the actual links in a *"view-ready*" format.

What do you think?

It would also make this list item a bit cleaner:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117364547.json . 
Same as for the other conferences link: I would suggest to move things into the helper if it's already there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117376649.json . 
It's a feature ;-) Like an H2, under H1 Users. But maybe MaudFlavoredMarkdown doesn't work that good if I have to explain it. Will delete it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117489030.json . 
I totally agreed, but I didn't find a way to solve it. Spent too much time on it, I'll make a note and will try it another time. Okay?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117531401.json . 
Sure :victory_hand:️ 

The easiest way would have been to just append the inline-code etc. to the already existing method:.
block-code.
But yeah, there's probably a prettier way.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117532348.json . 
Well, if the condition is gone now, I'd suggest to make this all a bit smaller:.
block-code.

But well, optional :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117548631.json . 
Yeah, I expected that to work too. And it didn't. That's how my quest started ;-) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-228858288\pr-comment-117549258.json . 
I hate it that I forgot that..... :-)
I'll merge on green. Thanks again a lot!!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\comment-305470531.json . 
Thank you so much!! I am on it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\comment-305778674.json . 
@klappradla Back to you! :person_bowing_deeply: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\comment-305991472.json . 
Thanks @carpodaster and @klappradla!!! Look at how much better it is now!!
I really love the inline-code, and all the changes were super easy to implement because of all the other changes in the beginning of the PR. Even in the specs!! 
I couldn't find a better way for the postponed return statement  . At least not without either repeating the 'elements' or move the 'same day'-check to the end of the method in a ternary.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\comment-306031675.json . 
Hm, you could move inline-code and inline-code out into their own private methods @F3PiX  - then the early return statement would become an actual guard clause. You'd then have to adapt the later mutating of your local inline-code variable...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\comment-306035124.json . 
I tried that. I think I can't use an instance method, because that will return not the string "%-d ..." but a "4 Jun 2017" string. 
I did came up with this, but I didn't like it that much. WDYT?
block-code.

 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\comment-306035443.json . 
Hm, looks fine to me (aside from the 4 spaces intend... :winking_face: ). This is what I originally meant:.
block-code.

But using a constant is of course also a valid solution.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\comment-306295215.json . 
Thanks Max! :balloon: :tulip: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\issue-230399958.json . 
Introduce a DateRange object, which makes it possible to pass a date range instead of a start date and an end date.
For now: only implemented for Conference dates.
Bonus: makes formatting the dates in the view easier and more consistent.
So now we have 'compact ranges' , like inline-code instead of repeating the months and years. Yay!

In the table:.
<img width="934" alt="screen shot 2017-05-22 at 15 37 20" src="URL.

In team profile:.
<img width="824" alt="screen shot 2017-05-22 at 15 38 07" src="URL.

PS Part of an ongoing series of polishing the Conferences.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-121780354.json . 
Introduce a DateRange object, which makes it possible to pass a date range instead of a start date and an end date.
For now: only implemented for Conference dates.
Bonus: makes formatting the dates in the view easier and more consistent.
So now we have 'compact ranges' , like inline-code instead of repeating the months and years. Yay!

In the table:.
<img width="934" alt="screen shot 2017-05-22 at 15 37 20" src="URL.

In team profile:.
<img width="824" alt="screen shot 2017-05-22 at 15 38 07" src="URL.

PS Part of an ongoing series of polishing the Conferences.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-117979463.json . 
Theoretically, we can omit the inline-code check in inline-code in line 23, because inline-code will only remove the month-substring if it is at the end of the string. 
I left it in though, because it is easier to understand. Agree?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-118000257.json . 
The method will raise an error when the input is not a inline-code. So I didn't an inline-code at entrance. Should I?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119585814.json . 
Indentation is slightly messed up here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119585998.json . 
Since this test targets a method on inline-code, rather then on inline-code, I think this would be a better fit for the inline-code model specs.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119586414.json . 
This test appears slightly *"off topic"*, as it does not really test the inline-code class. In my opinion all it does, is to see if inline-code is a public method on a inline-code, which is already obvious through all the other specs in this block... So I'd vote for skipping this all remove the conference here completely.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119587392.json . 
Just a matter of style, but I think the tests are more meaningful if the inline-code reflects the actual "subject" of all expectations. So in order to dry this up a bit and make it more expressive I'd suggest to switch it to be actually inline-code:.

block-code.

And then, for different contexts, all you have to do is change the values for inline-code and inline-code:.
block-code.

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119587423.json . 
Extra whitespace.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119588832.json . 
So, looking at the latter usage, this method only serves as a view helper and is never used solo, but *always* concatinated with inline-code. So why offering direct access to inline-code at all, if it's never actually used? This can eventually make things more complex later on... imagine someone forgets to call inline-code - nothing useful will be rendered.

I would suggest to just rename this method to inline-code and directly return the compact version of it.

This can of course be done in multiple ways:.
a) call the public method in the model
block-code.

b) directly return the compact version, e.g.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119588969.json . 
Copy paste error *(or otherwise I don't understand the syntax)* :winking_face: 

If you want to use required KWARGS, this should look like this:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119589687.json . 
Not sure if the expectations here really fit the test. It does not test whether or not the return value is a inline-code object. Whether or not the internal values of the inline-code object match those of the conference is not really relevant I would say - that's internal logic of the inline-code class.

You could test the call to the constructor:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119589990.json . 
What's the reason these attributes are public? The inline-code class is a simple Service object or "View Helper", I don't see the necessity for these to ever be called outside the scope of this class. So I'd suggest to move them to private:.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119590163.json . 
Trailing whitespaces.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119616066.json . 
I tried everything I could think of, but it wouldn't pass. (I used the correct keyword inline-code.)
It boils down to that after the inline-code-part, inline-code is nil. 

Later, I changed the inline-code method to inline-code chained with inline-code, and then of course the method does not return a DateRange anymore, but a formatted string. 

Help? I think it makes sense to check if the outgoing message is being sent - if I understand the Sandi Metz rules correctly. But how?


.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119625088.json . 
I opt for a). 
One other question: shouldn't I store/memoize the inline-code? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119705610.json . 
Ah yes, would make good sense here I think :thumbs_up_sign: 
The method is used several times while rending some views and it's unlikely that start or end will change (and require recomputation) in between.

Good idea!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119709689.json . 
Hm, ok.

So the last expectation on its own should work. So if you remove the first one,
block-code.
this should pass.

For the rest, maybe you have to add inline-code`
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119711449.json . 
(The Pipeline Operator Influence   inline-code is strong in this one :wink: :heart_decoration:)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119732454.json . 
Are you going Elixir on me? :fearful_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119736793.json . 
The new inline-code method returns a formatted string, so now it is not a DateRange anymore. 
How about: 
inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119924351.json . 
Minor thing: after you defined an inline-code, you'd access inline-code and inline-code without the inline-code *(that's the purpose of the reader)*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119924737.json . 
Hm, I'm not a huge fan of inline-code or inline-code alone, I think it does not tell anything while still being as slow as most other expectations... How about at least do a
block-code.
?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119924953.json . 
Leaving a blank line between the inline-code statements and the subject would be :green_heart: - makes things way better to read.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119925025.json . 
This should now be inline-code instead.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119925230.json . 
It's best practise and a plus for readability to leave a blank line after the inline-code macro.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119930101.json . 
May I suggest naming this method inline-code? That way a inline-code instance can be used in inline-code and it follows a common interface amongst Ruby objects. Reusing method names for similar functionality is very important in terms of polymorphism (Duck Typing in Ruby's case).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119930615.json . 
These are very good test cases! :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119931252.json . 
If the inline-code is to be renamed to inline-code (see other comment), I would return the inline-code instance here, not the string. It's just a minor thing, but to me having the method match a (snake_cased) Ruby class name and also semantically _meaning_ the same thing but returning a string is a bit confusing.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119933744.json . 
This will fail with frozen string literals (Ruby 2.3 feature) as it modifies a String in place. Can you change the `inline-codeinline-code+`?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119933941.json . 
How do you feel about removing the local variables and using the comparison expression directly in the inline-code modifiers below?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119934438.json . 
(Personally, I try to avoid inline-code statements in the middle of a method, but I don't have an idea how to improve it here)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119935180.json . 
+1 thought about this as well @F3PiX 

This would allow to skip the inline-code part in the model (where it semantically doesn't belong) - makes a lot of sense here I'd say.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119941333.json . 
I didn't know that, thanks. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119942317.json . 
Let me try something else.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119991271.json . 
I removed them, not sure why it still shows up here. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230399958\pr-comment-119994211.json . 
I think you can remove the inline-code, I'm pretty sure it is called automatically.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230875372\comment-304006032.json . 
Well @carpodaster these are the minimum changes to get us running with **5.1.1**. While upgrading I saw some room for maybe cleaning up config files, etc. a bit. But I wanted to do this in a separate PR because I a) did not have the time to dive into every detail and b) don't think it is a core part of *"update dependencies"* :winking_face: 

There was for instance this one thing I wanted to ask you and @michaelem for you opinion:.

While upgrading I realized that Rails changed its default serializer for cookies from inline-code to inline-code *(probably already in Rails 5)*. I didn't do the change to the inline-code file because it will break all existing cookies out there :see-no-evil_monkey: 

But I wanted to ask you, if you'd be ok with this change maybe in a separate PR? It would basically just be this line:.

block-code.

The change is not particularly necessary, I just think JSON is a way better and more futureproof format then "Marshal".

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230875372\comment-304210510.json . 


I had some bad experience with it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230875372\comment-304249083.json . 
Oh, :see-no-evil_monkey:  makes sense!

I thought that in our case it would only be auth-related things from Devise. But yes, Github's OAuth gem is probably also accessing the session :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230875372\comment-304333342.json . 
Since inheriting directly from ActiveRecord::Migration now raises an error (URL.
How do you feel about updating old migrations?
Note that the lowest version supported is [4.2], so it would be strange as well. In any case, as of now the migrations are no longer able to run.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230875372\comment-304619832.json . 
Oh, good point @michaelem !
I tbh never ever ran all migrations, I just do a inline-code...

What about just removing all the old migrations @carpodaster @michaelem ? We could of course also update all of them to inherit from e.g. inline-code, but I personally don't see a huge benefit in keeping them around.

Discussion should probably continue in #752 I guess.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230875372\issue-230875372.json . 
Sorry, too tired for a long description.

This basically updates all dependencies and switches to Rails v.5.1.1. There were some special difficulties with deprecations warnings on AR::Dirty, see my commit message in 2a4c1f7.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-230875372\pr-122114664.json . 
Sorry, too tired for a long description.

This basically updates all dependencies and switches to Rails v.5.1.1. There were some special difficulties with deprecations warnings on AR::Dirty, see my commit message in 2a4c1f7.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231289923\comment-306025014.json . 
Blocked. Waiting for decisions in #751  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231289923\comment-307784391.json . 
@F3PiX if it's ok with you, I would start reviewing this once a proper decision has been made about the conferences. Does that work? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231289923\comment-307795443.json . 
Well, let's close it altogether. I think it is going to be obsolete. If not, I'll reopen. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231289923\issue-231289923.json . 
Still working on polishing the Conferences. 

- Reverse toggle, so now it shows Round 1 by default, and toggle Round 2
- Update button
- Move table title from namespace view to shared partial.

Goal: making working on the Conferences table easier and nicer. 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-231289923\pr-122404788.json . 
Still working on polishing the Conferences. 

- Reverse toggle, so now it shows Round 1 by default, and toggle Round 2
- Update button
- Move table title from namespace view to shared partial.

Goal: making working on the Conferences table easier and nicer. 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-304458721.json . 
@anikalindtner Can you shed some light on the conference raffle operations and how we can improve that?  ^
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-304507760.json . 
@F3PiX can we make the conference raffle round an attribute of inline-code? Not that it has to switch automatically by date, but at least that way an organizer can update the global state of the app's behaviour without us having to trigger a inline-code + deployment.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-305998957.json . 
@F3PiX @carpodaster The thing is that we don't do raffles anymore. We pick up friendly conferences, ask for students' preferences within that list and then just try to get them tickets to the preferred conference(s). Last year we used this new process and it worked out well (imo), but we didn't use the Teams App at all. I would really love to see how we can change the Teams app this year to fit the new process better.
The process is documented here: URL Do you have access to it? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-305999636.json . 
Aha! That _is_ different from what I envisioned. I don't have access. Can you share it with me, one way or another?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-306630525.json . 
@F3PiX I've sent you the document on Slack; you can also ping me here and there regarding any details!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-308574743.json . 
@F3PiX Just found this issue: URL Did you see it? 

Here is my thinking on how we could handle conferences in the Teams app (and it basically repeats the ideas expressed in that conference document I sent to you).
1) Use the Teams app to communicate with the students:.
 - Get conferences of their preference;
 - Get confirmation of their attendance (once we have tickets from conference organisers).
2) Don't use the Teams app as a database of conferences; it's much easier and more convenient to use Google Spreadsheets for this.
3) Get rid of the raffle functionality.

Below is the conference functionality I could imagine in the Teams app, not limited by our dev capabilities yet :D Feedback is welcome! Or we can move it to a separate issue if it makes more sense.

**Conference block on the Team's edit page:**
----
**CONFERENCE PREFERENCES** (this part is visible to the students)
Please fill out your preferences regarding the conference you would like to attend as part of RGSoC.
 * (Dropdown) Conference (primary choice)
 * (Dropdown) Conference (secondary choice)
 * (Button) I want to suggest another conference! // opens the form "New conference"
 * [ ] We would like to give a lightning talk if possible
 * (Text area) Comments (e.g. "We would attend conference X only in they provide scholarships / have a LT session" or "We have already applied for the conference X ourselves" etc.)
 * [ ] We understand that RGSoC doesn't guarantee tickets to the conferences of our choice.
 * [ ] We understand that all travel and accommodation costs will have to be covered by us; hereby we confirm that we are choosing conferences which we can afford.

**OFFERED CONFERENCES** (this part is visible to the orga)
 * (Dropdown) Conference 1
 * (Button) Add another conference // adds another dropdown

On the team's page students can press one of two links next to the offered conferences: 
 * Yes, I can attend 
 * No, I cannot attend


**Import/export:**
----
 * It would be great to implement a csv export of all conference data (e.g. conferences#current).
 * It would be also cool if we could import a csv list of conferences to the Teams app (I mean just conference data, without any associations with the teams -- to import the initial list of conferences we want to suggest to the students).



.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-308667499.json . 
@mkalininait  Thanks for the overview. 
So, the conf database stays in Google docs.
 
For the part 'Communicating with the students':  How about we split the thing up in a kind of 'user stories', so we can differentiate between implementation details, design and functionality. Also, we can easily make the user stories actionable, and we can work in iterations. 
Are you okay with that? 

Let's collect the user stories in this issue, because this issue gives the context.  
As an example for the first user stories:.

1) As a conference-orga, I want to import a 'long-list' of the conferences we want to suggest to the students. (Timeline: Around the start of the season.) 
 
2) As a student, I can choose my primary and secondary choices from the conferences longlist.

I will open an issue for each user story when they are ready to be an issue. And we will collect and discuss the background and details in each issue. (like that the import in 1 is an csv from an existing Google Doc, etc).
Wdyt?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-308984574.json . 
@F3PiX Sounds like a good idea! I'll prepare the user stories and put them here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-308997749.json . 
Cool! Now we are going all scrumm-y ;-)
To speed up things, I think we don't need to have more than two user stories upfront. I'll start with adding an issue for the first story. Here: #762 
Edited: adding a link.   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-309138513.json . 
@F3PiX Here are the user stories:.

1. As a RGSoC orga, I want to import a 'long-list' of the conferences we want to suggest to the teams. (Timeline: Around the start of the season.)

1. As a student, I can choose my team's primary and secondary choices from the conferences longlist.

1. As a student, I can add a cool conference which is missing in the longlist; I can choose it as my team's primary or secondary conference then.

1. As a student, I want to provide additional information to my team's conference choices: conditions / limitations / wishes etc., as well as our potential wish to give a lightning talk.

1. As an RGSoC orga, I want the students to be aware of the terms on which we hand out free conference tickets and confirm their (students') obedience.

1. As an RGSoC orga, I want to export teams' conference preferences as a csv.

1. As an RGSoC orga, I want to see team's conference preferences and assign one or multiple conferences from the longlist which are actually willing to give them free tickets (with an optional comment).

1. As an RGSoC orga, I want to know if the students accept our offer.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-310839091.json . 
Ooops. I thought we agreed to make the issues after the previous user stories are done.   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\comment-310901438.json . 
@F3PiX Sorry, I understood it as you wanted to start asap, not as you actively don't want the issues to be in GH.
I talked to @carpodaster , he said that he would take a little task. I'm also thinking of taking a task myself. The thing is that we will start working on the conferences soon (~ mid-July), and it would be great to have the conference features then. And thus, I created the issues. If it doesn't work out (e.g. we don't have enough dev power), that's fine too, I can run the conference process without the Teams app this year again.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231557050\issue-231557050.json . 
Conferences have a inline-code attribute, that indicates if they are in the first, second (or more?) raffle rounds where participants can win a ticket.  

### Problem
As I understand it, this feature is not fully implemented.
- In the dropdown menu (in users/:id/edit) where users can choose their fav conference, all the conferences in the current season appear. I think last year, an orga would manually add the raffle round number to the name of the conf, and the students need to choose conferences that starts with that number. 

- AFAIK there is no way for orga's to mark when the first round is finished. If there were, we could make better use of existing functionality; not only the dropdown menu, but also the (sequence in) the table where conferences are listed, the number of conferences a user can choose per round (see #575 ) etc.

### Solution
-[ ] Add a way to mark the current raffle round, or mark just which raffle round is coming up next.

### Implementation
This is what I am not sure about. Should the end of a raffle round be part of the season? (Other than other season phases, the dates for the raffle are not known upfront.)  
The simplest way seems to be: just add a checkbox or radio button somewhere, that orga's can check to indicate what raffle round is currently relevant. 

What shall we do about this?    .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231897345\comment-304620531.json . 
Hey @F3PiX,

thanx for reporting :person_with_folded_hands: 

For "resetting" the database, or setting up the project from scratch, I usually do the following:.
block-code.

But yeah, we'll need to come up with a solution for the old migrations as well...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231897345\comment-304648659.json . 
:thumbs_up_sign: 
I usually do inline-code. Which is db:drop and db:setup in one. Is inline-code  a different drop than inline-code ? 

But still: any ideas for a solution for the old migrations? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-231897345\comment-304649923.json . 
inline-code is a Postgres command, but probably what inline-code does under the hood anyways.

For the old migrations, I could either update all of them to no longer directly inherit from inline-code or just remove them. I would personally vote for the latter, since in my opinion the migration files **should not be** the source of truth for a Rails app's database schema. There is the inline-code file under version control and that's the one I care about.

I would however love to have a second opinion on that, since that's simply how I interpret certain features of the framework.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231897345\comment-304651047.json . 
( PR to squash migrations from last year: URL )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231897345\comment-305976898.json . 
:glowing_star: :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-231897345\issue-231897345.json . 
Problem:.
Since the upgrade to rails 5.1 in #749  , inline-code results in an error, as reported by @michaelem URL 
block-code.

I had to run inline-code instead, so I could still use the app.

Solution: 
How should this be solved?  

@michaelem @carpodaster @klappradla  


.
#rails-girls-summer-of-code/rgsoc-teams\issue-233006763\comment-305626334.json . 
Also: we "soft-deprecated" certain columns during the preparation for this year's selection process with the promise to then remove them. I would after this is merged go ahead and do this in order to get rid of these "legacy columns" before this year's team starts working on the app.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233006763\comment-305887887.json . 
:face_with_tears_of_joy:  @carpodaster 

But yes, I actually cannot remember ever deleting migrations - thought it would often make sense. Therefore nice that Rails forces us into these new waters :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233006763\issue-233006763.json . 
This adjusts some of the minor things I did not consider a core part of the *pure update* in #749 

1. **Update all dependencies that changed since then**
  Since the 5.1 update, some gems had minor updates - since I get notifications from Gemnasium anyways, I just added it to this PR while I'm already on it.

1. **Adjust the config files**
  I adjusted the config files to better resemble the current state of the art in Rails 5.1. Some options, such as inline-code of course don't work with our app. I also did not opt into auto-reloading via the inline-code gem, since I a) only heard bad things about machines running out of processes and b) it would add another dependency to the app :winking_face: 
I think it's generally helpful to keep the config files clean and up to date if we consider further maintaining and updating the app. Aside that, I also feel it would be more helpful, especially to beginners, to find up 2 date comments and an up 2 date general structure there - since that's what people currently learning the framework are familiar with *(and it's what helps them most to find the respective places in the docs)*

1. **Remove migrations**
  As I explained in #752 , I don't see migrations as the *"source of truth"* for the database schema, that's why there's a inline-code file in version control. And since I don't think we want to rollback migrations forever, it in my opinion should be fine to just remove them. If we want changes, we can still add new migrations...


**Note:** I also updated the Puma config. So before this gets deployed to either staging or production, I will set the inline-code env var there, in order to have the exact same setup as we are running now (1 worker).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233006763\pr-123591222.json . 
This adjusts some of the minor things I did not consider a core part of the *pure update* in #749 

1. **Update all dependencies that changed since then**
  Since the 5.1 update, some gems had minor updates - since I get notifications from Gemnasium anyways, I just added it to this PR while I'm already on it.

1. **Adjust the config files**
  I adjusted the config files to better resemble the current state of the art in Rails 5.1. Some options, such as inline-code of course don't work with our app. I also did not opt into auto-reloading via the inline-code gem, since I a) only heard bad things about machines running out of processes and b) it would add another dependency to the app :winking_face: 
I think it's generally helpful to keep the config files clean and up to date if we consider further maintaining and updating the app. Aside that, I also feel it would be more helpful, especially to beginners, to find up 2 date comments and an up 2 date general structure there - since that's what people currently learning the framework are familiar with *(and it's what helps them most to find the respective places in the docs)*

1. **Remove migrations**
  As I explained in #752 , I don't see migrations as the *"source of truth"* for the database schema, that's why there's a inline-code file in version control. And since I don't think we want to rollback migrations forever, it in my opinion should be fine to just remove them. If we want changes, we can still add new migrations...


**Note:** I also updated the Puma config. So before this gets deployed to either staging or production, I will set the inline-code env var there, in order to have the exact same setup as we are running now (1 worker).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\comment-313114033.json . 
Hey, @F3PiX can assign for me? :) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\comment-313116756.json . 
Hey @juuh42dias Done! 
I think you have the access rights to assign yourself. See in the menu on the right. You can assign yourself there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\comment-313118507.json . 
Oh yeah, i have :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\comment-313189360.json . 
Was it supposed to show like this? The red star icon 
!rgsoc teams app 4

.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\comment-313251719.json . 
I think so, yes! :hundred_points_symbol:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\comment-313254870.json . 
@F3PiX, @carpodaster what do you think? 
!rgsoc teams app 5

.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\comment-313315829.json . 
Looks good! As for the wording: I would name it "Sponsored team" and "Volunteering team"
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\comment-313380346.json . 
That's ok? (Let's PR?)

!rgsoc teams app 6

.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\comment-313381274.json . 


Yes! :balloon: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\comment-313393718.json . 
awesomeeeee! :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\comment-313598741.json . 
Done by #779 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233581177\issue-233581177.json . 
On the teams page, sponsored teams have a red star, volunteers teams have a white star. 
At the bottom of the table, the red star has vanished.
!schermafbeelding 2017-06-05 om 14 56 15
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233699318\issue-233699318.json . 
As the inline-code app runs Postgres 9.5 and there have been some changes regarding inline-code *(and other JSON related things)* between 9.3 and 9.5, I thought it would be saver to also run our CI with the respective version.

However: it's not available on Travis' default container infrastructure, so I had to switch to the (beta) trusty linux).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233699318\pr-124051986.json . 
As the inline-code app runs Postgres 9.5 and there have been some changes regarding inline-code *(and other JSON related things)* between 9.3 and 9.5, I thought it would be saver to also run our CI with the respective version.

However: it's not available on Travis' default container infrastructure, so I had to switch to the (beta) trusty linux).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233700060\comment-306296907.json . 
Oh wait, CI is failing. The failing routing spec has be moved – other than that: yeah!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233700060\comment-306297193.json . 
Sorry, I forgot to run the tests.... :smiling_face_with_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233700060\issue-233700060.json . 
Some prep work before working in the User Info views.

Users Info is a view for orga's only, but lived outside the Orga namespace.
Now it is in the Orga namespace.
Added a link to the Orga dashboard.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-233700060\pr-124052542.json . 
Some prep work before working in the User Info views.

Users Info is a view for orga's only, but lived outside the Orga namespace.
Now it is in the Orga namespace.
Added a link to the Orga dashboard.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-234884698\comment-307784018.json . 
I totally approve of this! +1 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-234884698\comment-315600901.json . 
@carpodaster WDYT?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-234884698\comment-315604070.json . 
Sure, moving it makes sense!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-234884698\issue-234884698.json . 
Orga users can send email to targeted groups via inline-code . The use of this feature is suboptimal. Especially because the mailer is not suited (yet) to play a part in more complicate workflows.

As only orga users use the email functionality, it should live in the orga namespace. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-235012862\issue-235012862.json . 
This removes columns deprecated during the last selection phase. They weren't used anymore, but we decided to keep them around "deprecated" during the selection phase to remove them later on.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-235012862\pr-124996596.json . 
This removes columns deprecated during the last selection phase. They weren't used anymore, but we decided to keep them around "deprecated" during the selection phase to remove them later on.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-235014589\issue-235014589.json . 
Travis currently only deploys the a certain outdated feature branch to the inline-code app, which leads to having to deploy the to the inline-code app by hand which a) can be forgotten and b) does in my opinion not quite fit the purpose of a staging app _(it should have the changes first...)_

So in order to not have the inline-code app fall behind the production app, I updated the inline-code to automatically deploy inline-code to both environments. Any other branch can still be deployed to staging by hand if someone needs to test something - it's just to make sure inline-code is not falling behind.

The only ways I think this can work is by adding a 2nd "provider" to the deploy section _(Travis experts please correct me)_.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-235014589\pr-124997654.json . 
Travis currently only deploys the a certain outdated feature branch to the inline-code app, which leads to having to deploy the to the inline-code app by hand which a) can be forgotten and b) does in my opinion not quite fit the purpose of a staging app _(it should have the changes first...)_

So in order to not have the inline-code app fall behind the production app, I updated the inline-code to automatically deploy inline-code to both environments. Any other branch can still be deployed to staging by hand if someone needs to test something - it's just to make sure inline-code is not falling behind.

The only ways I think this can work is by adding a 2nd "provider" to the deploy section _(Travis experts please correct me)_.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-235223767\comment-307783546.json . 
+1 for removing it; it's an old thing that was put in place to have the different seasons (see here) but was later removed. I can only assume the view was accidentally left there. :)
Do you want to take this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-235223767\comment-307784553.json . 
I am collecting some beginner friendly issues. Not hard to do, but nice starters to see how our PR and code reviews work. :-) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-235223767\comment-307784674.json . 
That is most awesome, @F3PiX ! :tulip: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-235223767\comment-307784923.json . 
yeah that's perfect @F3PiX! Was going to add the inline-code label but I saw that you beat me to it ;)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-235223767\comment-307785100.json . 
It would seem that someone didn't do their job properly when deleting code.

!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-235223767\issue-235223767.json . 
We have a directory with views for events, but there is no model and no controller. 

Can we remove the views? Or should we add the backend?

 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\comment-309231664.json . 
Just to let you know @F3PiX : reviewing this is on my agenda, but I'm in the process of moving, so it will probably take me some days until I find the time...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\comment-310737782.json . 
In a previous commit, a long existing method came up, and it was not clear why it was there.
It looks like it causes trouble for my importer method in an upcoming PR, so I added it to the Spring Cleaning Fest.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\comment-311476831.json . 
@klappradla Back to you :person_bowing_deeply: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\comment-312493311.json . 
@klappradla :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\issue-236284272.json . 
Instead of #750 
Now that the Conference raffle rounds are gone, and we are preparing for a different setup, this PR is preparing the conferences table. 

- Moved title to partial
- Removed toggle in view for round 1 vs 2
- Removed repeated table for second round
- Temp: added round (sortable) to table
- Restored sortable functionality (sortability used to be there, but got lost somewhere)
- Updated button style
- cleanup controller, use regular CRUD setup.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-125889803.json . 
Instead of #750 
Now that the Conference raffle rounds are gone, and we are preparing for a different setup, this PR is preparing the conferences table. 

- Moved title to partial
- Removed toggle in view for round 1 vs 2
- Removed repeated table for second round
- Temp: added round (sortable) to table
- Restored sortable functionality (sortability used to be there, but got lost somewhere)
- Updated button style
- cleanup controller, use regular CRUD setup.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-123904974.json . 
If this controller method does not have any defined answers for other formats then inline-code, I would suggest to remove the inline-code block for the sake of simplicity and readability.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-123905167.json . 
This may come down to personal preference (+ I don't know if this still works with Rails 5.1), but I usually try to have all params in place before initializing:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-123905240.json . 
The forms used for inline-code and inline-code currently use the inline-code helper. Since it seems like there's a inline-code previously initialized by the controller method anyways, I'd vote for getting rid of the inline-code macro and instead use the normal inline-code variable in the views to spare this weird back and forth between view and controller methods.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-123905437.json . 
Personal preference, but since this will probably not be used outside the inline-code action, I'd really like to see the inline-code being explicitly defined there, rather then using the inline-code macro in the view. I generally don't like this pattern and this something like this is way more obvious, especially for newcomers to the app:.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-123905486.json . 
What's your intention here? If inline-code is not present, so either inline-code or inline-code, this will render an empty string. So the behavior would be exactly the same if you'd simply leave:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-123905497.json . 
Why is this an inline-code file if the rest of the app is using slim?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-123905525.json . 
Why is there a whitespace before and after the content? If this is done for layout reasons, then this should be done via css if necessary at all in my opinion.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-123906595.json . 
The excuse is that I thought we were going to get rid of slim. The real reason is that I found slim very confusing, so I always convert to and from erb, and that is not time I feel is well spent. Can you live withe erb here?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-123960510.json . 
Sure - was just wondering if it's on purpose or not.

I'm generally against dropping slim as I think it gives an interesting tiny little "transfer-thinking" effort to the Teams App: HTML is limited and not a programming language. So it just takes a few looks at the docs *(and of course some trial and error)* to express the same things one has in mind for HTML in slim.

But yeah, can imagine it being tedious if you start with a full .erb implementation and try to "convert" it to .slim :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-125182247.json . 
Comes down to personal preference, but I'd prefer this method to be named inline-code as it's more tied to what's actually happening. With before filters being a tricky thing in general, I think being as explicit as possible can still be helpful here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-125182277.json . 
Since we're now no longer using the helper method in the views, it should be fine to switch this to
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-125182282.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-125182338.json . 
Any news on the whitespace story here? I'd vote for removing them and if necessary fix any spacing issues with CSS *(with bootstrap)* :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-125182383.json . 
What's the purpose of this whitespace here? Shouldn't it just be
block-code.
?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-125183759.json . 
... but we still use it in the controller actions. Right?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236284272\pr-comment-125185721.json . 
Yes we do, but not in that *"clever"* way it was used before with utilizing memorization to spare some lines in the controller code. Now, with doing it more or less explicit (I'm not the hugest fan of before filters...) we can spare the memorization part - the helper method will always just be called once.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-309133388.json . 
Hey @F3PiX Thanks for creating this issue.

The set of fields looks reasonable to me. We didn't use any 'notes' last year, and I'm not sure we will do this year. Usually conference's purpose is clear from it's name.

I think it shouldn't be a problem to export only the columns we want in the Teams app.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-310503202.json . 
(@carpodaster or @klappradla or whom it may concern :direct_hit: ) 
I am working on an importer for the conferences. 
Is it okay if I start with an #import action in the admin/conferences_controller? I'd rather start with that simpler solution, instead of the elegant and more complicated setup like for the Exporters. WDYT?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-310894952.json . 
@mkalininait Could you send me an empty csv file, please, exactly like it is when you do 'save as csv' in your Google Doc? Some sample data would come in handy, or I will create them. 
You don't need to filter the columns that we need to import, the importer will filter them out.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-310902277.json . 
@F3PiX Hey, I've sent you the file via Slack. Hope it's useful.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-310915924.json . 
Hi @mkalininait Thanks for the file. Very useful!
It leads to the following questions.
- [x] It looks useful for the students to see the csv's City and Country fields in the Teams app table (instead of the venue, as it is currently showing.) Okay?
- [x] Do the students need to see the csv's Region as well? Or is that only in use for orga's.
- [x]  I made it so that every import updates the conferences that are already in the table. That means that you can make changes in the Google Doc, and only the changes (including new conferences) will be added to the table. (Because you won't be able to edit the conferences in the table.) Okay?

And two requests, because that would speed this issue up:.
- [x] Do you _need_ the year in the inline-code column in Google Docs or can the year be in a separate column (preferably named inline-code)?
- [x] Is it possible that you use 2 columns in Google Docs for the dates: inline-code and inline-code (and make them inline-code-fields as well? 

Thanks!


 
   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-310919991.json . 
For your question on controller action vs. service objects @F3PiX (I suppose the exporters are service objects - I tbh don't know them in detail): starting with the controller action is obviously the best approach. Why **start** things complex? **BUT**: if the corresponding action turns too big *(will probably happen if you parse and validate a CSV file)* I'd highly recommend to move this business logic into service objects and then just call them from your controller method. The main benefit: testability (and of course readability).

Complex business logic does not really belong into controllers, therefore probably testing ones where one violates this may turn out to be unnecessary complex and painful. Having the business logic encapsulated in easier testable service objects and then just testing the interface between the controllers and them is way easier and less error prone.

I hope that answers your question. Again, sorry for being super late to the party :disappointed_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-311011138.json . 
@mkalininait The main issue is that I need a column with a unique field to identify conferences. The title of the conference is not suitable for that. (Because you won't be allowed to change the title at all.) Do you mind to add a column to the Google Docs with a uniq code? For instance : 2017001, 2017002 . I think you should be able to let Google do the counting. The '2017' part would be the inline-code when we offer the conference.  
And in that case, opposed to what I asked yesterday, you can leave the year in the conference title, and we won't need a separate column with the year.  
Would this be complicating things for you? 

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-311066549.json . 
@F3PiX Sure, I can add a uid to the spreadsheet.

To the questions from yesterday:.
1) I think it doesn't matter much how we show location: in one field or two. We started splitting country and city this year, and I can't say if it will be useful or not. But we can try.
2) I actually think that Region might be very useful for the students, because they can only look for the conferences in their region and not struggle with the entire list. Last year we made a Google Form, where all conferences were split in 6 groups with accordance to their regions. I wonder if we could make the same categories in the table/dropdowns in the Teams app.
3) Sounds okay. I guess we can add editing someday in future if we need it, right?
4) Not relevant anymore.
5) Yes, I can do.

I'll sent you the updated csv soon.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-311932473.json . 
I created a preliminary PR in my fork URL so you can see the code. It is a feature branch on top of the new conference table in #761 
- [ ] Question 1: I created a inline-code. 
After I finished it I wondered: shouldn't I instantiate the Importer?
- [ ] Question 2:  I want to add a csv file for the specs. I searched for inspiration in the Webz and in the Teams app, but I can't figure it out yet. Tips?


.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-313132101.json . 
Shouldn't this close on :merge?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-313417072.json . 
@maria 
Hey! Would you mind to change the year format in the Google Doc from inline-code to inline-code ?
The date formatter now reads the date as '17 jan 0013' instead of '13/1 17'.
I can change it in the code, but that is bound to be error prone. So I'd rather rely on the formatter.    .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-315203856.json . 
@mkalininait Hi Maria, You can use the Importer now. See note ^ about the date format in the Google Doc. Enjoy!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316170011.json . 
@F3PiX Thank you so much!!
I've tested it and found one minor issue which I already reported to you on Slack. 
Google exports csv's with the inline-code separator, while in the code you suggest the inline-code separator. Other than that the feature looks great to me! <3.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316326407.json . 
@mkalininait

~I can't reproduce the issue. Your .csv test file does upload here locally, and don't when I change the inline-code.
Can you please try to upload the _first_  test file that you sent to me? (Without changing the code/inline-code).  And please use the exported version, i.e. exactly what you sent to me. Not exporting the Google Doc again. For now. :thumbs_up_sign: ~

EDIT: Actually, it doesn't matter, because you are the one doing the uploads. I'll change the col_sep to match your settings. One thing though: do you always export and upload on the same computer?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316332085.json . 
@mkalininait  ^ edited.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316351853.json . 
I'd like to hear Carsten's opinion first, then report back to you :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316646924.json . 
@mkalininait @F3PiX we need to find a way how to make Google export its data in a deterministic format. If it's format A today and format B tomorrow (or same day, but different computer), we'll never find a reliable CSV col_sep setting.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316657893.json . 
.csv is not a standardized format, so some apps use comma, the more modern way is to use semicolon.
Google, same as for example Numbers, don't allow to set export settings. Only import settings. 
That is why I proposed to use the .tsv, that is for all OS's, apps, computer settings and dates ;-) the same. 
Starting point was that Maria needs GoogleDocs for the conferences management, and that has limited possibilities for straightforward export. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316666511.json . 
@F3PiX I'm not so much concerned about which format we go for (I've never heard of .tsv before, but that doesn't mean anything :upside-down_face: ). I took it from your conversation that Google Docs exported the same data with different column seperators, once with semicolon (that you used for implementing the feature) and now with comma. Or was the first one (with semicolon) not exported from Google Docs?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316671014.json . 
As I know now: Google docs always exports comma. I can't recall exactly what happened, but I probably opened it on my Mac, and then it gets saved with semicolon. That is why the .csv format is not solid enough; this can happen to any user, who wants to check the exported .csv file before uploading. 
.tsv solves all that. (As I understand it, it is the same as you get when you open a .csv file in a text editor. But with the .tsv extension).  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316672144.json . 
Hey @F3PiX I tried uploading the first csv file I sent to you and I got the same error with the separator. 
It confuses me so much. From what I see and understand, Google always exports csv with the inline-code separator; both files I sent to you have the inline-code separator for me. I never edit/save these exported csv files in any editors, I just import what I exported from Google.
Did you use any editors to make changes in the csv files before uploading them? Maybe they saved the files with the inline-code separator (e.g. Numbers does that). I don't have any other ideas ¯\_(ツ)_/¯

cc @carpodaster 

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316673377.json . 
So when Google is unable to configure the export format, how do we tell it to use tabs instead of inline-code ? Does inline-code get us anywhere?

Does Google deterministically  enclose fields (=table values) in inline-code quotation marks? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316674446.json . 
@F3PiX @carpodaster As per the tsv format I'm a bit concerned about it. It's not very well-known; many applications can't export to tsv (e.g. Numbers). It will probably work for now, but I don't know if it will be convenient for future generations.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316674908.json . 
@carpodaster You can tell Google to export either to csv or tsv, but can't define settings.
If there is the inline-code symbol in a cell, Google Sheets will put inline-code around the value.
E.g. inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316676922.json . 
@carpodaster Misunderstanding: you _can_ configure Google Sheets to export to .tsv, you just can not set export settings within the chosen format. So, we tell it to use tab separators by telling to export to .tsv
AFAIK in .tsv, we don't care about the quotation marks, because it will never interprets inline-code as two columns. 
I added a tsv test file to PR #798. 
How about the YOLO way: merge the PR and let Maria test in production? Nobody else is using the feature anyway. 
EDIT:  or can you merge it into inline-code and not in inline-code?

@mkalininait We are not exporting .tsv, we are importing it.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316681910.json . 
@F3PiX Yes, but in order to import a tsv, we need to export it from somewhere :) Now it's Google Sheets, but I don't know if it will stay this way when someone else starts working with conferences.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-316683360.json . 
I still don't get the issue with csv :/ Google exports csv with the inline-code separator; it also wraps values containing inline-code in double quotes. The current importer processes such files perfectly, if we change the separator from inline-code to inline-code in the code. The only limitation is that we shouldn't open/edit/save exported files locally (in some editors) before importing them in the Teams app. But why would we do it anyway, if we can work with them in Google Sheets before exporting?
I'm sorry if I'm missing something @F3PiX @carpodaster .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-317160910.json . 
@mkalininait I agree. I thought the problem with Google's inline-code CSV was that it doesn't quote the inline-code in its field values. If it does, Ruby's CSV lib should handle this without problems: the inline-code option is set to inline-code by default.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-317171016.json . 
Okay, let's do it the YOLO way and test it in production :-)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\comment-317396547.json . 
@carpodaster it does for me:.

| | A  | B | C |
| - | ---- | ---- | ---- |
| *1* | a | b,c | d |

Gets exported as

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236446651\issue-236446651.json . 
Goal:.
Orga user wants to show the students a 'long-list' of the conferences. The conferences are currently managed with a Google Doc. 
Later on, students will interact with the list, to choose their preferences, suggest other conferences etc. The scope of this issue is only uploading the file. 

- Add a file importer, so that an orga can upload a csv-file. The contents will be shown in the existing Conference table view and saved in the conferences db table. 
- Update the existing conference table structure to show the relevant fields.* 
- Write specs. 

* @mkalininait :   
- I am thinking: conference inline-code, inline-code their websites, inline-code, inline-code, for now. 
Maybe also: what the conference is about. Do you collect that kind of data in your Google Doc? For example , front/back end, language specific, devops. Otherwise we can add a simple 'notes' column. 
- In Google Docs, can you make a csv-export with just the columns we want to show? Or should we make it so that the not-listed columns are ignored. 
  
**UPD by @mkalininait:**
 * The entire idea: URL.
 * Full list of conference user stories: URL.
 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-236454500\comment-313204344.json . 
Has any possibility for work together on this issue? Me and @branquinhoaa. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236454500\comment-313251486.json . 
The conferences controllers will change dramatically after #775 
I'd suggest to wait for that one, or be sure to check with your coaches/mentors. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236454500\comment-318816919.json . 
I think the conference controller has undergone its heavy-weight changes now. It would be ready for refactoring.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236454500\comment-322040544.json . 
Is this project open to pull requests?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236454500\comment-322601982.json . 
Sure it is @m-gb :hugging_face: 
Please check our Readme for all general information and especially our contribution guide on how to get involved :books: 

**Before doing anything**, please be sure you have read and understood our code of conduct :unicorn_face:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-236454500\comment-325214102.json . 
Hi @klappradla, I've created PR #842 to address the issue, let e know what you think!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236454500\comment-325915873.json . 
Closed via URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236454500\comment-325916460.json . 
@m-gb :clapping_hands_sign:  :party_popper:  🥇 
Great to see this solved, and chapeau for the way you solved it. :person_bowing_deeply: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236454500\comment-325917849.json . 
@m-gb Just to confirm:  I noticed that you picked one of the few issues that are labeled beginner friendly, and not rgsoc17. You are very welcome to pick issues with the rgsoc17 label as well. Just check if someone is assigned, or ask in the Issue if it is available. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-236454500\issue-236454500.json . 
There are currently two conferences controller, controllers/orga/conferences_controller.rb and controllers/conferences_controller.rb.
They share a few methods, like the methods for sorting the columns. 

- [x] Propose a solution to make those methods shared by the two controllers.
- [x] Make it happen :rocket: 
  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\comment-310365459.json . 
Cool!!!!! I have to run now, will circle back later!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\comment-310416861.json . 
 :clapping_hands_sign: :clapping_hands_sign: :clapping_hands_sign: , @acnagy . This looks really helpful. :balloon:  Maybe we can ask the new RailsGirls team to give feedback, when they are going to do their own setup.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\comment-310652766.json . 
Thank you so much for all the feedback @F3PiX @alicetragedy - it's mega helpful! So glad to hear it's a start in the right direction :sparkles: Definitely more commits incoming - and I know I have some digging to do to clarify the testing setup. :rocket: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\comment-310897965.json . 
I just got thrown out of the app locally, because I had to confirm my account. 
I think that should be in the quick start steps somewhere. 
block-code. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\comment-349782871.json . 
Hello @acnagy et al. Just wanted to check on the status of this one. It already adds so much good stuff, can we maybe descope the _All The Things_ to _85% Of The Things_ ? :winking_face: … and bring it to a mergeable state? Is there anything one can help you with? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\comment-350264959.json . 
You know, @carpodaster - 85% of All of The Things sounds lovely (and achievable) to me. I’ll work on getting this back up to mergeable this weekend and ping you for a review soon! Really appreciate the follow-up... Thanks again! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\issue-237819402.json . 
This PR is for re-writing the readme and relevant docs for the teams app - see URL for the discussion.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-126973200.json . 
This PR is for re-writing the readme and relevant docs for the teams app - see URL for the discussion.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123493284.json . 
<3 REALLY love all the changes! 
About the term 'log URL':  I think this is about the StatusUpdates. Shall we call it 'daily log with status updates' here? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123493588.json . 
Not sure if this needs to be in the Readme. Or maybe I dont understand it. The Readme _is_ in that endpoint, isn't it? In that case, I'd vote to remove this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123494740.json . 
I would really love if we could elaborate a bit. Because I think we don't do that always? Maybe we should add some rules of thumb to the contribution guide. (I didn't check if it already is in there.) 
Maybe change it here to: "We do our best to keep it simple, to lower the entrance barrier for RailsGirls Summer of Code students."
- RGSoC students instead of RG students
- contribute or something like that, instead of involved, because involved they are the moment they are students.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123494872.json . 
:clapping_hands_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123495041.json . 
Maybe make 'setup db' a separate step, step 2. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123495221.json . 
I am _pretty_ sure that Mac users don't need to do this, and it even will be extra complicated if they do. Anyone? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123495412.json . 
See my remark ^
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123495827.json . 
Maybe change the sequence: First the setup _with_ dependencies, then the setup without. ??
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123538667.json . 
O, wait. It is about the endpoint that aggregates the team's GH events. Ignore ^
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123539258.json . 
After burner: "We do our best to keep it simple, to lower the entrance barrier for RailsGirls Summer of Code students, and to welcome everybody else who wants to get involved in Open Source." .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123540013.json . 
Could you add a todo to the PR description for this wiki page? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123540931.json . 
To be honest, I don't know what this means, or what I should do if I had not my setup up and running. :monkey_face: Did you understand what to do? Or did you have to figure something out that can be useful to beginners?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123543545.json . 
I'd vote to tell here only how to run the tests locally. Info about writing tests should either be more helpful, or in the contribution guide, or not here. Wdyt?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123545457.json . 
On second thought: I think it's best to leave the Testing, Coverage and Deployment paragraphs as they are now. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123725717.json . 
@F3PiX I think this is related to the “Sources” (url from external blog) so it should be correct like this, even though maybe we can think about rephrasing inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123725833.json . 
nitpicking: maybe we can replace inline-code with inline-code (or a similar word) to avoid a repetition of the word inline-code (as an adjective and a noun) in this sentence?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123726146.json . 


I second this — would be really great so we don't forget :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123726332.json . 
might be helpful to add here a link to our inline-code file (link: URL What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123726526.json . 
I believe I had to configure a database for this (by creating the postgres user and stuff)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123727152.json . 
small typo: inline-code should be inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123728380.json . 
Maybe it would be clearer to point out that inline-code needs to be created? Something along the lines of,

Copy the contents of inline-code to a new file inline-code. You want to make sure you modify the settings and add correct credentials so it can connect to your postgres server (see below).

Would that work?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123728474.json . 
Small typo: inline-code should be inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123733072.json . 
Yeah, it is, but that is the business logic. From a readers point of view I think it mostly matters that there is a daily status update. The difference between an status update from within the app, and an imported update from an url doesn't seem that important here?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123734890.json . 
in that case, “Github repository” should not be a separate entity in this list either, since it's also listed as a source type.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123735522.json . 
I checked. If you are logged in with your admin account, your OS username is by default the Postgres username, with no password. 
Adding a dedicated user does no harm, so we can leave this in. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123735937.json . 
I honestly can't remember whether the GH stuff goes into the daily status update (probably not though? I'd have to check) but maybe if that's the case filing everything under “daily log with status updates” makes the most sense. :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-123736195.json . 
would adding the above sentence that you suggested @F3PiX be enough, or do you think we should elaborate more? I don't think we have any specific rules of thumb about this in the contribution guide but that can also be added if you think that's relevant!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-127091128.json . 
Ah... ok - yeah, no worries. I'll rework this a little. I wasn't quite sure what it was, so I assumed it was functionality I didn't know about... Anyhoo - thanks for the discussion/background  :heavy_black_heart:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-127099010.json . 
Thanks for the comment! Yeah, that section was confusing. I kept the information, but am re-writing. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-127099127.json . 
That's a great rewording :person_raising_both_hands_in_celebration: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-127099349.json . 
Works for me :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-127180589.json . 
no worries @acnagy, your “outside” perspective is actually extremely useful... Makes us realise that there are some things even _we_ are not clear about. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-237819402\pr-comment-155364049.json . 
This is not correct when postgresql was setup with homebrew (at least my psql-from-homebrew uses my currently logged in user account)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238123221\comment-311580200.json . 
:thumbs_up_sign: very good!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238123221\comment-311617399.json . 
I think it's a good idea. Additionally, it would be cool to show applicants their application in the Teams App (even after the applications deadline) with the status "Submitted". .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238123221\comment-361333077.json . 
Up next: show a link to the submitted application.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238123221\issue-238123221.json . 
When applicants submit their application, they don't get a confirmation that the application has gone through. Furthermore, after the application deadline, applicants don't have access to their application anymore. 

I think a solid way to solve both problems at once would be to send a “copy” of the application data to both applicants. This would allow them to have a basic confirmation of the application going through, as well as a copy of their answers for future reference. This will be especially helpful before the summer, when applicants might want to review the features or issues they wanted to work on and adapt them to current needs of the project.

Any thoughts?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317340\comment-316140056.json . 
@mkalininait we would like to do this, but I am almost sure that the previous issue has to be merged before I start this one. Am I right?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317340\comment-316687301.json . 
@branquinhoaa Hm.. Do you mean this PR? URL This task looks independent to me. I *think* you can start working on it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317340\comment-318816992.json . 
@mkalininait is this solved by #802 ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317340\comment-319207675.json . 
@carpodaster jup!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317340\issue-238317340.json . 
The idea: URL.
Full list of conference user stories: URL.

**User Story:**
As a student, I can add a cool conference which is missing in the longlist; I can choose it as my team's primary or secondary conference then.

**Things to do:**
On the Team's page, in the Conference preferences block (see Issue #767) add a new button: "I want to suggest another conference!", which opens the form "New conference" (this form existed at one point but I'm not sure we can re-use it). The form should contain the same fields which we import with the Importer (see Issue #762), except "id".

.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317433\comment-313435107.json . 
Hey @mkalininait ,

I want to do this one, but we will need the previous story to be merged first, right? We will need the list to choose the options. Or maybe we can put fake data on the two dropdown and start from there. So, let's see if I get it:.
- The conference choice moves from student to team 
- Two dropdown buttons will appear and the team can choose first and second option (teams\:id\edit ?)

What about the attendances? will be associated with the team as well?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317433\comment-313515363.json . 
Hi @branquinhoaa Yes, you are right, in order to complete this task, we need to have the list of conferences finished. But I agree that it should be possible to start with the things you listed. Plus you can implement permissions: I've updated the task description.

I'm not sure I understood your question about attendances. What do you mean? Do you refer to the user stories 7 and 8? If so, then yes, we will assign conferences which are willing to provide us tickets to teams as well.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317433\issue-238317433.json . 
The idea: URL.
Full list of conference user stories: URL.

**User Story:**
As a student, I can choose my team's primary and secondary choices from the conferences longlist.

**Things to do:**
1. Move the Conference block from User to Team.
2. Who can see the Conference block:.
 - Students of this team
 - Supervisors
 - Orga
3. Who can edit the Conference block:.
 - Students of this team
 - Orga
4. UI:.
Block title: Conference preferences
Field 1 (dropdown): Conference (primary choice)
Field 2 (dropdown): Conference (secondary choice)
5. Contents of the dropdowns: longist of conferences (see Issue #762). If would be super great, if we could visually split the list into sub-lists according to the conferences' regions (Africa, Asia Pacific, Europe, North America, South America).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317436\comment-321207895.json . 
Resolved with URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317436\issue-238317436.json . 
The idea: URL.
Full list of conference user stories: URL.

**User Story:**
As a student, I want to provide additional information to my team's conference choices: conditions / limitations / wishes etc., as well as our potential wish to give a lightning talk.

**Things to do:**
On the Team's page, in the Conference preferences block (see Issue #767) add the following fields:.
 * (checkbox) We would like to give a lightning talk if possible
 * (text area) Comments 
   * hint below: E.g. "We would attend conference X only in they provide scholarships / have a LT session" or "We have already applied for the conference X ourselves" etc.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317439\comment-321207998.json . 
Resolved with URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317439\issue-238317439.json . 
The idea: URL.
Full list of conference user stories: URL.

**User Story:**
As an RGSoC orga, I want the students to be aware of the terms on which we hand out free conference tickets and confirm their (students') obedience.

**Things to do:**
On the Team's page, in the Conference preferences block (see Issue #767) add the following *mandatory* fields (must be checked by students):.
 * (checkbox) We understand that RGSoC doesn't guarantee tickets to the conferences of our choice
 * (checkbox) We understand that all travel and accommodation costs will have to be covered by us; hereby we confirm that we are choosing conferences which we can afford.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317441\comment-317735564.json . 
@mkalininait this export button can be in the conference/index, like this:.
!export_btn

.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317441\comment-317739781.json . 
@branquinhoaa Good suggestion! And we should also add it here: inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317441\comment-317756089.json . 
@branquinhoaa I've updated the description of this task :white_up_pointing_index:️.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317441\comment-317821382.json . 
@mkalininait What about the additional info asked in the issue  #768? Will it be exported too?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317441\comment-317990303.json . 
@branquinhoaa Goooood point, thank you! Yes, it will. I've updated the task description.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317441\comment-319822143.json . 
Hi, @mkalininait! 
this one is done, but considering that the PR #810 change the conference preference model structure, we will need to wait for it to be merged (I get all the export data from Conference preference new model, so I need it).

There is just one field that I couldn't find: project technologies. Each team has a column named project_name, but no fields or relation with other models that have the project technology info.

Do you know how can I get this info?


.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317441\comment-319948752.json . 
Hi @branquinhoaa Great news!

Sorry, I was not accurate enough. By project technologies I meant project tags (the "Tags" column in the "Projects" table).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317441\issue-238317441.json . 
The idea: URL.
Full list of conference user stories: URL.

**User Story:**
As an RGSoC orga, I want to export teams' conference preferences as a csv.

**Things to do:**
1. Permissions:.
 - Orga
2. Format: csv
3. Available from:.
 - inline-code
 - inline-code (see the comment below)
4. Exported data (only selected teams of the current season):.
 - Team name
 - Team location (optional)
 - Project name (optional)
 - Project technologies (optional) // skipping it for the moment, see URL.
 - Conference primary choice
 - Conference secondary choice
 - We would like to give a LT (see #768)
 - Comments (see #768)
 - Terms accepted (YES if both checkboxes in #769 are checked)

If the optional fields are hard to retrieve, we can skip them.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-315555001.json . 
Hey @mkalininait ,

I'm pretty late to the party, but @F3PiX brought this up and I think it would make sense to at least consider it before we this issue is picked up.

In order to implement the "assigning conferences" feature you describe here, it could make sense to migrate the current inline-code model to a inline-code model. The way this is currently set up and being implemented in #789, students pick their preferred conferences within their settings / profile pages, however, under the hood the created entity is already called inline-code, even though it's *"just"*  a **"preference"** for now :winking_face: 
Having create "attendances" for their preferences sound semantically wrong and is already causing some confusion in #789 ...

The main motivation for distinguishing these things in my opinion would be: having future developers an easier understanding of the terms plus keeping both entities inline-code and inline-code rather simple in themselves.

What do you think? (cc @carpodaster )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-315867621.json . 
In fact, I am a little bit confused about this. Now we have 2 attendances for each team - first and second options preferences. But we also have to confirm it (what sounds more like an attendance). So, in this case, the attendance model has two meanings: Confirm attendance and save team preferences. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-315903651.json . 
Yep @branquinhoaa exactly :see-no-evil_monkey: that's also the problem I see.

I'd love to have another opinion by maybe @mkalininait or @carpodaster about this *(also due to the fact that I'm not too familiar with the whole conferences feature)*.

In my opinion it would be most obvious if we would distinguish between three things:.
1. inline-code
2. inline-code
3. inline-code

On the other hand, one could also view the inline-code model as a kind of statemachine: initial state would be sort of an *"attendance-request"* and the later state would then be *confirmed*. 

Both valid approaches... Therefore I'd like to have another opinion before we introduce too many changes :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-316536571.json . 
Hey @klappradla Thanks for bringing this up. I absolutely agree with you. I think it makes sense to distinguish those three things you listed. In fact, I was thinking of the same model initially. 
I didn't provide details to this task yet, because the previous conf tasks (2-6) were not done yet, so I thought there was no rush :) I will add more info in the task description asap.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-316777979.json . 
@mkalininait We are changing the Attendance model to ConferencePreference in pr #789 . The ConferenceAttendance model will be created just on this issue right? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-316833782.json . 
Perfect @mkalininait :green_heart: 

And yes @branquinhoaa totally agree with what you're saying. I'd prefer to have #789 merged and cleaned up before introducing yet another model. The first step in this would probably be: renaming the current inline-code model to inline-code. This could be done in the current PR, but it's not super necessary _(I'd personally prefer a 2nd PR, since smaller ones are easier for me to review :winking_face: )_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-316928804.json . 
@branquinhoaa Yes, this is how I see it, too. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-319984155.json . 
@mkalininait and @klappradla 
I was thinking about the models and maybe instead of a ConferenceAttendance model, it will make more sense to build a ConferenceOffer model. 
Each team will have one (or many?) ConferenceOffer with conference_id, team_id, orga_comment, and attendance(boolean).  
We have here the same issue that we had in ConferencePreferences (a table with some data for the relationship -> orga_comment,  and some data for each conference -> attendance).

The options I see are:.

1. The team has_one conferenceOffer and conferenceOffer have_many conferences (and the team can pick one? in a column called conferenceSelected?)
2. The team has_many conferenceOffer (best approach, however, as far as I know just one orga_comment should exist)

What is the best approach in this case?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320099963.json . 
I'm not sure if the issue is entirely the same as with inline-code @branquinhoaa ? The only attribute that is kind of _"interfering"_ with a simple solution (one inline-code for one inline-code) is the orga comment.

But for me there are still some open questions:.
1. What's the orga comment for? (cc @mkalininait)
1. Who can see the orga comment? I suppose the team will see it later on as a hint on why they've been chosen, telling them they'll receive more infos for their talk, etc.
1. Is the orga comment relevant **before** the inline-code is created / visible to students? I suppose not.

All in all - please correct me if I'm totally off @mkalininait - the comment is going to be **optional** and is not related to the combination of inline-code the team chose in their inline-code, but to a **single inline-code** out of their preferences they're then offered to go to.
It's also most likely, that a team will simply get a single inline-code for one inline-code outta the two they chose in their inline-code.

The mental model for the inline-code would then be: have all the conference-tuples from the teams' inline-code as a base data to decide which Team to give which inline-code. Therefore, the inline-code needs a 1x1 association with a inline-code, but **does not stand in any association** with the inline-code object from the team.
This idea could even be extended to: a team can get a inline-code for a inline-code they did not even mention in their inline-code.

Given that, I think your 2nd approach sounds best :thumbs_up_sign: 

Feel fee to ping me if anything about the :white_up_pointing_index:️ is unclear or if I got something wrong.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320221285.json . 
Hey @klappradla @branquinhoaa 

There indeed can be a situation when we offer a conference which hasn't been selected as a team preference. It's not a super rare case. Not all the conferences want to support RGSoC. Thus we need to choose our offer from the full list of conferences.

On the other hand, some conferences offer more than 2 tickets. This means that we can offer one conference to several teams. It's not a rare case either. Thus the association between a inline-code and a inline-code could probably be many-to-many (one offer can have many conferences; one conference may be in several offers). If we simplify the model and say that one team can be offered 2 conferences max, then the inline-code model looks almost the same as the inline-code model to me. 

This is how I see it.

To your questions Max:.
1. The orga comment is for the students; it can provide additional information about an offer/offers (e.g. a conference is providing a LT slot; promo codes to register for a conference; opportunity to get a diversity grant etc.)
2.  The team should see the orga comment together with the offered conference/conferences.
3. The orga comment is not relevant in the absence of a conference offer.
4. The orga comment is optional and not related to team's conference preferences; it's related to all offered conferences (usually one or two). We could do one comment per offer, but I think it's a bit excessive; one comment for all offers should be enough. 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320504394.json . 
Thanx for explaining @mkalininait :green_heart: 

I knew a inline-code could be part of many inline-code, sorry if that wasn't clear enough in my previous comment.

So, just to illustrate things, I thought it would look like this:.
!untitled diagram 3

Which means: one inline-code for a inline-code's inline-code and one for inline-code. I would have the comment to be imagined something like


But if the offer is always looked at as a whole package of 2 conferences, then your approach of aligning it with the inline-code probably makes more sense:.
!untitled diagram 4
_(super quickly thrown together, sorry)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320523738.json . 
@klappradla Great diagrams, Max! They make thigs clear. 
I think both of them make sense from different angles of view. The Conference Offers are similar to the Conference Preferences, because they have one comment for all assigned (offered or prefered) conferences (at least in my mind :)). However the difference is that while students usually choose two preferences, they usually get only one offer, and only in some cases two. 
I'm torn.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320534362.json . 
Hm, if a team getting offered 2 conferences is the rarer, more exceptional case, we should probably build things with this as the main scenario in mind and don't treat the comment as such an important part of the whole workflow _(especially if it's optional)_

So what about this:.
We take the first approach (one inline-code per inline-code)  at let a inline-code have inline-code of them (this would also allow to offer 3 conferences, etc.)

**Contra:** the comment is targeted at a single inline-code rather then the "whole offer"

**Pro:** this is technically speaking already an inline-code and could be a) renamed to have this meaning and b) contain the necessary boolean or whatever to confirm "yes, the team is going".

!conferences 1

.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320654946.json . 
@mkalininait what do you think? Can we use this approach? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320655845.json . 
@klappradla @branquinhoaa Yes! Let's do it!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320732218.json . 
@mkalininait I have one more question:.

- Just an orga member can assign a conference for a team.  Is it necessary to put the fields to assign conference into teams/form? or just into orga/teams/form is enough?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320765173.json . 
Hey @branquinhoaa this should ideally live in the inline-code namespace. And it does not need to be a inline-code-form after all - it can simply be a inline-code form.
The controller you're using for this can inherit from the inline-code (don't know the exact name now), which already makes sure that the user has the required role for all the actions he or she want to perform.

Does that answer your question?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320769697.json . 
I thought it would be done in the team's controller. I'm going to change it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320771840.json . 
Oh @branquinhoaa no, do as you think it makes sense.
I just wanted to point out: it should ideally be in the orga namespace - can therefore also be the teams controller in the orga namespace.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320772837.json . 
I reopened the PR for you to see how I did it. If it is better to move to another controller, fine, I can fix that in the same PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\comment-320773754.json . 
Alright, thanx :person_with_folded_hands: 
I don't think I'll find the time to review it today - already too :sleeping_face: - so feel free to just request a review by me and I'll have a look tomorrow / as soon as I can get to it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317444\issue-238317444.json . 
The idea: URL.
Full list of conference user stories: URL.

**User Story:**
As an RGSoC orga, I want to see team's conference preferences and assign one or multiple conferences from the longlist which are actually willing to give them free tickets (with an optional comment).

**Things to do:**
1. Who can assign a conference:.
 - Orga
2. Who can see offered conferences:.
 - Students of this team
 - Supervisors
 - Orga
3. On the team edit form add:.
 - h3 Conference offers
 - (dropdown) Offered conference (gets values from the conference longlist)
 - (button) Add another conference (adds another dropdown "Offered conference #2" etc) *
 - (text area) Comment (optional)
 - Change h2 Conference preferences to h3 Conference preferences
 - Add h2 Conferences (above h3 Conference preferences and h3 Conference offers)
4. On the team view page add:.
 -  h4 Conference offers
 - Offered conference: Value
 - (if present) Offered conference #2: Value (etc) * 
 - Orga comment
 - Add h3 Conferences (above h4 Conference preferences and h4 Conference offers)

\* :warning_sign:️ In most cases there will be only one offer, in some cases two, in very very very rare cases more than two. To make things simpler, we can implement two fields "Conference offer" and "Conference offer 2" instead of making the button.

Additionally, please pay attention to this comment: URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-322481968.json . 
@mkalininait How do you think that we can display the conf. status?
I did like this:.

!conf-attendance

!conf-attendance

Will we change the links style after the team had clicked on attend link?

Also, I think we need to merge the PR  #813 in order to finish this one (the export change part).


.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-322600631.json . 
Just a short note to your screenshot above :white_up_pointing_index:️ @branquinhoaa: I think it would increase the readability if you'd always add a whitespace :waving_white_flag:️ between the link and the label.
And for the orga comment, I guess it would make sense to add a linebreak and make the comment a blockquote

For the conference-links: I'd suggest to use a normal list without bullets (I don't see the point for them here...)

For the attendance-links: they're currently not distinguishable from the conference-links, even though they're a totally different call to action _(they change state, rather then "just" inform)_. It would make sense to have this difference somehow visible, e.g. by making them small buttons instead of just links.

However, I don't see a point in **always** displaying both attendance buttons. What happens when I'm already attending and click inline-code again? I guess something like a toggle button would be more obvious here.
And another concern I have with these buttons: for how long should it be possible to toggle back and forth between attending and not attending? _(cc @mkalininait )_ :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-322753036.json . 
@klappradla We don't set a limit in the Teams app currently. I'm not sure we should make this too complicated. In real life we will probably ask the students to accept or decline the offer due a certain deadline; we don't care what they set in the Teams app after the deadline basically. This is how I see it.

@branquinhoaa In addition to what Max said: please remove the dot from the label "I will not attend this conference". 
I guess we will display the "I will not attend..." label only once the "No, I cannot attend" button/link is pressed, right?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-322753474.json . 
:thumbs_up_sign:  for the deadline stuff. Makes sense @mkalininait.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-322858242.json . 
Thank you for all suggestions.
What do you think about it now?

!notdecided
!attend
!notattend

.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-322895389.json . 
Yay, looks solid :party_popper: 

Just came to my mind now: how about adding a tiny paragraph about that both, a inline-code and a inline-code is right under each headline? Or is this already "explained" to the students elsewhere (meaning in another view).

I imagine it being something like


and maybe


_(wording is totally not final, just came up with this right on the spot)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-323059882.json . 
@klappradla @branquinhoaa Adding more info is a good idea! I'd actually add more info to both view and edit pages.

Maybe something like:.

**Conference preferences (edit form):**


**Adding a new conference:**


**Conference preferences (view form):**


@klappradla I'd emphasise *interest* here, because we don't guarantee anything to the students. As much as I tried to make it clear last year, there still were students who said: "Oh, we thought RGSoC would give us the tickets to the conference we chose" in the end :/

**Conference offers (edit form):**


**Conference offers (view form):**


Something like this, but we can of course change the wording.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-323061999.json . 
@branquinhoaa @klappradla Regarding the orga comments to the conference offers. Tbh, the quote format looks a bit comic to me :) It looks as if it was a wisdom quote or something :) I'd probably vote for the previous version (plain text).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-323179524.json . 
Huuuuge plus 1 for the texts @mkalininait :green_heart:  We need to make things way more clearer upfront. These large forms hardly speak for themselves without any hints to them... :disappointed_face: 

And for the comment: yes, I looks kinda god-like :cat_face_with_tears_of_joy:  also plus 1 for solving this in a not so weird way :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-323231567.json . 
What about these?

!teams_edit_orga
!teams_show2
!teams_show


 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-323346047.json . 
Thank you @branquinhoaa ! <3 I would merge it! 
And we can always improve the UI later if someone has good ideas.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-323353792.json . 
I just love to work with this kind of things xD.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-323410990.json . 
:white_up_pointing_index:️ looks awesome @branquinhoaa :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-326673002.json . 
Is this done with the PR merged?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\comment-326673959.json . 
@carpodaster Yes! 
And I think we can also close this one: #751.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-238317449\issue-238317449.json . 
The idea: URL.
Full list of conference user stories: URL.

**User Story:**
As an RGSoC orga, I want to know if the students accept our offer or not.

**Things to do:**
1. Who can edit a conf status:.
 - Students of the team
2. Who can see a conf status:.
 - Students of the team
 - Supervisors
 - Orga
3. Available from:.
 - Team view, h4 Conference offers (see Task #771)
4. Next to each offered conference show two links: "Yes, I will attend!" and "No, I cannot attend". You can press one link, but then change your mind and press another one (see how it looked like before: URL.
5. Add new fields to the conference export (see Task #770):.
 - Conference offer: Value (conference name)
 - Conference offer accepted: yes/no
 - Conference offer #2:  Value (conference name)
 - Conference offer #2 accepted: yes/no
 - etc.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-239448324\comment-312227672.json . 
Oh yes, this is super annoying!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-239448324\comment-313226236.json . 
Done in #777.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-239448324\issue-239448324.json . 
Problem:.
When a user updates their profile, they are redirected to the home page. So they can't see their new and updated profile.

Solution:.
Redirect to user profile after update.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240067715\comment-312622402.json . 
Hello @prachi1210 and thank you for this report! While this is not a caching issue per se, you point out two flaws with the current system:.

The way external sources work is that the Teams App will periodically crawl the teams' external sources to check for new blog posts and copy its contents (for the teaser text). This implies:.

1. When you delete a source, it doesn't affect the posts that have already been copied. Instead, it will just _stop_ checking the source for new articles.

2. Changed (or deleted) external blog posts are not synchronized back to the Teams App.

I have an idea or two to counter item # 2, but honestly I don't know if we have the resources to tackle that in the near future. As for item # 1: we could ask the user is they want to delete all existing blogposts when an external source URL is deleted. What do you think about that?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240067715\comment-312648837.json . 
About # 1, the only reason why we had to remove those sources was because some other blog posts unrelated to RGSoC got imported into the feed and we wanted them to be removed. 

As for the time being, can you manually delete those posts? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240067715\comment-312731909.json . 
@prachi1210 looking at your team's profile page, which blog posts would you like to see deleted? The ones from January and March?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240067715\comment-312767429.json . 
Yes, those are the ones.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240067715\issue-240067715.json . 
Whenever a change in settings is made to the app, the app should be updated
For eg: Earlier today, we deleted a source for our team from the teams app and yet, the articles imported from the source are being shown (The articles in question, do not in fact exist at the link now)

If there is a database logging system, I think the log should be updated at least for the team in question if sources are removed.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\comment-313407972.json . 
Thank you so much @carpodaster! :dancer:  So much nicer.
Sorry for the routing and actions things, I had those changes stashed and forgot to unstash. 

I'll go and try to get the specs in place now. 






.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\comment-313417361.json . 
:thumbs_up_sign:  @F3PiX can you ping me again when you have the specs ready for review?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\comment-314121976.json . 
@carpodaster I can't find how to test the inline-code. Can you help please?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\comment-314355463.json . 
@F3PiX I would work with inline-code when calling inline-code with a CSV file fixture. Testworthy scenarios:.

1. Creates a new record from CSV data (check that season has been properly parsed)
2. Updates existing record from CSV data
3. Input not a CSV file (inline-code)

Does that help?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\comment-314374301.json . 
The main problem was that I couldn't find a way to stub the content_type of the file, but I just found out that I don't need to do that. :-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\comment-314380624.json . 
I can't do anything with the file without raising the ArgumentError/csv error. 

This is what I have now:.
block-code.
So, is there a way to set the content_type for the test file? Or is there a way to stub that?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\comment-314388810.json . 
You should be able to also use inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\comment-315041863.json . 
@carpodaster Back to you. :-)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\comment-315137630.json . 
 It's all yours, @carpodaster. Two questions re: your previous review (in the comments).
Thanks for all the help!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\issue-240138787.json . 
Step 1 in New Conferences functionality
closes #762 : "Import a longlist of conferences"

- [x]  Would it be better to instantiate the inline-code?
Answer: I decided not to, because there is no state left after the import has finished. 
Furthermore, but I am not sure about this one:  handling the inline-code that is created by inline-code on import, seems to make things overly complicated with an instantiated importer.

### Purpose
Showing the students a long list of conferences. 
(Managing the conferences is done by the orga's in a Google Spreadsheet.)  

### What's new?
Orga has a Google Spreadsheet, exports to .csv, and uploads the file in the Teams App
The new inline-code processes the file
The importer uses a inline-code ('Google ID' LOL ) to reference the conference, and to decide on updating an existing conference or creating a new one. 
The imports file is a long list of conferences, so not all the details are known upfront. Some have unknown dates; that's why I removed the presence-validations on the dates. 
The 'old' way of adding and editing the conferences is removed. 


ToDo's:.
- [x] More specs. Under construction. 
- [x] Cleaning up the views 
- [x] Before merging: Remove csv content from spec file

.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-128603797.json . 
Step 1 in New Conferences functionality
closes #762 : "Import a longlist of conferences"

- [x]  Would it be better to instantiate the inline-code?
Answer: I decided not to, because there is no state left after the import has finished. 
Furthermore, but I am not sure about this one:  handling the inline-code that is created by inline-code on import, seems to make things overly complicated with an instantiated importer.

### Purpose
Showing the students a long list of conferences. 
(Managing the conferences is done by the orga's in a Google Spreadsheet.)  

### What's new?
Orga has a Google Spreadsheet, exports to .csv, and uploads the file in the Teams App
The new inline-code processes the file
The importer uses a inline-code ('Google ID' LOL ) to reference the conference, and to decide on updating an existing conference or creating a new one. 
The imports file is a long list of conferences, so not all the details are known upfront. Some have unknown dates; that's why I removed the presence-validations on the dates. 
The 'old' way of adding and editing the conferences is removed. 


ToDo's:.
- [x] More specs. Under construction. 
- [x] Cleaning up the views 
- [x] Before merging: Remove csv content from spec file

.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125263900.json . 
@alicetragedy Okay? I like it when the table font is a bit smaller than the regular text.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125273006.json . 
yes, works for me! :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125672207.json . 
This is more a question than a memo ;-)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125755250.json . 
If our initial assumption that every conf would have a starting date isn't holding, let's remove the commented out code as well.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125755287.json . 
(whitespace)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125755815.json . 
If it's an actual CSV file, I would probably also check if all the necessary column names exist.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125756421.json . 
Logging to a file isn't really working on Heroku. For one, the log file will get purged due to Heroku's Ephemeral Filesystem logic and secondly, the file will only be available on the dyno the receives the import request – and we can't tell which one that will be. I would just use inline-code as the logging facility.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125757844.json . 
(Disclaimer: Nitpicking / Tangent :wink: )

I always find mirroring the class name in its only public method a bit odd: inline-code. _of course_ it runs, hence the name of the class :upside_down_face: 

My personal approach is mostly to name the method inline-code. inline-code would work, too, but inline-code is available on Lambdas/Procs so the architecture - theoretically - also gets more losely coupled.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125760069.json . 
What does inline-code stand for? Group ID? :) (I honestly don't know)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125760241.json . 
(Commented code)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125760513.json . 
Can you add the inline-code block of the following line to this one and remove lines 91..93? I think otherwise you'll lose the inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125760624.json . 
The create action is not routed anymore so the action can go away.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125760657.json . 
The new action is not routed anymore so the action can go away

.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125760932.json . 
The destroy action is not routed anymore. The implementation is still here though and I think it makes sense to be able to delete a conference. Can you add it to the inline-code again ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125761049.json . 
Actually, we also need inline-code and inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125761254.json . 
Just for comprehending the feature: we don't work with this data anymore? If not, should we remove the corresponding database columns as well?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125761524.json . 
I would remove this line (reference to implementation detail in another file/class)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125761652.json . 
See my comment inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125761768.json . 
UID is mapped to inline-code ? Why not also inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125762093.json . 
And another question about inline-code / inline-code: this seems to be some magic string. Can you add a brief comment on what the format looks like?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125762302.json . 
I have an idea how to get rid of log files entirely but this is probably best done in a pair programming session. Let's not do it in this PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125762987.json . 
Since this is a class-level method, the inline-code defines a (global!) class-level variable. If you want to stick to class methods, this method should just return the season without binding it to a variable.

The call to this method can either bind it to a local var or use its return value directly like so:.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125764107.json . 
(Disclaimer: Nitpicking)

inline-code with just a string as the error message will raise a inline-code. Since the method has a problem with its argument, I would go for raising an inline-code instead.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125764441.json . 
CheesyRuby! I wanna goooo! :cheese: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125866876.json . 
Because I don't like to make promises I can't keep. There is no way we can be sure of the uniqueness of the ID in the imported Google Doc. If it is called inline-code, we suggest that we can trust the uniqueness. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125867160.json . 
That would be great! Now I am curious.
I also considered making it a rake task. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125867809.json . 
Sorry, I forgot some changes I had stashed. :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125868436.json . 
We don't use them in this table. They will be back in one of the upcoming user stories.
I think we shouldn't remove them from the database, at least not for now. I added a note to the project backlog. :thumbs_up_sign: 
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125875506.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125904145.json . 
Question: Do you mind if I don't (at least  in this iteration)? I checked it with a test file. Extra columns are just ignored, the order doesn't matter (inline-code takes care of that), and empty columns will be empty in the table. 
The headers in the Google doc are the headers Maria is actually using in the Doc. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125904859.json . 
Sure, let's do it somewhen else. Or not at all :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125905830.json . 
Nevermind, for some reason I completely overlooked what you've written in this PRs description :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125911816.json . 
LOL Ruby is all about calling methods, so _of course_ it calls :wink:.
I am very tempted to go with inline-code but I went with inline-code.  Because inline-code looks weird to me.
Okay? Or is this undermining the architecture argument? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125913106.json . 
Please ignore, not ready to be pushed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125913311.json . 
Please ignore, shouldn't be pushed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125915199.json . 


Haha, you won this round 🤣 

But yeah, inline-code is a thing when working with lambdas / Procs:.

block-code.

Rack also only expects an arity-1 inline-code so that you can either concrete classes/instances reponding to it or just pass a lambda/proc.

I would really prefer inline-code instead of adding another name to the mix.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125920456.json . 
(whitespace)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-125920778.json . 
Shoot. I changed a setting in my IDE and can't find how to set it back. Sorry,
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-126441523.json . 
(whitespace)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127182399.json . 
Question: can I do that here? (It is in case orga's want to add a yearly conference, a few years ahead. RailsConf 2018, 2019, 2020)  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127183641.json . 
Please stop ignoring :-)
I spent a lot of time solving the wrong problem :see-no-evil_monkey: . Sorry that it took so long. 
In the specs, I use the conferences from the test file, and now I am not sure if that is the right level of abstraction for the specs.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127183888.json . 
Also, I added the content of the file to the bottom of this file, for your convenience in review. I'll remove them after review.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127184565.json . 
You don't need the hash brackets. In fact, it's better to leave them since that allows for a seamless migration to keyword args.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127184862.json . 
The comment would be more fitting for inline-code definition.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127184910.json . 
This can be removed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127185173.json . 
You're only testing the CSV lib and/or that the file fixture works. Both should be taken for granted.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127185466.json . 
How about inline-code?

Also, this should be moved into the inline-code context.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127185617.json . 
You can incorporate this line into the following one by calling inline-code instead of inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127186182.json . 
You're overriding the actual implementation that you want to test.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127186724.json . 
I would remove the CSV data (might get out of sync with the actual fixture). The info which three of the included conferences are valid is very valuable and should be moved to a more prominent place, maybe close to the first inline-code call?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127187166.json . 
I'm not sure if this is the "format" you wanted to test. Do you mean the request format or the MIME type of the uploaded file? The inline-code sets the inline-code and (probably) inline-code request headers to inline-code. That's not the same as uploading a file with a wrong format.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127187459.json . 
You can merge the inline-code from the line below onto inline-code, saving one DB write.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127187725.json . 
Sure, that should work. Is there a inline-code version of inline-code? If so, maybe use that one instead in case the first four characters of inline-code don't return a proper year.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127189085.json . 
How about this?

block-code.
Disclaimer: not tested, written entirely in GitHub ;)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127244137.json . 
I 'undid' merging because of this spec :.
block-code.
I did not find a way to check the change in the specs as well as merging in the season_id. 
I understand that is a bad reason to do an extra db action, but I also really want to doublecheck if the season_id has been changed.
Is there a way to do that? Or should I only care that the conference has the correct season_id?  
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127251429.json . 
I _thought_ I added an extra check (on the Content_Type) in the POST request, after checking for .csv format in the form and before checking if the error is raised in the importer.rb. 
Now I am not sure if we need this in the first place? Or, I don't understand why to _not_ check the Content-Type here.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240138787\pr-comment-127261152.json . 
Wow, I like that very much! Thanks.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240654836\comment-313108325.json . 
Awesome, first PR already! I'll look into it tonight (=in a few hours)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240654836\comment-313405969.json . 
@branquinhoaa can you add another screenshot of how the action buttons look now, please? Thanks in advance! :wrapped_present: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240654836\comment-313520467.json . 
Ah, I only just realized that you've added the screenshot to the initial PR description. Looks perfect, thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240654836\issue-240654836.json . 
View before changes:.
!before_changes

View after first changes:.
!after_changes


View after changing the action column to one:.
!only_one_col


- Include a new state for the project's model (pending)
- Include a new action to change the project to this state (action pending in projects controller)
- Change the reject and accept states to transiting from pending (not from proposed)
- Change the project fixture to transiting to accept and reject only after start_review.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240654836\pr-128965914.json . 
View before changes:.
!before_changes

View after first changes:.
!after_changes


View after changing the action column to one:.
!only_one_col


- Include a new state for the project's model (pending)
- Include a new action to change the project to this state (action pending in projects controller)
- Change the reject and accept states to transiting from pending (not from proposed)
- Change the project fixture to transiting to accept and reject only after start_review.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240654836\pr-comment-125751909.json . 
Great naming choice, I like it very much!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240654836\pr-comment-125752235.json . 
Shall we change the name of the controller action to correspond to the acts-as-state-machine state, i.e. inline-code?  I don't mind either option so I let you decide.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240654836\pr-comment-125752696.json . 
I wonder if we should display the state-related actions all in the same column; there will only ever be one button to change the state of the project record, so we might as well have them in the same inline-code all the time. What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240654836\pr-comment-125882887.json . 
Yeah, it makes sense the action be renamed to start_review.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240654836\pr-comment-125908602.json . 
@branquinhoaa is inline-code still valid with your most recent changes?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240713706\comment-313226075.json . 
Boom. Congrats on your first merged PR to this project :balloon: :smile_cat: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240713706\issue-240713706.json . 
- When update or create user, if successful, it will be redirected to user's page.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240713706\pr-129009643.json . 
- When update or create user, if successful, it will be redirected to user's page.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240713706\pr-comment-125744632.json . 
That works!

However, there is a coding style referred to as _Tell, Don't Ask_ which can be applied here. What it means is that _asking_ a data structure something and then deciding on what to do can oftentimes be refactored to something where you just trust a data structure to know what to do when you send it a message (= calling a method on it). Here, the ternary clause _asks_ if the parameter is inline-code  and branches off into two logical paths.

The previous implementation attempted to make use of the fact that inline-code is falsey. The inline-code would use its left hand value first if it was something truthy, otherwise its right hand side would be chosen as the redirection target.

The bug that causes the behaviour is that inline-code is actually never inline-code (you can inspect the values being send to the inline-code action to see what actual value it has).

Going back to the original implementation with the inline-code operator, you can fix the bug using a neat extension to Ruby objects provided by Rails' ActiveSupport.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240713706\pr-comment-125749371.json . 
Nice!! I did not know this method... really cool. I saw that the parameter is not nil, but it is an empty string. I will fix it now. Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240941513\comment-313404127.json . 
Hello @juuh42dias – this PR includes the changes of #776. Can you rebase your local branch so that it is based on the state of your upstream master (= this repo's master)? This involves some Git Fu and it's probably ok to nudge your coaches about should you get stuck :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240941513\comment-313435544.json . 
Sorry @carpodaster , I had to recreate a branch, I'll have to do the PR again. :cry:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-240941513\issue-240941513.json . 
!rgsoc teams app 6

.
#rails-girls-summer-of-code/rgsoc-teams\issue-240941513\pr-129174376.json . 
!rgsoc teams app 6

.
#rails-girls-summer-of-code/rgsoc-teams\issue-241025365\comment-313539943.json . 
@carpodaster , done :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241025365\comment-313598538.json . 
Yay, thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241025365\issue-241025365.json . 
!rgsoc teams app 6

.
#rails-girls-summer-of-code/rgsoc-teams\issue-241025365\pr-129236496.json . 
!rgsoc teams app 6

.
#rails-girls-summer-of-code/rgsoc-teams\issue-241025365\pr-comment-126016137.json . 
The HTML entities need to be terminated by an inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241025365\pr-comment-126016238.json . 
The HTML entities need to be terminated by an inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241044820\comment-313520143.json . 
Awesome, thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241044820\issue-241044820.json . 
 - Simply remove the event directory in the views as asked in the issue #760 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241044820\pr-129250897.json . 
 - Simply remove the event directory in the views as asked in the issue #760 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241230878\comment-313653914.json . 
I'm curious why inline-code does not return a valid URL that always returns the current avatar. Apparently the URL changes when an upload is made. Maybe there is non-changing URL in the returned datastructure or there is an update for omniauth.

If not, I'd vote for the "Update avatar from GH" and not having custom uploads.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241230878\comment-356457934.json . 
Hi there! I’m a first-time contributor and was hoping to help out with this issue. I noticed nobody was assigned to it and I’m happy to try helping out. Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241230878\comment-356594833.json . 
Hey @yoasyo25 :waving_hand_sign: awesome that you wanna help and welcome to the Teams App :green_heart: 

And yes, this issue is free to grab _(I don't remember anyone working on it)_, so feel free to try fixing it! If you need any help or any further information, just ping us here :telephone_receiver: 

Small sidenote, since this may eventually not be obvious from the issue's title and description: we don't want to add an upload mechanism for avatars (as @carpodaster wrote in his comment :white_up_pointing_backhand_index: ) but rather *"just"* have the app pull in the right and updated image from Github :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241230878\comment-356937729.json . 
I doublechecked the issue. Currently, after a user changed their avatar on GH, they have to sign out from GH and sign back in, and then the avatar _will_ be updated in the Teams app.
So, the updating logic works, we just need the button to trigger a refresh. :thumbs_up_sign: 
 
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241230878\comment-357184040.json . 
Thanx for the update @F3PiX :person_with_folded_hands: 

Maybe we can also check for updates on GH's side periodically or when the user gets a new session or something along the lines of this to not have "just another button" :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241230878\comment-357185982.json . 
That sounds great. What implementation would be the simplest? I'd think the button is easier? What do you think?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-241230878\comment-357539940.json . 
So, @yoasyo25 & @F3PiX just a quick summary of what has been said here in the conversation to get you started @yoasyo25 :rocket: 

-  ] Double check why [inline-code does not return the current avatar if a user changed it on Github and investigate if there's maybe a different field that **is** the *current* avatar of if the user.
Also: it could be that the inline-code gem we are using for this now provides some different means to get the user data.
- [ ] If necessary, add a button to the user form to pull in the latest changes from Github (and add the respective description for the button :winking_face: )

*what we don't want:* :no_entry_sign: 
- avatar image upload (this should all be done on Github)
- manually changing the avatar url (again, this should all be done on Github)

I hope that makes things a bit clearer :shower:.

Feel free to ping us if you got any more questions @yoasyo25 :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241230878\issue-241230878.json . 
There is a problem that users can't update their avatars in the Teams app. If you didn't have an avatar in your GH profile once you signed up in the Team app, you can't add it to the Teams app later. We already had 3 or 4 requests this year to update students' avatars, and I had to manually add the urls in the DB.

I wonder if we could make an "Update avatar from GH" button or just implement a "Add/Change photo" function. Any thoughts?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241300856\comment-313885255.json . 
This was premature. Closing until we know more.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241300856\issue-241300856.json . 
@anikalindtner requested a page that shows all the accepted projects with their tags.

I pushed a preliminary PR  #783 , with just the name, the url and the tags.
This is the minimal form, it surely has possibilities.
- [ ] Find a suitable icon (instead of the current 'users' icon)
- [ ] Check (with @anikalindtner) if it makes sense to add more info like: 
  - [ ] the teams that works on a project
  - [ ] the number of years the project is part of the SoC 
  - [ ] the level : beginner or not.
- [ ] Should it be accessible by the menu? All year, or during the summer only? 
- [ ] Add seeds

Another thing I found is that the ./projects#index page is publicly accessible. That page shows the number of first/second choice applications, and has links to the project page that shows the comments. 
I don't think all of that is meant to be publicly available? Although the index page only shows the accepted teams, it _may_ be possible to access the rejected projects via the url.
- [ ] How much of this info should be publicly available?
- [ ] Should the show views for rejected projects protected? Are they?

You can split this issue in several partial issues, if you want to work on part of them.  
    


.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\comment-313855492.json . 
Thanks Max! Interesting questions. Anika asked for " a page like this, with only the selected projects: teams.railsgirlssummerofcode.org/projects, " for sponsors to see the projects and technologies.
I thought that that page showed too much information. But maybe it is not? I'll check with Anika.
 
Also, AFAIK it is not that urgent that it can't wait until Monday. I'll work on the improvements in the meantime. :flexed_biceps:    
    .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\comment-313855655.json . 
Oh ok, sound fine :thumbs_up_sign: 

I don't know the general plans on what information should be visible for which groups of users. I just initially would have suspected the projects to be "all public", since it's a) a core part of the program and b) I wouldn't know any privacy concerns there (it's links to public Github Repos...).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\comment-313966624.json . 
Turns out we need to _filter_ the projects, to show the projects that have RailsGirls working on them only.
Here is a intermediary solution:.
- From May - Sept (= inline-code) show the filtered ^ projects list
   Show the regular selection the rest of the year
- I used the applications table as a join table, to map the inline-code to the inline-code.
  Instead, I'd rather add a foreign key to the teams table with the inline-code. TBH I was surprised there wasn't. Is that for a reason I am not aware of? Or shall I add it?
  One of the disadvantages of the complicated query is that it is hard to get the tests right.
 
So, before breaking my head over the specs, I wanted to check if the foreign key solution isn't better. 
Also, because I won't have time to work on this until late in the afternoon, is this safe enough a solution to merge it? And follow up with the PR with specs and maybe the foreign key solution.
  

  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\comment-314036520.json . 
Yes @F3PiX as I said before, I'm totally fine with merging an intermediate-solution if someone relies on the functionality to be in place, as long as someone is working on a succeeding PR :thumbs_up_sign: 
So feel free to merge it whenever you need it.

On your question about the foreign key: if I recall correctly it once was in place, but not used or only being set if manually done via a "hidden" form :winking_face:  But I don't remember any details on why it is no longer there. It probably has to do with the projects' IDs only being part of the inline-code htstore...

But I can take a look tonight if I find out what happened to it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\comment-314251606.json . 
Just for quick notice @F3PiX : I had a look at production data
block-code.
returns only inline-code, so the query you had in mind won't work. 

The inline-code references its project - but sadly only by name (inline-code) :disappointed_face: 

But afaik this should be set for all teams that got accepted and got a project assigned.

So this query for instance would give you all projects that are worked on right now:.
block-code.

Based on the inline-code as the only association between Team and Project one could even build up an association :see-no-evil_monkey: Looks something along the lines of this as far as I remember (absolutely no guarantee):.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\comment-314269361.json . 
O thanks!! With this info, I dived in the code again, and AFAIK the project_id is never been _saved_ on the Application :thinking_face:  Which explains why the production db returns nil. 
Great query. I'll push that in a minute. 
I'll save the association for the follow-up :thumbs_up_sign:  #784 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\issue-241307308.json . 
It shows the :accepted projects in the current season, with the name of the project, the website and the tags.
Further Improvements are listed in issue #782 

I found that the {root}/projects  page, that lists all the (accepted) projects and all the details (including first /second choice applications, comments etc) are publicly available.
I guess that is not meant to be that way?
As a temporary solution, I re-routed inline-code to inline-code. 

That means: the old projects show pages are not really protected from  ./projects/:id. And the inline-code routes still show the extended projects page. 

Can we go with this solution first?
   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\pr-129435802.json . 
It shows the :accepted projects in the current season, with the name of the project, the website and the tags.
Further Improvements are listed in issue #782 

I found that the {root}/projects  page, that lists all the (accepted) projects and all the details (including first /second choice applications, comments etc) are publicly available.
I guess that is not meant to be that way?
As a temporary solution, I re-routed inline-code to inline-code. 

That means: the old projects show pages are not really protected from  ./projects/:id. And the inline-code routes still show the extended projects page. 

Can we go with this solution first?
   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\pr-comment-126280015.json . 
If I recall correctly, AASM automatically adds a scope for each state. So you could shorten this to the even more expressive form of:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\pr-comment-126280116.json . 
Hm, I think I don't really get the point here :see-no-evil_monkey: 
There is already a public projects page - which in my opinion also makes sense, students applying need to have an overview of projects available.

So what is the difference in information this new page now offers? If it's something only a specific group of users should be allowed to see, then I'd vote for a nested controller in the respective users' role namespace. If this is the general *"project page"* than I'd say it's fine to be non-restricted and therefore not nested into any role namespace.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\pr-comment-126280129.json . 
Again, I'd vote for making this a inline-code route and eventually nesting it into the respective namespace.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241307308\pr-comment-126280153.json . 
I think it would make sense to have a few more tests here. One could for instance test for the inline-code template to be rendered or, in my opinion even more meaningful for the two scopes being called on inline-code.

The latter would again be something like
block-code.

Note that the above may not be executable, I just wrote it as an inspiration out of memory.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241703855\comment-314158595.json . 
Max said:.


The project_id was removed with the introduction of the Projects Proposal feature, here: 
URL 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-241703855\comment-314495308.json . 
Thanx for researching where the inline-code got lost @F3PiX :person_with_folded_hands: 

If it's really no longer used, I'd vote for a) either renaming the column to inline-code and then removing it later or b) straight away removing it *(in favor)*. This can in my opinion even be done within the scope of this issue - it's just a tiny migration after all.

The way it is set up now, it's only confusing people :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241703855\comment-314568069.json . 
Maybe the inline-code does exist for older applications in the db. (From before the projects proposal feature was implemented.) Wouldn't that be a problem? 
  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241703855\comment-314570871.json . 
Well, I personally don't consider it a problem. Previous seasons' data model don't work with the current schema and app anyways - we have snapshots of all previous years for this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241703855\comment-316998327.json . 
@anikalindtner 
At the new :collision_symbol: projects page, we display the 'active' projects (= accepted projects, with teams working on them during SoC) during the 'active' season (that is: from the day the application confirmations are sent, until the last day of the coding summer.) 
The rest of the year, we show the accepted and proposed projects. 
Can we keep it that way? 
If so, I'll close this issue. 

Another option: show the 'active' projects for a longer period, up until _next_ season's projects can be proposed. 
Actually, I like this better. 
- [ ] note to self : add year to title.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241703855\comment-320198837.json . 
@F3PiX may I jump in with some thoughts?
I like the idea of still showing all projects that have been submitted, regardless of whether they are participating with a team or not. I'm not sure if in this case making some projects visible only during the selection period makes sense and if it's something we want.
I could imagine using the inline-code tag for this and letting the user / visitor filter/order the list. This would mean for example adding an extra tag (right now we just use inline-code and inline-code, we could have another one for inline-code). I'm not sure how the tag system is currently implemented and whether it would be easy to add another tag (and also, whether this is something we want). But ultimately it _feels_ right to me — this is the status of the project, after all. 
I'm wondering what you think about this? :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241703855\comment-320417812.json . 
Thanks!!
I have no strong feelings either way. Although I rather go with preventing information overload, and rather show less than more. It depends on the use case. Anika wanted a page to show the active projects to sponsors and the like; that makes perfect sense and has a clear use case. 
Also, during the period (or from a month or so before that) that maintainers can propose their project, showing all proposed/accepted projects makes perfect sense. 
Is there an equally clear use case for when and why a user will actively seek a list of all the accepted projects (in the heat of the season)? 
Another use case that we are not currrently serving on the Projects Page , is the team that is working on that project and the tech stack. That I would really like. See also issue #19 .

Again, if it useful to show all the projects during the year, I am not against it. In that case I'd just appreciate a confirmation that we don't want different behaviour during the summer and during the rest of the year.    :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241703855\issue-241703855.json . 
#783 provides a quick fix projects page. 
Make it sustainable!

- [x] Either move the application query to the application model or remove it and add a project_id to the teams table.
- [x] Add tests
- [ ] Check if the 'seasonal' filter should stay, if not provide a different solution .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241737633\issue-241737633.json . 
Reverts rails-girls-summer-of-code/rgsoc-teams#783

Testing in production ;-) shows an empty team page. Reverting to the former state.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241737633\pr-129696948.json . 
Reverts rails-girls-summer-of-code/rgsoc-teams#783

Testing in production ;-) shows an empty team page. Reverting to the former state.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241873072\comment-314566247.json . 
I didn't think of that. :see-no-evil_monkey: 
Can it wait for #784 (the sustainable solution)? I'll take that one after I finished the Conferences Importer.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241873072\issue-241873072.json . 
The query in the former PR #783 returned an empty table in production. Caused by querying the inline-code table for inline-code. 
This query (by @klappradla ) does not use the applications table, so should work.
YOLO  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241873072\pr-129789165.json . 
The query in the former PR #783 returned an empty table in production. Caused by querying the inline-code table for inline-code. 
This query (by @klappradla ) does not use the applications table, so should work.
YOLO  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241873072\pr-comment-126738417.json . 
Let's skip the inline-code here - it will convert the whole thing to an Array (and actually execute the query), which is not really necessary (there can be loads of duplicates, the final resulting Projects will be the same :v:)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-241873072\pr-comment-126738790.json . 
I'm not 100% sure if it's necessary, but I'd have scoped it even more to this:.
block-code.
This makes sure, we really only look into the accepted projects (maybe there's a rejected one with the same name...).
What do you think @F3PiX ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242441174\issue-242441174.json . 
I'm trying to solve this problem: URL.

The solution is probably dirty, but at least the team can start writing daily logs (tested locally). And I don't see any downsides for the moment.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242441174\pr-130182780.json . 
I'm trying to solve this problem: URL.

The solution is probably dirty, but at least the team can start writing daily logs (tested locally). And I don't see any downsides for the moment.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242444018\comment-314826830.json . 
@alicetragedy Are you ok with it?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242444018\comment-314995466.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242444018\comment-316633782.json . 
Closed in #797 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242444018\comment-316638944.json . 
Tested on prod, works well. Thank you @branquinhoaa and @carpodaster !
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242444018\issue-242444018.json . 
Next to "T-Shirt size" we need another dropdown "T-Shirt cut" with possible values:.
 - [blank]
 - Straight cut
 - Fitted cut.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-314871655.json . 
Ace @juuh42dias & @branquinhoaa :party_popper: 

Would you mind adding a reference to the issue(s) these changes relate to? It would help me to get  a better overview of the "problems" your PR is trying to solve :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-314872968.json . 
@klappradla all these commits are of  
#767 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-316052153.json . 
@klappradla we believe that the corrections were made. :+1:  thank you for your time! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-316058041.json . 
Yay, gonna have another look tonight @branquinhoaa :party_popper: 
*(don't know what time this will be in your parts of the world thought)*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-316058924.json . 
kkkkkk here (Time.now) 2017-07-18 10:11:15 -0300

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-316453127.json . 
 @mkalininait, could you take a look? we believe that now it is working. :dancer: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-316492829.json . 
@klappradla Could you take a look too? we have changed the things you asked for.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-316636767.json . 
Hey @branquinhoaa What do you think about implementing @klappradla 's suggestions here URL ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-316698076.json . 
@branquinhoaa I've tested the PR again; it works well for me! A couple of issues I have:.
1) The one I mentioned in my previous comment (URL.
2) Students shouldn't have the possibility to confirm or reject conferences yet, because they only fill out their *preferences* at this point. Their confirmation will be necessary in Issues #771 and #772. 
3) It would be great to rename the title "Conferences" to "Conference preferences" in the team views (both orga and non-orga). Or maybe make a subtitle "Conference preferences"... It can also be considered as part of 1).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-316700102.json . 
@mkalininait I’m glad it worked well! :dancer:  
1. I think it is a great idea. Do you want us to do that in this PR?
2. ok!
3. ok!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-316702852.json . 
@branquinhoaa 
1. I think it makes sense to make it in this PR. What do you think @klappradla ?
2. Replied here :) URL But we will need the confirmation/rejection feature later as a part of #772 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-316932118.json . 
Tested. Works AWESOME!! One tiny tiny thing: the secondary choice goes before the primary choice
!screen shot 2017-07-21 at 09 43 49
Maybe we can also label conferences (primary, secondary) in the team views, to avoid confusion.
!screen shot 2017-07-21 at 09 50 50

For future PR related to Issue #771:.
We now have the following headers in the team views:.
...
h3 Supervisors
h4 Conference preferences
h3 Activities

The Conference preferences in one level lower, but if we later add h3 Conferences and h4 Conference offers (or something like that), it all will be very consistent :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-317030346.json . 
!labels
Hi @mkalininait !!
I have changed the things you asked for. Hope it works perfectly now!! :dancing_men: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-317405689.json . 
Hey @branquinhoaa We are very very close to perfection! 
The order of conferences is correct on the edit page now, but still wrong (or sometimes wrong?) in the team views (orga and non-orga).

!screen shot 2017-07-24 at 14 19 00

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-317431251.json . 
@mkalininait :+1:  done!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\comment-317656559.json . 
@branquinhoaa Yay! Thank you! <3

Merge! Merge! Merge! @carpodaster Any objections?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\issue-242461549.json . 
- remove the relationship between user and conferences through attendances; 
- create a relationship between teams and conferences through attendances;
- remove conference options from user page;
- include conference options in teams page;
- include an option field in attendance model (to allow conferences prioritize choice)
- fix tests and create new tests 


teams\:id\edit
!teams_edit

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-130197471.json . 
- remove the relationship between user and conferences through attendances; 
- create a relationship between teams and conferences through attendances;
- remove conference options from user page;
- include conference options in teams page;
- include an option field in attendance model (to allow conferences prioritize choice)
- fix tests and create new tests 


teams\:id\edit
!teams_edit

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127055464.json . 
This looks rather long and a bit scary to me. Would this be the same?
block-code.
If so, I'd prefer it - it appears more readable and understandable to me.

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127055568.json . 
Is it possible that this page will be visited by a user who **is not** a student (or a student but not in a team)?

If inline-code returns inline-code for a user (if he or she is no student or a student but the team cannot be found in the DB), then calling inline-code will raise a no method error and the app return a 500 rather then a 404 not found status. In terms of semantics, I think a 404 does make most sense, since there's not really an "error" in the app, it's desired behavior :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127058176.json . 
I'm not sure if this can guarantee to always select the "right" team... as far as I remember, inline-code (hopefully) does not have a default scope.

What would be the team you want to retrieve here? The "current" one as in the one active in this current season? Why not use
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127058652.json . 
Maybe I don't get it, but I think you can spare this line, since you already have this condition for the whole block 3 lines above.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127058784.json . 
If I recall correctly, for the if-condition to actually work, these two lines (the h4 and ul) need to be indented one more level.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127059604.json . 
I did not look at this in the browser, maybe I'm getting it wrong. But in my understanding this should be a list of conferences. So something like:.
block-code.

The ways your view code looks to me, this will only render a single inline-code item (will all conferences in it...).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127063646.json . 
This is probably personal preference, but I find "conferences" here a bit misleading, since the form is actually about "attendances" to conferences... I'd also suggest to more stick to the pattern of looking at the single user's abilities rather then the team - it's a in the end a single user who submits the form :winking_face: 

Do you have a better idea for expressing this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127063867.json . 
Same as for the orga teams view - I think there's something wrong with the list layout.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127065823.json . 
Is it really necessary to create another (unrelated) team? If you already created a student, you could also just use this existing team I'd say:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127066161.json . 
Personal preferences, but I find the name a bit misleading... How about "team_params"?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127066566.json . 
Minor thing, but since you're looking at a "student", it would be more explicit to use
block-code.
here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127066927.json . 
Could you on the way please also fix the indentation for this factory? It's kinda hard to understand like this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127068081.json . 
What is this supposed to test? The expectations reads different to its description.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127068262.json . 
Again, I don't understand what this is testing :see-no-evil_monkey: The description reads different to the expectation...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127068623.json . 
I think this should be something along

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127068979.json . 
Since this is a method on the inline-code model, it would be cool to also have a scenario for when the user is not a student or has no team. What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127069321.json . 
Afaik, it's not necessary to actually "create" all the records here. Building should be fine.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127272276.json . 
hey @klappradla, we are wondering that maybe this attendance controller it is not being used. We create/update attendances through the nested field in edit team action. Unless you need this data for some API...

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127319925.json . 
:face_with_tears_of_joy: well I've never touched this area of the app. But if that's true, and the controller does not have **any** touching point with the rest of the app, than it should probably be removed altogether.

Can you maybe explore this a bit deeper if you can really confirm it's not being used?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127537279.json . 
That really doesn't make any sense. Forgive us. :joy: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127537526.json . 
It took a while for us to understand how this works. :joy_cat: sorry

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127590663.json . 
No worries :victory_hand:️ 
Do you need any more explanation on it or is everything clear now?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127590687.json . 
No worries :winking_face: 
Just tell me if you need any more information on how these tests are set up.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127798304.json . 
The additional indentation is not necessary (we tested)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127798370.json . 
ok, fixed.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127800098.json . 
Excellent idea! we have added these scenarios.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127801042.json . 
yeah, sorry about that. I think now is ok, right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-127844115.json . 
@klappradla  In fact, I found one place where this controller is used. I created 2 more test scenarios to simulate a user who is not a student and a student that is not in a team to try update attendance.
Now, I believe that is throwing the right error message.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128078576.json . 
Makes more sense now :thumbs_up_sign: 

Still: why are these two links to the same location? I think this could savely be just a single one:.
block-code.

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128101422.json . 
Oh, ok, sorry, I wasn't clear on what I actually mean :see-no-evil_monkey: It does not *necessarily*  need to be especially this certain exception. I just meant: if someone not being a student or on a team can access the controller action, the resulting error should somehow make clear what's wrong - and a 500 status could be anything :winking_face: 

The way you put it now, sure it works, but it looks kinda weird: having the inline-code fetched in two places and then explicitly raising the exception appears wrong in a controller, don't you think?

In which context is this controller used? If it's only used by the user actually owning the inline-code, it could be simplified to
block-code.

If the user is also changing his or her teammates attendances, then one could maybe work with the abilities? Would look somewhat like this I think:.
block-code.

I would of course prefer the first scenario :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128103032.json . 
Not necessary to change anything here. Just wanted to note that the indentation looks a bit off :police_officer: 

Maybe check your editor config :white_heavy_check_mark: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128103459.json . 
Let's either do it or silently remove the comment :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128103600.json . 
Please come up with a more meaningful description for the test and fix the intendation - it makes it kind of hard to read for someone new to it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128103777.json . 
Perfect :tada: thanx!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128288685.json . 
@klappradla  I saw this controller being used just when a user (now the team) has to confirm her participation in the conference (after choosing the preferences). So, theoretically, just the students from the team should have access to them. The details around this will be developed better in this issue: URL.

We have included the student_team in the private method attendance because the attendance belongs to the team, not to the user. But this page couldn't be visited by any one who is not a student from that specific team.

I think that this can change with the issue #772. What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128507085.json . 
As we discussed before, we don't need to confirm conference *preferences*.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128507655.json . 
Can we rename it to "Conference preferences" please?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128507669.json . 
Can we rename this to "Conference preferences" please?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128508734.json . 
This ability is to check if a team can confirm its attendance, not its preference: 
!attend
We check the ability to confirm attendance in the teams show view. When some user access the show team page, we check if the user can confirm attendance. If it can, we show these links.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128511268.json . 
My point was that we don't need these links at all here. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128511565.json . 
Students filled out their preferences, but we didn't offer them anything yet :)

It may be that they prefer Conf A, but Conf A doesn't provide diversity tickets. Then we will offer Conf B to the team, which they didn't even select in their preferences.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128512899.json . 
aaaah, ok! now I get it.:sweat_smile: 
It is to remove it then.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128638433.json . 
Ok, thanx for the explanation. So let's just go with your initial approach for now (the one without explicitly raising an exception), since you're right, this controller will very likely change to be orga only in #722 and then we can probably get rid of inline-code all together.

So let's not waste any more thoughts on this, just go back to the initial version :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128639787.json . 
This module only works if a inline-code method is available in the class. With switching the inline-code/ inline-code to be owned by the team, it will no longer work.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128640529.json . 
Interesting, I did not know inline-code does not have continents _(maybe submit a PR and have another easy to grab contribution?)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128641200.json . 
Spacegame :rocket: :video_game: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128748235.json . 
In fact, I removed this controller. Now that we don't need to confirm preference anymore, this controller makes no sense. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128751717.json . 
Seems a nice idea! :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128904608.json . 
Also fine :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242461549\pr-comment-128904715.json . 
Having inline-code associated with the team rather then the user, we can also get rid of the inline-code here (just a tiny cleanup thing) :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242705655\comment-316147213.json . 
@mkalininait What if we change from a button to a dropdown button with all the teams that you have? when a you choose the team in the list we redirect for that team page.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242705655\comment-316688474.json . 
@branquinhoaa This is an option, but I think it may be a bit weird to have two lists (and two ways of opening a team page) on one page...  I'm not a UX expert though.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242705655\comment-318179754.json . 
I don't think I have access to the team app any longer, so I can't check what the current navigation looks like. A top-level navigation item sounds like a smart, pretty straight forward solution though. It's discoverable, gives people a feeling of location within the app, and probably yields the least surprises. So I'd go with that.

But then again, I am shooting from the hip here. A screenshot of the current navigation would be useful. :smiling_face_with_halo: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-242705655\comment-318355406.json . 
A top-level navigation item makes the most sense to me as well. 
@troubalex I've pasted some screenshots of the current navigation and its sub-level items :)
<img width="414" alt="screen shot 2017-07-27 at 15 02 12" src="URL.
<img width="384" alt="screen shot 2017-07-27 at 15 02 22" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-242705655\issue-242705655.json . 
This task derives from this issue and comment: URL.

There is the button "My team" on the Teams page. It was supposed to open user's current team's page. The problem is that some users have multiple current teams, e.g. coaches. 

Possible solutions:.
1) Carsten: "Can we just remove it [the button] or add a "My Team(s)" item to the nav bar that leads to a filtered teams#index with only those teams I am part of?"
2) Maria: "Maybe we can even add this filter to the teams page explicitly (instead of the button):.
* [ ] My Team(s) "
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243072300\comment-315443650.json . 
Copied here for convenience: Notes by Max from the already merged PR

URL.


Done :white_heavy_check_mark: 

URL.





Done :white_heavy_check_mark: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243072300\comment-315518649.json . 
@klappradla I'd rather do the removal of the project_id (from the applications table) in a separate issue. It is indeed a small migration, but it generates totally unrelated changes. Okay?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243072300\issue-243072300.json . 
Solves the first part of #784 (Projects Page)
This should provide a robust query for the Projects Page.

doublecheck: 
The ‘new’ projects page uses a filter to only show the projects that students are working on. This filter works during the ‘active’ season, i.e. from the day the acceptance letters are sent, to the end of the coding summer (≈ May through Sept).
The rest of the year the page shows the regular selection, as it was before, i.e. proposed and accepted projects.
- [ ] Is this the behaviour we want? 

ToDO:.
- [ ] Remove project_id from applications table => move to separate issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243072300\pr-130644918.json . 
Solves the first part of #784 (Projects Page)
This should provide a robust query for the Projects Page.

doublecheck: 
The ‘new’ projects page uses a filter to only show the projects that students are working on. This filter works during the ‘active’ season, i.e. from the day the acceptance letters are sent, to the end of the coding summer (≈ May through Sept).
The rest of the year the page shows the regular selection, as it was before, i.e. proposed and accepted projects.
- [ ] Is this the behaviour we want? 

ToDO:.
- [ ] Remove project_id from applications table => move to separate issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243092422\comment-315869527.json . 
:+1:  what about the other empty fields? that will be allowed?
- About the sanitizing (I did not see where are you using sanitizing URL methods)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243092422\issue-243092422.json . 
Conference are imported by csv. If the url field in the csv file is empty, the teams app shows a useless url, like inline-code. 

Find out how the url is set in the index and show views, and show something usefull (maybe an empty field?).
Make sure that inline-code imported url's stays in place, if needed. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\comment-316317024.json . 
Thanks Max for your review! Much appreciated.

Three issues:.
1) partials (URL.
The inline-code and inline-code partials are shared partials, by the inline-code and the public inline-code. I'd prefer to leave them as partials, and not duplicate the code. Okay? 

2) tests
I still don't understand all of the code. I added some basic specs, and I left comments inside the code :face_screaming_in_fear: , to explain my problems (to prevent GH noise with explanations). 
The main logic is from before ActiveJob, and at one point, a inline-code was replaced with a Mailer.
Either there is some duplication, or I don't fully understand it. In both cases, it doesn't help to find the right specs to write.    
Of course, I will remove the comments in the next commit. 
I'd like to know if I am going in the right direction with the specs.

3) About the redirection and the routing([your comment])(URL : Instead of the complicated and confusing redirection, I just restored cancancan's inline-code. In order to get that to show a 'non authorised' notice (instead of inline-code), the routes has to be present in the inline-code without constraints, and empty declarations in the controller. 
(For the empty declarations: I tend to add only new and edit.) 

  
@klappradla Before doing a code review, maybe first answer to this issues? Then I'll update accordingly.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\comment-316847051.json . 
Thanx for the tl;dr @F3PiX :person_with_folded_hands: 

1. Sure, stay with partials here :heavy_check_mark:️ 
1. Yep, tests go into the right direction :heavy_check_mark:️  _(I cannot really answer the shared_context thing so, would have to try it out locally)_
1. :thumbs_up_sign:  for inline-code :heavy_check_mark:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\comment-316982566.json . 
@klappradla Back to you! :cookie: 
I think the specs are covering the basic functionality now. If this functionality gets more use during the summer, it may be worthwhile to look into improving and optimising the code.   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\comment-317238230.json . 
@klappradla Can you take one more look please? Apart from deleting the redundant inline-code calls, I did two more commits. Because somewhere in the PR I introduced a inline-code, that I didn't notice before :see-no-evil_monkey: . It is solved with setting a default for inline-code.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\comment-317983018.json . 
@klappradla \o/
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\issue-243397784.json . 
Closes #757 

Everything for sending, reviewing and resending mails to targeted groups is now in the orga namespace, and accessible from the orga dashboard :face_savouring_delicious_food: 

It looks like there are opportunities for follow-ups with more improvements. I restrained myself to do the moving part and relevant changes, and nothing else. Much.  
The submissions specs were not totally clear; the things I wanted to test are already in the mailer specs. While the mailer is fired after the inline-code. I left it as is. Mostly.

Some questions in the comments
 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-130857496.json . 
Closes #757 

Everything for sending, reviewing and resending mails to targeted groups is now in the orga namespace, and accessible from the orga dashboard :face_savouring_delicious_food: 

It looks like there are opportunities for follow-ups with more improvements. I restrained myself to do the moving part and relevant changes, and nothing else. Much.  
The submissions specs were not totally clear; the things I wanted to test are already in the mailer specs. While the mailer is fired after the inline-code. I left it as is. Mostly.

Some questions in the comments
 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127710452.json . 
I'd like to move the user's own mailings in their namespace/dashboard.
Also, I'll have to check if mailings will pop up in the activity page; and if we want them overthere in the first place. To be continued.   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127711063.json . 
Why is the shared_context not working here? It does work on other places. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127711329.json . 
??
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127712469.json . 
I didn't know what to do with the existing specs. AFAIK we write specs for the public methods, and both 'valid' and 'sent' aren't methods in inline-code. 
But what should be tested in the methods that _are_ present? :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127712733.json . 
Delete these as well?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127820362.json . 
Personal preference, but given the *"anti-pattery"-reputation* that before-filters have, I'd suggest to make things more obvious and move the ones **only used for one single action** into the action itself. Especially here, without looking at the routes (different file) one does not even know there's a inline-code action available :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127820538.json . 
Same as for inline-code - I'd vote for putting this into the actual action :nerd_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127822666.json . 
Maybe I'm already too tired, but I totally don't get this :see-no-evil_monkey:.
Can you explain what this is supposed to solve? A inline-code preventing any action but inline-code and inline-code? Why do you have another inline-code only used for inline-code and inline-code in place if these actions cannot be reached at all?

However, if this is supposed to prevent routing to other actions then inline-code and inline-code, I'd suggest to to this on routes level, rather then controller.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127826052.json . 
Why is this inline-code rather then just inline-code? Maybe I'm overseeing it, but I don't find a scenario where this would be called twice within one request response cycle...?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127826598.json . 
Again, if this is only used for **one specific** action, I'd suggest to instead make it an explicit call within the specific action. Especially given the fact that there is already another inline-code for the respective action and they now depend on their order...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127827825.json . 
Is the inline-code partial supposed to be reused somewhere else or is this inline-code view becoming more complex in the near future?  If not, I think it would make sense to the code from the partial into the actual view. Rendering things and looking up partials is probably one of the slowest parts of the framework, I don't see a point it utilizing it for no reason.

It also doesn't make things easier to grasp here in my opinion - correct me if I'm wrong.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127828350.json . 
I haven't been involved in Rails view code in some time, so please correct me if I'm wrong, but aren't partials supposed to work on "normal" variables rather then view-instance variables? As in one would pass inline-code and then have inline-code available in the partial.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127828501.json . 
Same as for the inline-code partial: how do you have inline-code available here?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127828692.json . 
Same as for the inline-code view: if this partial ain't going to be reused for another mailer view, I'd suggest to simply put the view code in the inline-code view.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127829287.json . 
As I wrote for the inline-code: if you we should not have any more actions then inline-code and inline-code for this resource, this should probably be done on router level:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127829819.json . 
What do you mean with *not working*? The way I understand the setup, it would try to get the mailing before it would sign in the user - order of inline-code hooks... is that how it's supposed to be set up?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127830031.json . 
If you want to have the call to inline-code dryed out of the examples, you could also do
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127830362.json . 
I'm afraid I don't understand this pattern. What's the difference to making line 6 a inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127830691.json . 
Spacegame :rocket: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127831199.json . 
For the sake of readability, I'd suggest to name this *it 'returns false before submission' do*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127831314.json . 
For the sake of readability, I'd suggest to name this *it 'returns true after submitting' do*
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127831477.json . 
What's the sake of calling inline-code here once again after using a inline-code in the beginning? Does it do anything new?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127831533.json . 
Same as for the negative case: what does inline-code here do?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127831792.json . 
I don't see the description reflected in the expectation here...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127831972.json . 
I don't understand what the inline-code part is for... Why don't we use a fixed number here? I personally would have no idea what number and context this is talking about.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127832269.json . 
Why deleting them?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127832665.json . 
The way I understand this, this is supposed to test the good path of submitting a mailing -> it will be send if validations don't fail. But I agree with you, this could be expressed somehow more obvious. A more explicit description could already be a start :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-127906449.json . 
It should be a inline-code, yes. But it's been there before so technically not part of this PR ;)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-128743788.json . 
LOL Turned out: Just a few months ago, you updated from inline-code to inline-code. That caused the fail 🤣 . 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-128904799.json . 
Has eventually the same outcome, but for making it more future-proof: this should probably be
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-128904817.json . 
Why no inline-code for the update, edit and destroy actions?

Is it enough to know the user is a member of inline-code? If so, one could savely remove the inline-code calls for show and index as well.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-128904911.json . 
Good catch!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-129421789.json . 
inline-code under the hood adds some magic before-hooks that initialize and authorize an instance variable for **EVERY** action in the controller. Therefore, if you want a "special" behavior in some action, it's better to disable it for these specific ones. Otherwise you end up with one unnecessary call to the database.

So in your case it should probably be
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-129422212.json . 
Same as for inline-code, inline-code does already do this for you - you have the inline-code instance variable already available via some before hooks it automatically adds to the controller. So you should skip that line in order to spare the extra call to the database :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-129426507.json . 
Thanks for catching this! It makes so much sense, given that they called the method LOAD_and_.. ;-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-243397784\pr-comment-129515227.json . 
Thanx for the comment :person_with_folded_hands: 
Will for sure help people looking at this in the future 🖤 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243509235\comment-315987563.json . 
Hey @juuh42dias – good call. I've seen this error around but never really looked into it.

The problem is line 9: it does not return / assign the inline-code instance variable. This causes the error in the following line (it tries to call a method on inline-code).

Can you transform line 9 to something that safely returns a user instance and/or guards against illegal values for inline-code alltogether?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243509235\comment-316043810.json . 
I believe that method first_or_initialize (return find or new) should return an instance to save(blank or not). I think github_handle.present? maybe don't necessary. What do you think? @carpodaster 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-243509235\comment-326122233.json . 
I'm closing this one, I'm positive it has been fixed with the referenced PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243509235\issue-243509235.json . 
GithubHandle returning false or nil class when edit/update your team.

!erro

.
#rails-girls-summer-of-code/rgsoc-teams\issue-243522471\issue-243522471.json . 
PR related with the issue #792

conferences index - before change:.
!conf_index_before

conferences index - after change:.
!index_after

conference show - before change:.
!conference_show_before

conference show - after change:.
!show_after


- verify if URL is present in a conference before display it.

## update in the view (let the label even if the field is empty):.


!after_change_including_title






.
#rails-girls-summer-of-code/rgsoc-teams\issue-243522471\pr-130947869.json . 
PR related with the issue #792

conferences index - before change:.
!conf_index_before

conferences index - after change:.
!index_after

conference show - before change:.
!conference_show_before

conference show - after change:.
!show_after


- verify if URL is present in a conference before display it.

## update in the view (let the label even if the field is empty):.


!after_change_including_title






.
#rails-girls-summer-of-code/rgsoc-teams\issue-243527692\comment-315987734.json . 
Hello @juuh42dias! I don't think this PR will solve the underlying problem. See my comment at issue #794.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243527692\comment-316674469.json . 
Hey @juuh42dias that looks very good now. Do you think you could add a test for that?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243527692\comment-317180022.json . 
@juuh42dias are you working on a test? I'm fine with merging without one but if you'd like to go for it that's of course highly appreciated. But we can also add one later.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243527692\comment-317799645.json . 
I'll create tests for this feature, is better.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243527692\comment-322595123.json . 
Since this is now lying around for quite a while, what's the state of this @juuh42dias ?

Is the feedback @carpodaster gave implemented / discussed? Are there any open questions or any blockers? Or - also possible of course :winking_face:  - is this no longer relevant?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243527692\comment-323873347.json . 
@juuh42dias Are you ok if we merge this? I can add the test later as a PR and ping you for a review / walkthrough.

I would remove the last two commits though, the shared example doesn't test anything right now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243527692\issue-243527692.json . 
Related #794 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243527692\pr-130951846.json . 
Related #794 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243527692\pr-comment-128512049.json . 
I'm not really sure what this line and the one above do. That is, I don't know if inline-code returns a _copy_ of the nested hash or the actual instance. Depending on what object it returns, deleting keys from it probably doesn't do anything.

In any event, I would remove the line again. The problem (or well: at least _one_ of the problems :winking_face: ) should be solved by your change in the github_handle concern.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243791072\comment-316372031.json . 
@carpodaster Yes, I think we should allow the blank option.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243791072\comment-316372561.json . 
@branquinhoaa Could you please add the new field to inline-code? Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243791072\comment-316533688.json . 
@branquinhoaa The exporter fix looks good to me!
The 'allow blank value' change I didn't test. But I trust your testing.
Interesting note: the 'blank' value of 'tshirt_size' is set to false, but I still can set the blank value:.
inline-code I like that I can set the blank value here, I just wonder why it works this way...

Anyway, I think we can merge this PR, unless @carpodaster has a different opinion :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243791072\comment-316633681.json . 


He doesn't ^^

LGTM!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243791072\issue-243791072.json . 
PR related to the issue  #788

- include column tshirt_cut in the user model
- include a select dropdown to choose the t-shirt cut
- show the selected t-shirt cut where t-shirt size is shown

## views before change
### orga user info
!orga_user_info_before
### show user
!show_user_before
### edit user
!tshirt_before

## views after change
### orga user info
!orga_user_info_after

### show user
!show_user_after

### edit user
!tshirt_after





.
#rails-girls-summer-of-code/rgsoc-teams\issue-243791072\pr-131143356.json . 
PR related to the issue  #788

- include column tshirt_cut in the user model
- include a select dropdown to choose the t-shirt cut
- show the selected t-shirt cut where t-shirt size is shown

## views before change
### orga user info
!orga_user_info_before
### show user
!show_user_before
### edit user
!tshirt_before

## views after change
### orga user info
!orga_user_info_after

### show user
!show_user_after

### edit user
!tshirt_after





.
#rails-girls-summer-of-code/rgsoc-teams\issue-243996612\comment-316351648.json . 
I didn't find that we can tell Google to do that, but I am not very into Google Docs. On Maria's computer it does surround with quotes, on mine it doesn't. 
Either way, it would require more 'instructions' on what the imported file should look like. And that I don't like much.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243996612\comment-316387746.json . 
I searched about the Google settings. Google doesn't allow to set export settings, but it does allow import settings. So, that requires an extra import action into a new file, and than we get:.
block-code.
I think that is a bit unpractical and error prone. 
Are there objections against .tsv ?
@carpodaster.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243996612\comment-317170586.json . 
Closing; see #800 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243996612\issue-243996612.json . 
Maria reported problems with uploading a .csv file in production., from a Google Spreadsheet export.
Google doesn't allow to override the column separator, other than choosing 'csv' or 'tsv'.
After changing the inline-code option to inline-code , for Maria the date format with comma's inside ('Aug 7, 2017') did not cause problems, but on my computer, the comma inside was read as an extra separator. 

The safest solution is to use the tab separated values content type.

@carpodaster Do you agree?
(And look how easy the inline-code changes were!  :person_with_folded_hands:  )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243996612\pr-131289180.json . 
Maria reported problems with uploading a .csv file in production., from a Google Spreadsheet export.
Google doesn't allow to override the column separator, other than choosing 'csv' or 'tsv'.
After changing the inline-code option to inline-code , for Maria the date format with comma's inside ('Aug 7, 2017') did not cause problems, but on my computer, the comma inside was read as an extra separator. 

The safest solution is to use the tab separated values content type.

@carpodaster Do you agree?
(And look how easy the inline-code changes were!  :person_with_folded_hands:  )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243996612\pr-comment-128215738.json . 
Is this what an actual Google export looks like? The  inline-code isn't a tab escape. inline-code would be. That's why I am curious.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-243996612\pr-comment-128216177.json . 
:see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244653178\issue-244653178.json . 
Supervisors reported: not happy that we need to click to  read the latest update.
Solved by removing the truncation on the latest updated.

<img width="1194" alt="screen shot 2017-07-21 at 14 14 02" src="URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244653178\pr-131762376.json . 
Supervisors reported: not happy that we need to click to  read the latest update.
Solved by removing the truncation on the latest updated.

<img width="1194" alt="screen shot 2017-07-21 at 14 14 02" src="URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\comment-317186942.json . 
@F3PiX @mkalininait I am beyond confused now. I interpreted URL as "Google exports deterministically. With proper quotes so that commas in fields don't conflict with our separator". Is that assumption true? If yes: Maud, can you add a fixture file that reflects the output format Google Docs is using (see my other comment above)? Thanks! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\comment-317191244.json . 
To the best of my knowledge, that assumption is not true.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\comment-317399740.json . 
@carpodaster I still think that Google does export deterministically, with inline-code as a separator (csv stands for 'comma-separated values' after all) and inline-code wrapping of values which contain commas.

@F3PiX Could you please clarify how you see it? Do you mean that Google Sheets exports differently depending on some circumstances?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\comment-317427643.json . 
@carpodaster @mkalininait 

I am sorry about the confusion. :see-no-evil_monkey:  I'll be more specific about what happens with export. And why we get different exports.  

1) For columns that are formatted inline-code or inline-code, it will surround the value with "" IF there is a comma in the value, and not if there is no comma in the value. 
 
2) For columns that are formatted as dates, it is the same: it will surround the value with "" if the chosen date format contains a comma. 

The format in the/Maria's Google conferences Spreadsheet has either a text format, or a different (non-Dutch) date format. With my Google Account settings (Dutch), that exact date format (inline-code) is not available.     

So, the exported format is depending on:.
* The format settings of a column in the Google Spreadsheet  
* A possible different format setting within that column - because 
* The Google Account language settings 
* and maybe other settings.

AFAIK (and could find) this is not very well documented, so it was trial and error. 
(Heads up: At first I didn't realise the google account language settings.  At a certain point I concluded that the .tsv format delivers the more consistent output; either auto, text or date format, and even with different date formats within one column, the output is always and for everyone the same. That turns out the same for different language settings.)

After we went back to .csv, I updated the fixture file so that it reflects possible states of the dates values in the to-be-uploaded-conferences-csv file, depending on different settings. 
That is why I did not use a real export: first, I don't get the exact same export as Maria gets; second, I was thinking the test file should provide data to test processing the data, not to test the data format itself.
If nothing else, I am now less worried that the .csv format will cause troubles.   

But, now I am not sure if I should or shouldn't upload a new and real export file?
(Apart from that, I realise that I forgot to surround the notes field in the invalid inline-code; I will correct that and move the note to a valid input.)      

@carpodaster Can you please confirm once more if we go with a real export or a hand-made (and improved) 'mirror'? Because I am confused too :-) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\comment-317486452.json . 
I would definitely go for the real thing as our fixture test file.

As for the comma values in dates: since everything in a CSV file is a string anyway, it should only be important that it's a format that Date.parse would understand.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\comment-317522118.json . 
@carpodaster Back to you! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\comment-317737077.json . 
Yay! Thanks @F3PiX @carpodaster!



This won't be the case in the real conf table :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\issue-244836180.json . 
Instead of #798 
Using the comma as a delimiter instead of semicolon.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\pr-131893433.json . 
Instead of #798 
Using the comma as a delimiter instead of semicolon.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\pr-comment-128895610.json . 
Is this a file exported by Google? 'Cause it doesn't quote the commas in fields.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\pr-comment-128897025.json . 
It is not exported by Google directly.   
Google does not quote comma's within fields; it only uses quotes around field values, depending on the settings of the file, the columns (and the computer) you are exporting. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244836180\pr-comment-128897760.json . 
Let us use a real file exported by Google please. As you stated before, CSV is a very loose format. We can't accomodate any CSV format under the sky. Instead we should aim for what Google exports right now (since one cannot customise the output format) and since Google is what Maria is using right now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244920857\issue-244920857.json . 
For easy interaction in browser in case of errors. :heart_with_ribbon: 

It is already in the gem file, just commented out. I tried it out for a while, and at first sight there are no side effects that would prevent using it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-244920857\pr-131940191.json . 
For easy interaction in browser in case of errors. :heart_with_ribbon: 

It is already in the gem file, just commented out. I tried it out for a while, and at first sight there are no side effects that would prevent using it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\comment-317995059.json . 
Hey @branquinhoaa Thank you for the PR! It works great for me!

One thing that was not very convenient: when you add a new conference, you get to its page and not to the team's edit page, where you can continue choosing your preferences. What do you think about it?

On another note, I've just noticed that we show the "Conference" column here: inline-code. I'm not sure we should show conference *preferences* there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\comment-318061016.json . 
Yeah, about the column conference in /teams, I think that is not necessary to show the teams preference there... .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\comment-318093316.json . 
@mkalininait done! :dancer: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\comment-318466257.json . 
Hey @carpodaster, thank you for your suggestions!
I'm not sure about how the GID should be, but for now, I have implemented in this format:.
"2017-#{Time.now.getutc.to_i}-#{teamID}"

:dancer: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\comment-318490848.json . 
@branquinhoaa Thank you! I think the feature can be used already. 

There is still a room for usability improvements though. Now, when I press the "Add another conference" button, the browser warns me "You are leaving the page, all your alterations will be lost, do you want to continue?" (meaning, I have a not very comfortable choice between loosing my changes and getting the function AND not getting the function at all). And then when I add a conference, I return back to the edit page, see the very top of it and need to scroll all the way down to the conference section.

In perfect case (as I see it), the "Add new conference" form should appear in a pop-up form (or something like that), so that you can add a new conference without interrupting your edit process. What do you think @carpodaster ?

But as I said before, we can merge the PR as is, too. I don't want to overwhelm anyone!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\comment-318585946.json . 
@mkalininait a popup (or better yet: an in-place edit) would be best, that's for sure. However, we need to repopulate the select box where the student selects the conferences from. That adds a blast of javascript logic to this PR. My idea when suggesting the JS confirmation dialogue was that you can still save whatever edits you made and continue adding a new conf afterwards. It's definitely bumpy. Wdyt, @branquinhoaa and @mkalininait, should we go the extended javascript route?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\comment-318615601.json . 
@carpodaster @branquinhoaa I'd suggest to go with the easiest solution for now (probably as-is?), because we need to start the conference process asap (like, really asap). Maybe we create a separate issue to improve the usability of this feature?

UPD: Just noticed that @carpodaster suggested the same in one of the comments above :D.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\comment-318795427.json . 
@mkalininait @carpodaster I have just made the last changes!
I think it is a nice idea to have another issue for usability  :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\issue-245438287.json . 
PR related with the issue #766 - Allow student to add a new conference in the conference long list

- Include a form for conference/new
- Include actions new and create in conference controller
- Remove the redirect (before action)
- Include authentication and confirm the allowed roles to include new conference (before action)
- Include controller tests

## New conference form:.
!conference_new

## Edit team page with a button to add new conference:.

!link_to_add_conf


.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-132309079.json . 
PR related with the issue #766 - Allow student to add a new conference in the conference long list

- Include a form for conference/new
- Include actions new and create in conference controller
- Remove the redirect (before action)
- Include authentication and confirm the allowed roles to include new conference (before action)
- Include controller tests

## New conference form:.
!conference_new

## Edit team page with a button to add new conference:.

!link_to_add_conf


.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129638605.json . 
This method has a side-effect: it changes the object passed as argument. A better and more functional approach would be to just return a valid inline-code instead of modifying an object.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129641352.json . 
This format differs vastly from that which inline-code  expects. My test on the console returned something like inline-code. I think it would be better to roughly stick to the format of inline-code, the last three digits being an integer increment. We cannot follow that format completely since we don't know which GIDs have been assigned in Excel spreadsheets for later import, but how about something like inline-code ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129642577.json . 
We shouldn't set this as a hidden field but enforce it on controller-level.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129642937.json . 
Or better yet (and something of a hack): in order to trace back that a conference was proposed by a student, shall we include the user_id in the gid?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129697060.json . 
Does this cancel link work? I would assume that it cannot construct a route from an unpersisted Conference instance.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129697356.json . 
For consistency, I would name the parameter inline-code instead of just inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129697943.json . 
For better readability, I recommend putting the conference params into a let variable.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129698600.json . 
I don't think we need to respond to json in this action. We don't have an API client (yet :wink: )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129698733.json . 
If the assignment of the season is handled in the controller, the inline-code can be removed from this list.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129699036.json . 
Can you add another empty line before the constant please? Also, it's better to define constants at the very top of a class.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129699169.json . 
This link does not have a href.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129703459.json . 
Ah, I just came to realise that the team parameter is probably only to eventually redirect back to the team's page. Can't we determine the student's team in the controller? This could be somewhat related to #790 (i.e. determining the currently relevant student team if a user is part of more than one team). It's not a blocker for this PR but it would be good if you gave it a try.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129703937.json . 
Furthermore, this link will discard whatever has been entered into the form. It should either open in a new tab or add a JS confirmation popup before it follows the link.  The latter would be preferable since a newly created conference would not show up in the open form. The page needs to be reloaded anyway to repopulate the select box.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129843241.json . 
Nice idea! 
Maria asked for some way to distinguish when a conference was suggested by a team or not. However, the idea is that the team suggests - not the student. So maybe we can make the GID in this format:.
"2017-#{Time.now.getutc.to_i}-teamID"

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-129868355.json . 
Or maybe:  "2017-ConferenceID-teamID"
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-130031750.json . 
This is not needed anymore.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-130031800.json . 
Ah, very good. I wasn't aware this method existed! :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-130031979.json . 
Yes, much better to put the team in instead of the user id. However, the year should be hardcoded but retrieved dynamically (inline-code).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-130032393.json . 
:+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-130032591.json . 
Very good catch!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-130032836.json . 
(No need to change this, just a Factory Girl hint: you only need to pass a block for dynamic values. The value inline-code is static and can be passed as a normal string argument)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-130032925.json . 
Yes! :smiley_cat: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245438287\pr-comment-130210689.json . 
Yeah, we created it in our last PR! :dancing_women: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245980087\comment-318349921.json . 
Thanks @mkalininait – this must an error with how the different team-related scopes are joined. If that is the case, this error will probably show up elsewhere, too. I'll look into it!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245980087\comment-318625898.json . 
@mkalininait I pushed a fix. Could you please check if it indeed fixed the thing?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245980087\comment-318634671.json . 
@carpodaster It did! Thank you!! :party_popper:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-245980087\issue-245980087.json . 
There is a bug in the exporter of current students. It adds not only current students to the list, but also users, who have a student role (e.g. were students in past) and are a part of a current season team (e.g. supervise a team). 

The same issue we have when we export students of the previous RGSoC editions.

Example: a person was a student in 2015, supervised a team in 2016 and two teams in 2017. This user appears in the exports students_2016 and current_students (twice).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246309298\comment-322595863.json . 
Since this is lying around for some time now :sleeping_symbol:  - what's the state of this? Is this WIP or should this be reviewed and merged soonish @carpodaster ? Or is this no longer relevant?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246309298\comment-323873128.json . 
@klappradla totally forgot about this one. No, it's not WIP, but I wish I had used a PR template and linked a related bug :wink:  I would think it is related to #621 ? :thinking: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246309298\comment-323949995.json . 
@carpodaster I think you pushed this PR while fixing this bug: URL.
cc @klappradla .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246309298\comment-324159367.json . 
Thank you @klappradla – fixed!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246309298\comment-324159571.json . 
:thumbs_up_sign: waiting for CI, will then do mergefest.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246309298\pr-comment-134606839.json . 
I guess this should be: inline-code :thinking_face:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\comment-318775974.json . 
Hey @juuh42dias Thank you for the PR! I've tested it (but didn't check the code).
It works well for me!

A couple of UI notes:.
1) Is there a reason why the checkboxes are aligned differently that all the other fields on the form? 
2) For the "terms and conditions" checkboxes I would probably remove the current titles and use the hints instead of the titles. The short titles sound a bit unclear to me.
3) I was playing with the team edit form and I'm not that sure anymore, that we should validate the "terms and conditions" when we save the form. It may be that a user wants to edit her team's blog url, and we're kinda forcing her to check the conference terms and conditions, too. It's probably not a good UX... What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\comment-318923967.json . 
Hey @juuh42dias thanx for the PR :green_heart: 

I already looked into bits of the code and it made me wonder if the data model you chose may eventually make things harder for you as they needed to be. Therefore, can you upfront, before I dig deeper into this maybe quickly explain why you chose this data model?

I will briefly explain what I think would be a simpler approach - no need for you to take this as a source of truth and implement it like this of course! Please feel fee to always ping me on Slack if something is unclear or I need to explain things in more detail _(I reduced my active Slack teams to < 10 in the last week - should be able to respond fairly quick now)_

**How to add new attributes?**
I have two possible approaches, which depends on how the new inline-code, inline-code etc. attributes should be added to the inline-code model. I would also love to have a word by @mkalininait on this, how it makes most sense for you. I see two approaches:.
1. ONE inline-code, inline-code etc. for ALL preferences
1. ONE inline-code, inline-code etc. for PER preference _(different to how it is implemented in this PR)_

### 1. ONE inline-code, inline-code etc. for ALL preferences
_(this is the approach you chose - telling from e.g. the screenshot)_

If we take the inline-code model as a starting point for orga users later on confirming actual attendences, it would be easiest to have the whole thing as one entity on the inline-code. So instead of having a inline-code and an inline-code attribute on the model, it could also look like this:.
block-code.

If done like this, there's also no reason for an additional inline-code model - all the attributes, e.g. the inline-code can simply be added to the inline-code object itself, so you end up with a simple 1 x 1 association between the inline-code and the inline-code object:.

!untitled diagram 1


In terms of Rails, this afaik basically just means, the inline-code model has two belongs-to associations to the inline-code table:.
block-code.

For the two inline-code types of check-boxes: these in my opinion can also be "virtual" attributes not persisted to the DB but only present on the object instance. Maybe take look at ActiveRecord's acceptance type of validation.

### 2 ONE inline-code, inline-code etc. for PER preference
_(different to how you implemented it in this PR)_

For this approach, I'd also spare out the inline-code model and instead add the new attributes straight onto the inline-code model. This approximately looks like this:.

!untitled diagram 2

Again, the inline-code checkboxes can probably be added as non-persisted attributes.

### Pros / Cons / Preferences
Depending on @mkalininait 's initial idea of this, I'd personally prefer the first approach, since it's just the simplest way possible. There's not even the need to validate the number of inline-code per inline-code (since it will always be just one), etc.

Of course, the requirements may potentially change within the next years, but I'm personally not a huge fan of building things more complex upfront for things that *"may*" eventually come :winking_face: 

I'm putting this on "request changes" just for this question I have here _(it helps me to keep track of my Github notifications if I already see, that I did an initial review on this)_

.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\comment-319080958.json . 
Hi, @klappradla :) 

So, we created the cp_info model because we would have more autonomy in controlling the information related to the team who chose the conference_preferences. Even if there are not any changes soon, the table already allows modifications in a way that avoids much future rework. In other words, we thought this implementation would allow us to easily introduce changes that belong to one of the preferences or even to both. We have suggested this approach for @mkalininait , but if you want we can change it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\comment-319115101.json . 
Ah alright @juuh42dias, thanx for coming back to my question so quick :person_with_folded_hands: 

I tbh don't see the benefit it a lesser coupling between inline-code and inline-code. The benefit of being able to then easier add new team-related attributes to it comes at the cost of having to maintain the way a way more complex association tree, a more complex form, etc., together with making sure, all of these objects depending on each other are available in the right moment and are deleted in the right moment.

So in my opinion, the maintenance and complexity overhead is too high a price for the benefits.

Aside that: I think the question whether there's **one info block per inline-code** vs. one info block per inline-code should be answered before. It also does not make much sense to implement it it a way loose enough to be able to jump between these two things in my opinion. None foresees the future, so there's no point in introducing complexity and technical dept for requirements that may never come :snail: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\comment-319210816.json . 
Hey @klappradla Thanks for the input!
The idea was to implement the "1. ONE comment, lightning_talk etc. for ALL preferences" strategy. I agree that it should be sufficient to have the inline-code model and I don't see why we need the inline-code model.

We indeed discussed the models with @juuh42dias and Amanda some days ago; it looked to me that we agreed on exactly the same solution tbh. Maybe I misunderstood you @juuh42dias ? If so, I'm sorry! I thought we were on the same page.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\comment-319298110.json . 
Yay @mkalininait :victory_hand:️ - guess we're at least all on the same page _now_ :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\comment-319352268.json . 
1. ONE comment, lightning_talk etc. for ALL preferences.

@mkalininait  sounds good for me (too). I'm already implementing this new version of the relations.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\comment-319495777.json . 
@mkalininait @klappradla 
So, i think is better create a new PR with new changes, that's ok? :smile_cat: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\comment-319497919.json . 
@juuh42dias This is ok with me :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\comment-319602241.json . 
Alright @juuh42dias, so I'm closing this one, since you're working on a new one now :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\issue-246463146.json . 
Related issues  #768 and  #769

Edit teams view before additional info

!edit teams view old

Edit teams view after additional info 

!edit teams view new

.
#rails-girls-summer-of-code/rgsoc-teams\issue-246463146\pr-133055133.json . 
Related issues  #768 and  #769

Edit teams view before additional info

!edit teams view old

Edit teams view after additional info 

!edit teams view new

.
#rails-girls-summer-of-code/rgsoc-teams\issue-246471372\comment-320950874.json . 
@mkalininait  in my PR( #810 )  was included inline-code on Dropdown of Conferences.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246471372\comment-321084010.json . 
Yes, should already be fixed with #810 , you're right @juuh42dias :party_popper:  _(closing this @mkalininait , feel free to reopen if it the workflow does not cover all your use cases)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246471372\comment-321211726.json . 
@klappradla @juuh42dias Can we please rename it to "None"? Other than that it looks good to me.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246471372\comment-321682722.json . 
Should be resolved now via #812 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246471372\comment-321690033.json . 
@klappradla YAP!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246471372\issue-246471372.json . 
I think we should add the 'None' option to the conference preference dropdowns, in case a team doesn't want to attend any conference. Now it's impossible to set this option after a conference has been already selected and saved.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\comment-318824003.json . 
This solves the duplicates, as long as the user input is correct. The 'city' field in the user profile is a text field, so the user input is not super reliable. 
See also URL  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\comment-318833022.json . 
<img width="1156" alt="screen shot 2017-07-29 at 16 01 12" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\comment-318858316.json . 
Thanks!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\issue-246516078.json . 
Solves #711 
Solved by unifying the user location on :save.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\pr-133089714.json . 
Solves #711 
Solved by unifying the user location on :save.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\pr-comment-130221110.json . 
Or: inline-code ? WDYT?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\pr-comment-130225866.json . 
I like normalize a bit better.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\pr-comment-130225891.json . 
You don't need to inline-code before inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\pr-comment-130225961.json . 
We could also add a inline-code. The entire method body could be condensed to:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\pr-comment-130225995.json . 
It would be better to leave some comment (normalisation to de-duplicate + NULL for sorting)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\pr-comment-130227697.json . 
:smiling_face_with_heart-shaped_eyes: inline-code   

I prefer to add inline-code to inline-code because of this:.

inline-code 

inline-code

It was implicitly tested in the specs; I added a more explicit test.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\pr-comment-130227990.json . 
Ah, very good! I only tested it with UPPER CASE in the console.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246516078\pr-comment-130228011.json . 
:ok_hand: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\comment-318855163.json . 
@mkalininait :+1: 
Just some things:.
- not sure about the name 'none'. 
- there is a strange behavior in the form: the destroy only works if I explicitly pass the object id it in the view... no idea why!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\comment-319215312.json . 
@branquinhoaa I didn't manage to make it run locally yet; I get some errors I don't understand yet ("undefined method `stringify_keys' for "/conferences/new":String", app/views/teams/edit.html.slim, line 14). Maybe I'll resolve it tomorrow.



Could you please clarify what you mean by this? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\comment-319446005.json . 
@mkalininait
weird, I'm not getting errors in my local environment... 
Did you discover what is wrong?

about my comment:.
'there is a strange behavior in the form: the destroy only works if I explicitly pass the object id it in the view... no idea why!'

I mean that I had to put the conference_id in the form, otherwise the controller did not recognize it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\comment-319503396.json . 
@branquinhoaa I don't know, maybe I did something wrong with merges. I was missing the column inline-code after checkout/pull and tried to merge with inline-code. It helped but caused the error above.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\comment-319640914.json . 
@branquinhoaa I managed to run the PR locally. It seems to work!
One minor thing: before User saves her preferences for the first time, she sees both 'none' and 'conference' options. Why do we need the 'conference' option? It disappears once User saves preferences. And in general it looks useless in presence of the 'none' option.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\comment-319641337.json . 
@branquinhoaa 




¯\_(ツ)_/¯ 
Maybe @carpodaster knows.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\comment-319658104.json . 
@branquinhoaa Works perfect! Good to merge from my side!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\comment-320030630.json . 
Hey @klappradla This is a very little PR, do you think we can merge it? It's good to go from my side.
Not sure when Carsten will be able to look at it...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\comment-320034561.json . 
Hey @klappradla, I think this PR is no longer useful after all the changes in ConferencePreference model (PR  #810). 
I was passing a _destroy: true in the cases when I needed to destroy the conference, but now we cannot do that (I guess)...
What do you think?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\comment-320091121.json . 
Sorry for coming back to this so late - my brain is kinda melted today :see-no-evil_monkey: 

You're right @mkalininait this could _"theoretically"_ be merged, I don't see a problem. However and there you're right @branquinhoaa it indeed does not make too much sense when combined with the changes we agreed upon for #810 .

Therefore I'd rather close this one in order to not introduce code that's not tested (the Javascript code) and that we'll with 100% certainty want to get rid off within implementing the next issues anyways. Are you both fine with that?

Aside that @branquinhoaa you're approach for passing the inline-code is totally valid :thumbs_up_sign:  I'd have probably solved it differently and also for the sake of easier testability without feature specs would have preferred a way of doing it _without_ Javascript, but that comes down to personal preference :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\issue-246541789.json . 
PR related with the issue #806 

- create none option for team

.
#rails-girls-summer-of-code/rgsoc-teams\issue-246541789\pr-133104202.json . 
PR related with the issue #806 

- create none option for team

.
#rails-girls-summer-of-code/rgsoc-teams\issue-246895562\comment-326535535.json . 
Hi! I'd like to work on this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246895562\comment-326543954.json . 
Yay @LuisaAPF :party_popper: 

Do you need any more information upfront?

_(I sadly cannot assign the issue to you...)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246895562\comment-326558898.json . 
Hi... I'm confused.  You can or cannot assign me this issue?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246895562\comment-326559406.json . 
I cannot for technical reasons (Github doesn't allow me to).

Sorry for causing confusion, I could have skipped the whole assign-topic :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246895562\comment-326560392.json . 
That's odd.. Do you think this might be some configuration on my site? Can I work on it anyway?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246895562\comment-326560651.json . 
No, it's simply the way Github works. **But yeah, of course you can work on it** :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246895562\comment-334124653.json . 
I've just tested this issue and noticed the following: while the "We want to suggest another conference!" button works absolutely great for students on their team's page here inline-code, it doesn't work at all for the admins in the orga space: inline-code. I think we should either make it work or delete it from there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246895562\comment-335619775.json . 
Closed via #867 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-246895562\issue-246895562.json . 
Team edit view, conference preferences

This issue derives from here: URL.

It would be great to add a new conference in an in-place edit or a popup form instead of opening a new page.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-24695384\comment-31121195.json . 
Hey @sindhus, welcome :)

This is a pretty cool idea, I'd love to see this implemented!

What kind of guidance would you be looking for?

I think the first, most basic step would be to clone this app to your computer, and get it running locally. Then make yourself familiar with the codebase by reading/skimming over it.

Your feature proposal could also be broken up into these steps:.
1. Add a read-only calendar view (that might just mean to ignore editing capabilities for a while)
2. Make sure the models play nice with inline-code (that might mean adding an inline-code instance to inline-code or possibly inheriting inline-code from inline-code, it also may mean changing the existing date formats, not sure about any of this, you'll have to check what inline-code wants)
3. Allow editing dates on the calendar view (in case that requires more/extra work)

Does that make sense?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-24695384\issue-24695384.json . 
Hi!

I'd like to propose a feature for the URL website. It would be ideal to have a calendar page which displays events viewable by public and editable by some team members. On this calendar we can mark events of the current "Conferences" [1] page. Perhaps even give a drop down menu that filters events in the calendar based on selected location. I did some research and found these third-party plugins we can choose from:.

Full Calendar -> URL.
Event Calendar -> URL.

I had discussed the base idea with Anika Lindtner over this thread [2]

I am completely new to web programming though not new to programming. I am a previous documentation and coding intern with GNOME (Outreach Program for Women and GSoC 2013). I have been doing Ruby lessons on codeacademy [3] and so far have learnt how to get a rails app running locally (of course already have setup Ruby, RVM and all). I am still learning by instinct and would love it if someone from the team guided me in implementing this idea :)

Thank you very much for your time!

[1] URL.
[2] URL.
[3] URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\comment-319509505.json . 
Hey @juuh42dias , could you please move the button "I want to suggest another conference!" between the "Secondary choice" dropdown and the "Comment" input?

The rest I didn't test, because the migrations fail (as I reported to you on Slack).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\comment-319638344.json . 
@juuh42dias I still can't run this PR locally, because the migrations fail. 
block-code.

Can anyone @carpodaster @klappradla please look into it? Maybe I'm going something wrong? I don't want the PR to be stuck because of me :/
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\comment-319663482.json . 
Migration error was just an incomplete word :see_no_evil: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\comment-319947853.json . 
Hey @juuh42dias The new features look good to me with the exception of the Terms validation. 
As we discussed before, we should only verify that the Terms are checked if at least one conference is selected. Now it's not the case, and I can't save the team edit form unless I accept the Terms (even if I didn't select a conference).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\comment-320436251.json . 
@juuh42dias Great job!! Good to merge from my side. /cc @klappradla (didn't look in the code)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\comment-321014643.json . 
@klappradla How far (you think) are we from merging this PR?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\comment-321079382.json . 
I think it's basically good to merge @mkalininait 
I'll have another look in a few minutes on the newest changes, but it looked already pretty good, so that I'll probably merge right away :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\comment-321207392.json . 
Yay, thanks @klappradla @juuh42dias ! We can start the conference process now! (I hope :D)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\comment-321208210.json . 
Closes URL and URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\comment-321212774.json . 
@juuh42dias @klappradla Oops, I've just tested the feature and noticed that validation of the terms doesn't work anymore. I can select a conference and save the form without checking the terms. BUT the app does it for me: next time I open the edit form, I see the terms checked even though I didn't check them.
Could you please fix it? We can't start the conference process with this bug I think.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\comment-321216536.json . 
@mkalininait I'll see this :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\issue-247207222.json . 
Edit teams view old:.
!edit teams view old

Edit teams view new 2.1
!edit teams view new

Show team view new:.
!team 16 elastic rgsoc teams app

:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-133576216.json . 
Edit teams view old:.
!edit teams view old

Edit teams view new 2.1
!edit teams view new

Show team view new:.
!team 16 elastic rgsoc teams app

:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131000016.json . 
I would prefer to use an acceptance validation here instead. I personally find it way clearer, since it does not leak any validation code from the model into the controller.

It works like this:.

1. You define a validation on the model:.
block-code.
:white_up_pointing_index:️  note that these two attributes **are not** backed by a DB column

2. Add the necessary field to the form:.
block-code.

3. And then simply permit it in the controller


.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131000162.json . 
As said in my comment above, I'd suggest to solve this via an acceptance validation - way cleaner in my eyes :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131000703.json . 
You could even go one step further and only validate these field if the user is non-admin :winking_face: 
But that's a bonus and not super necessary for now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131000845.json . 
When switching to using a validation for the two inline-code fields, they have to be permitted here as well of course.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131003158.json . 
Same as for the orga controller - I think this can be solved cleaner via an acceptance validation.

In addition to that, orga people should not really need to check the two terms-checkboxes anyways. But as said, that's an extra thing, not super necessary for now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131003672.json . 
Comes down to personal preference, but I'd say a naming like:.
block-code.
could be a bit more readable. What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131004087.json . 
Again personal preference, but I'd simply name this:.
block-code.
Semi aligned with how it's done for the project choices for teams and with the idea in mind to not indicate a) both needing to be present and b) that teams to to two conferences _(first to the first one, then to the second one)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131004804.json . 
As said above, when using an acceptance validation for the terms fields, this will simply be an input on the form object itself, same as e.g. the comment.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131005651.json . 
Given the conditional 2 lines above, I don't see a point in using inline-code here - there'll always be a value different to inline-code. Aside that, I would suggest to just render the link "normally", the usage of the helper looks kind of overkill to me here, don't you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131005764.json . 
I'd align this with the other view and speak of "First choice" and "Secondary choice" here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131115481.json . 
I'd say first & second OR primary & secondary :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131540385.json . 
As this is now no longer used, please remove this method :wastebasket: Having non-used code lying around just causes confusion :see-no-evil_monkey: :hear-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131540648.json . 
Nifty idea to solve the problem with the checkboxes :flexed_biceps: 

As this method is "just" returning inline-code or inline-code, once could make things even more obvious by renaming it to
block-code.

Plus, this is more of a personal preference things: I really **love** the lonely operator, but I think it this case it confuses about what's actually happening in the method. I myself am also not 100% sure if I get you intend here. I'll try to break it down:.
``inline-codeConferencePreferences`?
  [
block-code.
block-code.
  ].any? # you want to know wether there are any values for either of the conference IDs...?
end.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131541289.json . 
Almost :flexed_biceps: 

You can spare the two inline-codes - it's just about the input that's coming in via the controller (essentially the form in the end). So you need two validations:.
block-code.

Plus: remove the inline-code method, Rails does all this alone, including putting together the respective error message. The practical part about this: the validation only works if the attribute is give - so you'll still be able to create and update inline-code outside the context of user-interaction.

I put together a small Rails app for you as an example:.
block-code.

It's a Rails app in one file. In order to run it, you have to do:.
block-code.
once, and then
block-code.
To run the app and get into an interactive pry session

**But you don't have to do any of this**, I ran the app for you and illustrated some examples of how this type of validation works:.
block-code.

So as you see, Rails does all the work already for you! I would prefer to have Rails do the work in this case, instead of having to implement it ourself and testing it (we don't have to test Rails' internals, we'll just assume they work :winking_face: )

So the boolean fields just have to be present in the form and allowed in the controller. For the rest, Rails will take care of things.

Everything clear? Just ask me if this is still confusing.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131640847.json . 
The problem I see with this validation is that it will always require the terms to be accepted with or without selected conferences. This forces the user to accept the terms every time he 'edit' his team.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131641795.json . 
Right, but I don't see a problem with this. You can still add things like "only on create", etc. to the validation. It's still a normal Rails-validation.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131642545.json . 
@mkalininait  what do you think? Sounds good for you?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131670529.json . 
@juuh42dias I'm not sure I understood Max's solution @klappradla  "only on create" means on create of a team? It won't be very convenient in the cases when we want to edit something else but the conference preferences. E.g. AFAIU we always show the conference block on the team view/edit pages, regardless of the current phase (applications, coding summer etc.). It means that we will have to accept the conference terms when we edit a team during the application phase, right? Even if we fix this and enable the conference functionality only for the accepted teams (which we should probably do in a separate issue), there will be time when we don't have a list of conferences yet, but already demand to accept the terms the moment a team wants to add some team info (e.g. blog url). 
I love the idea that we check the terms only if a conference is selected. On the other hand, I understand why Max @klappradla proposes what he proposes. After all, if we make the terms validation independent of the conference preferences, it won't be the end of the world (if we hide this for applying teams at least). What do you think @klappradla ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131748759.json . 
"only on create" related to the inline-code record, not the inline-code. So it would be checked once, when the team first choses conferences.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131750457.json . 
Way easier to understand now I'd say :flexed_biceps: 
Maybe shorten this line to:.
block-code.
But that's just personal preference, you can also leave it as it is - there's no change in behavior.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131751428.json . 
Escaping within strings always looks kinda weird if there's no "real" reason for it :winking_face: 
I'd suggest to either use double quotes here, or to just rename the example to something like


Combining "it" and "should" for an RSpec example is also a bit weird, since they are actually both keywords for the same...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131752565.json . 
With the type of validation you're applying now, I think this is no longer an "acceptance: true" validation. It is instead now a so called custom method validation.

Therefore, I'd also suggest to rename this, so that it makes more sense for someone not familiar with the domain looking at it for the first time. Maybe just like you had it before
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131752852.json . 
Technically speaking this is not a "checkbox". How about
block-code.
? Expresses more what's inside the variable.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131753403.json . 
Using "present?" for something that is already a boolean looks a bit confusing for me...
block-code.
would do the same, but more expressive, what do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-247207222\pr-comment-131753450.json . 
Can you come up with better names for this?

Maybe the whole thing as something along the lines of
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\comment-321350616.json . 
@klappradla What do you think now?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\comment-321633954.json . 
@branquinhoaa Wow, it looks very good to me!
Two comments:.
1) I'd rename the blank option to "None" to make it consistent with the Conference preferences.
2) I'd make the formatting of the offered conferences the same as of the preferred conferences: with links and (maybe) bullets.

!screen shot 2017-08-10 at 20 18 49

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\comment-321827958.json . 
@mkalininait How do you think we can display the orga comment?

!sameline

!conference_offer

.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\comment-321838051.json . 
@branquinhoaa The first screenshot looks good! <3 (inline-code)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\comment-321869129.json . 
@mkalininait @klappradla fixed!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\comment-322189973.json . 
:party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\comment-322318537.json . 
@branquinhoaa I'd add a space between the 'Orga comment:' and an actual comment ;)
But since the PR is already merged, maybe next time :)

**Screenshot**
!screen shot 2017-08-14 at 23 42 42


.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\issue-248518274.json . 
PR related with issue #771
- include a new model 'ConferenceAttendance'
- allow orga user to assing a conference for a team
- allow students/supervisors/admin to see the offered conference for the team
### Teams show (info just for students, supervisors and orga members)

!teams_show

### Team edit (form just for orga members)

!teams_edit

.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-134517230.json . 
PR related with issue #771
- include a new model 'ConferenceAttendance'
- allow orga user to assing a conference for a team
- allow students/supervisors/admin to see the offered conference for the team
### Teams show (info just for students, supervisors and orga members)

!teams_show

### Team edit (form just for orga members)

!teams_edit

.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132019259.json . 
Super minor thing, but it's considered bad practice to use inline-code or inline-code as they may introduce bugs and do only add very little readability. It would also be nice if you could align the usage of brackets here, would be easier to grasp I think:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132021196.json . 
:thumbs_up_sign: 
Maybe use inline-code instead of inline-code - would make it more obvious on first glance (same for the inline-code method).

In this case, given the size of the class, I would actually even suggest to use the direct inline-code syntax, otherwise one has to scroll to the bottom of the large file to understand what's going on... What do you think?
block-code.

But totally up to you, does not change anything in behavior.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132021475.json . 
Since this is a heading, I'd suggest to capitalize it:.


_(same for the offers)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132022074.json . 
As said before, I'd suggest to capitalize these headlines.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132022097.json . 
As said before, I'd suggest to capitalize these headlines.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132025150.json . 
I'm a bit torn about the lonely operator here :thinking_face:  You already check whether or not there's a inline-code record and afaik Rails 5 automatically enforces inline-code associations, so there will always be a conference associated plus the conference has a validation on the presence of its name... For the sake of simplicity I would leave the lonely operators here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132025355.json . 
No need for the lonely operator here, you're already checking for the presence 2 lines above.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132026000.json . 
Probably mostly personal preference, but I found it easier on the long run, to keep factories as simple as possible. Meaning, if the inline-code is an optional attribute, I'd just fully skip it in the factory.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132026293.json . 
No need for escaping inline-codes. They can be used within inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132026550.json . 
Is it really necessary to inline-code the user here? Wouldn't inline-code be sufficient?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132026867.json . 
Please use double quotes and don't escape the single quote then _(also in the other examples of course)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132027526.json . 
Only stylistic thing, but you can spare the inline-code part.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132028208.json . 
For the sake of readability, I would try to come up with something starting with either _"when"_ or "with"_ for the inline-code hooks - it really helps understanding what's going on. Also: using "it" is a bit ambiguous here...

How about something like:.
block-code.

_(this also goes for the other contexts you define here)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132028770.json . 
It would maybe make sense to extract this into a partial if it appears in exactly the same manner in two views. Would also take away the overhead of keeping them in sync... :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132226768.json . 
yeah, that is true. I forgot to remove it. I just put it because before add a reject_if I had an offer without conference that was giving me some errors.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132227216.json . 
Are you referring to conference preferences? because the conference offer just appears in this specific view. But that is true, a lot better to share partials. I will do it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132572321.json . 
:thumbs_up_sign:  Can you please rename the partial to inline-code? It's otherwise confused with the teams form or edit view.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132572743.json . 
Nice! I'd suggest to put the h3 also into the partial, so that you just have:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132572845.json . 
This should be just one inline-code (not sure if == actually outputs something.... :thinking_face: )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132573216.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132813198.json . 
Can you please also make this a single inline-code _(even though it maybe accidentally works, it just does not look semantically correct)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-248518274\pr-comment-132813247.json . 
Was this blank line automatically added?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-24858782\comment-31318460.json . 
:thumbsup: looks good!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-24858782\comment-31318474.json . 
weeeeeeeeee! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-24858782\comment-31320697.json . 
Yay, very cool!

@pxlpnk do you have time to review this more?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-24858782\comment-31322276.json . 
I try to. Have no internet yet at home. (:.

On 29 Dec 2013 at 18:09:51, Sven Fuchs (notifications@github.com) wrote:.










.
#rails-girls-summer-of-code/rgsoc-teams\issue-24858782\comment-31588105.json . 
Looks good, I like it.
@sindhus could you maybe write some tests that verify a bit what you need from your controllers etc?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-24858782\comment-31588164.json . 
and I would suggest to place the "View as Calendar” link somewhere more prominent.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-24858782\issue-24858782.json . 
!screenshot from 2013-12-29 17 00 17

As discussed in issue #56 this is my first step in adding a calendar.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-24858782\pr-11129795.json . 
!screenshot from 2013-12-29 17 00 17

As discussed in issue #56 this is my first step in adding a calendar.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-249003589\comment-321310755.json . 
This is supposed to fix #806. It looks ok codewise, but I'm not sure if the behavior is now **exactly** what's desired - maybe @mkalininait you have another look :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249003589\comment-321572858.json . 
Hey @klappradla This PR is supposed to fix two things:.
1) Rename the NONE option to NONE URL.
2) Fix validation of the terms URL.

@juuh42dias 
1) looks good to me!
2) works partially. Unfortunately the validation works only when we create a preference (which we can see from the code as well: inline-code). If I uncheck a term checkbox after a preference has been created and save the form, the app still saves 'true'.

The whole term validation feature looks simple to me:.
- If at least one preference is selected, we check if the terms are checked when we save the form:.
  - If the terms are not checked, we show an error message.
  - If the terms are checked, we save the changes.
- If both preferences are not selected (set to 'None'), we don't check the terms at all.

Do you think we can make it work this way? @juuh42dias @klappradla .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249003589\comment-321607916.json . 
Thanx for clearifying again @mkalininait :green_heart: 

This is all getting way too complex, I'm so sorry @juuh42dias :see-no-evil_monkey: 

Let's just step back and build it the most basic way possible: with real DB columns

1. Add two new columns to the inline-code model:.
block-code.
1. Add the two checkboxes to the form and allow them in the controller
1. Add a simple validation of these boolean fields to the model
block-code.
block-code.

I think this should finally give us the desired behavior and it's still understandable :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249003589\comment-321682608.json . 
Awesome 🥇 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249003589\comment-321689988.json . 
@juuh42dias @klappradla Perfect! Thank you so much! <3.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249003589\issue-249003589.json . 
With 'none' option:.

!rgsoc teams app

.
#rails-girls-summer-of-code/rgsoc-teams\issue-249003589\pr-134872577.json . 
With 'none' option:.

!rgsoc teams app

.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-321350276.json . 
@mkalininait I think it is it! :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-321634185.json . 
@branquinhoaa Couldn't test it because of an error.

!screen shot 2017-08-10 at 20 07 34

.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-321688087.json . 
@branquinhoaa The export works now!
 - I think Project Tags are not being exported.
 - Please rename the button "Download team's preferences" to "Download teams' preferences".
 - Will the last exported column "Terms accepted" work after this PR: URL ? Could you please check this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-321692046.json . 
@branquinhoaa UPD:.
I've tested the column "Terms accepted". It looks like it always exports TRUE, even if the terms are not accepted. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-321700664.json . 
Yeah, that is because all the confirmation was being made without persisting the data, so we were assuming that if a team had a conference preference it had put true in the fields. Now that we are persisting those fields, we can verify this better. I will change it! :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-321814810.json . 
@mkalininait Could you please test now? :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-321836200.json . 
@branquinhoaa 
The button is fixed.
The tags are still not being exported.
The "Terms accepted" column I can't test, because I can't reset conference preferences anymore. When I try to set None in both preferences and save the form, the app doesn't save these changes and keeps old preferences. I guess it's a bug? How was it supposed to work?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-321868539.json . 
- The terms are fixed. Now you can set 'none' again.
- About the tags, I have to figure out what is happening.  
Locally, when I set the associations (teams with applications with projects with tags) using seeds it exports the tags normally.
Maybe, if you could provide me the production DB backup I could try to troubleshoot the issue locally. 
Alternatively, someone could confirm that the production teams have an application associated and projects(with tags) associated too. 
Like this: team.application.project.tags.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-322189616.json . 
We decided not to export Project Tags for the moment. Teams are not associated with Projects atm; there is inline-code (string) in the team model, but no inline-code. Unfortunately, we can't get the info about a project associated with a team from it's application.
Maybe the Team-Project relation will be set to resolve this issue: URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-322242356.json . 
Now I think it is working properly! :dancing_women: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-322611048.json . 
@mkalininait @klappradla I think we will need this one to be merged before the #772. Could you please take a look?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-322746521.json . 
@branquinhoaa Looks great! Green light from my side //cc @klappradla .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\comment-323032944.json . 
Yay!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\issue-249032337.json . 
This PR is related to the issue #770 - Export of students' preferences 

- include an export file for student's preference
- include a test file for this export file
- include a button in orga/conference for orga members download the csv

!exportsconf
!orgaconf

.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\pr-134893940.json . 
This PR is related to the issue #770 - Export of students' preferences 

- include an export file for student's preference
- include a test file for this export file
- include a button in orga/conference for orga members download the csv

!exportsconf
!orgaconf

.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\pr-comment-133544397.json . 
It would be cool, if you could add a test for this scope in the inline-code model specs.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\pr-comment-133544925.json . 
Hm, I feel like this is under the hood just testing the inline-code's inline-code scope, not actually the exporter in itself.

Can you come up with a test that better targets the exporter?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\pr-comment-133548293.json . 
Nice! I will work on that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-249032337\pr-comment-133560838.json . 
Cool! #823 is the dedicated issue. It is not super pressing, but since tests are equally part of the app as "normal" application code, they deserve the same amount of thoughts and love :unicorn_face: 

Feel free to ping me if anything is unclear about the issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\comment-322048762.json . 
Hey @juuh42dias looking at your screenshot I just realized you're using a native dropdown element _(looks a bit bootstrappy on Linux on first sight)_

However, in Chrome on Mac, this would end up looking like this:.
!screen shot 2017-08-13 at 17 19 53


The Bootstrap - and probably preferred way - would be this:.
!screen shot 2017-08-13 at 17 25 51

The changes for this would just be:.
block-code.

However, since you'r not adding a form on this page, I think the element you're looking for is actually a button with a dropdown.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\comment-323160805.json . 
@klappradla  @carpodaster  that's ok now?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\comment-328608135.json . 
:ship: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\issue-249736569.json . 
This PR is related to the issue  #502
- Include select dropdown to filter teams by year

## Select teams by year
!screenshot from 2017-08-11 17-12-23

## Select teams by year and order by activities
!screenshot from 2017-08-11 17-12-35

.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-135410725.json . 
This PR is related to the issue  #502
- Include select dropdown to filter teams by year

## Select teams by year
!screenshot from 2017-08-11 17-12-23

## Select teams by year and order by activities
!screenshot from 2017-08-11 17-12-35

.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132790455.json . 
This deletion doesn't seem to belong into this PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132790851.json . 
A minor thing: since this is a class-level method, the description should be inline-code. The inline-code normally denotes an instance method .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132791252.json . 
See above: inline-code instead of inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132791308.json . 
Shortcut:.

block-code.

Other than that: let's conserve energy and not create 5 records (including their associated objects) when we could do with just two, for example. Rationale: what changes between having 5 and 2? In addition to that, creating a record from a different season and asserting that it's not in the returned list would be nice.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132791613.json . 
inline-code is available as a controller method, you don't need to pass it as an argument. With the argument gone, I would go for a more generic method name, something like inline-code

It is also a veeeery long method.

I'm wondering why we only include the activities (w/ sorting) when there is a inline-code param. I would think this way of sorting / eager loading makes sense whether or not we sort stuff. Do you know, @klappradla or @alicetragedy ?

Provided we allow combining all these options, we can just build up the query instead of having a complex inline-code or inline-code statement:.

block-code.

Does that make sense?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132792166.json . 
This looks like a highly specialised method. Since the inline-code returns an active relation, you could just add inline-code after that. Let us go that route and remove this method.

Or if that doesn't work, try rephrasing the inline-code method as a inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132792432.json . 
This, too, seems like a highly specialised method and to me it doesn't feel like ordering the activities is part of the inline-code class' responsibility. I would move it back into controller.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132792632.json . 
Idea: making this inline-code that automatically detects whether the argument is a real inline-code object or a year (either as an integer or a string) and then constructs the inline-code condition accordingly.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132793831.json . 
I cannot wrap my head around how that would behave in the browser I'm afraid. Can someone else check that pls? :grinning_face_with_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132845240.json . 
What it does: takes the current URL, removes the search params from it, and then appends new ones, e.g. inline-code.

It then changes the current URL which makes the browser do another get request with the new params.

Afaik @juuh42dias, you could shorten this to just:.
block-code.
It should to exactly the same.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132845460.json . 
This adds a lot of non-default behavior to this select element. My personal guideline for this is usually: if I use Javascript to add behavior to an element, use data attributes, in this case something likeinline-code and leave classes and ids fully for anything related to CSS and styling.

I even added some JS code to the Teams App once where I use it. Have a look at city.js and the view files associated with it for inspiration.

Aside from that: I think it's sematically speaking slightly wrong to use a inline-code tag here, since we're not in a form... What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-132845614.json . 
:thumbs_up_sign: sure, the eager loading should be independent of whether there's a inline-code param or not - the inline-code timestamp is still displayed. Don't see the reason why it should be different @carpodaster.

Why we need to eager load all activities to then in the end just pluck a single timestamp per team is a different thing though :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-133492572.json . 
Really nice using data attributes for it!! 
I looked in your city.js but I couldn't find any view associated with it. I searched in the files and I put a breakpoint in your function to see the element. Is it used to auto-complete cities' names in forms? 
Anyway, I will replace the id by the data attribute.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-133561734.json . 
Yes, you're right, it's used by this type of input element: here's the code for it

It's not 100% the same, but the usage in views is similar in syntax.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134316109.json . 
Hm, @juuh42dias this is still a thing here - can you explain why you're deleting this file?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134316814.json . 
Personal preference, but especially with these event handlers who just tackle one single view, but are of course invoked for every single page render, I think it makes sense to only invoke the setup block when the element is present. See for instance in city_fields.js :grinning_cat_face_with_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134317900.json . 
This looks a bit confusing to me :see-no-evil_monkey: 
What's the point in 3 times overriding the inline-code instance variable`? This is going to end up in multiple - redundant after all - calls to the database, which is usually not what you want. Can you think of a way to structure this nicer and get rid of redundant DB calls?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134318303.json . 
I don't see this scope being used anywhere _(nor is it tested)_...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134318598.json . 
For what reason was this introduced? I don't see it being used anywhere :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134319756.json . 
Hm, I'm afraid this does not say anything... Aside from the description not really telling the reader what's supposed to happen, the test only tests if the inline-code action renders the inline-code template. One can pass arbitrary params to an inline-code action. The test would be the same with:.
block-code.

Given that the inline-code action is rather complex, this test should probably better target the actual behavior there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134587840.json . 
We don't use this inline-code anymore.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134588663.json . 
I accept suggestions for refactoring this function.

My brain is blocked for now. :crying_cat_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134608313.json . 
Ah ok, so it was just forgotten to be removed in another PR?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134608640.json . 
It was a Carsten suggest.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134608932.json . 
Unfortunately :disappointed: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134609465.json . 
Oh, alright, thanx for clearifying :person_with_folded_hands: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134610472.json . 
Ok, I see. But what usecase did he intend it for?

Maybe I'm getting things wrong here, but I don't see the point in adding new _unused_ methods - that's like introducing legacy on purpose :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-134611685.json . 
Oh, no worries :green_heart: 

First of all I'd try to get rid of redundant queries. So a super simple thing here could for instance be to move the conditional:.
block-code.

Then move the two queries from the second assignment into one:.
block-code.

Can you use this as a starting point?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-135310082.json . 
@klappradla done :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-135408695.json . 
What about adding a check that the right logic is called?
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-135408708.json . 
What about adding a check that the right logic is called?
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-135408799.json . 
How about making this even more strict?
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-135408906.json . 
Hm, not sure if this test is really necessary. Since there aren't any inline-code records in the database, this would be positive for basically any query on the inline-code table. I would suggest to either completely skip it, or add some records to really prove this one case.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-135408995.json . 
I would suggest to make this a bit more explicit:.
block-code.

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249736569\pr-comment-137604404.json . 
Any news on what I wrote :white_up_pointing_index:️ @juuh42dias ?

One option could also be: move setting up the teams into a inline-code macro
block-code.

Doing so, the test around year 2000 is a bit more meaningful - what do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249798257\comment-321967795.json . 
:clapping_hands_sign:  Nicely put, Max. +1 for removing the label. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-249798257\comment-321977694.json . 
Top notch!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249798257\issue-249798257.json . 
As discussed on Slack, I added "the ping method" to the contribution guide and removed the inline-code label as it seems to be obsolete now that Github has the PR review request feature. I'd of course once this is agreed upon also remove the label from the repo :victory_hand:️ 
_(there only one old issue with this label at the moment)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-249798257\pr-135452815.json . 
As discussed on Slack, I added "the ping method" to the contribution guide and removed the inline-code label as it seems to be obsolete now that Github has the PR review request feature. I'd of course once this is agreed upon also remove the label from the repo :victory_hand:️ 
_(there only one old issue with this label at the moment)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\comment-322457578.json . 
Thank you @carpodaster. :tulip: Back to you. 

I realised there was a problem with the rake task, so I changed that too. 
The most important error seems to be if a team has an incorrect or outdated inline-code. So I changed the rake task to found and log those errors.  

(Edit:)
Re:.


I created an issue for this (and other cool stuff we can do) once the rake task is done.   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\comment-323875625.json . 
Back to you @F3PiX :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\comment-324016896.json . 
Back to you @carpodaster 

See also this comment on the previous review round: URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\comment-324142336.json . 
Thanks! 🥇 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\comment-324142814.json . 
One more thing before we close this.
I don't have access to production. @carpodaster Can you run the rake task? Or who should I ask?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\comment-324160688.json . 
@alicetragedy can you add Maud to the teams app on Heroku?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\issue-250040710.json . 
Solves #19 

- Restore the association between team and the project they are working on
- Add link to the team activities page in the Projects table 
- Create rake task for populating the inline-code
  
Follow up: 
- [ ] After the records are updated with inline-code,  the project_name can be removed from the table. 

Some background notes:.
The team-project association has been removed in URL as part of #354, the introduction of Project Proposals.

And even more background:.
At that point an inline-code had both a inline-code and a inline-code. 
Later on, the inline-code in the application got replaced by the inline-code and inline-code, and stored in the application_data hstore. 
  



.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-135604341.json . 
Solves #19 

- Restore the association between team and the project they are working on
- Add link to the team activities page in the Projects table 
- Create rake task for populating the inline-code
  
Follow up: 
- [ ] After the records are updated with inline-code,  the project_name can be removed from the table. 

Some background notes:.
The team-project association has been removed in URL as part of #354, the introduction of Project Proposals.

And even more background:.
At that point an inline-code had both a inline-code and a inline-code. 
Later on, the inline-code in the application got replaced by the inline-code and inline-code, and stored in the application_data hstore. 
  



.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-133113053.json . 
You can remove the inline-code – teams will always return a list. If it's empty, inline-code just won't do anything.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-133113225.json . 
Should we move this to inline-code? I would think we'd only run it once and can forget about it after that.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-133113253.json . 
We also need to take the season of both the team and the project into account.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-133113571.json . 
I was about to write "let's add inline-code here" since that adds the season. But it also adds the project name. Do we need the season name?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-133113625.json . 
Should we name the association inline-code then to make it extra clear?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-133152245.json . 
We only list projects for the current season
So, adding the season name would seem redundant to me. Okay?
(Extra: I'd like to add the season name to the title though; that is part of another issue.)

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-133180529.json . 
The good news: with the name inline-code, the comment is much more clear. But I feel it still needs the comment. For me, 'accepted_teams' is about the application procedure, less about 'working on the project'. 
I considered inline-code. ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-134350183.json . 
I agree, inline-code doesn't sound right. I'm not too happy with inline-code (sounds a bit like a dance class :wink: ). What about inline-code ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-134351382.json . 
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-134351485.json . 
Find by lowercase names? Gives our spelling of project names a little more slack.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-134351821.json . 
I agree, inline-code doesn't sound right. I'm not too happy with inline-code (sounds a bit like a dance class :wink: ). What about inline-code ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-134352151.json . 
:smiling_face_with_heart-shaped_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-134352975.json . 
I'd vote for inline-code over inline-code. 
New bid: inline-code. That doesn't cover the 'legal' relationship, but it communicates the bond between team and project. Okay?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-134389063.json . 
:thumbs_up_sign:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250040710\pr-comment-134454568.json . 
Actually, I'd rather not. It would require to downcase both the inline-code and each inline-code.
I'd say the risk of this particular misspelling is very low, compared to all possible misspellings. Either way, problems will pop up in the console and will not go unnoticed.
Is it okay with you if I don't downcase? 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-250049932\issue-250049932.json . 
- Add a link to conference details into conference block
- Return the 'none' name to the conference edit page
- Remove the helper to check a terms checkbox.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250049932\pr-135610993.json . 
- Add a link to conference details into conference block
- Return the 'none' name to the conference edit page
- Remove the helper to check a terms checkbox.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250308168\comment-322766217.json . 
In addition to 1:.
I think we should remove the inline-code from the non-orga team edit page.

And this comment, too: URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250308168\issue-250308168.json . 
Blocked by ~#816~ #892  
Once the production db is updated with the inline-code, we can use the team <->  project association for things like:.

- [ ] 1 Orga Team edit page: assign project with dropdown select
- [ ] 2 Use the association in the query Projects#index
- [ ] 3 Turn the project_name in inline-code into a link to the project show view.
- [ ] 4 Change relevant references to the inline-code into inline-code  
... ? << Add your Wishlist here 

Maybe split it up in separate PR's.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250577869\issue-250577869.json . 
inline-code

If I don't choose a csv file and press the "Import csv file" button, I get this error:.
!screen shot 2017-08-16 at 12 16 58

It would be great to show a user friendly error message instead.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-250625433\comment-322910618.json . 
It has been there since _"forever"_ (as in: 2 years :face_with_tears_of_joy: ), but you're right @mkalininait it just does not have its own headline, that's why it looks slightly misplaced.

It could probably go up somewhere around the name field. The form looks a bit as if it was directly moved over from the "normal" namespace, it still has some obsolete checks for whether or not the user is admin and the wording is targeting students. Maybe one should rephrase some of this :winking_face: 

Do you want me to "fix" it?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250625433\comment-323523281.json . 
@klappradla Ugh. Yeah, the form is chaotic. It would be great to put it in a order.

**For both non-orga and orga views:** I don't understand why we show all these fields in the "Members" section:.

!screen shot 2017-08-19 at 15 15 47

In my opinion "Introduction", "Twitter handle", "Github handle" and "Sources" belong to a separate section e.g. "About the team". We can show it for accepted teams only. The field project should be displayed in the orga view only.

**If we talk about the orga view**, there are a few fields to manage team's status:.

!screen shot 2017-08-19 at 15 23 17

I think that "Team type", "Season", "Starts on", "Finishes on", "Project" (see URL should belong to a separate section, e.g. "Team status" or something like this, which is available for orgas only (obviously).  And I don't know what the field "Blog post info" does and where it should go.

This is my vision, I'd love to hear other opinions, too.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250625433\comment-323523471.json . 
@klappradla I'm sorry, my previous comment goes soooo much beyond the original issue title :D.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250625433\comment-323583881.json . 
No worries @mkalininait :winking_face: 

What you say about the structure pretty much all makes sense. But another question upfront: why would admins *either* use the normal form *or* the orga form? In my opinion they should not be able to use the normal one and just have the orga-form as their place to edit teams.

I'm make this an inline-code, since I think the "question" part was answered, right?
I'm a bit too busy right now to actually do it, but I'd just assign it to me and then take care of it once I have more time. What do you think? It's not a "bug", so I wouldn't prioritize it super hight...

We can also rephrase it to: structure orga teams form.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250625433\comment-323862199.json . 
@klappradla Thanks for the comment!

You are right that the orga should use only the orga view. When I was talking about the normal view, I was thinking about the students. When our students get accepted to the program and want to edit their team, they see this chaotic form, too: not the 'status' fields, but the ones which should ideally fall in the 'about the team' section. Thus I think we should improve both views: normal for the students and orga for the orgas.

What do you think?

And you are right that it's not a high priority task, not at all.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250625433\comment-323863768.json . 
Sure, I'd also straight look at both forms.

Was just curious about the use cases. If the orga form is "just" one that orga users shel out to if the "normal" form is not capable of everything the want to do or if it's the go to point of they want to edit a team (as said elsewhere, I think the latter sounds more reasonalbe to me)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250625433\comment-323867145.json . 
@klappradla I agree, the latter sounds better (more consistent) in the currently implemented system.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250625433\issue-250625433.json . 
I've just noticed that we have the inline-code dropdown in the "Sources" block of the Orga team edit form:.
!screen shot 2017-08-16 at 15 18 55

Does anyone know where it comes from? It looks misplaced in the "Sources" block. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-250628030\comment-322906694.json . 
Perfect @mkalininait :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250628030\issue-250628030.json . 
I think we should show the 'Conference' block (incl. 'Conference preferences' and 'Conference offers') on the team view/edit pages only for accepted teams. Conference settings are absolutely useless for the teams who are applying for example.

I think such solution is better than showing the 'Conference' block depending on the current season/phase. We may want to see in which conferences the teams of the previous editions participated. Moreover, some teams have their conferences after the summer of code and they may want to see them on their team pages even after the summer is officially over.

Any thoughts?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323065490.json . 
@klappradla @juuh42dias I think it makes sense to do the same for the orga view. Conferences are relevant only to the teams which participate in RGSoC (=have been accepted) anyway.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323071879.json . 
@mkalininait  only for conference preferences?

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323072771.json . 
@juuh42dias It applies to both conference preferences and conference offers.

UPD: I hope I understood the question correctly.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323073645.json . 
@mkalininait like this?

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323346877.json . 
@juuh42dias Sorry, it's hard for me to judge a feature looking in the code only; I'm not a professional developer. I'll test.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323522367.json . 
@juuh42dias I've tested the feature. It seems to be working!
One thing I noticed: as an admin, I don't see the conference preferences block on the non-orga team edit form. On production I do. Is it done intentionally?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323734523.json . 
@mkalininait it was a change for user permissions, who can view this block or no, but if you want I'll return this method like was before.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323843159.json . 
Related to this: is it necessary that orga users use the "normal" edit form for teams @mkalininait? I think it would make the things less cluttered and less complex if this was just strictly divided and orga had their own edit form for this... What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323855585.json . 
@klappradla @juuh42dias I don't mind showing offers only in the orga view. I just didn't expect this change in this PR. Let's keep it!

@klappradla Tbh I, as a user with the admin role, don't find this entire system with normal and orga views of the same things super convenient. But since we decided to use it at one point, let's try to stick to it :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323860055.json . 
Hm, I cannot really judge the convenience, don't use it enough for this. To me it seems to be "just" the problem that there's still a lot of interleaving. In an ideal Teams App world, an orga user would not even be able to access a "normal" Team for and submit it.
Any changes an orga person wants to do to data not directly owned by him or her (as in e.g. the personal profile) should be done via the orga area I guess - that's at least how I understand its purpose. Correct me if I'm wrong.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323866112.json . 
@klappradla Yeaah... I guess I'm supposed to:.
 - go to the orga dashboard
 - open the list of teams
 - find a team I want to edit there
 - edit it!

In fact I'm too lazy and use the inline-code page, because I can open it much faster from the nav bar.  Then I find a team, press the 'Edit' button and manually add the inline-code part in the url :see-no-evil_monkey:  This is my use case at the moment. Maybe I'm not representative though.

In any case, these are low-priority UX reflections which shouldn't affect this PR :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-323867589.json . 


It's a valid point, though! And we should tackle this … in another issue/PR :wink: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-324158591.json . 
:party_popper: thanx @juuh42dias .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\comment-324590229.json . 
@juuh42dias Thank you! :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\issue-250718723.json . 
## When Team is valid/accepted
!rgsoc teams app 5
!team 1 gouda rgsoc teams app 1

## When Team is not valid/accepted
!team 1 gouda rgsoc teams app
!rgsoc teams app 4

PR issue related #821 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\pr-136091933.json . 
## When Team is valid/accepted
!rgsoc teams app 5
!team 1 gouda rgsoc teams app 1

## When Team is not valid/accepted
!team 1 gouda rgsoc teams app
!rgsoc teams app 4

PR issue related #821 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\pr-comment-133574472.json . 
As far as I remember the ability inline-code was introduced specifically for this view / this context. So I would say if we change the restrictions, this should be done inside this specific ability itself, don't you think?
It would also have the benefit of having the view less cluttered with conditions :winking_face: 

So what do you think about adapting the resembling ability and its tests instead?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\pr-comment-133576267.json . 
Something like this? 
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\pr-comment-133578531.json . 
Yes, something along the lines of this. For admin users, it should not make a difference whether or not the team is accepted - I would in fact generally remove the admins here in this ability, as orga has their own team form (there you can simply enable all). And I would probably do the check for inline-code first.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\pr-comment-133703385.json . 
Done
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\pr-comment-134540262.json . 
:thumbs_up_sign:  could even be more simpler or am I wrong?
block-code.
If a user does not have the role "student" he or she cannot be returned as the students of the team I guess.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250718723\pr-comment-134605349.json . 
No, you're right :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250752469\comment-326339806.json . 
Done in #839.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-250752469\issue-250752469.json . 
As said in #813, it would be nice to have a dedicated test for the inline-code scope in the inline-code model specs. If that is properly tested, we can rely on this contract with the conference_preference exporter. This means: we stub out this method and make the test there less heavy on the database. It is enough for us to know **that inline-code get's called**, the internals of this method are tested elsewhere (in the model specs).

So, try to define what the actual behavior of the exporter is, and then test this, potentially stubbing out the internals of other parts of the system that are already tested elsewhere.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\comment-323184657.json . 
Solid work @F3PiX :flexed_biceps: 

:green_heart: for asking for the related issue(s)

I would have put it a bit more pressing for user interaction (editing, removing, checking things), just to make sure people will at least be forced to write something :winking_face: 

Also, I would skip the "notes" part (this can be part of the description) and maybe merge "goal" and "description" as I find it very difficult to make a distinction between them without constantly crossing the boarders.

And one question: what do you mean with "Test/outcome"? 

Here my more interactive version (raw .md)

block-code.

I know this :white_up_pointing_index:️ looks super short :face_with_tears_of_joy:  but for me it covers the key things _(I also don't wanna overwhelm people and make this a huge effort...)

Quick explanation why I wrote it like this: I think the inline-code you used has the  great effect to look like a placeholder, which means none would leave it as it is, either remove or replace it _(which is what we intend)_
The latter two checkboxes are things I would ask for once I realize a) this code is touching "backend" logic or b) heavily changing views. So we could spare these questions and have the template ask them.
Aside from that I think the description can cover anything else, if people really have something to say.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\comment-323286413.json . 
Thanks Max! 
Let's collect other people's input before we decide, okay?

A note on the difference in our approaches: 
As the main goal of the template is to make reviewers' life easier, I'd say the template should first of all help juniors write better PR descriptions. 
From my experience as a junior, it can be surprisingly hard to be both concise and complete in reasoning about what a PR is doing. My idea (and experience) is that a little help with captions help me to achieve that. 

For fun: compare URL and URL and URL :face_with_rolling_eyes: 

That said, we could give some direction to what a 'goal' is. Like : "Name the kind of change (for instance feature:, fix:, design:), give it a name, and add the main location in the code. Details go into the Description. 
For instance: "Feature: create CoffeePicker in Student Dashboard"

And an answer to your question about 'Test/outcome':  
<! --- How did you test? How can a code reviewer test? -- > Let's skip this all together. :fire: 





 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\comment-323585346.json . 
Ok, I get your point about guiding people to write better descriptions :electric_light_bulb: 
For the testing part: I don't see how this can make the whole process around PRs more efficient. For quickly understanding and judging the code, it's useful to know if there are new automated tests covering the changes (and see if they make sense) yes or no. Whether or not the author tested the features in the browser, deployed a private app somewhere to test it... is not super useful information for quickly knowing if this PR makes sense / what changes it needs.
Similar for "how can a code reviewer test": it's obvious that I could in theory check out the PR locally and invoke the code or look at what Travis did with the tests. Whether I would do local testing with a production database dump, run it in multiple browsers, etc. is more of the reviewers own workflow, the author of the code does not really need to think about these things in too much detail upfront for the reviewer I'd say _(it's not really part of the contribution - although it's of course a nice help at times)_

So merging what you wrote with my previous comment, I'd update my solution to this:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\comment-323843245.json . 
Any more input on this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\comment-323866918.json . 
Hey @F3PiX  and @klappradla !

As stated via Slack, I am not a huge fan of PR templates.

Even with inline-code I foresee a lot of placeholder clutter remaining in the PR.

I don't think we need to make the preflight checklist a checkable GHFMD list. It should be a reminder for the person lodging the PR, not being checked after the PR is created. We don't need an extra checklist to see if there are tests - we can have a look at the diff.

I wouldn't encourage new people to use the keywords _closes_ and _fixes_ as this will introduce a post-hook. It is perfectly fine for ongoing contributors who know their way around the app.

My idea of a PR template would look a bit like this:.



Quite spartan, I know.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\comment-323974983.json . 
I actually like the spartan one very much. Except for the gifs :face_with_tears_of_joy: . 

I'd say: let's start with the spartan one, and see how it works.  Okay? 

I'll make a note to ask for evaluations later. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\comment-323976017.json . 


!what's wrong with gifs?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\comment-324000526.json . 
Nice explanation @carpodaster :green_heart: +1 on using your puristic template :party_popper: 

Your abbreviation game is way to strong for me though :see-no-evil_monkey:  What's inline-code? Googling I just find this :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\comment-324002001.json . 


🤣 

I was thinking GitHub flavoured markdown, but they abbreviate it GFM. Oh well.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\comment-324004018.json . 
🤣 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\comment-324006727.json . 
If only we had a label to tell that this is ready to be merged..... :face_with_tears_of_joy: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\issue-251025392.json . 
Related issue # --

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
 ---->
Adding a template for PR's, to help write concise and complete descriptions


.
#rails-girls-summer-of-code/rgsoc-teams\issue-251025392\pr-136318219.json . 
Related issue # --

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
 ---->
Adding a template for PR's, to help write concise and complete descriptions


.
#rails-girls-summer-of-code/rgsoc-teams\issue-251624202\comment-323814221.json . 
Any obligations in putting this into the inline-code milestone @mkalininait ? I think it would make sense, now that @juuh42dias and @branquinhoaa are already touching this area of the app, not to leave any "holes".
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251624202\comment-323864161.json . 
@klappradla I'm fine with anything you decide :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251624202\comment-328613136.json . 
Closing this via #829 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251624202\issue-251624202.json . 
It would be convenient to have a possibility to add a new conference from the list of conferences here: inline-code.

Add a button "+ New Conference" on the conference page (maybe the same way as it's done for inline-code?). The button should open the "Create a new conference" form. 

Who should see the button: 
 - orga
 - students of accepted teams.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251645491\comment-323732942.json . 
Hey @branquinhoaa I assigned you to this bug, but if it's not your area of responsibility, feel free to "unassign" yourself.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251645491\comment-323757362.json . 
When you tried to add the conference, are you logged as an organizer? that error is because we use team id to generate the gid, if you are logged as an orga you have no team. I will solve it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251645491\comment-323856062.json . 
@branquinhoaa Ah, I see :) Yep, I am an orga without a team. Would be great to have a possibility to add a conference in this case, too.

If it works for the students, the bug becomes of a lower priority, I guess :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251645491\comment-324032639.json . 
Yeah, I submitted a PR fixing it. In cases where the user does not have a team, I'm using her user id to generate the GID.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251645491\comment-329996829.json . 
@branquinhoaa 
Still getting an error when trying to create a new conf as an orga :/

UPD: my test conf (URL has been created with a correct gid, so maybe this error is related to the redirect.

UPD 2: I created this conf from inline-code, not inline-code, which is a valid use case IMO.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251645491\comment-329996865.json . 
@branquinhoaa Am I getting this right that some confs will have a team id in their gids, and some a user id?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251645491\comment-330158294.json . 
@mkalininait I got the error on Sentry. It's indeed the redirect. As an orga person, what's your expected/desired redirection target? Students get redirected to their team's edit form which doesn't work for organisers.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251645491\comment-330223134.json . 
@carpodaster In all cases I'd prefer to get redirected to the same page, where I pressed the "New conference" button (regardless of my roles):.
 - team edit page
 - conferences
 - orga/conferences

Do you find it reasonable and possible?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251645491\comment-330303060.json . 
I will fix the redirect, we had a lot of changes related to this but now I think I can work properly on this issue. Just a minute.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251645491\comment-330354503.json . 
@mkalininait PR #860 I think this will work!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251645491\issue-251645491.json . 
When I try to add a new conference I get Error 500 on production. 
This is how the error looks locally:.

!screen shot 2017-08-21 at 14 31 21

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\comment-323860700.json . 
@branquinhoaa Thank you so much for the PR! It works great!
Two minor issues I noticed:.
1) The conference exporter. Somehow it exports the header line with the inline-code separator and all other lines with the inline-code separator now.
2) I'd add more space between two offers (see below). But this is just a really minor thing.
!01e8779783
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\comment-324035236.json . 
### new team/view with margin-bottom:.

!add_space

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\comment-324593875.json . 
Thank you @branquinhoaa ! The screenshot looks good to me. I'll test the entire PR one more time, once everything else mentioned by **michaelem** is fixed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\comment-324903360.json . 
@mkalininait all yours ;)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\comment-326621443.json . 
@branquinhoaa The PR looks good, let's merge it!

One tiny tiny comment: somehow the buttons have a different style than all other buttons in the app and than the buttons on your screenshots (e.g. no round corners).
!screen shot 2017-09-01 at 21 07 52

Do you know why? I can create a separate issue for this, so that it doesn't hinder this PR. Or you can also add a commit in this PR, whatever makes more sense.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\comment-326632691.json . 
@mkalininait I can fix it in this PR :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\comment-326653770.json . 
@mkalininait Fixed! 
!btn_style

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\comment-326672195.json . 
Looks awesome, thank you @branquinhoaa 
Merge! Merge! Merge!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\issue-251669200.json . 
PR related to the issue #772
- include an option for team students reject/accept a conference offer.
- include a tag in teams/view to show if a team accepted or rejected a conference offer.
- include descriptions into conference headers
- include new fields into exporters
## new views
!3
!2
!1


.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\pr-136767557.json . 
PR related to the issue #772
- include an option for team students reject/accept a conference offer.
- include a tag in teams/view to show if a team accepted or rejected a conference offer.
- include descriptions into conference headers
- include new fields into exporters
## new views
!3
!2
!1


.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\pr-comment-134954241.json . 
Permitting inline-code  in the inline-code suggests that it is part of the data that need to be changed. The way to handle finding a record in an update action would probably be to use inline-code. Also the rest of the params allow the setting of the inline-code, is that really intended? I think the controller name suggests that one should only be able to change the attendance attribute. One last thought: the params should probably be nested under inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\pr-comment-134954817.json . 
If this should actually be part of a ConferenceAttendanceHelper I would probably move it to it's own helper class/file.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\pr-comment-134956461.json . 
I think it would make more sense to not set @team separately dependent on the params but to use inline-code for the redirects later on. This would communicate more clearly that the team that we are redirecting to is the team that is associated to this inline-code object.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\pr-comment-134956961.json . 
I presume that using inline-code is probably inteded to be inline-code? inline-code is not saved/validated in this action so it can not have any errors.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\pr-comment-134958673.json . 
I would probably try to nest the params here or use an inline form. If I'm not mistaken this currently generates a path with a bunch of get params and then submits them via put. I think it would be more elegant to have these be submitted as post params.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\pr-comment-134958990.json . 
I don't think this action should take team_id as a param - it's part of the attendance record already and if it is accepted as a param it could be set to anything here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251669200\pr-comment-135215012.json . 
You could still skip line 5 and just use inline-code here (if I'm not missing any other uses).
That way the only assigned @-variable would be inline-code, signaling that this is the object that we are dealing with in this action. (But this is really a small code style thing.) Do you still want to change that?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\comment-324304515.json . 
This one is related to the issue #826 (fix a bug in button to a new conference in teams/edit ). The other issue (#825) is an enhancement  - just to add an extra button. 
But if you want I can join in one PR.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\comment-328614481.json . 
Hey @branquinhoaa :waving_hand_sign:  
Now that #829 has been merged, would you mind rebasing?  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\comment-328614635.json . 
Could you please bring this up 2 date with inline-code @branquinhoaa ? I think some changes in the inline-code are already obsolete.... :see-no-evil_monkey: 

Are all your changes in @F3PiX ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\comment-328615923.json . 
@klappradla @branquinhoaa Looks like we are cross-typing ;-)
I'll update/sync my review when the branch is updated. :thumbs_up_sign:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\comment-329228078.json . 
@klappradla @F3PiX  I updated the PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\comment-329230783.json . 
Yay, looks all good from my side. Can you check back @F3PiX ? I'd like to merge this soon.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\comment-329480812.json . 
Looks good to me too!! Thanks @branquinhoaa 🥇 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\comment-329996534.json . 
Still getting an error when trying to create a new conf as an orga :/

UPD: my test conf (URL has been created with a correct gid, so maybe this error is related to the redirect.

UPD 2: I created this conf from inline-code, not inline-code, which is a valid use case IMO.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\issue-251722439.json . 
PR related to the issue #826

- Use user id instead teams id into conference gid generator.
- Redirect to conferences after orga create new conference ( but to edit/teams when is a student that create a new conference )
- Refactor action.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-136807067.json . 
PR related to the issue #826

- Use user id instead teams id into conference gid generator.
- Redirect to conferences after orga create new conference ( but to edit/teams when is a student that create a new conference )
- Refactor action.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-comment-134333021.json . 
You can set the season_id at the same time as the conference_params like this:.
inline-code
The same goes (I think) for the generated inline-code, but I don't mind if you leave that separately.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-comment-134334942.json . 
My main question: If I understand this correctly, this means that _every_ logged_in user can add conferences to the main list now? I thought the index listing was meant to list the conferences that are imported via the importer? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-comment-134336805.json . 
What happens here if the current_user is not a student?


.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-comment-134337881.json . 
Can you add tests please for the non-student users? The current specs cover only logged in _students_ , no other users.
You can wait to do them untill we finished the Q&A ;-) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-comment-134495620.json . 
if a current user is not a student, the team will be empty. 
When the conference was saved, the 'team.present?' will return false and then the user will be redirected to a conferences_path after creating a new conference.
However, this button just appears for users that have an ability to 'update_conference_preferences' -  just orga members and students of that specific team.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-comment-134495967.json . 
Good idea! :dancer: 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-comment-134505870.json . 
The button to add new conference are supposed to appear just for a student of a specific team and orga members. However, orga members do not have a team, so I thought that use the current user id in the GID could help to track who added the conference, instead what team added the conference. But as far as I know, just the students (and orga members) are allowed to add conferences. You are right, I have to include tests for it! :D thank you.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-comment-134696767.json . 
:thumbs_up_sign: Nice!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-comment-134700750.json . 
Aha, it is only for orga members and students. Then I still don't get the use case for the change to user_id. Sorry ;-) This controllers#create is were the students enter their 'suggestions', right?
So, why should an orga member use _this_ create action?  Why not either in the namespaced orga/conferences? OR even better, import them via the google database. 
I have the feeling that we are trying to press two very different use cases into one. WDYT?  
 





.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-comment-134729185.json . 
Yeah, makes sense just team's student create new conferences. However, in the description of this issue, it was asked to let orga members do it too. Even in the new issue #825 related to add new button, it was asked to allow both orga members and students to add new conference. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251722439\pr-comment-134756267.json . 
Okay, I see what you mean! Do you mind if we set this on hold, then? And leave it in this separate PR. 
I am sorry for the complications :-(
But let's first _implement_ the enhancement before we solve bugs in that enhancement :face_with_tears_of_joy:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-323842657.json . 
Thanx @juuh42dias :person_with_folded_hands: 

Before I dive into the code, some suggestions for the UI:.
* I'd suggest to put the interaction **below** the table. Background: people should see all existing conferences first before suggesting a new one _(there's no mechanism to prevent duplicates)_
* Same as with the inline-code, we need some text / some explanation here. I feel like we need to stop just putting buttons without explaining the user what's possible there :see-no-evil_monkey:   
The text could be something like _"The tech conference you're looking for is not yet in our list? Just suggest it!"_

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-324373704.json . 
@klappradla 

## Orga Conference view 
!rgsoc teams app 9

## General Conference view
!rgsoc teams app 8

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-324588854.json . 
Hi @juuh42dias Thank you for the PR. I have two issues with it:.

1) **Security.** It's great that the students of the unaccepted teams don't see the "New Conference" button on the list of conferences, BUT they can access the form directly by the url inline-code and successfully add a conference this way.
I think this issue was not introduced in this PR, it probably existed from the beginning. Do you think we can (and should) fix it in this PR @klappradla @juuh42dias ?

2) **Redirect.** When I add a conference from the conf list, I get redirected to the team edit form. I understand why it works this way, it makes sense when you add a conference from the team edit form. But when you add a conference from the conf list, it makes sense to return back to this page (normal or orga view correspondingly). .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-325112261.json . 
Thanx for pointing out @mkalininait :person_with_folded_hands: 

Yes, I think we should definitely fix the access rights to inline-code - by using the appropriate inline-codecheck in the controller @juuh42dias :victory_hand:️ 
You could do this in a separate PR though to not change the topic here too much.

I'll quickly create a ticket for this @juuh42dias :white_up_pointing_index:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-325112818.json . 
Here's the respective ticket for :white_up_pointing_index:️ #840 -> I did not yet assign it to you @juuh42dias , maybe @branquinhoaa wants to take care of it. Anyways, feel free to assign it to whoever does it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-326614771.json . 
@juuh42dias It looks like the redirect issue is still in place. What do you think about it? Are you planning to fix it?

cc @klappradla .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-327875381.json . 
Any news on that @juuh42dias? Do you need help somewhere? Or are you already done?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-328092694.json . 
@klappradla I believe that's ok. I created new/create a page for orga conferences to solve so many redirects into conferences of non orga.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-328102183.json . 
Hi everyone! I would like to point out that the redirect to the teams/edit page won't be necessary anymore, as the conference will be created with an ajax request. I will send my pull request on this issue today.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-328130099.json . 
@LuisaAPF Sounds interesting :-) What issue number are you working on? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-328153957.json . 
Sorry, I forgot to mention it,  @F3PiX. It's issue #809 adding new conference ux.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-328169648.json . 
Ok, thanx for the info :person_with_folded_hands: 

So good to merge from my side. Any obligations @mkalininait ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-328611291.json . 
Ok, just tried it out locally. Orga users cannot use the normal form for creating conferences (500) - but I guess that's fine in the end and for now at least @mkalininait .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-328611376.json . 
:party_popper:  thanx for you efforts @juuh42dias :person_with_folded_hands: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-329480796.json . 
@klappradla Sorry, was super busy these days. Thanks for merging the PR! The redirect issue will be resolved with PR #850 I guess, and the Error 500 for admins with PR #828. 

@juuh42dias Thank you for your work!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-329497728.json . 
@mkalininait, I actually didn't change the redirect on my PR #850. I think there is no need for a respond to html on the conferences_controller/create anymore, as this is already being dealt with on the respective method under the orga folder. If you agree, I can do the clean up.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-329995513.json . 
@LuisaAPF Ah, ok. Sorry, I misunderstood it then.

I'm not sure we can completely delete the respond to html on the conferences_controller/create, because we still can create a conf from here: inline-code (not orga). Please tell me if I'm getting this wrong.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-330035553.json . 
Hey, @mkalininait, no problem :) I'm still a bit confused myself. So, the idea is to forbid the access through the path conferences/new, right? For non-organizers, it will only be possible to add a new conference from the modal inside the teams/edit form. So I guess the conferences_controller/create should respond only to an ajax request.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-334413172.json . 
Hey @LuisaAPF I'm terribly sorry that I'm replying to you only now. The end of the Summer of Code was a busy time for us, and I couldn't find time to go through GH updates until this week.



It's not entirely correct. We want to let students of *accepted* teams (= teams which participate in the summer of code) to add new conferences; it doesn't matter how they do it, from their team's page or from the list of conferences. 
We do want to restrict access to the users who haven't been accepted to RGSoC, see this comment. Here is an issue to fix this: #840 

I listed all possible scenarios on how a new conferences can be added from UI here: URL (by students we mean *accepted* students there). I think it looks good in general, we just need to fix the last redirect and access for the users other than accepted students and orga. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\comment-334452575.json . 
I get it now. Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\issue-251754391.json . 
PR related issue #825 

## General Conference View

!rgsoc teams app 7

## Orga Conference View

!rgsoc teams app 6


.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-136830691.json . 
PR related issue #825 

## General Conference View

!rgsoc teams app 7

## Orga Conference View

!rgsoc teams app 6


.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-135386621.json . 
You can skip the inline-code here :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-135386640.json . 
Hm, just wondering, does this have any impact on the conferences imported up to now?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-135386665.json . 
According to the comments on this PR: shouldn't this only be allowed for students from accepted teams?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-135386683.json . 
This is somehow duplicating what you define as abilities to inline-code conferences - could you also reuse the ability here in the controller?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-135386779.json . 
Having these edge cases based on the current user's role makes me wonder if we should not just have a dedicated controller for the orga namespace: inline-code... :thinking_face: 

On the other hand the amout of logic here is still handleable... What do you think @juuh42dias ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-135386818.json . 
Yay, looks already really cool :thumbs_up_sign: 

Do these specs also work if you use inline-code instead of inline-code (would speed them up :winking_face: )
Plus: it would be convenient to also add a negative example, where a user cannot crud conferences.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-135386960.json . 
We already have that controller. :dancer:  URL 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-135387231.json . 
Oh, should have looked at the repo :see-no-evil_monkey:  thanx a million @F3PiX :person_with_folded_hands: 

So yeah, I guess we should opt for this controller for users coming from the orga views @juuh42dias :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-135387641.json . 
I wonder if it makes sense to add a separate form in the orga namespace? So we don't have all the cancancan checks in the views. AFAIK one of the goals of the namespaces is getting independent of the cancancan checks. WDYallT?

EDIT: Oh, should have looked at the repo 🤣 . We already have that form.


  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-136056221.json . 
@klappradla I don't understand what you mean.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-136057771.json . 
@branquinhoaa  says now we use 'user' instead 'team'.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-136058724.json . 
inline-code returns students from accepted teams.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-136066717.json . 
:thinking_face:  The change to :user instead of :team is implemented in another PR #828. So, it is better to not change it here. :thumbs_up_sign:    .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-136201178.json . 
Sorry @juuh42dias :see-no-evil_monkey: 
I just meant: the inline-code should not have any specific logic to distinguish between inline-code and normal users. inline-code users should instead use the controller in the inline-code namespace (plus the respective forms and views of course).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251754391\pr-comment-136201500.json . 
Oh ok, looks fine, thanx @juuh42dias :person_with_folded_hands: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251782772\comment-324107276.json . 
@F3PiX i've removed the whitespace.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251782772\comment-324252515.json . 
@carpodaster I got an TypeError in console.  

<img width="788" alt="screen shot 2017-08-23 at 09 55 15" src="URL.

The button is disabled and enabled correctly. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251782772\comment-324253420.json . 
Ah shoot. The script is loaded everywhere – not just in orga/conferences_controller. My bad, that's a bug. I won't have time today to fix it. Does it break other JS?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251782772\comment-324254003.json . 
My first impression is : yes. The download button on the same page acts weirdly also.

I can do a temp patch or something right now. Does that help? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251782772\issue-251782772.json . 
Fixes #819 but should also prevent this error from happening at all by disabling the submit field until a file has been selected.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251782772\pr-136852158.json . 
Fixes #819 but should also prevent this error from happening at all by disabling the submit field until a file has been selected.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251782772\pr-comment-134417778.json . 
Whiteline? ;-)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251782772\pr-comment-134420926.json . 
I guess I don't understand what the advantage is to using the custom solution over the built in Rails option in the form inline-code inline-code. 
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251782772\pr-comment-134428170.json . 
Either way, how about setting inline-code on the file field? That makes is hard to miss.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251782772\pr-comment-134559363.json . 
Even with autofocus, you could still fire the submit button. It doesn't matter now that the error is caught in the controller as well, but theoretically, one should never even get there anymore: the JS disables the submit button when there is no file selected.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\comment-324003801.json . 
I'd love to get rid of slim :thumbs_up_sign: 
For me, using jQuery is easier than being forced to use plain js. Talking about beginner friendly: as jQuery used to be part of Rails, its use in Rails is better documented than plain js. 
So, I'd vote against vanilla js. :ice_cream: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\comment-324006596.json . 
@F3PiX :thinking_face:  You might be right about the better documentation. But this is certainly to no small amount thanks to:.





:winking_face: 

What's your take on CoffeeScript?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\comment-324007154.json . 
I agree with not using CoffeeScript! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\comment-324036938.json . 
I used to prefer .erb, but after the 'teams app' I think I really like slim. The .erb files look so polluted!
about the CoffeScript, I agree with not using it. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\comment-324039641.json . 
I preferer .erb but I vote for use .slim (because is a Teams App pattern) and Vanilla JS(JQuery) :smile:.

My votes:.
Slim Template Engine :white_check_mark: 
Vanilla JS/JQuery :white_check_mark: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\comment-324076414.json . 
Great topic @carpodaster :smiling_face_with_open_mouth_and_smiling_eyes: 

**JS vs. Coffeescript**
**JS** -> :thumbs_up_sign: for not using Coffeescript anymore (it's basically dead and I don't see a point for anyone diving into it - even the Atom editor gets now fully rewritten in Vanilla JS)

**slim vs. erb**
:white_question_mark_ornament: -> I don't care, inline-code is pretty close to inline-code which almost as widely used as inline-code, don't see it as that huge of a weirdness of the Teams App

**jQuery vs. Vanilla JS**
**Vanilla JS** -> :thumbs_up_sign: for solving things with pure JS :party_popper:  I think it really increases code quality and understanding. Plus: JS is not that bad anymore _(and does even feel better if you skip the jQuery parts)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\comment-324109581.json . 
Thank you all for participating in this discussion! :green_heart: 

I've removed the paragraph about Slim vs. ERb. I changed the JS one so that it :ok: s jQuery but encourages Vanilla JS.

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\comment-324155196.json . 
:party_popper: all good to :ship: in my opinion
(although writing code with 4 spaces indentation kinda hurts my eyes :cat_face_with_tears_of_joy: )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\comment-324888510.json . 
Funny I did not see this but started thinking about doing a PR that removes coffeescript since it's only 3 files left I think. Anybody already on that? (Otherwise I'd do it this weekend.)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\comment-324889991.json . 
@michaelem not to my knowledge. Go for it! :hot_beverage:️ :black_rightwards_arrow:️ :ice_cream:   Thanks :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\comment-325150012.json . 
Last call for objections :grinning: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\issue-251790200.json . 
Opionated PR. inline-code :smile:  Happy to close if this feels too constraining.

Ping @klappradla @F3PiX @branquinhoaa @juuh42dias .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251790200\pr-136857909.json . 
Opionated PR. inline-code :smile:  Happy to close if this feels too constraining.

Ping @klappradla @F3PiX @branquinhoaa @juuh42dias .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251793238\issue-251793238.json . 
The jshint gem's CLI isn't compatible with the npm jshint CLI, giving a Ruby stack trace when called with jshint command line args. This is bad since bundle overrides the path and it obfuscates the "real" jshint that's installed on the system.

The Travis CI task doesn't check CoffeeScript anymore (which I believe the rake task did before by employing the asset pipeline). See #831 for my take on CoffeeScript :smile: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251793238\pr-136860220.json . 
The jshint gem's CLI isn't compatible with the npm jshint CLI, giving a Ruby stack trace when called with jshint command line args. This is bad since bundle overrides the path and it obfuscates the "real" jshint that's installed on the system.

The Travis CI task doesn't check CoffeeScript anymore (which I believe the rake task did before by employing the asset pipeline). See #831 for my take on CoffeeScript :smile: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251882401\comment-324165637.json . 
Hm, difficult edge case @mkalininait :see-no-evil_monkey: 

Really "choosing" something like inline-code does not really work, since it's not a valid conference ID and in fact not even an integer :winking_face:  So it's inline-code in the DB which of course cannot be distinguished from "not selected".

If I recall correctly how this was implemented, I think for the latter case of "not selected", there should not be a inline-code record created at all - so the Team should not have this section in their profile at all :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251882401\comment-324606578.json . 
@klappradla That's right, when nothing is selected, a inline-code record is not being created. In order to create a inline-code record with inline-code in both preferences, the students should choose random conferences, save the form, edit it again and then set "None" to both preferences. Nobody does it, of course. In both use cases, whether a team doesn't want to attend any conferences or they didn't have time to fill out their preferences, we end up not having a inline-code record. And then we go the supervisors and ask what their students actually meant :)

One solution I can think of:.
1) We create an actual conference called "None" in the "None" region.
2) We make sure that the "None" region shows up on top of the list of conferences in the preference/offer dropdowns.
3) We rename the current "None" option to "[not selected]" (for both preferences and offers).

!3087f8ac5d
!screen shot 2017-08-24 at 13 12 27




.
#rails-girls-summer-of-code/rgsoc-teams\issue-251882401\comment-325111308.json . 
Yes, sounds like a good plan @mkalininait :thumbs_up_sign: 

So @juuh42dias some more things I would suggest to take into consideration here:.
* the "none"-conference (maybe we could call it inline-code, since it behaves a bit like a null-object) should be created as part of the application's seed data, since it's a crucial piece of data to have the app working
  * create it as part of the inline-code file
  * for running applications (development / production / staging), this can be done via a migration that adds the inline-code if it does not exist yet (use something like inline-code)
* validations:.
  * we don't want validations for the terms of travel, etc. if a user choses the inline-code (these checkboxes don't make much sense here)
* the actual "empty" value in the form: I think best practise would be to call the blank element something like "please select" (also for the inline-code as @mkalininait said)

:white_up_pointing_index:️ makes sense to you @juuh42dias ?

Do we need to do something similar for the inline-code @mkalininait? I would rather not do it (it's more of a hassle to implement such workflow there and I don't really see the usecase) - but just to make sure :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251882401\comment-325150319.json . 
(inline-code :heart:  I love null objects)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251882401\comment-326616414.json . 
@klappradla Could you please specify your question? I thought that if we create the inline-code, it will automatically show up in the Conference Offer dropdown. Is it not so?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251882401\comment-327857800.json . 
Sorry a) for the late response and b) for being so sloppy with my question @mkalininait :see-no-evil_monkey: 

What I meant was: do we need a similar distinction for creating inline-code records. But after rethinking it again, I can answer it myself: no.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251882401\issue-251882401.json . 
**Where:** Team edit forms, 'Conference preferences' section, 'Primary choice' and 'Secondary choice' fields

While using the conference features I faced the following issue: there is no way to distinguish two cases: 1) when a team didn't select their preferences (e.g. they didn't have time); 2) when a team doesn't want to attend any conference.

The solution can be the following:.
 - have two options in the list: **[not selected]** and **None**
 - **[not selected]** would be the default option for the teams which haven't selected their preferences yet (now this option is called "None")
 - **None** would be the option which teams can use to state that they are not interested in conferences

The list could look like this then:.
 * [not selected]
 * None
 * Conf 1
 * Conf 2
 * ...
 * Conf N.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251938015\comment-330568192.json . 
HI @F3PiX, I notice that no one is assigned to this issue. If it is still available I'd love to take it on. Otherwise I'm happy to help out elsewhere.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251938015\comment-330568532.json . 
Hi @Benjaminpjacobs You are very welcome to take this on! Thanks!

I can assign contributors only, but be assured it is yours :-)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251938015\comment-330568980.json . 
Great! I'll get started on it and hit you back soon.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251938015\comment-330589826.json . 
@F3PiX I added the link in the nav bar section. I could not specifically find any feature tests that might cover the links in the navbar. I'm happy to add if you feel that would be helpful. Let me know!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251938015\comment-330609937.json . 
Hey @Benjaminpjacobs thanx for jumping on this :party_popper: 

There are some "featurish" specs for the navigation in requests/navigation_spec.rb - probably makes most sense to look there for some additions.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251938015\comment-330612193.json . 
Thanks @klappradla! I've added a couple lines to include the projects_path in the appropriate request tests.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251938015\comment-331088598.json . 
Closed via #862 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-251938015\issue-251938015.json . 
There is not currently a link in the nav bar to the projects index page.
Add a link to projects#index in the dropdown in inline-code, under inline-code

<img width="524" alt="screen shot 2017-08-22 at 14 19 18" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-252201935\issue-252201935.json . 
Addresses an issue introduced in URL.

Didn't even test it in the browser. Sorry :(
.
#rails-girls-summer-of-code/rgsoc-teams\issue-252201935\pr-137158912.json . 
Addresses an issue introduced in URL.

Didn't even test it in the browser. Sorry :(
.
#rails-girls-summer-of-code/rgsoc-teams\issue-252296147\comment-324363761.json . 
Closing. It is not a bug, it is a feature!! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-252296147\issue-252296147.json . 
/orga/conferences
After clicking the download button, the button is disabled, and that is a good thing.  After the download is completed, the button doesn't jump back to enabled state. That is not so good...

This looks related to the javascript, so you can solve the js, OR use the submit button option inline-code instead.
Whatever you think is best or easiest :-)   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-252317613\issue-252317613.json . 
Related issue #796  #434

* Fix error when GitHub handle is blank.
* Without RSpec tests for now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-252317613\pr-137244118.json . 
Related issue #796  #434

* Fix error when GitHub handle is blank.
* Without RSpec tests for now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-252652781\comment-324683551.json . 
To further reduce the amount of errors: we could run the task on teams inline-code. Replace the inline-code input field on the Team form with a project dropdown. 
Because currently, we only use the project_id  in the Projects index view for the current season. 
:thinking_face: 

   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-252652781\issue-252652781.json . 
Follow up on #816

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->
Populating the new inline-code on teams via the inline-code will generate 'RecordNotFound' noise. Adding a scope to make the task running on accepted teams only should reduce some of that noise.




.
#rails-girls-summer-of-code/rgsoc-teams\issue-252652781\pr-137492911.json . 
Follow up on #816

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->
Populating the new inline-code on teams via the inline-code will generate 'RecordNotFound' noise. Adding a scope to make the task running on accepted teams only should reduce some of that noise.




.
#rails-girls-summer-of-code/rgsoc-teams\issue-252918123\comment-326012377.json . 
Thank you @carpodaster! I searched a little bit about contexts and you are right, it is really better to use it. I refactored the test file with your suggestions, but if you think there is another thing to improve just let me know.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-252918123\issue-252918123.json . 
Related issue #823
- Change the test for conference preference exporter (test if receives current teams)
- Include file to test model of conference preference

.
#rails-girls-summer-of-code/rgsoc-teams\issue-252918123\pr-137685749.json . 
Related issue #823
- Change the test for conference preference exporter (test if receives current teams)
- Include file to test model of conference preference

.
#rails-girls-summer-of-code/rgsoc-teams\issue-252918123\pr-comment-136180860.json . 
Oh yeah, smart! :tulip:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-252918123\pr-comment-136181071.json . 
Is inline-code the right name for this? I feel it should be inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-252918123\pr-comment-136182106.json . 
Checks for overall object validity may fail because a different error is causing the object to be in an invalid state. Personally, I prefer something in the form of this:.

block-code.

(You may need a call to inline-code first to trigger the validations)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-252918123\pr-comment-136183816.json . 
RSpec adds automatic matchers for predicate-style methods (= methods that end with a inline-code).

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-252918123\pr-comment-136183909.json . 
I think the comma should be a inline-code.

Better to use a multi-line inline-code before block here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-252918123\pr-comment-136340731.json . 
I used it in the other method too. But sounds a little bit strange: 'not_to be_has_preference' :joy: 
That is ok?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253082179\comment-328789195.json . 
Hey @juuh42dias & @branquinhoaa, I think we totally forgot this one _(it was a follow up for PR #829 )_ - can you please check if this is still valid and then take care of it? It should only be a tiny task :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253082179\comment-328906377.json . 
Ok @klappradla. We will take care of this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-253082179\comment-328913599.json . 
@klappradla current ability:.

inline-code

That's right?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253082179\comment-328937225.json . 
Yep, as far as I remember you changed it to this yourself @juuh42dias :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253082179\comment-328942610.json . 
@klappradla 
"...changed it to this yourself"
'-' Sorry, I don't understand.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253082179\comment-328942899.json . 
:cat_face_with_tears_of_joy:  no worries. Just wanted to confirm: yes, that's the current ability and it should be right.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253082179\comment-328945909.json . 
:+1:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253082179\issue-253082179.json . 
As mentioned in #829, restrict the access to the inline-code (and related inline-code etc.) actions to those users who have the ability to do this. Use inline-code to ensure this on the controller level.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253094777\issue-253094777.json . 
Related to PR #837 and issue #794

 - Minor refactoring of inline-code and its spec file
 - Remove inline-code module and puts everything in inline-code directly 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-253094777\pr-137798808.json . 
Related to PR #837 and issue #794

 - Minor refactoring of inline-code and its spec file
 - Remove inline-code module and puts everything in inline-code directly 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\comment-325775569.json . 
Cool @m-gb ! 
Re:  naming How about naming the module inline-code  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\comment-325786071.json . 
Hi all, thanks for commenting!
I've tried to incorporate the changes you requested.
I renamed the module to "OrderedConferences" because that's the end result of the methods in the module as I understand it. 
For testing, I tried to create a dummy class which includes the module so it's an isolated spec. I'm just not sure how to proceed, it's currently throwing an error about params being undefined. :(
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\comment-325820962.json . 
Hey @carpodaster thanks for your suggestion.
That worked perfectly! I've adapted your example into the code and all tests are passing once more.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\comment-325915788.json . 
:ship:  :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\issue-253179029.json . 
Related issue #763 

I've moved a few duplicate methods into a separate module inside the concerns folder.
Let me know if this helps :)


.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\pr-137842177.json . 
Related issue #763 

I've moved a few duplicate methods into a separate module inside the concerns folder.
Let me know if this helps :)


.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\pr-comment-135779899.json . 
We aren't super opinionated on syntax, but there's **this one thing:trade_mark_sign:** we care about (see the contribution guide):.


So, for the sake of consistency, would be super cool if you could update this to be with 2 instead of 4 spaces indentation :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\pr-comment-135781164.json . 
Hm, this name sounds super reasonable if this would be about models... But in controller-context, this I'm afraid does not really name the behavior or "thing" the module is about... :thinking_face: 

Do you think you can come up with a name better describing / "naming" the logic or behavior encapsulated in the new module? Would be ace :victory_hand:️ and make it way more understandable for someone looking at these controllers for the first time.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\pr-comment-135886502.json . 
I don't think we need this line. We're just mixing in instance-level methods and there are no nested includes. It should work with extending the module.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\pr-comment-135886747.json . 
This method and sort_params should be private.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\pr-comment-135887290.json . 
I know this PR just moves existing code into a different file, but while we're at it: what do you think about removing this method entirely and call it in inline-code directly? It's not complex logic and I would argue that it improves the narrative of the code to remove that level of indirection.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253179029\pr-comment-135905613.json . 
The anonymous class you're defining doesn't have a inline-code method, that's why you're getting the error. Further down you're checking for inline-code but that would reference an instance variable of the _test class_.

Does this code work? (only written here on GH, haven't run it anywhere)

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253186825\comment-325970614.json . 
Thanks : ) Someone asked me if I could have solved this issue by simply removing the new_session_path method. Well, I tried this and got a no method error. In this documentation, it is stated that if you are using only omniauth authentication, you have to define this method on your application controller.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253186825\comment-325970985.json . 
Ah thanx @LuisaAPF :person_with_folded_hands: 
I think I asked it somewhere in a comment. But I already tried it out myself so did not come back to it :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-253186825\issue-253186825.json . 
Related issue #642 

 - Fixes the workflow of email confirmation when user is not logged in. Instead of redirecting the user to the sign in path, it redirects now to the root. This might be a better approach, as it complies with devise's default behavior and security, as discussed in this stackoverflow issue: URL 
 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-253186825\pr-137846705.json . 
Related issue #642 

 - Fixes the workflow of email confirmation when user is not logged in. Instead of redirecting the user to the sign in path, it redirects now to the root. This might be a better approach, as it complies with devise's default behavior and security, as discussed in this stackoverflow issue: URL 
 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-254054419\comment-326407013.json . 
Changes were done! :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254054419\comment-326417150.json . 
:person_bowing_deeply: Thanks for the redirect fix! :smiling_face_with_open_mouth: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254054419\issue-254054419.json . 
Related issue #84
- include a controller for community (listing and searching all users)
- remove the action index for user controller.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-254054419\pr-138467184.json . 
Related issue #84
- include a controller for community (listing and searching all users)
- remove the action index for user controller.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-254054419\pr-comment-136186062.json . 
Since the index action has been moved, can you remove index from the call to inline-code in line 23 please?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254054419\pr-comment-136357205.json . 
I am curious about this change in behaviour. The impersonating buttons are still in the index list, right? What is the reasoning for redirecting to the user profile now? 
(Instead of to the community_index path, same as L 67 )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254054419\pr-comment-136361254.json . 
We could use the community_index_path as well. I thought that would be more intuitive the user be redirected to the page of the user he chooses to impersonate, but I can change it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254054419\pr-comment-136367327.json . 
Yes please! :thumbs_up_sign:  I'd appreciate that. :dancer: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-254054419\pr-comment-136372423.json . 
@carpodaster about the redirect I asked you. Do you prefer to keep the old behavior?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-254054419\pr-comment-136373269.json . 
@branquinhoaa I don't mind, really. I think it makes sense to redirect to the person whose identity you've just assumed but it's also changing a behaviour whereas everything else in this PR basically maintains the old behaviour, just moves it between controllers.

@F3PiX seems to be in favour of keeping the existing behaviour, so let's roll with that.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254116950\comment-326109000.json . 
I always thought that rubocop rules aren't very inviting for people new to the Ruby programming language. I may be wrong on this one, but I would still like to keep the linting rules to a minimum.

Things that come to mind (opinionated):.

* Indentation rules: 2 whitespaces, no extra indentation for private methods
* New hash syntax (inline-code instead of inline-code)
* Aligning inline-code and inline-code on the same level
* Lines not longer than ~100 characters
* No trailing whitespace
* First-level inline-code should be inline-code
* No parentheses for method definitions _without_ args, mandatory parentheses for method definitions _with_ args
* Omit parenthesis on method calls without arguments
* Omit inline-code and just use inline-code
* No explicit inline-code
* No explicit inline-code at the end of a method

I was looking at the first half of URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254116950\comment-326118756.json . 
FYI : Why I suggested Rubocop:.
As discussed on Slack, I OTOH think that rubocop rules can be very accommodating for RubyNubies.
It helps me to avoid easily avoidable mistakes like indentations. It helps me delivering the best PR I can offer. And it helps with consistency between code reviews.  



.
#rails-girls-summer-of-code/rgsoc-teams\issue-254116950\comment-326120971.json . 
Great list!!! :direct_hit: 
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254116950\comment-326138225.json . 
:thumbs_up_sign: for adding a inline-code step to our CI pipeline with some small and basic rules like the ones you described @carpodaster :green_heart:.
From my experience, it helps to reduce some efforts on keeping code consistent and I **hugely** agree with @F3PiX, it's an awesome resource for learning some best practises _(the docs are really great)_ - I really liked it when I started out with Ruby.

I would volunteer to set everything up :white_up_pointing_index:️ and update the guides and readme accordingly one we came to a decision (I'm on a conference next week, so I may have some free time).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254116950\comment-326138542.json . 
Small note on 


Ben just moved everything over to the opposite :cat_face_with_tears_of_joy: - maybe a sign we should have a automated guideline for things like this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254116950\comment-326189343.json . 


Haha, oh well. Nevermind, I'm not very invested in that rule.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254116950\comment-326285177.json . 
I think rubocop could help us! I agree about include it in CI :dancer: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254116950\comment-329620213.json . 
FYI: I started on this branch if someone's curious.

_Carsten's list:_

- [x] Indentation rules: 2 whitespaces, no extra indentation for private methods
- [x] New hash syntax (inline-code instead of inline-code)
- [x] Aligning inline-code and inline-code on the same level
- [ ] Lines not longer than ~100 characters
- [x] No trailing whitespace
- [ ] First-level inline-code should be inline-code
- [x] No parentheses for method definitions _without_ args, mandatory parentheses for method definitions _with_ args
- [x] Omit parenthesis on method calls without arguments
- [ ] Omit inline-code and just use inline-code
- [x] No explicit inline-code
- [x] No explicit inline-code at the end of a method.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254116950\issue-254116950.json . 
Even though we currently state in our CONTRIBUTION.md that we don't automatically lint code, it has been suggested by @F3PiX that we consider adding a couple of simple rules.

This issue exists to discuss how everyone is feeling about this and what kind of static code analysis would make sense.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\comment-326797701.json . 


It looks like we already do that, by not allowing ES6 🤣 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\comment-326799944.json . 
@F3PiX yes, about that: The last commit to jshint master was more than 2 years ago (quasi 2 millennia in javascript time), I think it might be time to drop it from the build process? Of course I can also edit this PR to not use ES6 syntax if that is the consensus.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\comment-326809318.json . 
I don't know enough about js set ups to have an opinion on this. :-( 
But I love (using) ES6.

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\comment-326830597.json . 
I don't do JS but I'm all for ES6 from what I've heard. I don't know the new language constructs, so my question would be (before I lock myself out of JS on this project): is it possible/advisable to mix "old" style JS with ES6? (sorry if that is a noob question, but I _am_ a JS noob)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\comment-326906892.json . 
Yes, you can use them together. (BTW ES6 will be compiled to 'old' style JS.) 
edit: Given that we are using Webpack, which comes with Babel, which will take care of the compiling to old style JS)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\comment-328270666.json . 
My pull request #850 is throwing an error because I'm trying to use ES6.
Should we allow this syntax on the whole project? Meanwhile I'll go back to
the old syntax.

2017-09-08 11:15 GMT+02:00 michaelem <notifications@github.com>:.



>



>



>


>







>

.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\comment-328990977.json . 
@klappradla had to refactor the rating thing anyway in order to move away from the es6 syntax, seems to do the popover and scrolling as I expect it now.

Generally I would much prefer to use the ES6 syntax, but let's see if that works with babel then.

Anyway, from my side I think this is done, pending another review.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\comment-328993245.json . 
 @michaelem :clapping_hands_sign:  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\comment-329089339.json . 
@LuisaAPF re: ES6: I think we should allow it, but I think if we switch to webpacker we can use babel to transpile before it hits jshint. Then again: not sure if that is a good idea?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\comment-329105948.json . 
I'd vote for collecting the es6/webpacker discussions in that issue, if that is okay? Easier to keep track of the arguments. 

For instance I thought we already decided on es6. :upside-down_face:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\comment-329232130.json . 
Yay, thanx a ton @michaelem :person_with_folded_hands: 

I don't know anything about the whole JS party, but am still :heavy_plus_sign: for doing it :victory_hand:️ 

Anyways, for now this works, lets have the ES6 stuff in a separate PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\issue-254860807.json . 
This removes all remaining coffeescript from the application and replaces it with equivalent javascript.

I've done sone poking around and everything seems to precompile and work as expected, although the app has no tests covering the javascript as far as I can tell. (Currently plotting on adding some system tests.)

Caveats: 
* I'm really not good at this js thing, these might not be up to current coding standards.
* I think we should probably try to unify our javascript somewhat (although this might be in opposition to our contribution guidlines).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\pr-139039477.json . 
This removes all remaining coffeescript from the application and replaces it with equivalent javascript.

I've done sone poking around and everything seems to precompile and work as expected, although the app has no tests covering the javascript as far as I can tell. (Currently plotting on adding some system tests.)

Caveats: 
* I'm really not good at this js thing, these might not be up to current coding standards.
* I think we should probably try to unify our javascript somewhat (although this might be in opposition to our contribution guidlines).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\pr-comment-137596908.json . 
:green_heart: for also straight removing it from the inline-code :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\pr-comment-137597726.json . 
Hm, :thinking_face: I've never seen this in JS yet, are you sure this works? I know inline-code is a thing in inline-code, but for JS I thought one needs to explicitly call it...?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254860807\pr-comment-137745430.json . 
re: "I'm really not good at this js thing" ;)
I'll take another look at the rating js :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-326907519.json . 
Can I start whispering  "React" :smiling_face_with_heart-shaped_eyes:  now?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-326908258.json . 
:thumbs_up_sign:  for keeping the asset pipeline clean.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-326909576.json . 
@F3PiX trying to keep js as much confined to the frontend as possible here :face_with_tears_of_joy: 

I think the biggest upside is that one can get rid of using gems that just wrap javascript code and just use npm packages instead. Of course the implication also is that people then have to learn to use yarn which might be a new hurdle (but a rather small one imho).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-326947188.json . 
I suppose going to yarn is not a big deal for Rails devs, because they are used to the gemfile.
(TBH I never used npm; now that I am learning React, I went straight to yarn.)
Can you add a short 'How to' to the wiki, with what is changing for this repo?  
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-327166886.json . 
I thought webpacker was shipped with Rails v5.1 by default now? If that is so, this is definitely not too much to ask of a dev. And in any event, we need a line or two in our README anyway, so people should be able to just copy/paste it into the terminal.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-327168489.json . 
@carpodaster it ships but it is not the default. If you want to use it on a new project you run inline-code.
But it ships with rails, integrates well and it might very well be default in the next release.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-327168930.json . 
@F3PiX if it's fine I'd write create a pull request and add fitting sections to the readme, I think the wiki is somewhat too detached for this kind of thing.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-327170138.json . 
@michaelem :thumbs_up_sign: for the readme and the initial setup. I was thinking that the wiki is a nice place for a short notice on how to add new JS libraries. But no fuzz, just an idea. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-327170908.json . 
@michaelem @carpodaster I don't know if everyone but me uses Foreman to start the app? We can add webpack to Foreman, right? Saves the very hard and painful process :face_with_tears_of_joy:  of starting up two processes before you can start...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-327172489.json . 
@F3PiX with webpacker 3.0 webpack is anyway automatically started in the background if it's not running - so no need to start it manually unless you want live-reloading of javascript code: URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-327173706.json . 
COOL!!!! I didn't know that! (And that while it is almost 5 days old news!! :winking_face: ) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-327863940.json . 
:heavy_plus_sign: on moving to "modern JS":trade_mark_sign:.
Being familiar with these tools seems to be part of getting started with Rails anyways nowadays. So even given the slight plus on overhead for getting started with setting up the Teams App, I think it's a good thing to have :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-328282609.json . 
@michaelem Did you mean that you would like to take this on? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-328540264.json . 
@F3PiX yes, hopefully I'll get around to finish #846 today, then I can embark on this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-330248634.json . 
@michaelem Is it correct that ES lint is a better choice for working with ES6 than JSlint? 
Because we use currently JS lint.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-330249298.json . 
Edit: we are currently using jsHint. :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-346011910.json . 
Hey @michaelem – just wanted to ping you if you were able to advance this. Anything one can help you with?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-347023795.json . 
Hey, as signified by my response time I did not really manage to carve out time for this, although I think I can actually give it another try next week, since that should be a bit more quiet.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-349709048.json . 
Only 65% related to this ticket but I didn't want to open up a new one :see-no-evil_monkey: 

Looking at this PR  :white_right_pointing_backhand_index: #877, seeing how changing a single line in a view template fully decouples its necessary Javascript functionality made me question if we should do something about the general structure of JS in the app as well. Right now it's just randomly placed, named and formatted files - all untested which makes it hard for people new to the project to see whether a page requires certain JS code and also where to put new code.

I was thinking we could at least go for *"page / controller specific JS"* which has been sort of a pattern in Rails if an app did not use client-side frameworks.
*(some examples of this can e.g. be found in organizing-javascript-in-rails-application-with-turbolinks, how-to-do-structure-javascript-and-css-in-ruby-on-rails or using-es6-with-asset-pipeline-on-ruby-on-rails)*

Does anyone of you know of any other common patterns for this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-352173603.json . 
@klappradla I stumbled upon this: URL 
I like the general idea, although it's propably one step to much for us...   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\comment-352278856.json . 
Yes, fully agree @F3PiX :victory_hand:️ I know this tutorial and I also really like what they're doing. But as you wrote, especially putting the HTML files into what is normally called inline-code in a default Webpacker setup is one step too far for us :winking_face: 

Having a inline-code, a inline-code directory etc. is fine and pretty much standard for a modern Rails 5+ application. But introducing this rather opinionated *component* approach will probably make our app a bit less approachable for newcomers and new contributers. So I'd for now not jump on that train yet :steam_locomotive: 

What I plan to have is:.
* webpacker for JS and CSS
  * also: being able to install frontend things with inline-code and keep them up 2 date :party_popper: 
* use ES6 for JS and BEM for CSS / SASS
* have linting for CSS and JS
* have "controller-specific" JS code (pretty much a Rails best practice now I would say)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-254869635\issue-254869635.json . 
Last week I did spend a while migrating some projects to Webpacker 3.0 and I have to say it's pretty much as simple to use as the asset pipeline now.
Should we move the project to those two?
This would also allow us to use modern javascript and babel for backwards compatibility.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255389129\issue-255389129.json . 
No related issue

This is a micro PR which changes the way Orga Comments to Conference Offers look like by adding some formatting.

**Before:**
!8865e79550

**After:**
!4a2a4b5d86



.
#rails-girls-summer-of-code/rgsoc-teams\issue-255389129\pr-139406648.json . 
No related issue

This is a micro PR which changes the way Orga Comments to Conference Offers look like by adding some formatting.

**Before:**
!8865e79550

**After:**
!4a2a4b5d86



.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-328964003.json . 
@carpodaster the corrections were made! :+1: Now, @mkalininait  just need to confirm that user#interest will be used instead coach role. Then we can update the code!! :dancer: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-329996160.json . 
@carpodaster 


I agree! But I'm actually also not sure that we need to know availability of people who have the 'coach' role, but are not currently interested in coaching.

@branquinhoaa I didn't test the PR yet, but I will do after you make this change covering ppl who are *interested in coaching*.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-330305529.json . 
@carpodaster  @mkalininait  About the availability field: it is now available to all user interested_in coaching (not just coaches). 
@carpodaster I removed the AvalabilitySwitcher class because it was useless (now I call a user class method availability_reset!  when I want to reset the user's availability).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-332273390.json . 
Hey @branquinhoaa what's the state of this? Did you already address everything @carpodaster and @mkalininait mentioned and want me to have another look at it :eyes:  ???
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-332274468.json . 
Hey @klappradla! Yeah, I have already finished with the @carpodaster suggestions. 
It would be nice if you can take a look.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-332275505.json . 
Alright, gonna have a look when I'm home later today :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-333839866.json . 
I've tested the PR and have several thoughts.

**User's page (show and edit):**
1) It would be cool if the dependency between "Interested in helping as a coach" and "Availability" on User's page was clearer. E.g. when I set a check that I'm interested to be a coach on the edit page, I see the "I'm available in the next season" checkbox in real time somewhere below. Now this checkbox appears only after I reopen the edit form and it's called "Availability for the next season" which doesn't indicate any relation with the coach status. Same with the title "Availability" on the show page. It's a bit confusing. I think we should at least rename "availability" to "coach availability" everywhere.
2) Apparently I (as a person interested in coaching) can't set my availability status to "Not available" myself. I think it's a necessary feature.
3) Also, once I press the button "I'm available in the next season", I see another button "Successful updated" which I can't press. Why is it a button at all? I'd expect to see a button "I'm NOT available in the next season" or something like that. And if we want to notify that the status is successfully updated, I'd show the message "Successfully updated", not "Successful updated".
4) More about naming: on the edit form the title is "Availability **for** the next season:", but the button and the label are "I am available **in** the next season". At the same time on the show page I see "I am available **for** this season!".  I think we should use "in" (not "for") and "next" (not "this") consistently.

**Resetting coach availability:**
1) When I reset coach statuses on the admin panel I see this notification:  "Coaches were reset with success." It's better to say: "Coach availability was reset successfully." or something like this.

**Community page:**
1) "Availability in the 2017 season": Why is it a radiobutton? How to reset this filter? What triggers changing the year (say, 2017 to 2018)? I think it should be a checkbox called "Coach availability in the next season". 
2) The country filter doesn't work correctly for me: it shows repeating values.
!screen shot 2017-10-03 at 15 20 57

cc @branquinhoaa The summer of Code is kinda over already, so I'm not sure if I should mention you here or not :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-334014762.json . 
@mkalininait Of course you should mentioning me here!! I will keep working on Teams app issues :dancer: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-336825916.json . 
@branquinhoaa Do you want to add more commits or is the PR ready for testing?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-338017211.json . 
@mkalininait Hi! @juuh42dias will fix some things and then I ask you to review ok? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-348618073.json . 
Hey @branquinhoaa :waving_hand_sign: 

I know your Summer of Code is over :crying_cat_face: 

But I just wanted to check what's the state of this PR :sleuth_or_spy:️ 
Do you plan to back back to it, or should I take it over to add the last bits to it?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-348684630.json . 
@klappradla Hey!! I would like to finish this pr. I will do the last alterations now and then I ask your review, ok? thank you!!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-348693746.json . 
Awesome :green_heart: 

And yeah, just ping me again.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\comment-348707833.json . 
@klappradla It is ready to the new review!! Thank you .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\issue-255422956.json . 
Related issue #594 

## Implements "seasoning": 
 - When an orga member chooses, he can go to '/orga/users/info' and click in reset availability. Then, all the coaches availability will be reset (set to false)

!reset


 - In the user profile edit, the coaches will have a checkbox to signalize her "availability" for the upcoming season.

!users_edit

 - The coaches' availability will be shown in coaches' profile

!user_show

## Enhance the filter/search possibilities
 - filter by availability by location and by the availability 
* We add a column for availability and we want to know what do you think about it


!rgsoc teams app 12

.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-139431845.json . 
Related issue #594 

## Implements "seasoning": 
 - When an orga member chooses, he can go to '/orga/users/info' and click in reset availability. Then, all the coaches availability will be reset (set to false)

!reset


 - In the user profile edit, the coaches will have a checkbox to signalize her "availability" for the upcoming season.

!users_edit

 - The coaches' availability will be shown in coaches' profile

!user_show

## Enhance the filter/search possibilities
 - filter by availability by location and by the availability 
* We add a column for availability and we want to know what do you think about it


!rgsoc teams app 12

.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-137383106.json . 
This @users assignment is getting very long. Could you move this to a private method?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-137383634.json . 
From a RESTful perspective, this would be more of a inline-code request … I think :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-137384555.json . 
This could be a good time to refactor all these similar methods (except the inline-code one) with some meta programming. Ping me if you need any pointers.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-137384720.json . 
I would remove this empty line.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-137385151.json . 
I'm not sure about the radio button. 1st, you cannot uncheck it. 2nd, I would imagine that a call-to-action button is better: a button "I am available for the upcoming season" with a direct inline-code action being triggered (ideally via AJAX so that we don't get a page reload)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-137385532.json . 
As for the term "upcoming": shall we replace it with the actual year? (inline-code)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-137386549.json . 
I always try to reduce multiple exits to a single statement at the end of a method/function (unless it's a guard clause in its first line). The inline-code acts as a method exit in a controller. You could use the conditional branches to set the inline-code messages and then redirect to inline-code without giving a flash kwarg _after_ the conditional block.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138204773.json . 
I think you are talking about the checkbox btn that refers to coach availability update. 
This view that you commented above belongs to the filter page.
I removed the checkbox for availability and did an ajax call. I am not sure if that is what you mean...

!availability_btn


!availability_label


.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138419123.json . 
ok, this one we have to study a little bit but we will add the refactor soon. :dancer: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138875423.json . 
Yes, this is exactly what I meant <3 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138875685.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138876451.json . 
Excellent idea putting this into a separate class! :heart_decoration: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138877569.json . 
This file resides in inline-code; typically, we only have modules here but this one is defined as a class (and rightfully so!)

I suggest moving it into inline-code. We may want to separate what goes into inline-code at some point, but this is a somewhat controversial topic amongst Rails devs (ie. »only persistence objects should go there« vs. »a model is just a class so everything can go there« vs. »extract 'Service Objects' into a separate folder« … the list goes on). Sorting inline-code is something for another day, for know I think it's best to move the class there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138878203.json . 
Since this is the main public interface to instances of this class, how do like e.g. inline-code or inline-code as a more generic name?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138878754.json . 
Now that we have a class, it would be nice to give the conditions a proper name with private predicate-style helper methods. 

Example:.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138879678.json . 
I'm always very defensive when passing a inline-code hash from a controller down into helper classes. Reason: you're passing a reference and you can change the object in place. While this can sometimes be desired, I think you almost always want to return a new object instead of modifying an existing instance (the latter can be very hard to debug).

Even if you don't change inline-code here, I would recommend making it a habit of calling inline-code on the passed controller params hash. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138880919.json . 
Furthermore, how about not giving the instance's internals access to the params hash directly, but instead proxy it through (private) helper methods?

Example:.

block-code.
The ivar assignment is very repetitive and can also be done through a small meta-programming loop, but if you're not comfortable doing MP (which is perfectly fine!), listing the keys/ivars individually will do just fine.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138882418.json . 
Excellent! 🥇 

A good practice when using meta-programming is to add a comment how an example of the generated code would look like.

Example: 

block-code.

Could you add something like that, please?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138883024.json . 
I feel we don't need this helper. Instead of inline-code and can also query the object instead by inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138883488.json . 
This is only called once. I would rather remove the helper and add this inline in the view template.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138886333.json . 
Two thoughts on this class: 

1. I suggest naming a method like this with a bang (inline-code) at the end: inline-code It's a Ruby convention to name "dangerous" method like that (oftentimes methods have a non-bang and a bang version; a "less-dangerous" non-bang version doesn't really apply here but have a look at the stdlib inline-code documentation for a couple of good examples on that).
2. Since the name of the class ends in _Switcher_, it is suggested that there is a reverse action (that is: switching back and forth between two states). The sole action in this class only sets all values to inline-code, though. It may sound like nit-picking, but naming is very important (if not amongst the most important things): I suggest naming  this class inline-code or something along the lines of the. In order to not re-iterate the name of the class in the one public API method (which would look like inline-code) I suggest the common interface for lamba-/proc style callables: inline-code (this time without a bang – confusing, I know :wink:)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138886397.json . 
Typo.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138886868.json . 
A better way to test a *state change* is to use the inline-code RSpec macro.

Example:.

block-code.

You don't need the inline-code block that way.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138887325.json . 
I'm undecided whether it's good to have the test use a meta-programming approach as well. I feel that it would be better for this test to catch regressions by defining the list of roles as a static list, not re-using inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-138948921.json . 
I think hardcoding routes in javascript is somewhat of an issue since it can lead to javascript breaking when those routes changes. This is especially troublesome if these things are not covered by system tests since they then will fail in production. I think the right way to pass the url in this case would probably be to have to url in an additional data field in the element that has the data-behaviour field.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141171146.json . 
Minor thing, but I personally prefer inline-code for inline-code now that the std-lib offers it :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141173155.json . 
I may be misunderstanding things, but I to me this looks more like a general comment on the method rather then the _example_ @carpodaster refers to in his comment :thinking_face: 

I guess it should be something like:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141174626.json . 
This generally sounds more like a scope to me - I'd therefore suggest to name it inline-code. The way it is named now, I would rather expect a list of different "availablity-types" back...

Furthermore, but that's just personal preference, I would write it as a scope :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141175766.json . 
Would you mind using 1.9 hash syntax for inline-code?
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141176676.json . 
Does the placeholder even come to play here? If I recall correctly, the "prompt" is the only thing shown... :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141178272.json . 
Hm, not sure if I'm getting this, but why is the checkbox **always** checked (set to true)?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141178612.json . 
Missing a whitespace or inline-code after inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141179584.json . 
Available for what?
For you implementing the feature, this is of course obvious - for a user visiting the page this could basically be anything :winking_face: 

I'd suggest to add a small hint-paragraph after the inline-code explaining that this is about coaching (maybe even add a link to the guides for coaches...?)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141180064.json . 
Same here: this is eventually not obvious enough for people visiting this page... How about


or



?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141180588.json . 
This route is defined twice.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141181290.json . 
"supervisor" is technically speaking not correct here, since you're looping over a collection.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141181642.json . 
I think the spec would be a bit more meaningful if you'd also create a user with his / her availablity set to inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141181849.json . 
I think this spec could be a bit more meaningful if you'd create a second user with a non-matching country, e.g. "Kenia".
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141181950.json . 
Missing a whitespace after the inline-code :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141182157.json . 
Whitespacegame :alien_monster:  (I think it's one too many)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141182947.json . 
I'm not sure about the spec any more. Was it supposed to be a one-way-street action? Meaning a user can only set herself to "available" once and not undo it for the rest of the season?

However, if so, it would probably make more sense to name this method inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141184357.json . 
Also: I think it's the wrong key. It should be 
block-code.
since this is about type of the request.

Maybe you were referring to inline-code??? It's optional here, jQuery will do an intelligent guess, but you could also deliberately set it to whatever you need. Would be
block-code.
here I suppose.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141185055.json . 
Can you come up with tests for this? You can stub out all the class methods on inline-code, I think it would just be helpful to ensure the contract, so that if maybe in the future someone removes one of these class methods, this is caught by our tests.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141185428.json . 
Can you add tests for this? It's a method with rather large impact... Would be good to know if it's really (and only) doing what it should :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141185677.json . 
Can you add tests for this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141440320.json . 
In fact it is always unchecked. When you check it, the search starts. I will remove this useless true.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141442913.json . 
That is so true!! :joy_cat: I did not think about it...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141445407.json . 
Yeah, that is exactly what I understand by @carpodaster comment. The user can set his availability, but he cannot give up.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-141460199.json . 
Alright, perfect! Just wanted to make sure.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154538526.json . 
This is never used (or at least I cannot find it in this PR :see-no-evil_monkey: )

So can you please remove this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154538671.json . 
I think it would be a bit more readable if only those things later to be used in the view would be instantiated as instance variables. So how about having:.
block-code.

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154538801.json . 
Since this list is getting quite long now, why not "reverse" it and use inline-code instead?
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154538964.json . 
Can you please move this into the inline-code namespacesinline-code/orga` prefix automatically.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539045.json . 
Can you please move this to the inline-code resource and make it a member action? It's really hard to find otherwise, given the size of the inline-code file :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539115.json . 
Hm, personal preference, but I would suggest to **always** put a inline-code and a default value (inline-code in this case) to a boolean value. You'll otherwise end up with a 3 state boolean: inline-code - which can be a potential source of problems later :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539172.json . 
Why are you using a separate migration for this? I'd suggest to just do it in the migration where the column is added.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539358.json . 
I'm missing an expectation on the side effects of this request here :police_officer:  My suggestion would be to have something like:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539442.json . 
Can you please add a blank line before the inline-code block? Just easier to read.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539487.json . 
I don't really see the point of switching from inline-code to instance vars here :see-no-evil_monkey: 

Can you please convert them to inline-code statements?

This also does not need to be in a before block from what I see.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539521.json . 
Typo


.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539587.json . 
Since there's only one inline-code I don't see the point in having it :winking_face:  it just increases the indentation level in this case and does not really give more information.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539622.json . 
This should be a inline-code instead. On a technical level, this does of course make no difference, but things beginning with "with" and "when" are usually inline-code blocks and make reading easier.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539662.json . 
unnecessary assignment.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539725.json . 
I'd reword to


Same for the following examples.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539791.json . 
It's best practice to not test private methods. Unit tests would just cover the public interface and through this also indirectly test the internals.

Could you convert these tests so that you instead test the outcome of these scenarios on the inline-code method?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539883.json . 
I would suggest to couple this closer to the actual implementation. Right now, changing the inline-code constant in the users model would probably not even break this test - but it should :winking_face: 

So how about
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539905.json . 
Typo: "locations"
.
#rails-girls-summer-of-code/rgsoc-teams\issue-255422956\pr-comment-154539978.json . 
I feel like doing this in a before block reduces the possibilities to test the actual behavior of the method.

I would suggest to rather test the "change" and its impact:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\comment-329475671.json . 
Hey @LuisaAPF Thank you for the PR! I've tested it. It looks good to me. There are two flaws that I noticed:.
1) After I added a conference, it's automatically set as my primary choice. I think it's not very convenient, because it can override my previous primary choice. It's easy to not notice this and save changes. Besides, this year's experience shows that students add new conferences and don't necessarily choose them in their own preferences.
2) After I added a conference, I see it in the dropdown "Primary choice" as not categorized: it doesn't belong to any region and hangs there in the list as the first item. In the dropdown "Secondary choice" it is not presented at all.

In my opinion, the best would be: add a conference, add it to both dropdowns in the specified region, not set it as your primary/secondary preference.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\comment-329492425.json . 
Hey, @mkalininait, I designed it like this because I thought the students would only suggest a new conference if they didn''t find any in the list that suited them. But, as you said, this doesn't seem to be the case. I'll change it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\comment-329994757.json . 
@LuisaAPF I was surprised too :) Thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\comment-330235635.json . 
I'm done with the changes, @mkalininait, @klappradla  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\comment-330542229.json . 
:party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\issue-256387910.json . 
Related issue #809 

 - Improves ux for adding a new conference on the teams/edit page. The form is now shown as a modal, instead of a new page and it is submitted via ajax. After submission, the added conference appears selected on the primary choice element on the team edit form.
- Screenshot showing validations after trying to submit empty form.
!image

.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-140137963.json . 
Related issue #809 

 - Improves ux for adding a new conference on the teams/edit page. The form is now shown as a modal, instead of a new page and it is submitted via ajax. After submission, the added conference appears selected on the primary choice element on the team edit form.
- Screenshot showing validations after trying to submit empty form.
!image

.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137951718.json . 
Personal preference, but what do you think about using a data attribute instead of the ID for attaching the behavior to this element? It could be something like inline-code :thinking_face: 
I personally prefer to leave classes and ids for styling elements and use the more powerful (you can pass down data :v:) data attributes for adding certain behavior.
What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137951742.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137951785.json . 
I may be missing something, but can you explain why this is necessary?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137951861.json . 
How about ditching inline-code and using inline-code here instead?
I may be overlooking something, but I for now don't see a benefit in assigning another view variable in the controller for this modal form if it's just a inline-code directly passed into the form method.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137951885.json . 
I'd prefer to now assign another view variable, see my comment in the form partial :white_down_pointing_backhand_index: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137951888.json . 
I'd prefer to now assign another view variable, see my comment in the form partial :white_down_pointing_backhand_index: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137951907.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137951971.json . 
Could you please leave a blank line before an example block? It's kinda best practise in the Ruby community and in my opinion really increases the readablity.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137952042.json . 
What's the point in assigning this huge params hash if you in the end only want to test whether or not a user is signed in? I'd suggest to shorten it to:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137952110.json . 
Only a small note on "naming things":trade_mark_sign:: in order to end up with an almost human readable RSpec example, it makes sense to formulate contexts starting with "with" or "when", e.g. "with an unauthenticated user" or "without current_user".
Would be cool if you could come up with a naming like this, it in my opinion also increases readability :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137952145.json . 
Do you think you can come up with a positive example as well? At best testing both, the xhr and the http request.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137952188.json . 
Why do you return an array instead of just one element? This being a inline-code endpoint, I'd expect only a single element being returned:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-137952325.json . 
See my comment about the return value from the controller in the inline-code. In my opinion, it's semantically confusing to return an array, plus I think
block-code.
also makes it more obvious that we're dealing with a single record.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138018105.json . 
I can do this, @klappradla. No problem! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138026170.json . 
I know this is odd, but if I don't return an array, the ajax success function is not even called.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138026475.json . 
See my comment in the end.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138027116.json . 
This is necessary because the default display of a h2 element is a block. In this case, the modal title and the close button get misaligned.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138027252.json . 
Agreed!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138028498.json . 
I thought this would isolate the behavior I'm looking at, so that the test won't fail because the parameters are invalid, but because the user is not logged in.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138029014.json . 
I tried using xhr post, but I kept getting a no method error... Maybe this should be a separate issue?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138029311.json . 
Hm, looks more like a general format / parsing confusion here... :thinking_face: 

Have you tried
block-code.

Plus: I'm not 100% sure if inline-code will automatically make the request a inline-codeone. It could also be a inline-code request. Have you checked this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138031346.json . 
Can you post a snipped of the code you tried? Background: the format changed from Rails 4 to 5 -> xhr is now simply a parameter of the inline-code method:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138032522.json . 
Valid point!

I don't know the inline-code factory from the top of my head, but eventually inline-code would be shorter and saver :thinking_face: 

Maybe the test would be also be more meaningful if you'd also look at the response status? As in: if it's a inline-code, we know the request was no authorized.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138063756.json . 
I tried .to_json but it didn't work. Also, remote:true looks for a js format. It doesn't respond to json.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138074187.json . 
Sorry, didn't make myself clear in the previous comment :see-no-evil_monkey: 

You can set the content type yourself in the form inline-code and this may eventually fix your problem. For jQuery, inline-code and inline-code are two different things and it parses it differently. From what I remember for inline-code / inline-code it expects plain text, for inline-code something different.

However, if you can fix it - yay - if not, we can also do it later :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138288089.json . 
Thanks! It worked!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138452917.json . 
You're right. The data-type=json fixed it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138456910.json . 
Ace :party_popper:  Just ping me again when you're done with all the changes.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138469656.json . 
I'm done, @klappradla .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138552004.json . 
Minor thing, but can you please remove the inline-code part? It's the default behavior and considered bad practise to add it :winking_face: 
block-code.
does the job.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138552193.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138552457.json . 
Minor naming thing, but technically speaking these aren't the "params"... How about inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138552839.json . 
Having two examples named identically and internally only diffing by two words makes reading a bit hard here :see-no-evil_monkey: 
How about adding some more information to the example description or wrapping it into a "context" that says it's about xhr requests now?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138553954.json . 
Same here for naming: these aren't the "params". Maybe inline-code would be a better choice, or moving it into something like:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138554037.json . 
Yay :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138554306.json . 
I did not yet try this in the browser, but is it possible to "DOS-click" the button and submit the form a million times? If so, it would be cool to disable the button after submit :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138569025.json . 
We also have shared contexts, for different kind of users. I think you can use them instead of the inline-code block .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138596748.json . 
Hmm.. I don't understand the difference. If I print params, I get a hash with name, url, etc, just like the post parameters.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138597489.json . 
You mean it's a bad practice to use :each because I just have one context after it, or it should not be used at all?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138600013.json . 
Sorry for causing confusion :see-no-evil_monkey:  - did not make myself clear. It's only an implicit vs. explicit thing, some linters will tell you to skip the inline-code part, because it's the default behavior. That's all.
It's uncommon for me to see, so I suggested to make the inline-code a inline-code, but it does not have any impact on the code itself.

Plus: it's of course also totally fine if you leave it like this :v:.

For the shared contexts: yes, @F3PiX is right, you could use them here. But since you're setup is super minimal, I don't see a real benefit in doing so. Would probably just make things harder to read.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138600505.json . 
Sorry, it's just a naming thing :winking_face: 
The "params" look like this: inline-code
What you assign as params here is only the inline-code part.

But again, this is only a question of naming things, has nothing to do with the test itself. The code work fine.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138628277.json . 
I'm thinking if it makes sense at all to keep the tests for the http submission in this file. For what I understand, now all files regarding the creation of conferences outside the scope of teams/edit are in the orga folder, meaning that only organizers should have access to them. Am I correct, @klappradla? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-138676858.json . 
You're right :flexed_biceps:  makes sense!

I could have seen it earlier, but this constant switching between programming languages and projects today make my brain kinda fuzzy :ghost:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-139486619.json . 
What's the motivation behind wrapping the inline-code into a paragraph? It looks semantically wrong to me :winking_face: 

Same for the next inline-code below :white_down_pointing_backhand_index: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-139604006.json . 
You're right :grimacing: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-139604673.json . 
You're right, @klappradla . After I change it, can I merge it myself?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256387910\pr-comment-139623755.json . 
Yes :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256435296\comment-328616028.json . 
Thanx for reporting @LuisaAPF :green_heart: 

I'm afraid I don't exactly get what you're describing here - could you eventually point me to the respective code, add a screenshot or a gif? From what I remember, we do not have client-side validations anywhere (yet) :monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256435296\comment-328645968.json . 
I meant the presence of the attribute "required"

2017-09-11 20:25 GMT+02:00 Max Mulatz <notifications@github.com>:.


>



>







>

.
#rails-girls-summer-of-code/rgsoc-teams\issue-256435296\comment-328649985.json . 
Oh good point :thumbs_up_sign: 

Seems it was not regarded a necessary feature some years ago: see this line in our config :see-no-evil_monkey: 

I would be totally up for having it though :party_popper: 

Do you wanna update the configuration while you're already working on these forms anyways?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256435296\comment-328780569.json . 
Sure!

2017-09-11 22:32 GMT+02:00 Max Mulatz <notifications@github.com>:.


>




>

>


>







>

.
#rails-girls-summer-of-code/rgsoc-teams\issue-256435296\comment-329267950.json . 
I'm not sure if we should go for client-side (ie. browser-native) validations. I have no 1st hand experience, but I think I remember a frontend dev ranting about how it doesn't always work as advertised and that one is at the browser vendor's mercy with it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256435296\comment-329395113.json . 
I think we should give it a try. It definitely improves UX and if for some reason it does not work, we still have server side validations as a backup.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256435296\comment-329404264.json . 
+1 for client side validations (at least 'required' validations) backed up by model validations.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256435296\comment-329418308.json . 
Alright, let's give it a bash :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-256435296\issue-256435296.json . 
I noticed that the client side validations for the conference form are not stopping the submit action. I'm not sure why this is happening.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-256780105\issue-256780105.json . 
This updates all dependencies and removes the ´aws-skdinline-codeaws-sdk-s3inline-codeaws-skd` gem is modularized since v3, this allows to also just install the tiny part that one needs instead of pulling in the million parts that Amazon has :v:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-256780105\pr-140390230.json . 
This updates all dependencies and removes the ´aws-skdinline-codeaws-sdk-s3inline-codeaws-skd` gem is modularized since v3, this allows to also just install the tiny part that one needs instead of pulling in the million parts that Amazon has :v:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-328919137.json . 
Thanks for reporting this @linberg. I'll look into it. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-329259659.json . 
The supervisor dashboard redirects to the activity page to show the status updates of the team. 
The problem occurs with the activity page. 

It looks like there are two problems here.  
1) The feed entries are trying to load pictures on AWS S3 and don't get access.
!feed entry aws


 2) Team id 338 is the _only_ team where the activities try to get access to other teams' feed entries :thinking_face: 
!activities team 338



I did not figure out yet what the source of the problem(s) are. Tips that gives me a direction are welcome!
( @carpodaster , @klappradla  )
 



.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-329260395.json . 
@linberg Do you recall if this problem existed before last week? Or did the post from Sept 8 and Sept 9 appear at once this week?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-329395755.json . 
First time this issue occurred was with the first blog post, so August 11th. There was another bug with this team as well during the application process, their application had showed up under their last year's team name (as they had also applied then). Also at the beginning of the program their daily logs were also going under their last year's team name, I unfortunately don't know the ID, but I think @mkalininait had looked into that issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-329408374.json . 
I don't have time to look into this right now @F3PiX, but the S3 issue may have something to do with me updating the gem...? It's the only touchpoint recent commits had with S3 as far as I remember.
I can just revert the commit and see if we're back at normal with this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-329408933.json . 
Thanks, @klappradla, I thought of that but Linda reports that it occurred long before the gem update. Let me look into it to see if I find something else first. Thanks a lot! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-329409577.json . 
Fine. I by the time read the migration guide for updating the gem from v2 to v3, having only the dedicated library gems instead of the whole package, etc. and it all seemed to be straight forward (as in no changes in the code required).

Still, if it's likely to be the cause of the issue:.
block-code.

I can then later on look into the details of updating the gem.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-329496799.json . 
@klappradla I can't find any trace of AWS libraries in my External Libraries folder. So yes, I think there is a problem. I am going to revert the commit. :alien_monster: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-329965540.json . 
@klappradla After reverting the aws gem, the same access errors occur.
Could it be that the credentials need to be updated after gem changes? 
  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-329990303.json . 
I haven't seen anything pointing in that direction @F3PiX. The upgrade guide for v3 does not have anything regarding credentials in it. And the guide for upgrading within the v2 versions has some bits around credentials, but nothing should be "current" enough for having caused our problem I think.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-329993202.json . 
Okay, Thanks!!!! So, it seems highly unlikely that is has to do with AWS api. Must be something in the team, then. I'll try something else.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\comment-354983763.json . 
I totally overlooked it. The AWS 403s _might_ be related, but I'm closing this in favor of the more recent #901 and will create a new issue to investigate the possible AWS bug.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257106672\issue-257106672.json . 
In the supervisor dashboard (id: 1306) for team_id 338, blog posts from other teams have been uploaded as daily logs on 7 occasions (11.08., 15.08., 04.09., 06.09., 08.09., 09.09. and 11.09.) always at 02:00 CEST. Please see screenshot.
!screen shot 2017-09-12 at 17 31 27

EDIT (Maud) In the screenshot, only the posts with the photo avatar are really by team id 338, the other posts are feed entries from other teams. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257503325\issue-257503325.json . 
Some refactorings post #814.

Well, strictly not entirely a refactoring PR as I removed the inline-code from inline-code to just return an empty relation.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-257503325\pr-140916561.json . 
Some refactorings post #814.

Well, strictly not entirely a refactoring PR as I removed the inline-code from inline-code to just return an empty relation.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\comment-330983684.json . 
Hey @juuh42dias and @branquinhoaa is this already ready for another review? Or are you still busy implementing changes :monkey_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\comment-331270245.json . 
@klappradla  ready for other review.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\comment-331629528.json . 
@klappradla 

inline-code
 the migration that changes this is part of another PR.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\comment-331629929.json . 
Ok @juuh42dias thanx for clearifying :person_with_folded_hands: 


Is still a problem for merging this PR though :winking_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\comment-332207359.json . 
@klappradla that's ok for another review?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\comment-334118827.json . 
Since PR #863 is merged, we should probably reconsider how the "other_interests" looks in the UI and what role it plays. 
ATM we have the following fields in User Profile:.
 - Interested in // (roles)
 - Other interests
 - Technologies of Expertise
 - Technologies of Interest

Isn't it too much about one's interests? What kind of info do we expect to see in the "other_interests" field (which is not covered in the bio, technologies, roles on RGSoC and other fields)?
@klappradla @carpodaster @juuh42dias .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\comment-334957445.json . 
From my point of view we should ditch inline-code @mkalininait, since as you say, it's not obvious which piece of information not covered by the other fields is supposed to go there.

In my opinion the other fields already cover everything necessary :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\comment-348617766.json . 
Hey @juuh42dias :waving_hand_sign: 

I know your RGSoC is over :crying_cat_face: 

But I just wanted to check back here with you on what's the state of this PR :monkey: 
Do you plan to back back to it, or should I take it over to add the last finishing touches to it?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\issue-257528353.json . 
Related issue #83 

 - Add new fields (interests, company url, adjust location)

## Edit user (company url field and interested field text added)
!rgsoc teams app 19

## Show user (interests text)
!rgsoc teams app 18

## Index Community (Interests text, company, location)
!rgsoc teams app 21



.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-140935536.json . 
Related issue #83 

 - Add new fields (interests, company url, adjust location)

## Edit user (company url field and interested field text added)
!rgsoc teams app 19

## Show user (interests text)
!rgsoc teams app 18

## Index Community (Interests text, company, location)
!rgsoc teams app 21



.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-138969581.json . 
Hm, I personally don't see the benefit / effect in using inline-code here. Doesn't
block-code.
do the exact same?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-138971005.json . 
With the guard clause in the first line of this method, you already check whether or not a user was passed, so you can savely skip the inline-code here. I would even directly inline it, since it's only a single method call:.
block-code.

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-138971374.json . 
Hard to say without looking at production data, but I'd personally expect this to be inline-code for most users (the majority is probably students...). So I wonder if it makes much sense to make the table sortable on this column :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-138971877.json . 
I'm not 100% sure about the naming here. inline-code usually sounds like form fields to me, rather values. Maybe inline-code would be a better fit?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-138972516.json . 
The inline-codes are obsolete here - user won't be inline-code :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-138972803.json . 


Sounds a bit weird to me. How about "Link to company website"?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-138973655.json . 
Where is the corresponding migration for adding the inline-code column? Am I overlooking it? I cannot find it in this PR :disappointed_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-138974733.json . 
I may be getting it wrong, but the way I read this, "Other interests" could in theory be fully overlapping with "About me". Where do you the difference and which benefits does it have to have both fields?

I could also imagine renaming it to something like: "Technologies and Programming languages I'm interested", if we want to cover this area as well and have it in a dedicated searchable field. I would then probably suggest to use something like inline-code under the hood though...
However, this is beyond the scope of this PR. Just the question: where's the distinction between "about me" and "other interests" :nerd_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-138984438.json . 
I know the other column is called inline-code, so inline-code kinda makes sense to keep this aligned. However, I'm not really sold on that name :see-no-evil_monkey: 
Since we're dealing with user objects here, I'd rather name it inline-code and inline-code, since in both cases I assume to retrieve an array of interests.

Aside that, if we want to have this as a list of interests rather then prose text, we should probably align it with the other interests field and serialize it to an array :thinking_face:  Or why did you decide against this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-140631770.json . 
What has this change to do with this PR :thinking_face: ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-140631863.json . 
Same here, what does this change have to do with this PR :thinking_face: ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-140631912.json . 
Any news on this @juuh42dias ???
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-140631933.json . 
Hm, I'm also not sure if this change should be part of this PR :thinking_face: I think this is already changed back on master. Can u try to either rebase or merge with master again?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-140632106.json . 
I fixed it because the JShint said 'e' var is not usable. And JShint/Rubocop broked my build.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-140632110.json . 
JShint again... .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-140632215.json . 
I see :electric_light_bulb: 
Still, this is definitely already somehow fixed on master - the build is :white_heavy_check_mark:  there. I'd suggest to undo this change and get this branch up to date with master.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-140632222.json . 
Same as what I said for the other JS file - this is for sure already fixed on master.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-141122722.json . 
Looking at this more often, it sounds kinda off - how about naming it inline-code in plural instead?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-141266078.json . 
TBH, with 'other interests' plural I still don't get what this is about. Is there a more expressive name that we can use?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-141459730.json . 
I doubt so. The definition of what we expect people to write here is very weak.
How about ditching the field all together and have users give us these parts of information as part of their inline-code instead? cc @mkalininait .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-141583144.json . 
Sounds good to me. In that case, would we be missing information here,  that is useful for students to search for in a coach?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257528353\pr-comment-141716692.json . 
No, a) the field is probably not specific enough for a "search" and b) I don't remember it being included into any search functionality. It imagine it more like: search for coaches being available near you, look if they have some overlapping with the technologies you use and then see what things they wrote in their bio :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257747644\comment-329506592.json . 
@klappradla I did it the :chicken: way. :-)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257747644\issue-257747644.json . 
Related issue #853 part 1: Quickfix: reverting the upgrade to avoid problems with the AWS gem v3.

Quickfix: downgrade the AWS v3 gem back to v2 to avoid problems with fetching images.
<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->
.
#rails-girls-summer-of-code/rgsoc-teams\issue-257747644\pr-141095466.json . 
Related issue #853 part 1: Quickfix: reverting the upgrade to avoid problems with the AWS gem v3.

Quickfix: downgrade the AWS v3 gem back to v2 to avoid problems with fetching images.
<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\comment-329998958.json . 
Wow Max, that is an amazing job! Thank you!! :wrapped_present:  
My future self is already immensely grateful. :face_with_stuck-out_tongue: 

I feel you added some great cops (re: Ruby/Rails conventions), and also some that are probably up for debate; for instance one that I don't see as an important thing, and even one that I don't like at all :speak-no-evil_monkey:  :trollface:  
I don't name them, because my concern is: how are we going to prevent lengthy discussions about the extra cops? Especially because that was one of the concerns when we talked about introducing 
Rubocop in the first place. 
So, is it okay if I just review the code, and refrain from adding opinions on the cops itself? Or did you actually _hope_ to get second opinions? Because then we should think of something to address that.

Either way, I am really stoked about getting Rubocop. Dev Happiness Score: :hundred_points_symbol:      
    .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\comment-329999607.json . 
Well, I neither have any expectations, nor do I share your concerns @F3PiX. So feel free to comment as you wish :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\comment-330077694.json . 
How about we set up CodeClimate ? That was my initial idea for Rubocop. It is free for Open Source. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\comment-330353845.json . 
:party_popper:  :party_popper:  :party_popper:   

.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\issue-258261284.json . 
Related to the discussion in URL this adds static code analysis via Rubocop as an additional step in the CI pipeline *(a super fast step though, no worries)*.

Please see the commit history and the inline-code file in this PR for the details on which cops are enabled and which I already ran.
Rubocop has a large list of per-default enabled cops. Since the number of cops we want to have enabled is rather small, I instead of manually disabling the ones we don't want, disabled all and just added some specific ones. The file is rather large, since I also included the description and link to the styleguide for each cop. I thought it could be more helpful for newcomers or people coming to the list from the contribution guide.

From @carpodaster's initial list of cops, I for now skipped everything related to specs since it would require another gem (I can do this once we agreed on the setup for the app code) and did not enable the one for line length and the frozen string literal comment, since this would basically touch every file in the repo :see-no-evil_monkey:  (I'd then also do this in a separate PR).

Aside that, I also enabled some very basic cops related to things like trailing whitespaces, indentation, etc. (see the file and the commit history for details).

I also update the Readme and Contribution guide to include all this :white_up_pointing_index:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-141463572.json . 
Related to the discussion in URL this adds static code analysis via Rubocop as an additional step in the CI pipeline *(a super fast step though, no worries)*.

Please see the commit history and the inline-code file in this PR for the details on which cops are enabled and which I already ran.
Rubocop has a large list of per-default enabled cops. Since the number of cops we want to have enabled is rather small, I instead of manually disabling the ones we don't want, disabled all and just added some specific ones. The file is rather large, since I also included the description and link to the styleguide for each cop. I thought it could be more helpful for newcomers or people coming to the list from the contribution guide.

From @carpodaster's initial list of cops, I for now skipped everything related to specs since it would require another gem (I can do this once we agreed on the setup for the app code) and did not enable the one for line length and the frozen string literal comment, since this would basically touch every file in the repo :see-no-evil_monkey:  (I'd then also do this in a separate PR).

Aside that, I also enabled some very basic cops related to things like trailing whitespaces, indentation, etc. (see the file and the commit history for details).

I also update the Readme and Contribution guide to include all this :white_up_pointing_index:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139307168.json . 
:smiling_face_with_heart-shaped_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139307177.json . 
:smiling_face_with_heart-shaped_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139307190.json . 
:crying_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139307264.json . 
Is this alignment a cop rule or a typo? (also in next 2 files) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139307267.json . 
:white_up_pointing_index:️  = see above.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139307270.json . 
:white_up_pointing_index:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139307329.json . 
This looks weird, no? Is this a cop rule? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139307502.json . 
OTOH this for example: 
URL.
Cops love Space :alien_monster: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139307546.json . 
As it is not just about indentation anymore :-) how about something like:.

"But don't be afraid, those are friendly cops. They are here to help you, mostly with formatting your code."
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139312175.json . 
Maybe include in the description, something like: align when/else/end/ with case. ?
To make it easier to understand what we are suppose to do about it. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139312328.json . 
Maybe add a beginner friendly inline-code after inline-code in the description? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139312340.json . 
:thumbs_up_sign:  Love that we cover this already :woman_with_bunny_ears: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139312354.json . 
:smiling_face_with_heart-shaped_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139312508.json . 
Are there any files or directories that we should exclude? I know the inline-code is sometimes excluded, but I don't know why TBH.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139318231.json . 
Sorry, I don't understand your concern about this cop. What's the benefit of
block-code.
over
block-code.
???

You can run inline-code and it will automatically remove these commas for you.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139318287.json . 
The 2 spaces indentation is based on the inline-code... The "normal" way of formatting this would be:.
block-code.

But I did not want to enforce this via another cop, so it looks kinda weird here. I can manually change it to the above.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139318461.json . 
You're right, normally one would exclude e.g. the inline-code and inline-code directories, just because the code there is not really regarded as "app code" and linting it often times does not make too much sense.

In our case, since we disable all cops, this is not really a problem for now. We don't have any cops that could be problematic for the schema file, migrations or the bin directory.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139318742.json . 
Maybe I misunderstood. I thought it were about the kind of comma's at the end of this line URL 
Of course I don't weep about the example you give above :face_with_tears_of_joy:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139318792.json . 
Aha :electric_light_bulb: .  Thanks :person_bowing_deeply: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139320332.json . 
I had to google what inline-code is all about. Good stuff, looking forward to it!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139320350.json . 
:+1: to @F3PiX's suggestion.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139320367.json . 
Shouldn't this extra level of indentation be caught by RC?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139320468.json . 
I know it's flagged as TODO and disabled, but should we up the limit to 100-something?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139320485.json . 
Oh, that's a good one, yes.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139320578.json . 
I wonder if we should use CodeClimate to run the cops; IMHO it gives better feedback on Github PRs: you get two CI results. Travis may run the specs just fine, it may "just" be coding style that needs improvement.

I have never set up CodeClimate with custom rules, though. If we cannot reuse our rubocop.yml, it's not worth pursuing this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139320641.json . 
I think it is, but I cannot name it. I really like this way of indentation. Vim's Ruby syntax auto-formats blocks like this in exactly the same way.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139320917.json . 
I think it works like this: we add a codeclimate.yml where we enable rubocop  (and a js linter), and then cc uses our rubocop.yml for the rules. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139321397.json . 
If it is that easy, I'd prefer CC over running it on Travis.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139321966.json . 
I in 99% of cases just directly copied over the description from Rubocop's internal default rule set. Not sure if it makes sense to tweak them and do a lot of changes to them. For most cases the thing that helps explaining / understanding these rules best are examples - and they can be found in the Rubocop docs or the styleguide (also referenced for each rule).

So my idea was to keep the task of explaining things to the part the knows it best - naming the docs / styleguide - and not try to explain it in detail here.

But yeah, I still can do it if you think there's a huge benefit in having it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139322038.json . 
Yes, but it's a different cop we don't yet have. But if we already have the one for a blank line before access modifiers and its indentation, it just makes sense to also add the one for proper (in my opinion :winking_face:) indentation after it as well.

I'll add it :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139322420.json . 
It's this cop and I'm gonna add it, since it otherwise conflicts with strict 2-spaces indentation anyways (like here...)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139322537.json . 
Maybe 120? Not sure what really makes sense... Currently we have inline-code that's why it's a bit of an effort and I did not want to run it right away.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139322795.json . 
Just for the sake of completeness: I just came across build stages for Travis. Would also solve the problem I think.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139368605.json . 
Sure, let's leave it at the documentation! :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258261284\pr-comment-139370068.json . 
I'll make a separate issue to discuss/decide on the CodeClimate way. Get it out of the way of merging this. :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258418482\comment-330195134.json . 
I'm also very much in favor of using CC for Rubocop. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258418482\comment-330198093.json . 


Yes, that's correct.

Some questions on the Code Climate thing (also related to :white_up_pointing_index:️ ): I don't understand the point of shelling out to a different service for two of the 4 steps in our CI pipeline :see-no-evil_monkey:  How can Code Climate prevent Travis from deploying to Heroku if a build does not comply to Rubocop or JSHint?

It's true, that things would be more readable if Travis would add a separate link on Github for each step - that's probably a reason why CircleCI is so popular nowadays :winking_face:  - but I would say things are still reasonably easy to find there.

So tl;dr: I don't understand the benefits we get from using Code Climate and fear that it just adds a huge layer of complexity to the otherwise super basic and straight forward CI pipeline.
Maybe I just don't understand the tool yet.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258418482\comment-330254693.json . 
CodeClimate is a different way of using Rubocop. It will do a separate check, and we set it up so that you can't _merge_ a PR without CC's :white_heavy_check_mark: . 

Would you mind giving it a try and evaluate in a month or so? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258418482\comment-330345924.json . 
Sure, go for it!

I may also on the side give Travis' pipelines a shot - it's something I'm really interested for further usage in other projects :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258418482\comment-330354150.json . 
:thumbs_up_sign:  I think it is better to have them both, because you and Carsten and some other do not always go through a PR ! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-258418482\issue-258418482.json . 
Dev happiness!

As of #857, we have Rubocop for static code analysis. :wrapped_present: 

We can run the analysis locally, with inline-code, to solve issues before pushing a PR. 
 
With the current implementation, the analysis is part of the CI build. That means that the build will fail if there are Rubocop issues ( is this correct, @klappradla?) 

Another option is using CodeClimate. It has a very easy and beginner-friendly UI. Both for explaining issues and solving them. 

We already use CodeClimate. Adding Rubocop is easy:  add a codeclimate.yml,  enable rubocop, and then CC uses our rubocop.yml to enforce :oncoming_police_car:  the rules.
Then connect it to the GitHub PR's. 

With CC set up,  we would have 2 checks after submitting/updating a PR: one for the Travis build, and one for CodeClimate.  Which makes it superclear if there are either failing specs, or formatting/style issues. 

!jrducdgrgwghdg6zqmyw_github1

Another option could be Travis build stages, see URL 
I think that still misses the nice UI that CC offers. 

I'd vote for using CodeClimate, mostly because of the beginner-friendly UI plus the separate process in the PR workflow.  

Votes and thoughts please!


.
#rails-girls-summer-of-code/rgsoc-teams\issue-258618298\comment-330362522.json . 
Hm, you mean it wasn't flaky? I thought I have seen it quite often :thinking_face:  But could also be I'm mixing things up.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258618298\comment-330606963.json . 
Hm, closing this for now, since I don't find any examples of this failing on CI any more :cat_face_with_tears_of_joy: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258618298\issue-258618298.json . 
This attempts to fix (and while that not slow down the test suite...) a test that at least for me frequently failed on CI. It was basically hardcoding an ID which did not always work out right.

I switched it to use RSpec's inline-code to get the assigned object from within the controller. Doing something like
block-code.
would have been another option, but I thought we could spare another hit to the DB for this example.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258618298\pr-141702001.json . 
This attempts to fix (and while that not slow down the test suite...) a test that at least for me frequently failed on CI. It was basically hardcoding an ID which did not always work out right.

I switched it to use RSpec's inline-code to get the assigned object from within the controller. Doing something like
block-code.
would have been another option, but I thought we could spare another hit to the DB for this example.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258618298\pr-comment-139543742.json . 
I am moving away more and more from local vars. Do you like  

  block-code.

as well? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258619227\comment-330604012.json . 
Can you please get the branch up to date @branquinhoaa ? I'd then straight merge it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258619227\comment-330613278.json . 
@klappradla done!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258619227\comment-334148668.json . 
@branquinhoaa One use case still doesn't meet my expectations (in terms of redirects).

**As a student I can create a conference:**
- from my team's edit page: modal, no redirect :thumbs_up_sign:.
- from /conferences: redirect to my team's edit page (why not /conferences? wdyt?) :no_entry:️   

**As an orga I can create a conference:**
- from /conferences: returns back to /conferences :thumbs_up_sign:.
- from /orga/conferences: returns back to /orga/conferences :thumbs_up_sign:.
- from team's edit page: not available :thumbs_up_sign:.
- from team's edit page in orga space: the button doesn't work (addressed here, fixed here) :thumbs_up_sign:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258619227\issue-258619227.json . 
Related issue #826

- As an orga member, I would like to create a new conference both from /conferences or from /orga/conferences. The redirect in conference controller (action create) was redirecting form teams page 
(assuming that just team's students could create a new conference using that route).
- this PR redirect an orga member for conferences_path after her create a new conference (through /conferences)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-258619227\pr-141702710.json . 
Related issue #826

- As an orga member, I would like to create a new conference both from /conferences or from /orga/conferences. The redirect in conference controller (action create) was redirecting form teams page 
(assuming that just team's students could create a new conference using that route).
- this PR redirect an orga member for conferences_path after her create a new conference (through /conferences)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-258628053\comment-330910783.json . 
Hm, @carpodaster & @F3PiX what do you think of making the build a 2-step process: inline-code and inline-code? This would mean tests, and the 2 linters could run in parallel which would probably speed up the suite... :runner: :dash_symbol: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258628053\comment-330988642.json . 
Sounds cool! Would it make sense to run the linters before the tests? Assuming that provides the speediest feedback from the linters. ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258628053\comment-330989382.json . 
O... crossTyping again... ;-)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258628053\comment-330991324.json . 
Ok, my idea made sense in theory. In practise, Travis of course spins up a new environment for each job - so the overall time for the build is of course way longer then just running everything sequentially :cat_face_with_tears_of_joy: (at least of our rather simple setup)

But yeah, otherwise what you say @F3PiX - I'd like to switch the order for the normal Travis setup. Plus I'm going to clean up the inline-code file, it's a bit cluttered and actually neither valid yml nor valid in Travis' linter URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258628053\comment-330991848.json . 
For the sake of completeness:.

Staged build:.
<img width="196" alt="screen shot 2017-09-20 at 23 51 40" src="URL.

Normal build:.
<img width="180" alt="screen shot 2017-09-20 at 23 52 06" src="URL.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-258628053\comment-331089148.json . 
Follow up on cleaning up the config is :white_right_pointing_backhand_index:  #864 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258628053\issue-258628053.json . 
As said, I wanted to quickly look into Travis' beta pipeline feature. It in short allows to group the build into inline-code that run sequentially. However, these stages can contain multiple inline-code that run in parallel :nerd_face: 

Here I for instance grouped the linters:.
<img width="1349" alt="screen shot 2017-09-18 at 23 30 12" src="URL.
:white_up_pointing_index:️  note that build usually take about twice the time

Here I had steps with only one job each and the first one failing => the build already stops
<img width="1347" alt="screen shot 2017-09-18 at 23 37 26" src="URL.

All in all a nifty feature to speed up and have faster failing builds. Maybe also to have faster access to a stage or job's output. But it does not add more information into Github directly.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258628053\pr-141709460.json . 
As said, I wanted to quickly look into Travis' beta pipeline feature. It in short allows to group the build into inline-code that run sequentially. However, these stages can contain multiple inline-code that run in parallel :nerd_face: 

Here I for instance grouped the linters:.
<img width="1349" alt="screen shot 2017-09-18 at 23 30 12" src="URL.
:white_up_pointing_index:️  note that build usually take about twice the time

Here I had steps with only one job each and the first one failing => the build already stops
<img width="1347" alt="screen shot 2017-09-18 at 23 37 26" src="URL.

All in all a nifty feature to speed up and have faster failing builds. Maybe also to have faster access to a stage or job's output. But it does not add more information into Github directly.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258876913\comment-330907337.json . 
@Benjaminpjacobs Did you discovered why the build failed? If not, click on 'Details' link. If you need more explanations, feel free to ping me.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-258876913\comment-330908163.json . 
Sorry @F3PiX! Left trailing whitespace in the spec. removed and re-pushed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258876913\comment-331083599.json . 
Thanks @Benjaminpjacobs ! Awesome. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258876913\issue-258876913.json . 
Related issue #834 

 - What feature does it add, which bug does it fix? 
Adds a link to projects#index to the drop down 'Summer of Code' nav bar section.

<img width="556" alt="projectsss" src="URL.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-258876913\pr-141891479.json . 
Related issue #834 

 - What feature does it add, which bug does it fix? 
Adds a link to projects#index to the drop down 'Summer of Code' nav bar section.

<img width="556" alt="projectsss" src="URL.



.
#rails-girls-summer-of-code/rgsoc-teams\issue-258876913\pr-comment-139837045.json . 
I think we don't want to change that here, but I am not sure what a neat solution is
@carpodaster || @klappradla : Can you enlighten us please?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-258876913\pr-comment-139837936.json . 
:thumbs_up_sign: 
One doesn't have to be logged in to see the projects list, and thus the link. That is exactly how it is working now :thumbs_up_sign:   Can you also add a test for the guest users as well? URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-258876913\pr-comment-139840148.json . 
I just realized that the projects link is also missing during the Season.projects_proposable phase (Line 8) : can you also add the link to that menu? You can put it under the  link to the new_project_path.

If you feel up to adding specs for that too, that would be great, but I leave that up to you. Either way is cool!
  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258876913\pr-comment-139905403.json . 
Well, the current version of Bundler shows a warning for two version-related things:.
1. the inline-code was generated with a newer version than the one currently used to inline-code
1. there's a newer version of bundler available

Nr. 1 makes sense for e.g. there were new features added to bundler in the newer version, etc.
Nr. 2 also makes sense - security updates etc.

All in all, even if this PR does not install or update gems, it's not a problem to bump this version :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258876913\pr-comment-139905730.json . 
Cool! Thanks. 
@Benjaminpjacobs No action needed :-) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\comment-332618302.json . 
@klappradla I think this one is ready for another review! :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\comment-332620402.json . 
@branquinhoaa @klappradla Is there a reason why we don't show Technologies of expertise and Technologies of interest on the user/show page?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\comment-332620955.json . 
@mkalininait We can include it! Do you want to?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\comment-332622435.json . 
@branquinhoaa I think it makes sense. I also don't know why we don't show the company related info and the "interested in" values. I'd show them all :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\comment-332623338.json . 
@mkalininait ok, I will do it!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\comment-332941920.json . 
Makes sense :white_up_pointing_index:️ 

Just ping me again when you're done with these changes @branquinhoaa :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\comment-332946481.json . 
@mkalininait @klappradla 

How should I display all this info? :thinking: 

!user_show

.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\comment-332970643.json . 
Looking at you screenshot on how to visualize all the info, I'd say yes, goes in the right direction. Some things still :winking_face: 
* please use a whitespace after the comma
* rephrase "my interests" into "interested in" (since we don't have me / my elsewhere)
* capitalize the field names - I think it's best practice to have headlines like "Technologies of Expertise" rather then "Technologies of expertise" (Rails has helpers for this :victory_hand:️  )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\comment-333615068.json . 
@klappradla Where do I should put the space? Because I think that it is already there. The other changes were made! :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\comment-334110192.json . 
@branquinhoaa I'm late for the party, but the changes look great to me! Thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\issue-258919148.json . 
Related issue #612 

- Includes 2 new fields (not required) for users (Technologies of expertise and Technologies of interest)
!tech_fields_edit


.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\pr-141922628.json . 
Related issue #612 

- Includes 2 new fields (not required) for users (Technologies of expertise and Technologies of interest)
!tech_fields_edit


.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\pr-comment-140088533.json . 
Both, this method as well as inline-code serve one a single purpose: formatting an array for being able to show it in a view. Given the size of the user model :winking_face:  it would probably be cool to keep view-related code out there :victory_hand:️ 

Can you think of a better place for this? Maybe have something like this in a inline-code view helper module:.
block-code.

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\pr-comment-140091201.json . 
Where do inline-code, inline-code and inline-code come from? I don't find the according migrations here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\pr-comment-140092831.json . 
How about also phrasing things from a "me"-perspective here? Same as with the other form fields in the user profile?

Maybe something along


and 


???

Plus, even though we treat these things like "tags" under the hood, for the user it's "just" a text input :winking_face: 
So I would suggest to change the hint to a simple "separate with comma".
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\pr-comment-140095854.json . 
Please skip the inline-code - feels too 90s :woman_with_bunny_ears: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-258919148\pr-comment-140096614.json . 
Oh :see-no-evil_monkey: forget everything I wrote :white_up_pointing_index:️ 

Combined with the usage in the form, your solution is probably way better then moving things out the model :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-259318049\comment-331106647.json . 
Having the keys in the inline-code file is the "official" way to go (they are encrypted before they are put there). I could also define env-vars on Travis directly for them. _However_ their values would be overridden by anything defined in the inline-code file and they don't work for forks...

Not sure if this makes the file simpler :thinking_face:  I can give it a try though. Separate PR?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-259318049\comment-331107456.json . 
If this is the official way to go, I'd say keep it as it is now. :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-259318049\comment-331145121.json . 
:+1: Awesome!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-259318049\issue-259318049.json . 
This fixes some formatting problems in the inline-code and adds classic yml-indentation to it for a better readability.

Background: While experimenting with Travis' pipeline feature in #861, I realized our inline-code had some formatting problems, such as a duplicated "notifications" key with a weird nesting (wonder why it still worked..) :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-259318049\pr-142215215.json . 
This fixes some formatting problems in the inline-code and adds classic yml-indentation to it for a better readability.

Background: While experimenting with Travis' pipeline feature in #861, I realized our inline-code had some formatting problems, such as a duplicated "notifications" key with a weird nesting (wonder why it still worked..) :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-262111109\comment-333636631.json . 
:ok_hand_sign: :confetti_ball: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-262111109\issue-262111109.json . 
This adapts the tests to work regardless if the current season ended or not.

Background: some controller tests were under the hood tied to the fact that the current season is still on and not already transitioning to the next. So I put in some before hooks making sure tests which are meant to target a non-transition phase also work when run during a "real" transition phase :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-262111109\pr-144202868.json . 
This adapts the tests to work regardless if the current season ended or not.

Background: some controller tests were under the hood tied to the fact that the current season is still on and not already transitioning to the next. So I put in some before hooks making sure tests which are meant to target a non-transition phase also work when run during a "real" transition phase :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-262113213\issue-262113213.json . 
Based on #865 : lock the inline-code gem (for now until I find out how to "really" update it) and update the other dependencies.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-262113213\pr-144204385.json . 
Based on #865 : lock the inline-code gem (for now until I find out how to "really" update it) and update the other dependencies.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-262779981\comment-334150794.json . 
:tada::tada::tada:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-262779981\comment-335619615.json . 
Sorry for being so late on this one @LuisaAPF and @mkalininait  - my Github notifications are currently getting out of hand :see-no-evil_monkey: 

Thanx for taking care of this :person_with_folded_hands: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-262779981\issue-262779981.json . 
Related issue #809 

 - Enables new conference modal in orga/teams route


.
#rails-girls-summer-of-code/rgsoc-teams\issue-262779981\pr-144663987.json . 
Related issue #809 

 - Enables new conference modal in orga/teams route


.
#rails-girls-summer-of-code/rgsoc-teams\issue-264177988\comment-335438660.json . 
I think Phone number should be a mandatory field as the whole point of asking this infromation is to send packages. For the privacy issues, may be this fields should be only visible to organizers [or a person who handles swag packaging]. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-264177988\comment-349955192.json . 


That's why I would think that a multi-line textarea is better than having individual fields. Every country formats postal address differently. If a user puts their address exactly the way how it must appear on the envelope, shouldn't we be fine?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-264177988\comment-361189505.json . 
@carpodaster yeah, I think that was the original thought behind the text area.

The issue with the packages is that we need to fill out custom forms for each of the non-EU packages, and it some cases it was difficult to fill out from a text block in a text area. We were unsure if “house behind the only bus stop in town” is an acceptable entry for “Street” :face_with_tears_of_joy:  (I'm obviously exaggerating, but some of the addresses were very cryptic and it was hard to tell if this was a regular local address or not, so we had to look that up manually and/or ask people, which was a bit of a time suck).

Also: I'm not sure if this has anything to do with the actual ticket, but last year for swag we looked into partly automatising the process, i.e. exporting the data, uploading it to the platform of the chosen shipping service (e.g. postal service, dhl, fedex, hermes), and having the packages be picked up rather than doing everything manually. It could be that these services ask for the data to be formatted in a certain way. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-264177988\issue-264177988.json . 
RGSoC is an international program, and it's sometimes hard to parse postal addresses of people from other countries.

**Suggestion:**

User profile, edit form: instead of one input field "Postal address" implement several (* are required):.
 - Recipient's name*
 - Company
 - Address Line 1*
 - Address Line 2
 - City*
 - State/Province/Other 
 - Postal code*
 - Country*
 - Phone number

.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343070884.json . 
@LuisaAPF agreed, if that happens in production, that does seem like a bug. To verify if I got it right: you encounter this problem on your development machine only right now?

If you don't have much data, the easiest way would probably to drop and re-create your development database:.

block-code.

Let me know if that fixed the problem locally. Would you like to work on some form of account recovery to prevent this lock out on production? I'm happy to help of course.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343095082.json . 
Hi @carpodaster, I could solve the problem locally. But is it really necessary to forbid the user from accessing her/his account if the email address is not confirmed? I think it would be better to allow access at least to the profile page, in case a change in email is needed. What do you think? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343097759.json . 
@LuisaAPF yes, you are absolutely right, access to the profile page should be possible. Maybe the app should even auto-redirect to the profile page after a login with an unconfirmed account whose grace period has expired? I don't have a way of testing out myself right now: can you log in at all with an unconfirmed-expired account? And if so, are you shown a flash notification that prompts you to validate the email address (this should be shown during the grace period)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343114220.json . 
When my account was expired, I wasn't able to login. I got a 401 unauthorized status. There was no notification asking me to validate my email address. But this wouldn't have solved the problem if my email was wrong or inactive. So I think we should give the user the chance to update the email before re-sending the confirmation request.

In my opinion, the best way would be to never block the access to an account. Instead, we should forbid a user with an unconfirmed email to have access to certain functionalities, like creating a team.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343115467.json . 
Lately, I have been thinking about pulling the account-part out of the User model, and into a separate UserAccount. I expect that it would be easier to handle all devise-functions in the UserAccount functionality. Is that something to consider? (@carsten, @max) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343304981.json . 
Sorry, I mean @carpodaster , @klappradla ^
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343319993.json . 
I personally wouldn't consider it @F3PiX, don't really see the pay-off (but you can of course always give it a try :thumbs_up_sign: ). Is there actually much business logic tied to "accounts"? Isn't it all in the devise gem? We're also only using very very few features of devise :winking_face: 

Requiring a verified email to sign in is actually a feature:trade_mark_sign: @LuisaAPF :winking_face:. User can be assigned as coaches which would e.g. require an email, etc. One could of course also solve this by adding more inline-code and restricting resources and interactions respectively. But from what I remember, the initial motivation was: verifying the email after sign up is one click away, motivating the user to do it later will probably be a harder task.
:white_up_pointing_index:️ this just as a background, I'm happy for suggestions on how to improve this.

I pretty much like @carpodaster of sending unconfirmed users to a dedicated page right away. In theory, there would even be pages to request a new confirmation token :see-no-evil_monkey: however, I don't think they're correctly set up in the Teams App.

In order to have something "actionable" about this bug report. What do you think about turning this in: ???
- [ ] fix / fully integrate Devise's inline-code module
- [ ] redirect users trying to log in with unconfirmed email and expired tokens to the right place.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343466667.json . 
Hey @klappradla,
1 - I agree, it is a feature, not a bug :grinning:.
2 - Regarding your comment about motivating the user to do it later, I don't think it would make a difference, because now the user doesn't know that her/his account will expire anyway
3 - I don't really see the purpose of blocking a user's account for not validating the email. In principle, during the 30 days in which they are allowed access to their account, they could be trying to create teams or being assigned to roles, functionalities which should require a valid email.
4 - What would be the right place to redirect users with unconfirmed email and expired tokens?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343478649.json . 
Will stick to the number thing :nerd_face: 

**2** - You're right.
**3** - indeed interesting @LuisaAPF - we should of course prevent any of these actions for unconfirmed users and somehow remind them to confirm their email.
**4** - including Devise's inline-code module should in theory give us a page where users can request a new token:.

The routes are theoretically there, but I don't think there's anything configured to have them working.
block-code.

**So to sum up:**
the problem is not the 30 days _(we could also remove this and have tokens never expire)_ but that users aren't reminded to confirm their account plus aren't prevented from using their unconfirmed account for basically everything, right?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343498233.json . 
Exactly! More important than blocking an account would be making sure a user can't do anything interesting with an unconfirmed email, from day 1.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343615338.json . 
:thumbs_up_sign: 
So should we turn this issue into


Submitting an application without having one's account is not possible, so that's a :white_heavy_check_mark: 
From what I remember the only "problem" where coaches with unconfirmed email addresses - see #618.

But I guess we could add:.
- [ ] reminder / warning for Teams that coach's account is not confirmed
- [ ] enable the routes / views for resending a token (needs some adaptions due to omniauth)
- [ ] add proper redirects for users trying to log in with unconfirmed and expired accounts
- [ ] _quick idea:_ with :white_up_pointing_index:️ in place, set the expiration to less then 30 days (maybe a week?) so that people are reminded earlier

What do you think?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343628884.json . 
That's a nice summing up. :heart_with_ribbon:  
I am going to propose to take the UserAccount (with all the log in/log out) out of the User Model. That would make the Devise implementation cleaner and easier to work with. The to do list ^ fits nicely in that plan.  
If it is okay with both of you @LuisaAPF, @klappradla , I'd like to work on that - awaiting the outcome of the discussion re: the UserAccount.   
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343651010.json . 
Sure @F3PiX - I'll assign the issue to you.

I'll also remove the inline-code label, because technically speaking the "buggy" part of this has been discussed away into a "feature" and it makes it move obvious from the outside.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343660241.json . 
Hey @klappradla , @F3PiX . I think it is a way of solving the problem. If we want to lock the account, the user should be able to unlock it, to avoid overwhelming the support. But honestly, I think it is an unnecessary piece of extra work. Say a user creates an account today, but forgets to validate the email. She cannot do any harm, because all important actions require a valid email. One week later she tries to log in again and finds out her account has been blocked. It seems to me she's being penalized for nothing.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\comment-343660782.json . 


I don't recall the initial motivation for having this grace period. I would vote for not allowing an unconfirmed user anything but updating their profile. And confirming their email address of course. This is very strict, yes. But browsing projects, the community and teams page as well as the activity stream doesn't require a user account. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272223958\issue-272223958.json . 
It's been a month since I last signed in to my account (locally). It happens that I forgot to confirm my email and that is an active option that forbids my access after 30 days. Is there a way to overcome this?
(I mean, I'm sure that is a manual way to solve this, but maybe it's better to avoid that this happens in production?)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\comment-343137344.json . 
Hi Luisa! I am not sure if you access to the CI details, but in case not: here is the failing spec
block-code.
FYI 
You can run the specs locally with 
inline-code
and you can run the single file by adding the path:.
inline-code
or a single spec by adding the line number:.
inline-code
 
Don't hesitate to ping me if you get stuck.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\comment-343151739.json . 
Thanks @F3PiX! I'm running the test locally :grin: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\comment-343192922.json . 
I'm just not sure about the line mentioning the 30 days, because it will not necessarily be true, as the account could have been created some time ago.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\comment-343193454.json . 
O, of course, you are right, that goes for the account confirmation mail only. Sorry!  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\comment-343206508.json . 
@klappradla or @carpodaster Your second opinion please.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\comment-343583544.json . 
Thanx again @LuisaAPF :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\issue-272524063.json . 
Related issue #618 

 - Sends an email to any user that has been added to a team, with any role (not only coaches) 
 - Includes a line on the email asking the user to fill out profile and confirm email

.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\pr-151621801.json . 
Related issue #618 

 - Sends an email to any user that has been added to a team, with any role (not only coaches) 
 - Includes a line on the email asking the user to fill out profile and confirm email

.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\pr-comment-150084315.json . 
I'd suggest to straight add a link that the receiver can follow to edit their profile:.
block-code.
Maybe make inline-code in this sentence the link.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\pr-comment-150224447.json . 
This URL will only work if the user is already signed in. Should I use it anyway or should I include instead a link to the homepage and ask the user to go to the profile page? Which one do you think is better @klappradla , @F3PiX ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\pr-comment-150227477.json . 
Good point, Luisa. If the user is not logged in, wouldn't the profile link redirect to the login page automatically? Did you check that? Or what happens? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\pr-comment-150229011.json . 
In this case I'm redirected to the homepage and I see this message: You are not authorized to access this page.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\pr-comment-150229812.json . 
And if you log in after this redirect, does that automatically redirect you to the profile page?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\pr-comment-150258730.json . 
Currently, when I log in I see the activities page.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\pr-comment-150260434.json . 
Yeah, that is not very user-friendly. It should be better if we redirect to the last request. 
IIRC that was discussed before, I'll have to look into that. (And maybe add a new issue.)
Thanks for pointing this out! 

Conclusion for now: (cc @klappradla)
I'd say: put the link to the profile in the email anyway. (so that the user can find the link, if they get lost). 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-272524063\pr-comment-150335144.json . 
Interesting way how links are rendered in this view :alien_monster:  But yeah, seems fine to align with what's already there :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273068776\comment-343600931.json . 
I didn't understand your PS. :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273068776\comment-343611528.json . 
Oh, we made a small effort some months ago to have explicit inline-code instead of just inline-code in the specs. But after discussing it with Carsten and seeing the other extreme day to day, I think I changed my mind and will change it back :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273068776\issue-273068776.json . 
Simple maintenance PR: the inline-code gem has been renamed. To not look at deprecation warnings, this PR moves the codebase over to the new gem name.

PS: would also be interested in removing the inline-code prefix in all files again :see-no-evil_monkey:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273068776\pr-152008739.json . 
Simple maintenance PR: the inline-code gem has been renamed. To not look at deprecation warnings, this PR moves the codebase over to the new gem name.

PS: would also be interested in removing the inline-code prefix in all files again :see-no-evil_monkey:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273091558\issue-273091558.json . 
After briefly discussing this with @carpodaster, seeing it in the code bases I interact with daily and in regard of our :police_officer: :police_officer: for line and method length, I chose to move things back from the "long" FactoryBot syntax to the short one.
E.g.
block-code.

Feel free to discard the PR if you totally disagree with this :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273091558\pr-152025849.json . 
After briefly discussing this with @carpodaster, seeing it in the code bases I interact with daily and in regard of our :police_officer: :police_officer: for line and method length, I chose to move things back from the "long" FactoryBot syntax to the short one.
E.g.
block-code.

Feel free to discard the PR if you totally disagree with this :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273185392\issue-273185392.json . 
only triggering builds...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273185392\pr-152080481.json . 
only triggering builds...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273440601\comment-345546745.json . 
PR for this here URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273440601\issue-273440601.json . 
The list of teams currently has a dropdown that allows you to view past teams, which is great! However the styling of the dropdown could be improved with the following:.
1) Text and button shouldn't be grey/greyed out, as it gives the impression that it's disabled
2) some left padding for the content of the dropdown list would be great, right now the first number of each year is completely stuck to the left dropdown border, which is a little ugly and makes it difficult to read

I've attached a screenshot below. I haven't looked into the code so I don't know if this dropdown is using bootstrap styles or not, but I think it's a fairly beginner-friendly issue for someone interested in UI and CSS.

<img width="287" alt="screen shot 2017-11-13 at 14 57 53" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\comment-345797227.json . 
Million thanx for the feedback @carpodaster & @F3PiX - updated accordingly :white_heavy_check_mark: 

And yes, sorry for the noise :see-no-evil_monkey: coming across weird files is indeed tempting for "drive-by-fixes" _(that's how we call this at work...)_, because I of course love things nice and tidy in the Teams App :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\comment-345801009.json . 
Thank you, @klappradla!
and.. uhm...  


Shall we make that a separate issue, maybe? If we show an example and layout the steps, it may be a nice beginner_friendly issue. WDYT?

And out of curiousity. I am doing a similar 'drive-by-fix' in a PR I am currently working on (in another project). What is the neat way to clean up, given that we want to leave the code cleaner when we leave?  



.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\comment-345857500.json . 
About the error message @F3PiX : I quickly added a commit doing this. I did not forget about it, I just thought it was more of a "general" question :winking_face: 
However, yes, that can def. be a beginner-friendly issue :thumbs_up_sign:  If you've already got the words for it in your head, feel free to add it. I can also do it myself tomorrow.

For driving by: depends on the rottenness of the codebase one's on. For a normal state of legacy, I guess it's best practise to clean up all the areas that the current task touches. Where "touches" can either be on file-base or closer associated with the feature or task itself. However, "cleaning up" is of course far from refactoring everything to a new code style, but more like small improvements that can be done in seconds and save hours later :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\comment-346292180.json . 
Do you wanna take another look or should I straight merge @F3PiX and @carpodaster ?

_you can emoji-vote on this comment_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\comment-346294255.json . 
Do it! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\issue-273963141.json . 
This removes the redundant polymorphic association for inline-code as specified in #726 and uses the already existing inline-code column for referencing the rated inline-code.

I included a migration to move all the existing "usable" data over to this new data-model. Please note that this migration also **deletes a bunch of inline-code records from 2015** - namely those rating inline-code or inline-code.
Rating these other entities was possible in the 2015 edition of RGSoC. However, with the new datamodel these records don't make sense any more and I thought it's better to not have them at all instead of running the risk of having these invalid records maybe impacting the current inline-code...

I also cleaned up the models playing into inline-code (inline-code, inline-code, inline-code) to reflect these changes to the data-model and removed a few unused methods from back in the days.

While being already on it, I set all our models to inherit from inline-code the Rails 5 style and add a personal goal to the inline-code file :cat_face_with_tears_of_joy: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-152633089.json . 
This removes the redundant polymorphic association for inline-code as specified in #726 and uses the already existing inline-code column for referencing the rated inline-code.

I included a migration to move all the existing "usable" data over to this new data-model. Please note that this migration also **deletes a bunch of inline-code records from 2015** - namely those rating inline-code or inline-code.
Rating these other entities was possible in the 2015 edition of RGSoC. However, with the new datamodel these records don't make sense any more and I thought it's better to not have them at all instead of running the risk of having these invalid records maybe impacting the current inline-code...

I also cleaned up the models playing into inline-code (inline-code, inline-code, inline-code) to reflect these changes to the data-model and removed a few unused methods from back in the days.

While being already on it, I set all our models to inherit from inline-code the Rails 5 style and add a personal goal to the inline-code file :cat_face_with_tears_of_joy: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151413083.json . 
 'with' a team instead of 'which', I presume.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151413746.json . 
missing 'is'
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151415583.json . 
How about we start to add error messages to the en.yml?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151424944.json . 
Double check:  this criterium is not in use anymore?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151425131.json . 
How about we start with adding the errors to the en.yml? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151425541.json . 
Does this goal involve more than adding inline-code everywhere? (checking if it is a beginner-friendly issue) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151426697.json . 
I thought we don't need to set the type because we have:.
URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151562182.json . 
I couldn't find any usage of it in the code. Wasn't there a bigger change to the way people would specify their gender?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151562828.json . 
Hm, to be honest, I don't know :see-no-evil_monkey: 
I would guess it's probably going over all associations, adjusting / removing the validations, updating specs and factories, etc.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151563662.json . 
For having inline-code work as before, yes. But maybe someone wants to add a specific config for controller-types specs, e.g. including certain matchers there...?

I actually did not put much thought into this :winking_face: 

However, I think it would be good to have, especially if we finally start to add feature-specs (we should def. do this) - so that we can distinguish which parts of the suite require a headless browser, etc.
Plus, we could split the build to run feature-specs and non feature specs in parallel...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151565993.json . 
If it is not in the code, than it is not in the rating #thingsRailsGirlsSay :face_with_tears_of_joy: 
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151566155.json . 
Let's NOT make it a beginners issue ;-)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151869017.json . 
Interesting, I always thought that shoulda-matchers would depend on it. The more you know :) Good bye superfluous dependency :wave:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151869145.json . 
Not sure this is an equivalent refactor. inline-code is an INNER and inline-code is an OUTER JOIN if I recall correctly, meaning you will project values that don't have a matching association.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151869255.json . 
:thinking: I'm not familiar with this inverse_of. I remember that at one point I was starting to use it, only to learn that Rails core was thinking about removing it again. Never followed up on that one. It would seem it's still there and heaved upon the inline-code macro at that?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151869296.json . 
Does this need a inline-code? Because of this being an inline class I'm thinking the table name would be auto-resolved to inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151869345.json . 
We're definitely not working with big data here, but I've recently come across the inline-code option in this article.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151869493.json . 
If we are to add the inline-code key, can we also change the inline-code to inline-code? No, no need to update this PR, just thinking about it while reading this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151872550.json . 
:see-no-evil_monkey: thanx a million for pointing this out @carpodaster :person_with_folded_hands: 
I since forever "just used":trade_mark_sign:️ inline-code, because I thought it would do some behind the scenes optimization for looking up the association (see the beginning of this blogpost from back in the days).
**BUT** as it turns out, this was already added as a default behavior to Rails 4 (and therefore probably also Rails 5). It's probably still around for associations where the inverse cannot automatically be determined by the name - but for basic cases like most of the associations in the Teams App, this is obsolete :electric_light_bulb: 

So I guess I can ditch the inline-codes I added in this PR :party_popper: 

Learned something - yay!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151872672.json . 
I've never used inline-code, but I think it adds some inline-code like macros to inline-code. So you probably need it for the "should" part if you use these matchers with inline-code.
For RSpec, we won't need it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151873078.json . 
If I understand it correctly, the 'inverse of"  is (now?) required when validating associated records and/or on polymorphic associations.  URL.
I can't see if this is relevant for this PR.  If it isn't, please ignore this :-) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151873357.json . 
Yep, you're totally right!

Should be
block-code.

Will do the correct query then:.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151873696.json . 
Hm, good point! This is actually a scenario I never thought of before - but sounds plausible :thinking_face: 

The reason why I thought this wouldn't be a problem: the migration-class is not an inline-code class and therefore does _(at least that's how I understand it)_ not add a prefix to its nested classes...

But what you say sounds plausible - I'll add it just to play save :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-151873976.json . 
Neat! :sign_of_the_horns:.
But I think it's not 100% fit for our usecase - would do it if we're ONLY doing the index.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-152145573.json . 
Just for reference @carpodaster: you were so right and I by coincidence also ran over a (or the :thinking_face: ) blog post about it today:white_down_pointing_backhand_index: 
URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273963141\pr-comment-152197309.json . 


– Gandalf the Grey on Active Record migration techniques.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273967945\comment-344909998.json . 


:green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273967945\comment-344921949.json . 
I am late to the party ;-) 
One question: we do have the ruby version in the gemfile. I learned that build will fail with different ruby versions. Do we need the ruby version file anyway?   
(Also, The gemfile declaration prevents that you use the wrong ruby version.)  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273967945\comment-345090191.json . 
Thanx for pointing out @F3PiX :person_with_folded_hands: 

Yes, it's true that Travis won't let you use versions different to the one specified in your Gemfile - or at least it was like this for the last 2 years. Specifically if you specify different versions from inline-code for Travis to chose from. If I remember correctly the build then fails even before any build-steps are run, since Travis cannot match the configuration and the files in the repo correctly.
However, all ruby version managers (rbenv, chruby, rvm, etc.) can use a inline-code file to automatically pick up the right version if it's installed. And so does Travis :party_popper:  _(in fact, that's how I usually use Travis in other projects: only have a inline-code file in the repo which solves work picking the right version in development, ci and on production)_.

The Gemfile-declaration is for Heroku _(no clue why they don't use inline-code files)_ and from what I remember it does not have any impact on the Ruby version you use on your own machine with it. I could imagine that inline-code is able to read and pick a version from a Gemfile, but it's very unlikely that it has preference over one specified in a inline-code.

So **tl;dr** it should not neither break our builds nor your local dev setup :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273967945\comment-345092676.json . 
Thanks to you! Interesting stuff. I'll go and add  .ruby-version's to my projects. ;-) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273967945\issue-273967945.json . 
This updates our config for Travis to basically not build every PR twice. It should be enough to build every PR and the master / staging branch. If individual branches should be build, one can still do this by hand :white_down_pointing_backhand_index: 

<img width="625" alt="screen shot 2017-11-14 at 23 31 23" src="URL.

I also added a inline-code file so that Travis can pick it up. We won't be testing against any other versions + most people probably already use that file anyways :victory_hand:️  - therefore I don't see a problem in having it in the repo _(maybe also makes it harder to accidentally use the wrong Ruby version)_.

Spoiler: I also started to use an interesting pattern to have fail-fast Travis builds at work. Will add a PR to the Teams App as well as soon as I find the time.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-273967945\pr-152636787.json . 
This updates our config for Travis to basically not build every PR twice. It should be enough to build every PR and the master / staging branch. If individual branches should be build, one can still do this by hand :white_down_pointing_backhand_index: 

<img width="625" alt="screen shot 2017-11-14 at 23 31 23" src="URL.

I also added a inline-code file so that Travis can pick it up. We won't be testing against any other versions + most people probably already use that file anyways :victory_hand:️  - therefore I don't see a problem in having it in the repo _(maybe also makes it harder to accidentally use the wrong Ruby version)_.

Spoiler: I also started to use an interesting pattern to have fail-fast Travis builds at work. Will add a PR to the Teams App as well as soon as I find the time.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-345876202.json . 
Yep you're right! Have removed the bootstrap over-ride and updated with old class. This fixed the overall styling of the button so doesn't appear grey anymore, but couldn't find a way to fix the padding with just bootstrap classes.

It's not following the convention of the main nav bar dropdown because they are inline-code tags rather than just inline-code so I still included a new class here to include padding; does that work?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-348606365.json . 
Hey @mbrien12 :waving_hand_sign: 

Just wanted to check back if you're still on this and if you need more information, help or anything else?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-348726269.json . 
Sorry for the delay! I'm going to be taking a look at this tomorrow so
should be done then :thumbs_up_sign:.

On 1 December 2017 at 18:29, Max Mulatz <notifications@github.com> wrote:.


>


>







>

.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-348766402.json . 
Yeah think inline-code items works much better thanks! Means it inherits the correct padding now too, how's this now?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-349137375.json . 
Pushed changes requested above :white_up_pointing_backhand_index:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-350449338.json . 
Hi @mbrien Wouldn't it be nice to also add some visual feedback on the year I am selecting? Like color the background on hover or something? I think we do have an inline-code class for it.
See the teams dropdown in inline-code .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-350518902.json . 
Hi @F3PiX I received a notification of another message which isn't displaying here, about the dropdown not selecting anything on master, is that still happening?

I realised I made this change without having any data in the app so when I tried to seed now I get an error saying:.
block-code.

This was after running inline-code - can you advise how I can seed the app so I can test the dropdown properly? Thanks in advance!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-350534513.json . 
Hi @mbrien12,
We just discovered - and solved - the seeding issue yesterday!  
Just pull the latest changes. 
Now, the seeding should work - on your master branch.

Now you can either rebase onto master, or create a new local branch off of master, and copy the changes from inline-code to your new local branch.  

And - sorry about the misleading notification - then the dropdown should work!
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-351272430.json . 
Have ran the seeds and tested the dropdown again and is selecting teams corresponding to the year. But have noticed that '2018' is empty. Which makes sense as selecting 'past' teams!  Should it display as an option still? If so, would be good to at least re-order the list so displays in date order, I can look at this week?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-351352237.json . 
Good catch, @mbrien! Thanks!
You are right, we can do without the _succeeding_ year, in this case 2018.
It is a bit tricky though, because in a week or 3, 2018 is the _current_ year, and we _do_ want to show that. (If you want to go another step: we do want to have that from the moment we do have teams for 2018. :-)  )

I'd say: you can change the inline-code method in the inline-code model, and let it return the year names without the inline-codeeeding season.
Let us know if you need help; I just sketched it here so you can take a stab on it, but feel free to ask for help or hints :-)
 
And now that we are on it: as the current season is also in the dropdown list, _and_ that is the only link to get back to the current season's team:   How about we change the label to: 'By Year' or 'Teams by year' instead of 'Past Teams'?

cc @klappradla Agree?


 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-351461945.json . 
Not sure I got every detail (my brain is already a bit melted today) - but my :heavy_plus_sign:  on displaying the years in order and rephrasing the text on the button :thumbs_up_sign: 

I would however prefer this in a separate PR, so that we don't have this one linger around forever with the efforts of constantly keeping it up to date :winking_face: 

So, if you address my previous comment about :alien_monster: , we could merge this one and do the naming and sorting in a separate one @mbrien12 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-351710419.json . 
I have pushed a change with inline-code on the caret but it shows up in the dropdown when added to 'Past teams'. I replied to comment in review but may have got lost in thread, see here. How is it now?

!screen shot 2017-12-14 at 10 26 28

.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-351712369.json . 
Yay :party_popper:  that's perfect and exactly what I was talking about. Sorry if I did not make myself that clear before :see-no-evil_monkey:  . As for the comment: could also have been me who overlooked / lost it - my Github notifications are a constant information overload... :delivery_truck: 

Anyways: do you wanna continue the additions proposes by @F3PiX in a separate PR then? Do you want a ticket for it or is it enough for you if you can go back to this thread right here @mbrien12 ?

And again: million thanx for your efforts :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-351714360.json . 
I already created the issue: #895
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-351714510.json . 
Ah me too! I will close! #896

.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\comment-351714630.json . 
Sorry! Thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\issue-275189160.json . 
<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->

Improved styling of the dropdown menu on the teams page
* The text colour is black so doesn't look inactive - I over-wrote the bootstrap class for form inputs with this colour. I checked the site for other places this could impact and couldn't find anything, but if preferable not to override this class then instead could create id for this specific dropdown?
* Added padding to the items in the list so matches the main navigation

!screen shot 2017-11-19 at 18 11 07

Fixes #874 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\pr-153513750.json . 
<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->

Improved styling of the dropdown menu on the teams page
* The text colour is black so doesn't look inactive - I over-wrote the bootstrap class for form inputs with this colour. I checked the site for other places this could impact and couldn't find anything, but if preferable not to override this class then instead could create id for this specific dropdown?
* Added padding to the items in the list so matches the main navigation

!screen shot 2017-11-19 at 18 11 07

Fixes #874 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\pr-comment-152094459.json . 
I think one of the problems with this button is that it's just using the _"wrong"_ css classes - one that's normally intended for forms. Maybe have a look at the old bootstrap docs what markup they use in their examples.

I could imagine something like:.
block-code.
to work with the right colors etc.

Do you wanna give it a try? Maybe better on the long run compared to overriding bootstrap defaults :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\pr-comment-152673903.json . 
Hm, I think I don't really understand this part :see-no-evil_monkey:  why do we also need the padding on the inline-code...?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\pr-comment-152674116.json . 
:thumbs_up_sign: 
Just curious: where does the inline-code attribute come from and what does it mean? We don't have a popup here, that's why I'm wondering... But I'm also not familiar with these tags  :hatching_chick: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\pr-comment-152674347.json . 
Probably a left over from fiddling with bootstrap :winking_face:  Can you please remove this...?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\pr-comment-154649217.json . 
Can you please remove this class again? It's not used anymore and having unused code lying around is never good :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\pr-comment-154653338.json . 
Just tried it out locally. Works perfect, but is missing a whitespace between "past teams" and the caret :alien_monster: 

It's only a subtle difference, but I think it makes it look way cleaner with a separation:.
_without whitespace:_
!screenshot-2017-12-4 rgsoc - teams app 2

_with whitespace:_
!screenshot-2017-12-4 rgsoc - teams app 1


The syntax in slim therefore is a bit weird though :winking_face:  See the docs on it

So here it would be:.
block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\pr-comment-154802981.json . 
I was trying to figure out how to do that thanks!!:see-no-evil_monkey:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275189160\pr-comment-155032510.json . 
Hm, maybe you forgot to push the change? I don't see it :see-no-evil_monkey:.

It's literally this syntax:.
block-code.

In the changes I just see a "normal" whitespace after the inline-code - this unfortunately does not work with all browsers plus most editors (mine for instance) remove trailing whitespace so this won't be around for too long :disappointed_face: 

Could you update to use the slim syntax? Then we're good to merge.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-353554966.json . 
@aSquare14 The best way to start is by selecting one of the issues with the 'beginner-friendly' label. Like this issue (or click on the yellow label, to see all issues with that label). Even if you are not a beginner at coding, they are suitable for first time contributors. 
Does this work for you?
  
After that, if you are looking for something more challenging, you can take a look at the issues labeled 'rgsoc18'. I wouldn't recommend all of them, but we can chat about that later. 

To learn more about projects: see URL 
I don't know much more that what is in the guides ;-) , there is an email address in the guide for further inquiries. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-353608987.json . 
Thank You !

On Fri, Dec 22, 2017 at 2:37 PM, Maud de Vries <notifications@github.com>
wrote:.







>



>




>







>

.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-354123459.json . 
Hey @F3PiX ,I would like to work on the  issue,will send a PR soon :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-354133693.json . 
Hi @nileshgulia1 Welcome at the Teams App!!! Great that you want to contribute. :thumbs_up_sign:  :party_popper: 

@aSquare14 Are you currently working on this issue? Or can we pass it to @nileshgulia1 ?

@nileshgulia1 I'd hate to see you do double work for nothing, so please wait a few days until we know if @aSquare14 is working on this.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-354138102.json . 
Nopes I'm not. He's free to work on it. All the best!

On 27 Dec 2017 9:26 pm, "Maud de Vries" <notifications@github.com> wrote:.



>



>



>







>

.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-354138279.json . 
@nileshgulia1 All yours!!! :dancer: 

@aSquare14 Thanks for your swift reaction! Much appreciated.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-354141299.json . 
@nileshgulia1 One more thing: be sure to _first_ pull in the latest changes - we just merged a huge PR - . Then create your branch, so that your commits are on top of the changes. 
This will save you a lot of merge conflicts later on. 
 
(Ask away if you need more explanation/help.) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-354153494.json . 
hey @F3PiX ,need help translating error messages via  i18n.
For translating error messages in block-code.
block-code.


block-code.
block-code.
block-code.
  end


block-code.
is this the right approach?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-354170619.json . 
This is a great start, yes! 
1) The general idea is correct: the original string value becomes the value for the error key. ('must not be selected twice'). I assume the last code block you showed ^ is in the en.yml file. Right? It should be.

2) It is not required per se that the whole sentence becomes the key; main goal is that it is very clear (for your fellow developers) what error message is generated. That is partly a matter of opinion, but generally they can be more concise than the message for the user. I myself like it when the describe the error. For instance, 'must not be selected twice' can be called 'multiple_selection_error'   

3) I did not yet check the exact place in the en.yml file. One way to check that yourself is update the test files (with these new error keys') and then run the tests. If you happen to add a error to the wrong place, the tests will fail. (For example, for the Application Draft: some are going to :base, others to :projects.) The tests will tell you!

4) Minor detail: be sure to use lowercase only for the keys. (not inline-code , in the third method in your question ^)   

Okay? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-354245386.json . 
@F3PiX  Great,Thank you :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-355858672.json . 
Hi @nileshgulia1 How are things going? Let me know if you need help? 
  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\comment-356625046.json . 
Hello,@F3PiX, Got busy doing other work,Yeah things are going great ,Sure i will ask if i need help.Thank you :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-275701382\issue-275701382.json . 
We have some custom error messages, for example here.
URL.

We want to move these custom error messages to the translation file inline-code. In this commit you can see how it is done, for an error message on the Todo model and its user attribute.

Collect all the error messages and put them into the translation file, at the right place.  
 
Further reading: URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-348701861.json . 
@klappradla Can you take a look please?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-348762176.json . 
For your other questions:.
1. _I kind of answered this in my comment on the PR I think_
1. Not 100%. From what I remember it still does something slightly different. It does not just define some constants, but also has some utility functions for rendering data in form inputs. So straight combining them is probably not possible and may again just make things harder to distinguish. But moving it somewhere else, closer to the form and other form related things could be an option.
1. From what I remember it's a text input with autocomplete triggerd by some JS. So it's actually using the values - but not as a select _(you're still free to input whatever you like)_.

:white_up_pointing_index:️ is that of any help? I feel like my brain is a :balloon: today...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-349460223.json . 
It is very helpful! Thanks. 



I realise I am thinking ahead, and maybe overthinking it. Because: it turns out we do have an application_form_helper. How about I put it just in there?

The reason I am not (yet) wildly enthousiastic about the inline-code directory, is because we do have the inline-code as well. (Which has its own namespace already.) And is also tightly related to the inline-code.
I also looked at presenters, but that looks like overengineering for the current simple goal.

So, although I do not like helpers at all, in this special case it might be serving the quick goal?  
WDYT? Helper or module? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-349460422.json . 
@klappradla ping ^^
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-349472174.json . 
So you mean module that gets included into the form class? :thumbs_up_sign: sold

I'm not a huge fan of helpers. They're global namespace and tend grow out of hand real quick.

I have used draper for decorators before which worked quite good - kind of as an alternative to helpers.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-349473013.json . 
In addition to that and helpers tending to rot: I think we can safely remove the inline-code module as it seems not to be used: :cat_face_with_tears_of_joy: 
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-349474662.json . 
Yes, I noticed. :thumbs_up_sign:   Delete! Delete! Delete!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-349948580.json . 
@klappradla Can you take a look please? 
* I - reluctantly - renamed to StudentFields, because that name is already in use for those fields.
* I really like the idea of the Decorators. But I'd propose not to do it in this pr. Okay?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-350040174.json . 
Look at thaaaat! Isn't it neat now?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-350066965.json . 
Sorry to you Max! I'll revert the SkillLevel. 
About the other two though. Would you mind terribly to keep them concerns? I'd still prefer that over having view-things in the model itself. Also because it will be REALLY crowdy. 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-350069097.json . 
Looking at the model, to be honest, yes :see-no-evil_monkey: 

It contains mostly decorator functions for the view, so the constants would actually fit best there.

One could then later try to reduce the complexity / LOC of this class, but with a different approach (form builder, decorator, etc.). Moving things to concerns would just split the domain, Carsten was right with that...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-350080814.json . 
Better turned at half than to get lost altogether :-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-350089694.json . 
:green_heart: 
Btw. could it be that the inline-code class is not even used? :see-no-evil_monkey: I couldn't find a usage on the first quick look...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\comment-350091999.json . 
OMG!!! Really 🤣   

Thanks for the lessons and the merge :person_bowing_deeply: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\issue-278694805.json . 
Related issue #(none)  Simplify working with the User model 

- These constants are used only in the ApplicationForm. 
Step 1: They get their own class, named (for now) inline-code. 

- Questions:.
  - 1 Is there a better name for the Class? An inline-code object already exists. I thought about naming the new class: inline-code or inline-code. That describes the relation to the Form better, but there are more fields than just the personal ApplicantFields. 
Also: should it be singular ApplicantField? 
  - 2 There is a separate SkillLevel class, that is a similar 'applicant field', and also used only in the form. Does it make sense to combine the ApplicantFields and SkillLevel into one class?
  - 3 The  application form has a gender list field, but it doesn't show the select options as stated in inline-code.  
URL 
<img width="1046" alt="screen shot 2017-12-02 at 17 04 21" src="URL.
Is should show as a select, shouldn't it? 
  
<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->

.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-156019111.json . 
Related issue #(none)  Simplify working with the User model 

- These constants are used only in the ApplicationForm. 
Step 1: They get their own class, named (for now) inline-code. 

- Questions:.
  - 1 Is there a better name for the Class? An inline-code object already exists. I thought about naming the new class: inline-code or inline-code. That describes the relation to the Form better, but there are more fields than just the personal ApplicantFields. 
Also: should it be singular ApplicantField? 
  - 2 There is a separate SkillLevel class, that is a similar 'applicant field', and also used only in the form. Does it make sense to combine the ApplicantFields and SkillLevel into one class?
  - 3 The  application form has a gender list field, but it doesn't show the select options as stated in inline-code.  
URL 
<img width="1046" alt="screen shot 2017-12-02 at 17 04 21" src="URL.
Is should show as a select, shouldn't it? 
  
<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->

.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-comment-154521972.json . 
Does not really make a difference in usage, but how about starting to use inline-code syntax here and then inline-code these arrays? I think the % literal syntax could be a bit more readable for these lists.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-comment-154533981.json . 
We could|should generally move to inline-code (we should still freeze the array constant though). As for the %-literal: I tend to disagree about its readability. I think people are more familiar with inline-code as its also common in other programming languages.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-comment-155529822.json . 
"Concern" I have with this: we're polluting the already **huge** inline-code folder with things that aren't models and only make sense when combined with an actual *model*. Therefore I'd vote for: making it a inline-code :face_with_tears_of_joy: 

There's the inline-code directory in the inline-code directory. You could add a fitting namespace, maybe inline-code and then stuff it there:.
block-code.

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-comment-155531101.json . 
Not sure how relevant for the moment, but I would vote for **not** decoupling the fields / constants from where they actually belong to and just reference them straight from the model.

So in this case we're dealing with an inline-code model / instance right? My initial idea would have been to simply include the fields module there
block-code.
This would add all the constants and functionality to the inline-code and you'd use it directly from there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-comment-155532500.json . 
can you add the frozen_string_literal magic comment to this class? That way the values in the arrays are also frozen (and the memory objects can be reused)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-comment-155533043.json . 
I was in doubt about it, because I learned not to use inline-code for things that are in one model only. But it looks so much better, so  :thumbs_up_sign:   totally agreed. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-comment-155535340.json . 
On one hand, I agree that this module shouldn't reside in app/models. Otoh, why do we care? There is no real definition what should go into models. Only persistence objects? We would have to through out quite a few files then. And were to put them? Coming up with new subfolders under inline-code makes it more difficult to find the implementation of a class than browsing a densely  packed app/models folder.

The current implementation of inline-code does look as if it belonged into inline-code.

That being said, I'm not so much a fan of models (concerns) as a bandaid to remove the line count of a fat model when they're only used in a single class. If anything, it makes it only less explicit what a model is capable of.

If we don't want to expose constants to the form, can we transform these to module functions? Or, better yet (and certainly not in this PR), add them as methods to a custom form builder for the the students fields form?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-comment-155564933.json . 
We can decide later on a more permanent decision? I'll keep all this in mind, together with the option of decorators.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-comment-155577054.json . 
:thumbs_up_sign: 

I think the important part was just to realize that these things should be part of the form object rather then the user model - and we have that now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-comment-155597632.json . 
Hm, I fear this does not really fit a module. From what I remember it was implemented as a separate class (and not adding a constant to the inline-code model, since it also has some **bahavior** (see the metaprogramming fun on the Eigenclass) and is used in 2 different places (inline-code views and inline-code views).

Given it has behavior attached to the Eigenclass, I'd say moving this into a module and including it somewhere else is *entering dangerzone* - I just would not do it because it's super hard to grasp all the potential sideeffects this can have :fire: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-278694805\pr-comment-155597822.json . 
As I said: dangerzone _(plus it's actually not even used in the view like this)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-279516512\issue-279516512.json . 
This is a follow up for #871. It adds a lint spec to the test suite which "lints" all our inline-code factories based upon the build in lint task :police_officer: .

The idea / motivation have factories build the most minimal **but valid** object. Being able to rely on a factory always returning a valid objects makes writing tests overall more easy - especially when it comes to test setup, the in my opinion hardest part in legacy Rails apps :winking_face: 

**Sidenote**
As a *drive-by-refactoring*  :tractor:  I also changed a flaky spec and removed to obsolete helper files.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-279516512\pr-156564433.json . 
This is a follow up for #871. It adds a lint spec to the test suite which "lints" all our inline-code factories based upon the build in lint task :police_officer: .

The idea / motivation have factories build the most minimal **but valid** object. Being able to rely on a factory always returning a valid objects makes writing tests overall more easy - especially when it comes to test setup, the in my opinion hardest part in legacy Rails apps :winking_face: 

**Sidenote**
As a *drive-by-refactoring*  :tractor:  I also changed a flaky spec and removed to obsolete helper files.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-279528799\comment-349475147.json . 
"Standard RSpec specs" are for POROs:.
block-code.

If you have inline-code or inline-code spec, rspec-rails includes additional functions, such as inline-code, inline-code inline-code, etc. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-279528799\issue-279528799.json . 
This is a follow up to #880 and #871 to remove leftover of the pre v3 era of RSpec:.
1. Inferring the spec type from the file location
  see the RSpec docs for details on this
1. Have 'describe' available from the main object
  see global namespace for details

Motivation for this: I just thing it's a) generally healthy to keep the application up to data with current standards and b) easier to understand for people new to the project then.

PS: I know this touches loads of files... The important parts are the configuration and that the suite is still :white_heavy_check_mark: 

PS 2: No need to look at this until #880 is agreed upon and I've rebased this branch on it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-279528799\pr-156572853.json . 
This is a follow up to #880 and #871 to remove leftover of the pre v3 era of RSpec:.
1. Inferring the spec type from the file location
  see the RSpec docs for details on this
1. Have 'describe' available from the main object
  see global namespace for details

Motivation for this: I just thing it's a) generally healthy to keep the application up to data with current standards and b) easier to understand for people new to the project then.

PS: I know this touches loads of files... The important parts are the configuration and that the suite is still :white_heavy_check_mark: 

PS 2: No need to look at this until #880 is agreed upon and I've rebased this branch on it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-279528799\pr-comment-155086589.json . 
neat!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-279528799\pr-comment-155086830.json . 
I think the name has to correspond to a year for its automatic lookup to work, no?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-279528799\pr-comment-155087346.json . 
I kinda like this auto-detection system :crying_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-279528799\pr-comment-155087416.json . 
:thumbs_up_sign: did not know this config knob existed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-279528799\pr-comment-155097768.json . 
Yes. I even first thought about excluding the inline-code model from the factory linting. But then I thought, there are some explicit tests for this functionality in place anyways and the DB is wiped after each test anyways, so I thought it would be fine.

Can undo it if you have concerns about it :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-279528799\pr-comment-155098823.json . 
:crying_cat_face: 
Interesting / promissing thing about the current setup: it *almost* works with transactional fixtures :party_popper: 
There have apparently been some changes to Rails' test internals that may allow to ditch inline-code and switch on inline-code instead. I tried it out - it runs super fast. But unfortunately some tests around the inline-code model do not really work with this setup :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-279528799\pr-comment-155162131.json . 
You're right about the flushing after each example. I'm not sure if anyone looks into the factory definitions to understand the inner workings of a class, but it would confuse me. I guess I'd prefer sticking with inline-code but we should also add a format validation (not necessarily in this PR)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-350031719.json . 
Thanx for reporting this :electric_light_bulb: 

**Limit number of coaches**
I get the problem of coaches not being involved enough into the program, but I don't understand how limiting the number of coaches solves or at least touches this problem :see-no-evil_monkey: 
Let's say a team picks 10 coaches and only 1 of them does actual *"work"*. If we now limit the number of coaches to 4, the team may pick 4 out of the 9 non-involved once and end up with *"no coaching"* at all. Or am I getting this wrong?

I agree that it does not make sense to add more then 4 coaches, plus that any number above that is likely to decrease quality of coaching. I would also add the respective logic for that, but I don't think it solved this problem:.


**Project-bound-coaches**
I think with the new community page (added as part of last year's summer of code) something along the lines of what you describe is already possible. It was actually one of the motivations for building the page - to allow students who don't already have a super strong coaching team to their side to look for people who are willing to coach and have a background in the technologies involved.

The only difference: coaches have to sign up **before** someone fills out the project application.

I'll quickly outline the scenario:.
1. Mentor decides to submit project
1. All the coaches she has to her side sign up as users on the Teams App, confirm their profile, set their status to inline-code _(or however it is phrased, don't know it by heart)_ and cite that they are proficient in the technologies involved in the project
1. In the project description, the mentor can then add links to the Teams App userprofiles of these coaches and "propose" them as potential candidates for coaches if a team is still looking for some _(teams should not be forced to work with these coaches)_. The input supports links and even markdown, so that's all possible
1. :party_popper: 

:white_up_pointing_index:️ I tbh prefer this process to adding new inputs and logic around the application process. It's already rather complex both for the dev as well as for the user facing side.
What do you think @nerdyvaishali ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-350259227.json . 
**Limit number of coaches**
Well, I agree that the idea itself doesn't actually solve our issue of the involvement from coaches but this is basically a 1st step in the direction I believe. Few other things which we have been discussing or I have been thinking to implement is as follows:.

- Communicate to a applicants in a way so that they choose coaches responsibly [students-guide?]. I believed that applicants were adding so many coaches so that atleast they have some supporting coaches at the end. If we limit the numbers, they may get selective about this and select/find/add the coaches responsibly.
- Improve the communication with coaches
- Coach agreements (?)

The above mentioned way may not solve the problem completely but I was hoping that it will improve the situation and having limited number of coaches means supervisors/orga have to communicate with the less number of people. 

**Project-bound-coaches**

inline-code

I definitely like this process for adding new inputs and logic around the application process. It seems perfect for the coaches that comes from the projects' side [which is always good I believe]. And sure we don't need to put limitation in that case.

But how will this be implemented for students' application forms? Do you think we can implement something in the similar way? I think it may need bit more thinking as we allow applicants to add 2 project choices. 

May be a separate issue for that discussion? Wdyt @klappradla? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-350268476.json . 
Hmmm I agree with @klappradla. Adding new inputs to the form or limiting coaches in code wouldn't be my first choices for solving the problem. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-350322212.json . 


:white_up_pointing_index:️ that's a very good point @nerdyvaishali and would already be enough reason to limit the number of coaches :white_heavy_check_mark: 

For project-bound coaches:.
The "problem" with your idea is, that it breaks with some key mechanisms of the application process. Right now, coaches commit to a team **before** the team applies, is accepted and a project for them is chosen. A coach basically says:.


What you want to introduce with project-bound coaches is:.


What :white_up_pointing_index:️  basically means is: the process of finding the actual coaches is shifted from the before the application deadline to right at the beginning of the program. You will basically have a switching of the majority of team members of all the teams that get accepted once the summer starts, which is again a) solving a complex problem and b) takes away "summer-of-code-time".

So I think even though the goal is to have a stronger coach support, implementing this feature as logic within the app could easily result in having way weaker coaching support and less inside from the orga side when rating applications to be selected.

One solution could be: how about the students not dealing with the project-based-coaches upfront at all? Once they get in contact with the mentor he or she can still point them to a group of people with most knowledge about the app.

On the topic of new issue: please not, my Github notifications are already getting out of hand :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-350346256.json . 


Hmm, as far as I've seen/observed, there are basically 2 problems with the above approach which basically somehow also results into teams adding so many coaches and coaches not being active during the program.

- As we offer 2 project choices but coaches are common, most of the time it is very unlikely that every coach is well-versed with the tools/technologies being used in projects teams are applying for. And because in the end team is assigned either of the project, coaches who don't have idea about tools can't really help and end up being inactive during the program.
- Another problem [if it is actually a problem? - well that is debatable :)] doesn't stop here. Lot of these people who are inactive during the program [never answered mails, texts from participants /orga /supervisors etc] uses the name of a program and claims to be part of it. And technically they are part of a program without doing any work because they are listed as a coach on our teams app. So, this doesn't actually end up as an organizational or technical problem but also sort of as a community problem too. 



This is an excellent point. And I think it will again end up having coaches who are listed as a coaches for many teams but will be basically inactive for all of them except the team working on their project. I also agree with the problem that comes from implementing this as a feature in teams app. So, it doesn't seem that implementing project-bound coaches as a feature is going to work.



The above mentioned possible solution is basically the current scenario and not the best IMO. The problem with students not dealing with the project-based-coaches upfront is that, once the team is selected, usually mentors introduces them with the community members/non-official coaches etc who helps them with the project. Apparently that also then ends up being one of the reason why coaches from students who were probably willing to help but can't be active because students don't really need them in the end. 

But well, I can't really think of any other way to involve this coaches which comes from projects [may be co-mentor?] as of now. Although I think it would be good if mentor can probably add this information somewhere [basically a text that says there are these people who would be willing to help during the project]. They don't really need to be assigned any role. Probably this can help students to probably put less effort for finding coaches for that specific project. 

Also, on a side note I was also wondering if it is possible in future to implement something in the students' application process where they can say that which coaches will help them for which projects. And once the team is selected only coaches helping them with the project they are selected will be listed as a coaches. May be tags like **'coach for project xyz'** or something in a similar way. In this case, certainly don't know how much work will require on technical part. So, feel free to say no if this last point sounds crazy. :) 

P.S. Sorry for the large bunch of text. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-350482496.json . 


No worries, that's perfect - I at least understand everything.

So wrapping this up, my "proposal" for now would be:.
- [x] In the Teams App, limit the number of coaches per Team to e.g. 4
- [ ] Update the students's guide to reflect :white_up_pointing_index:️ 
- [ ] Update the mentors' form descriptions to tell them it's possible to suggest coaches with links to their profiles in the Teams App
- [ ] Update the students' **and** mentors guide to reflect :white_up_pointing_index:️ (e.g. coaches have to sign up upfront and set themselves to "available", etc.)

What do you think?

On your idea for tagging coaches: a reasonable idea for the future, yes. But for now I would not do this. The application process is already super timeconsuming for the students and especially the outreach to coaches one of the most difficult things, not only for countries like Egypt where there are just not enough people around, but also for people in cities that for instance don't have a local chapter of Rails Girls, Clojure Bridge, etc. to get an introduction into the community.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-350526844.json . 



This sounds perfcet to me. Thanks. :+1: 



Ok, I think this idea also requires some more thinking. But let's keep it for the next edition [2019]. :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-350541860.json . 
Re: limit number of coaches

Hmm. I see how the Proposal can be a solution for the described use cases, and I can think of quite a few use cases where it is not. From my own experience alone:.
- We had a mixed frontend/backend team, with 2 frontend coaches (at the office location) and 3  backend coaches (outside). That were not enough backend coaching contact hours. 
- During summer, the frontend coaches went on holiday; we found 2 extra remote coaches as a backup.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-350563030.json . 
Valid point @F3PiX! For this I would go with better wording and explanations in both the coaches' guide and the place inside the app where they set themselves to "available". I don't see how more app logic could help to prevent this scenario, it's more something to deal with during the summer inside the team itself.

Again for finding a replacement for some weeks, maybe the community page or slack could be helpful.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-350581439.json . 
Sorry for chiming in at this late stage of the discussion.

**Pre-acceptance vs. post-acceptance coaches list**
I have been asked to coach teams a couple of times and it was never about the actual project. As in: I haven't worked with the project the team was applying for before. I did state, however, that I can coach in inline-code and inline-code and I checked that the project the applicants were interested in was actually using that tech stack. If they did, I said: hello yes, I'll gladly be your coach! Is it really happening that students were applying for two projects with drastically differing tech stacks? Say: one would be Node, the other F# ? Sure, that would probably render half of the coaches useless, no matter which of the two projects they are selected for. It seems unlikely, though.

**Listing project-bound coaches**
I think the difficulty with this "free-roaming coaches" is that we conceptually try to bring them onto the teams' rosters as real team members. I don't think that's applicable for them. Maybe "coach" isn't the right term (and it boils down to properly naming things again…) – what about "project helpers",  "free radicals" :upside-down_face: , "project gang" :upside-down_face: :upside-down_face:  or, or … (ok, I'll stop). We / the project maintainer could state that: _hey, should you get accepted for this project, you'll get this list of house elves as part of your support group. FOR FREE! Ain't that swell?!_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-350635056.json . 
Hmm, I have been also thinking about using word 'coaches' for this supporting group as well and I agree with @carpodaster 's point. But I think lot of the time project mentor wants to bring in people who can share the responsibilities. For ex, one of the team I was supervising this year didn't have any coach who can help them with the project they were selected for, so in that case project mentor got 2-3 community people who were discussing the tasks and reviewing the work of participants. So, in that case I think they were doing probably sort of similar work what other teams' coaches were doing. And I don't know if any other word could like better define their work at the moment [based on the roles we have defined in the program at the moment and this will again boil down to defining the roles of these 'free-roaming coaches'] . Well, I sort of like the word free-roaming coaches though :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-351744519.json . 
How about “project coaches” since we often refer to the mentors as “project mentors” (because there's often this confusion between mentors and coaches)? It's kind of an easy way out in a way, I know... but at least we'd have a very straight-forward name :D .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-359356489.json . 
As discussed, I'll be adding a limit for 4 team coaches.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-360430009.json . 
With #913 being solved, shall we close this then? Is having **_project coaches_** still an issue?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\comment-360432435.json . 
@carpodaster Yes, this can be closed now. Thanks. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280008482\issue-280008482.json . 
Often we see that participants end up adding multiple coaches and not all of them are quite involved during the program. So, as discussed in the offsite meeting how about adding a feature in teams app which puts a limitation on adding a number of coaches per team [ideally 4 I assume]?

One of the other thing, which is slightly related to this is we want to allow project maintainers to add coaches this year. So, here is my idea of how things may look like at the end:.

- For the project submission form, add in the description field that project maintainers can list coaches [basically just a better decsription for description field] and once the project is accepted I think coaches/co-maintainers can sign up as coaches.
- Add feature to teams app that doesn't allow more than 4 (?) coaches per team. These 4 coaches can be either from students or from projects. 

... But as we allow 2 project choices from students, it may possible that some project will have coaches from their side and some projects will not. And in that case how does this limitation feature will work? Should we implement this as a per team, per project feature? Any other ideas to implement this in a better way?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109352\comment-349966329.json . 
This is ready for review!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109352\comment-350439303.json . 
Thanks Carsten!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109352\issue-280109352.json . 
Related issue #858 

Added a codeclimate.yml to make codeclimate do the first Rubocop checks on the PR page.
- I added the inline-code that CodeClimate uses by default; these may need fine tuning. 
- I am not 100% sure that this is all we need. 

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->

.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109352\pr-156979262.json . 
Related issue #858 

Added a codeclimate.yml to make codeclimate do the first Rubocop checks on the PR page.
- I added the inline-code that CodeClimate uses by default; these may need fine tuning. 
- I am not 100% sure that this is all we need. 

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->

.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109352\pr-comment-155521456.json . 
Do we need this exclude pattern? Shouldn't it reuse the ones defined by rubocop?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109352\pr-comment-155521634.json . 
This comment is actually not about line 8, but the entire block. Sorry, I misclicked :( .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109352\pr-comment-155523991.json . 
I am not sure. 
The reason I added it is because CodeClimate uses the rubocop.yml only for the rubocop check, obviously, but it is doing other and new checks as well.
And we want to keep those, right? So, with the default settings copied, the behaviour of the Code Quality check as we have it now, should stay the same. 

 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109352\pr-comment-155654071.json . 
As I understand it, we explicitly only enable rubocop. There are more, yes, and we can consider adding them in the future. Looking at the docs you linked, I see that the exclude pattern is already the default one for CC so I would prefer to remove them to be in sync with what CC thinks best. But I don't have hard feelings about this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109352\pr-comment-155657815.json . 
I'll remove them. If we miss them, we'll bring them back. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109598\comment-350087786.json . 
:white_heavy_check_mark:  :balloon:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109598\comment-350109506.json . 
Thanks a lot, Maud!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280109598\issue-280109598.json . 
**Q**: Why not just rename the label?
**A**: It would also change closed issues and it is nice to have an archive of past years' accomplishments

What does it entail?

From the list of **open** issues tagged with rgsoc-2017…
* remove the inline-code label
* add the inline-code one

Yes, that probably is just one GH API call, but looking at the issues count, it might be quicker to do this manually.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280265180\comment-354628851.json . 
This issue has been fixed already, should be closed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280265180\comment-354756712.json . 
@F3PiX can you verify?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280265180\comment-354757164.json . 
@inioluwaa Thanks for reporting! I love problems that solve themselves ;-) 

I am not aware that this is solved, though. 
Can you please explain a bit how you came to the conclusion? For example: did you find the implemented code, or did you try to update your email address on the site, and were not allowed?


.
#rails-girls-summer-of-code/rgsoc-teams\issue-280265180\comment-364826042.json . 
Is this issue solved?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280265180\comment-364859899.json . 
I don't think so, @ArushiSinghal. You are very welcome to dive into this. As a first step, make sure that you can reproduce the problem. 
Then, the solution to work on would be: 


Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280265180\comment-365400590.json . 
@ArushiSinghal are you working on the issue or should I look into this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280265180\comment-365483685.json . 
Hello @bajajerk 
I am working on this, but If I will not end up with the solution, I'll pass this on to you :) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280265180\issue-280265180.json . 
Extracted from #413, originally submitted by @Nattivolk



This is partial feature, partial bug ;-)



.
#rails-girls-summer-of-code/rgsoc-teams\issue-280271251\comment-364825780.json . 
Hello F3PiX
I want to work on this feature. I opened some of the issues already. Please share some ideas about how I can improve the Team's App more.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280271251\comment-364860961.json . 
HI @ArushiSinghal Thanks for working on the Team's App. :party: I see you have two issues to work on. Is it okay for you to work on those first? We can come back to extra issues later. 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-280271251\comment-364862620.json . 
@F3PiX  thanks. 
I will first try to complete those two tasks and then move to this task.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280271251\issue-280271251.json . 
Sequel of RGSoC 2017 Team RailsGyn #462 :heart_with_ribbon: 

Now that we have a Student Dashboard, we want moooooore! 
Step 1: inventarisation of most wanted/needed features
Step 2: make it happen! 

InsidersTip: It is very rewarding to work on a feature that all the participants are using during their Summer of Code.   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280290918\issue-280290918.json . 
As discovered in #879 the inline-code model is not used any more (which is sad, I like form objects) - so let's get rid of it for now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280290918\pr-157110468.json . 
As discovered in #879 the inline-code model is not used any more (which is sad, I like form objects) - so let's get rid of it for now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280431366\comment-350221721.json . 
@F3PiX Interesting. Why is CC already in this PR? :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280431366\comment-350222270.json . 
Oh and also: Bless the Maker for inline-code :heavy_black_heart:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280431366\comment-350232627.json . 
Good call! I just checked and they all seem legit. The magic comment only freezes literal strings – (inline-code, inline-code, inline-code and elements in inline-code but not the array itself). Other datastructures (hashes, array) should still be frozen manually.

block-code.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-280431366\comment-350232778.json . 
About CC: It was in yesterday's PR of mine as well. 
Must be the new release being rolled out. 
Do you mean that you already got the rubocop warnings via CC? 
 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-280431366\comment-350233056.json . 


No, just the fact that it's already checking PRs for this repo (which it didn't before afaik) even though your PR to activate CC is not merged yet.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280431366\comment-350234028.json . 
Yeah, I was surprised as well, it is because of the new release.    .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280431366\issue-280431366.json . 
**What**
- Employs Ruby 2.3+'s inline-code magic comment to, well, freeze all string literals
- Enforces the use of this magic comment with Rubocop

**Why**
- Forward compatibility w/ MRI 3 where Strings are said to become immutable.
- Re-use a couple of string instances. More of a nice side-effect than an immediate concern.
- Good to train one's "muscle memory" / programming habits and word with immutable strings already



.
#rails-girls-summer-of-code/rgsoc-teams\issue-280431366\pr-157201477.json . 
**What**
- Employs Ruby 2.3+'s inline-code magic comment to, well, freeze all string literals
- Enforces the use of this magic comment with Rubocop

**Why**
- Forward compatibility w/ MRI 3 where Strings are said to become immutable.
- Re-use a couple of string instances. More of a nice side-effect than an immediate concern.
- Good to train one's "muscle memory" / programming habits and word with immutable strings already



.
#rails-girls-summer-of-code/rgsoc-teams\issue-28069963\comment-35799926.json . 
Would suggest to put both last year's website (with all the sponsors, info etc.) and the app under 2013.railsgirlssummerofcode.org. The teams app could go to 2013.railsgirlssummerofcode.org/teams/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28069963\comment-35812033.json . 
The campaign and team apps are separate apps (hosted on Heroku), so they need their own domain.

Here's how I would do it:.
- Clone URL to URL and point the domain inline-code to it
- Rename the existing teams app deployments on Heroku inline-code to inline-code and point inline-code  to it. Change inline-code accordingly.
- Setup a new deployment (production/staging) of the teams app on Heroku and point inline-code to it.
- Rename the existing campaign app inline-code on Heroku to inline-code and point inline-code to it.
- Setup a new deployment of the campaign app on Heroku and point inline-code to it.

Gonna assign this to @pxlpnk because he volunteered :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28069963\comment-35814459.json . 
I realized that moving the existing apps to new subdomains requires access to our DNSimple account, so I moved them: URL.

I have also changed all URLs that I could find on the 3 apps and disabled the donation buttons on the old campaign app. I have also deactivated the cron job which polled blog posts on the teams app.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28069963\comment-35814698.json . 
yay! go go go Sven. I love how fast this is starting <3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28069963\comment-35815169.json . 
awesome thanks! I will look into it asap. Did you also create new heroku instances?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28069963\comment-35835464.json . 
@pxlpnk yup, although URL is broken atm. not sure what's wrong there

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28069963\comment-35835737.json . 
Ah, fixed.

So, I guess these are next:.
- unlink the teams app for now
- fix the homepage
- fix/rewrite the campaign page
- fix/rewrite everything under "Students"

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28069963\comment-35837232.json . 
I have opened issues for this on the summer-of-code repo: URL.

Gonna close this one.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28069963\issue-28069963.json . 
-to 2013.teams... maybe

.
#rails-girls-summer-of-code/rgsoc-teams\issue-280705032\issue-280705032.json . 
Related to #871 
Looks like seeds.rb doesn't share in the Bot's syntax methods sugar.
Restoring the inline-code's on create methods.

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->

.
#rails-girls-summer-of-code/rgsoc-teams\issue-280705032\pr-157381278.json . 
Related to #871 
Looks like seeds.rb doesn't share in the Bot's syntax methods sugar.
Restoring the inline-code's on create methods.

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->

.
#rails-girls-summer-of-code/rgsoc-teams\issue-280714110\comment-350498417.json . 
O sorry, I moved the comma back in on purpose, to see if I can tricker CodeClimate running Rubocop. It isn't, currently. 

I'll ping when this is ready for review.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280714110\comment-350558038.json . 
This is ready for review :snowboarder: 
(ping @klappradla )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280714110\issue-280714110.json . 
Related issue: backlog: URL.

After the Grand Conferences Makeover of team RailsGyn and the new workflow for conferences, there are some leftovers that we don't use anymore.

- _Removed_ unused database fields in inline-code table (accomodation, flights, round)
- _Updated_ seeds, factories, conference_params accordingly
- _Removed_ unused method re: conferences
- _Moved_ a single helper method to the existing bunch of helper methods in application_helper.rb
- _Removed_ lib/conf with all the raffle logic

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->

.
#rails-girls-summer-of-code/rgsoc-teams\issue-280714110\pr-157385420.json . 
Related issue: backlog: URL.

After the Grand Conferences Makeover of team RailsGyn and the new workflow for conferences, there are some leftovers that we don't use anymore.

- _Removed_ unused database fields in inline-code table (accomodation, flights, round)
- _Updated_ seeds, factories, conference_params accordingly
- _Removed_ unused method re: conferences
- _Moved_ a single helper method to the existing bunch of helper methods in application_helper.rb
- _Removed_ lib/conf with all the raffle logic

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->

.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\comment-350498319.json . 
Would it make sense to use the auto-creating of Season in the Fabricator?
Edit: O wait, that is exactly what you are doing. :party_popper: 
Still valid, re: validations:  
I am afraid I can't explain it very well, but generally I hesitate to add logic to the model that is there only for the tests' sake. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\comment-350536367.json . 
I guess I mean: wouldn't it make sense to validate if the year is an actual and meaningful year.
 
With a custom validator that validates something like:.
inline-code
inline-code
Validation will fail for the cases in your examples. And furthermore for cases like "0017", "1700" and "1718".  

WDYT?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\comment-350562529.json . 
Nifty idea using the range @F3PiX :thumbs_up_sign: 
I can update it to work with that or leave the format validation all together, no strong feelings there. My point was just to have the factory build real-world data and remove unnecessary stuff from there.

For the validation: it's not just related to tests. What if I would go and break the code that is building the name from an actual date? E.g. use the minutes instead of the year? Doing this I could still end up with an invalid object.

Anyways, no strong feelings about the type of validation. I find both more or less equal, could update to the range approach if you think it's better readable then a regex.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\comment-350569284.json . 
In that case, I would appreciate the range validation! :person_with_folded_hands: 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\comment-350581531.json . 
Oh, and PS: excellent idea to give a Range, Maud! :hundred_points_symbol: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\issue-280737190.json . 
Quick follow up to @carpodaster's comment on #881: removing some unnecessary stuff from the inline-code factory, use a more reasonable inline-code there (actual year-strings) and add a validation for the format.

See this example for how the regex works :nerd_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\pr-157395868.json . 
Quick follow up to @carpodaster's comment on #881: removing some unnecessary stuff from the inline-code factory, use a more reasonable inline-code there (actual year-strings) and add a validation for the format.

See this example for how the regex works :nerd_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\pr-comment-155957302.json . 
Ist that a sequence? There‘s no iterator var being evaluated.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\pr-comment-155957428.json . 
That's because it's an even simpler sequence, it does not even need interpolation :winking_face: : it starts at inline-code and just increments by inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\pr-comment-155960156.json . 
Interesting, So it inline-codes it under the hood? Neat.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\pr-comment-155960603.json . 
Way simpler. It just calls inline-code :victory_hand:️ 
Try it yourself:.
block-code.
:cat_face_with_tears_of_joy:  Ruby I guess :cat_face_with_tears_of_joy: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\pr-comment-155960749.json . 
Whoa! TIL about inline-code
!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280737190\pr-comment-155960826.json . 
(on 2nd thought, this is ofc how inline-code works in the first place. D'oh.)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280746484\comment-353546048.json . 
I'd like to pair !
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280746484\comment-353546867.json . 
Hi @aSquare14 Welcome here! That is great to hear!
However, in this case the call for a pair is for someone who has access to the production database :-) 
You are very welcome to take another issue!! Ping me if you have questions,  or need help finding an issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280746484\issue-280746484.json . 
Related to #816 Add team to projects page

#816 restored the association between team and the project they are working on.
There is one task left: running the rake task to migrate  the old inline-code to the new inline-code.

I am having cold feet for my first encounter with the production database. Who wants to pair with me?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\comment-350587694.json . 
Wow!! 🥇 
This _must_ have been hard, because the result looks deceptively simple. :code_perfume:.
I love the new controller namespaces, also the inline-code module.

The only two _names_ I am not so sure about: inline-code and inline-code. After reading your explanation, I see why you use the name inline-code, so if you don't have reservations on this one, I am fine. (Does the 'classic' service object have a controller, though?).
About inline-code: we have two types of selection: the projects and the teams. The formerly-known-as-ratings were only about the team selection process, right? How about naming it inline-code?

And the new routing file :smiling_face_with_heart-shaped_eyes:   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\comment-350716001.json . 
Valid point about inline-code @F3PiX - thought about this as well... renaming to inline-code could be an option :thumbs_up_sign: 

For inline-code: that's not a module :winking_face: 
It's simply a new directory under inline-code that hold callable objects that encapsulate certain business logic - some people also call them *"service objects".

Services aren't *models*  or *resources* in general and also don't have a corresponding controller. They just contain a piece of business logic to make these bits of code easier to test, share etc. and better describe the domain.
Being callable objects, you'd instantiate them with all the basic information they need to do their operation and then just "call" them via their only public method: inline-code :victory_hand:️ 

I usually implement them like this:.
block-code.

And then e.g. cal them like this:.
block-code.

The conference importer that I moved over is implemented *slightly* different but still looks and behaves very much like a service to me - that's why I went that way.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\comment-350716581.json . 
Just wondering :thinking_face: 
Should I fix the issues code climate raised in this PR or in a follow up? Technically speaking they don't originate from this PR since I just renamed files and paths :winking_face: 

But I probably should not merge with code climate being :large_red_circle: ...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\comment-350722479.json . 
I wouldn't fix them, we did not even decide if we keep the maintainability checks. That is something CC decided to offer us ;-)
Normally, there would be a dropdown if you follow the inline-code link, and hover over the inline-code tag.
(See gif at the top of this page)
I don't see that myself, though, in this repo. Maybe because of the rights I have?
Can you access the dropdown menu? 
If so, just set the issue status to 'won't fix'. It means: it's a legit issue, but not fixing it right now. 

Either way. I'd like to cleanup the duplication in the season switch anyway. Could you leave them to me :-) ?  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\comment-351844632.json . 
Ok, so inline-code means we'll find it again afterwards? Because I agree with what the tools says and would for sure fix it - but it would make this PR even huger. I'd like to stay with just renaming files in this PR for now :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\comment-351846433.json . 
Well, you can find them in the 'issues' tab on CodeClimate. It won't bark if you are not going to look for them. (Unless you touch the same file again.) Or create an issue on GH. 
"won't fix" is exactly meant for what you want: Yes it needs fixing, just not in this PR.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\comment-352178727.json . 
Hey @klappradla. Before I get to a "real" review: did you use inline-code? The diff looks like Git didn't recognise the move which makes the changeset very hard to read and will also lose our git history.

Also, I approved the CC complaints since we're just moving files here and not adding anything new.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\comment-352196231.json . 
Oh, good point @carpodaster! I tbh didn't even know about inline-code :see-no-evil_monkey: and also did not look into the details of the changeset...
However, the way I understand it, inline-code is only a shortcut for moving a file and then inline-code the changes in one command. So I think the history of files should still be fine - it's just that Github cannot display the changes in another way apparently...

If you for instance look at an apparently new file, you'll still see the history - see this for example.

Do you know of anything I could do to make the changeset easier to read or pick up the changes in a different way? Would inline-code do this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\comment-354140789.json . 
I'll merge this for now @carpodaster to not get into troubles with other PRs touching multiple files, such as the approaching one for translating error messages :see-no-evil_monkey: 

If you find the time to look into the details of this PR around renaming namespaces and routes, you can still comment here and I'll address everything in follow up PRs to have this :mount_fuji: out the way :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\comment-354141548.json . 
Yay!!!! :sports_medal: :firework_sparkler:  Fireworks are early this year!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\comment-354591659.json . 
@klappradla sorry I did not come back to this PR, I'm a bit slow … again :disappointed_face:  Good that you moved ahead – and indeed: early fireworks :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\issue-280847949.json . 
Warning upfront: this touches a lot of files :warning_sign:️ 

I made this as a *small*  Sunday project to prepare for updating the layout for orga-users. Turned out it was way harder then expected, since it involved one of the hardest things in CS: **naming things** :see-no-evil_monkey: 

**The motivation / idea**
Get rid of the "shorthand" syntax for modules in preference of real, actual modules:.
block-code.

This also means: it is barely possible (or at least super dangerous) to have a class with the same name as a module on the same "level". So having a model inline-code and define a inline-code is no longer possible. Therefore I had to rename some things.

**The solution:trade_mark_sign:️**
I could not - and also did not really want to - use the same module for both, nesting models and namespacing controllers, because in my opinion and especially in the Teams App this stands for 2 different things:.
1. nesting models: grouping things by domain
1. namespacing controllers: grouping things by user-role / access-level

Therefore I went with domain-fitting (happy on suggestions there still...) names for model namespaces and used the plural role for controller namespaces since this also matches the general naming of routes and controllers and won't collide with our model modules _(we're not going to use plural names for model modules if they aren't encapsulating collections)_

Once I did :white_up_pointing_index:️ for one role I though it looks weird if I would not align all the roles :see-no-evil_monkey: . I first thought about keeping "orga" as "orga". Then I tried to add the "orga" role to my user with inline-code and realized it would probably be better to also align this :cat_face_with_tears_of_joy: 

**TL;DR**
Grouping some models by domain and namespacing respective controllers with the plural name of the role which is allowed in.
I know these are a lot of in theory unnecessary changes, but I think it makes the controller schema quickly to understand when e.g. starting from the routes and gives us sort of "futureproof" foundation for now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\pr-157451488.json . 
Warning upfront: this touches a lot of files :warning_sign:️ 

I made this as a *small*  Sunday project to prepare for updating the layout for orga-users. Turned out it was way harder then expected, since it involved one of the hardest things in CS: **naming things** :see-no-evil_monkey: 

**The motivation / idea**
Get rid of the "shorthand" syntax for modules in preference of real, actual modules:.
block-code.

This also means: it is barely possible (or at least super dangerous) to have a class with the same name as a module on the same "level". So having a model inline-code and define a inline-code is no longer possible. Therefore I had to rename some things.

**The solution:trade_mark_sign:️**
I could not - and also did not really want to - use the same module for both, nesting models and namespacing controllers, because in my opinion and especially in the Teams App this stands for 2 different things:.
1. nesting models: grouping things by domain
1. namespacing controllers: grouping things by user-role / access-level

Therefore I went with domain-fitting (happy on suggestions there still...) names for model namespaces and used the plural role for controller namespaces since this also matches the general naming of routes and controllers and won't collide with our model modules _(we're not going to use plural names for model modules if they aren't encapsulating collections)_

Once I did :white_up_pointing_index:️ for one role I though it looks weird if I would not align all the roles :see-no-evil_monkey: . I first thought about keeping "orga" as "orga". Then I tried to add the "orga" role to my user with inline-code and realized it would probably be better to also align this :cat_face_with_tears_of_joy: 

**TL;DR**
Grouping some models by domain and namespacing respective controllers with the plural name of the role which is allowed in.
I know these are a lot of in theory unnecessary changes, but I think it makes the controller schema quickly to understand when e.g. starting from the routes and gives us sort of "futureproof" foundation for now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-280847949\pr-comment-155961676.json . 
:smiling_face_with_heart-shaped_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-28094245\comment-231522875.json . 
Continued in #462 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28094245\comment-35801018.json . 
I like this idea!
On Feb 22, 2014 12:31 PM, "katrin-k" notifications@github.com wrote:.













.
#rails-girls-summer-of-code/rgsoc-teams\issue-28094245\comment-36056806.json . 
@katrin-k are you working on this already? let me know if you need something

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28094245\comment-36057405.json . 
@pxlpnk naa, am focusing on application stuff and website so far. how about a sit-in next week? will you be at the office sometime?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28094245\comment-75812746.json . 
Possible duplicate of #109 ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28094245\issue-28094245.json . 
Arne came up with the idea to have a dashboard providing a fast look at the latest acitvities in all coached/mentored/supervised teams to help realise when a team gets stuck. 

Below's a first sketch on how a dashboard could look like:.

!draft rgsoc teams app dashboard

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-35840038.json . 
I am building an application form, anyone feel free to style this then! (:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-35840638.json . 
are we making any big changes on the form?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-35848739.json . 
@pxlpnk not sure, yet. 

The text at the top should definitely be replaced by @sareg0's work on the application form.

One problem there is with the form is that it always goes "you" and "your pair". This was to allow people to apply with the same form even if they don't have a pair, yet. We want to allow applications without a pair, but maybe it would be more clear to have separate forms (or versions of the form) for that?

Like a radio button (o) apply with pair (_) apply on your own, and then change the form accordingly?

Then we could have one section per student each asking for their experience, learning efforts etc.

Does that make sense?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-35848756.json . 
I think overall the questions still make sense, but we should improve the grouping/labeling/layout.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-35906465.json . 
Happy to style, and add content if that would be useful :) Just point me to where it is @pxlpnk and I can work on it too!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-35983556.json . 
hey @sareg0 cool, I started on this branch here URL.

in inline-code is the form, 
if you need to add a field you have to add it there and to inline-code where you also specify the validations on a field.

just ping me if you have questions (:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-36001075.json . 
Hey all,
Is this the right place for me to make a few suggestions about what was confusing about the application form last year/potential changes?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-36026769.json . 
@berlintam yep, this is a great place for that :)

Also, @sareg0 has started writing up a student application guide here: URL.

Thanks for your input!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-36056263.json . 
you can see the current state of the Application form on Heroku.

I moved the basic questions from the last years application form over. Someone might slap some css styling on it. (;
Also we should finalize what should be on the application form and how we want to present it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-36064277.json . 
Yeah @berlintam happy to have it input on the application. We will publish what we have by tomorrow, but it will be constantly updated during the lead up too.

And I was just gonna do some styling with the form cause I like to do it and like the practice, but happy to have input on that too

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-36105051.json . 
Ok, a few things (and I apologize if they are covered elsewhere): coding level I think should be either taken out or clarified. What is a 10? Is a 10 Aaron Patterson or a Junior Developer? This was perhaps the HARDEST part of last year's application for me and it probably holds a lot of weight in the application process. Is this also only in regards to Ruby on Rails? Or does it include other programming languages? (ie: someone with an 8 in python might have a 0 in ruby, and we need a way to account for that).

Perhaps also a section where it asks how long you've known your pair for and how you work together/if you've worked together. A happy pair makes all the difference. 

Code samples: does one just include a link for this? (needs clarifying)
Projects: is this the section for proposed projects? Or past projects (needs clarifying)

Maybe also ask if they can really commit full time for three months, meaning, do they have a holiday planned? (it is the summer after all).

I realize these may just be small things, but for applicants who really really really want to be let into the program these are the small little points of confusion that can have someone laying awake for hours panicking that they applied wrong. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-36136205.json . 
We definitely need to add the explanations/hints from the old form.

@berlintam we've said "junior developer" on the previous form:.

!image

I guess that still leaves a couple questions, right. This is obviously very hard to measure, but on the other hand it's an important indication. The committee actually might adjust the estimation given here based on the description people also give about their experience (IIRC we've had one case of a CS student who also had done work on an OSS project, but estimated themselves with 2, and we've corrected that to a higher value).

We might want to change "Ruby/Rails" there to something else because we also allow projects that aren't written in Ruby. Any suggestions?

I like the idea to add a text box and ask about the relationship with their pairs. Asking for a numeric value might be even harder than the programming experience one :) What would be a good question to ask here?

Code samples: whatever gives us a good idea what they've been working on. Links to source code and websites are a good idea.

Projects: ... I think that part of the new application form is just not finished, yet. Here's the old one: URL.

If they're going to take a break then they should note so in their project plan. The normal default case should be working for 3 months in a row.

Again, great feedback, @berlintam :heart:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-36137500.json . 
Ah sorry, didn't see the new coding level scale. I was working off the Heroku application form.

Perhaps there can be a second scale for coding level in other languages which will give the selection committee a better idea about their overall coding skill.

Hmmmm... relationship to pair, I suppose that is very hard to judge and most people will probably say they get along amazingly anyway. Perhaps just how long they've known each other for and say why they think they'll work well together. After all, the coaches are asked to state why they think the team will be successful, the team should probably have to think about it a bit too.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\comment-38716278.json . 
deployed!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28122168\issue-28122168.json . 
We've managed our applications (data imported from Google forms) in our campaign app last year. We should move this to the teams app and collect applications right there.

Basically just a form where students can submit their application, and get an email confirmation.

Here's last year's application form: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-281550914\comment-351354733.json . 
Hi @katiekeel Thank you so much for your contribution! 
Just a quick note to let you know that I am currently looking for someone who can review your PR. I'll keep you posted!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-281550914\comment-356080381.json . 
Hey @katiekeel :waving_hand_sign: 

Any news on this PR? Do you plan to update it? Are you stuck and need help? If so, feel free to always ping me here :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-281550914\issue-281550914.json . 
Fixes bug in issue #659 where the fork me badge overlaps with the sign in button on some screens.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-281550914\pr-157949403.json . 
Fixes bug in issue #659 where the fork me badge overlaps with the sign in button on some screens.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-282104579\comment-351714901.json . 
Can I have a go this week? :raised_hand:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-282104579\comment-351715324.json . 
It's yours! We'll add you to the contributors, so we can assign the issue to you in the GH list.)
Thanks :-)))

.
#rails-girls-summer-of-code/rgsoc-teams\issue-282104579\comment-351904966.json . 
Will take a look over the weekend :thumbs_up_sign:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-282104579\comment-352814403.json . 
Apologies haven't had time to look at this yet and now travelling over the Christmas break. Am back 10th of Jan so feel free to assign to somebody else over that time, otherwise can look at when I get back in the new year.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-282104579\comment-352844156.json . 
Thanks for the heads up and have a nice trip! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-282104579\issue-282104579.json . 
Thanks to @mbrien12, we do have a nicely formatted dropdown selector #877 :party_popper: 

Follow up: 
- display the years in order; 
- do not display the inline-code year in the dropdown list, unless the succeeding year is the current year (see convo here);
- Change the text on the button to 'Select by year' 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-282105186\comment-351714624.json . 
Closing because duplicate of #895 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-282105186\issue-282105186.json . 
## Issue

Currently the years in the Teams dropdown are not in date order...
!screen shot 2017-12-14 at 10 41 34

## Solution

1. Re-phrase label to 'By Year' or 'Teams by year' instead of 'Past Teams'
2. Display the years in date order

Linked to #877 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-36137005.json . 
@pxlpnk awesome work!

I think we definitely should copy the way the old form used radio buttons for scales, and the labels and descriptions/hints used. A good amount of discussion and thought went into those. (I guess that's what you mean by "infos" in the checklist?)

Also, you've copied the text at the top? Ideally I'd like to get rid of the duplication with the new application guide that @sareg0 is working on, and just have a short paragraph at the top. 

@sareg0, could you take care of taking the text off this form, making sure everything's covered elsewhere and defining what should go to the top of the form?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-36137309.json . 
@pxlpnk about the implementation ... is there a reason to not just call the table inline-code and the model inline-code? IIRC that should be possible, and I'm wondering why we wouldn't stick to a default resource naming here. (Same question about the inline-code prefix.)

So, you'd have an inline-code, a base url inline-code and a model inline-code.

:)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-36341705.json . 
I tried to not use ApplicationsController because it might get too confusing with the Application Controller.

I don't really mind how we call it tbh (:.

I'll rework it a bit after the weekend and add the hints and lists. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-36345709.json . 
Cool :heart:.

I understand that :)

I still think we should stick to the Rails conventions here, even though the name might be slightly confusing at first. People will be able to pick that up quickly.

Lemme know if I can help with anything!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37136911.json . 
I updated it and cleaned it up: 
URL.

some CSS love and we could push it in my opinion.

I am thinking about adding something like active admin.

how are we going to do the evaluation?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37136992.json . 
maybe @lislis can work on the css a bit tomorrow?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37137211.json . 
styling would be appreciated.

also can someone railsgirls-ify this text? 
URL.

In general a deeper look at the wording and questions in the form would be great.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37137243.json . 
@pxlpnk i'll rework the text! eh...railsgirlsify :D 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37137821.json . 
yeah also what should be the target mail address be? do we have special mailing list for this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37140079.json . 
How about this:.

Wow, xy
 you made it. You took the first step towards an amazing summer: Yay!

Thank you so much for your application. We are looking forward to reading it and will send out the acceptance letters latest at #notificaton_of_participants. If we have questions or something is unclear to us we will email you.
Don't hesitate to contact us though if you have any questions:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37140119.json . 
concerning the mailing list: i think we should. like rgsoc-students@ bla ? i could set it up

evaluation: we still have the rating system that @svenfuchs build, right? as far as i remember, didn't we want to implement in the app as well?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37140783.json . 
@pxlpnk great work! Do you plan to add the labels from the original form to the radiobutton lists? That'd be very helpful

@pxlpnk @anikalindtner as i said before: **please** let's not make the same mistake as last year again and un-dry all of the texts. the form should **not** have it's own fullblown text but just say "Hi please apply ... here are some links to relevant texts: a, b, c"

This was a huge pita last year and contributed to much of the confusion. Let's have a single canonical source for each piece of information and then only link to there.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37160869.json . 
@svenfuchs i don't see how this text is confusing. i agree with not making fuss about every word and keeping it simple (because people just don't READ stuff...), but the confirmation can be nice, no?

what was a pita last year? i wasn't around yet when you had these issues... can you give an example so that i know what we are talking about and want to avoid this year?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37180138.json . 
can only one person at a time work in the text please?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37180206.json . 
sara and i were working on it the same time. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37181429.json . 
Sorry, I'll stay away from it for now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37181505.json . 
@sareg0 don't worry. of course we can work on it together! :) better two than nobody

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37188587.json . 
@anikalindtner the pita came from the fact that "into" style texts and infos were cluttered across various places: the site, the faq, the application form, the wiki ... It's close to impossible to keep things in sync. It also makes little sense to put much work into rewriting what's been written up elsewhere.

There should be one canonical resource for every piece of information. The application guide should define what's needed for an application and the application form should only link to it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37192000.json . 
@svenfuchs yes, that's what we acutally discussed over lunch. just linking to the application guide and get rid of the text above the form. i only edited the confirmation message.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37192606.json . 
Great :+1:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37193465.json . 
could you @anikalindtner or @sareg0 take care of the text above the form and link to the relevant pages? Should be a piece of :cake:  for you! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37198996.json . 
@sareg0 do you want to take care of that?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37290425.json . 
sorry about this. It got lost in the inbox, has this already been done @anikalindtner. I see ur commit above. I will take a look anyway just to make sure.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37348818.json . 
can the form be considered done? otherwise I would squash the PR one more time and merge it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\comment-37356826.json . 
@pxlpnk no need to squash it, just go ahead and merge :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\issue-28287874.json . 
this is a first proposal of an application form and a base for discussion on #61 

missing:.
- [x] add links to resources and information
- [ ] styling
- [x] better and clearer wording 
- [x] are those the fields we need?
- [x] infos

anything else missing?

the current state can be seen on: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-28287874\pr-12925864.json . 
this is a first proposal of an application form and a base for discussion on #61 

missing:.
- [x] add links to resources and information
- [ ] styling
- [x] better and clearer wording 
- [x] are those the fields we need?
- [x] infos

anything else missing?

the current state can be seen on: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-284676921\issue-284676921.json . 
Update the description field to add the information regarding project coaches.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-284676921\pr-160213957.json . 
Update the description field to add the information regarding project coaches.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-284910668\comment-354439834.json . 
:party_popper:  (LOL that I missed the wip tag )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-284910668\issue-284910668.json . 
This fixes the problem of a) having the same items multiple times in the dropdown navigation when being between seasons and b) having multiple items marked as inline-code in the dropdown.

**Before**
<img width="1792" alt="screen shot 2017-12-27 at 19 29 07" src="URL.

**After**
<img width="1792" alt="screen shot 2017-12-28 at 14 02 18" src="URL.

This is specifically about hiding the inline-code and inline-code item again after the season has ended and we're transitioning to the next season.

I will add a follow-up PR with better feature-testing the navigation.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-284910668\pr-160385279.json . 
This fixes the problem of a) having the same items multiple times in the dropdown navigation when being between seasons and b) having multiple items marked as inline-code in the dropdown.

**Before**
<img width="1792" alt="screen shot 2017-12-27 at 19 29 07" src="URL.

**After**
<img width="1792" alt="screen shot 2017-12-28 at 14 02 18" src="URL.

This is specifically about hiding the inline-code and inline-code item again after the season has ended and we're transitioning to the next season.

I will add a follow-up PR with better feature-testing the navigation.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-284910668\pr-comment-158998288.json . 
Maybe make the constant plural?  :automobile: 
And I try to find an alternative for the SOC prefix. Which is getting less meaningful, first with the teams, and now with the community added too.
Can we do without the SOC_ part? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-284910668\pr-comment-158999203.json . 
Is there a reason why you can't use the application_drafts_path here?
Because this one seems to be the only one that uses the inline-code helper.  Maybe we can do without that, or...?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-284910668\pr-comment-159053855.json . 
The reason why I used this prefix: the menu / nav item this is about has the name inline-code, plus it's basically a global constant :winking_face: 

So I would go for the plural version, yes, but I would keep some prefix to have it still closely tied to the menu item.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-284910668\pr-comment-159054114.json . 
The inline-code helper can return two different paths, depending on whether the user already has an inline-code or not. That's why a matching on the exact path is not possible :disappointed_face: 
Both paths originate from the same controller though, that's why the controller approach still works here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-284910668\pr-comment-159055832.json . 
Brilliant.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\comment-354546577.json . 
@F3PiX  thanks for the help so far,I will close the PR for now and will submit a clean PR soon :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\issue-285139660.json . 
Related issue #878 

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->
Error messages are moved to en.yml file.Tests are also passing.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-160549834.json . 
Related issue #878 

<!----Describe what this PR is about:.
 - What feature does it add, which bug does it fix? 
 - Tests are much appreciated. 
 - Add screenshots if your PR includes visual/UI changes
---->
Error messages are moved to en.yml file.Tests are also passing.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159095001.json . 
Can we make this: 'too_many_selected' ? For better readability :-) and dev happiness :gift:.
Sorry, I know I said to use 'error' in the key before. But now that I see them all together, it doesn't looks so nice. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159095057.json . 
Can we make this: inline-code ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159095188.json . 
Can we make this inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159095819.json . 
How about: inline-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159095920.json . 
Can we make this more expressive, maybe reference the method name : 'chronology_violation'
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159095970.json . 
inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159096047.json . 
'immutabilty_violation'
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159098287.json . 
As this is a yml file, you can collect similar values under the same key. So, you can reuse the keys:.
block-code. 
from line 86 and 87. 
(See for an example how all the time formats are collected in line 6 and after. )
 
In the same way, you can put the message in line 105 right after the message in current line 99. 
That goes for the rest of the file as well. I'll leave that for you to try. So I won't point out all the changes. 
Let me know if something is unclear! 
  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159099172.json . 
We don't want to remove this file from the repo. (I don't think you need to remove it locally, either :thinking_face: ).
Anyway, removing it should not be part of this PR. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159099364.json . 
Also, can you follow the same indentation as the rest of the file? It seems not to be super consistent, with sometimes 4 and sometimes 2 spaces. At first sight, it looks like it is easy to copy the same indentations. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159099440.json . 
Same as for the other removed file: we don't want this file removed. Can you leave the removal out of this PR please?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159099592.json . 
Remove this whiteline please.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159099660.json . 
And remove the redundant whitelines please.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159117665.json . 
yes,sorry for that,the file got accidentally removed ,will add it back now :) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159117705.json . 
yeah,sure :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159117781.json . 
yeah,sure :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159118441.json . 
Thanks for being patient.I need another help :)
block-code.

 What's wrong with this code, my local tests are failing?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159120905.json . 
No worries :-) We've all been there! I really appreciate your effort. 

Take a look at this: URL 
You should collect the attributes for each key. 
Like this:.
block-code.
Does that make sense?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159122010.json . 
Yes,exactly I have already written the above code you mentioned earlier, but this is not showing in the changes .please check my latest commit 9dba120.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159122180.json . 
For the team, two base errors are missing here. (line 175 and 183)
URL.

It is a bit more challenging than the other errors. Are you up to that?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-285139660\pr-comment-159122202.json . 
Ohh,I guess I had missed it, I will have a look at it :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285171703\comment-354615959.json . 
I totally agree with all your conclusions, thanks for the explanations. 
:fireworks: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-285171703\issue-285171703.json . 
This fixes a bug on the team index page (likely only visible in production): both guest users and users who aren't students or part of a team see a inline-code button which will bring them to the show view for some random team where at least one student deleted their account **(we should try to avoid getting these invalid team records in the first place...)**

Looked like this _(see I'm not signed in)_:.
<img width="1792" alt="screen shot 2017-12-28 at 12 22 03" src="URL.

Tiny bit of background: the inline-code helper defined in the inline-code would always return a inline-code, even if there's no inline-code (the student would then be called inline-code) and would therefore always find a inline-code - one with a inline-code being nil.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285171703\pr-160571829.json . 
This fixes a bug on the team index page (likely only visible in production): both guest users and users who aren't students or part of a team see a inline-code button which will bring them to the show view for some random team where at least one student deleted their account **(we should try to avoid getting these invalid team records in the first place...)**

Looked like this _(see I'm not signed in)_:.
<img width="1792" alt="screen shot 2017-12-28 at 12 22 03" src="URL.

Tiny bit of background: the inline-code helper defined in the inline-code would always return a inline-code, even if there's no inline-code (the student would then be called inline-code) and would therefore always find a inline-code - one with a inline-code being nil.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285171703\pr-comment-159122510.json . 
We have a inline-code in User.rb. I'd think you can use that instead?
Also, you could use the inline-code helper. 
OTOH.... shouldn't coaches and supervisors have access to the button as well? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-285171703\pr-comment-159143416.json . 
Good idea! I'll switch to inline-code - and can probably fully get rid of the method in inline-code...

For inline-code: I personally don't find it fitting the use case here. The helper **always** returns something (e.g. a string) and I explicitly don't want to display anything if the condition is false.... I could accomplish this with this helper as well of course (passing an empty block) but it's not really what it is intended for :winking_face: 

For whether coaches and supervisors should see the button too: I don't think so.
I don't remember why the button was added, but it looks like a "shortcut" for students to find their team. Coaches and Supervisors are likely to be in multiple teams in the same season, so the button does not make too much sense for them I'd say.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285171703\pr-comment-159143516.json . 
Oh, on the other hand: inline-code is not used anywhere. I could also just get rid of it and stick with inline-code... :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285171703\pr-comment-159143957.json . 
Ok, went with what I said above @F3PiX :white_up_pointing_index:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285429960\comment-354767476.json . 
Hi! Thanks for reporting! That is not how it should be.... 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-285429960\comment-354768094.json . 
I think this was reported in teams app. There was an issue with one team id where instead of team's daily logs, blog posts were appeared. I remember abourt some discussion, but I don't remember if it was solved or not.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285429960\comment-354769661.json . 
@nerdyvaishali There was another issue with the blog posts, but that was a bit different. 

I'll follow up later with a description of the problem.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285429960\comment-354818305.json . 
It's 403s for all the images. I remember we had something similar when we tried to switch to the new AWS gem...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285429960\comment-354977203.json . 
The root problem seems to be that a team has updated the list of web resources in their profile with a direct link to their blog post on rgsoc.org. Our feed url detection does the rest:.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285429960\comment-354979725.json . 
@F3PiX I found it I guess. It is issue 853: URL 

The problem seems to be with the same team's team id.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285429960\comment-354980788.json . 
@carpodaster @nerdyvaishali 

I am not sure that is the problem here. These blogposts are by the orga's. 
  
!schermafbeelding 2018-01-03 om 11 29 08

I was thinking to look into two things:.
1) the :display team name method, when there is not a team 
2) the way we pull in blogposts from the orga website.  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285429960\comment-354983215.json . 
@F3PiX the blog posts are posted by Team prodyoGEEKY and as you can see on thir profile page, they are the ones referencing a railsgirlssummerofcode.org blog post. It was not added to the Teams App by the orga team.



Yes, that's the reason. See URL above: the Atom/RSS URL is automatically extracted in inline-code. I'm currently adding a quick fix to allow a single web page as a inline-code that won't be interpreted as a feed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285429960\comment-355554819.json . 
I updated the offending source and removed the unwanted blog posts from our activity listing. Thanks again, @teambundledore, for reporting this! :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285429960\comment-359810478.json . 
Happy to help ! @carpodaster .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285429960\issue-285429960.json . 
In the blog post feed, under the title of the article, the correct name is not displayed. I am sorry if this has already been reported, please close the issue if you feel it has already been reported. Attaching a screenshot. 
!screenshot from 2018-01-02 18-51-54


.
#rails-girls-summer-of-code/rgsoc-teams\issue-285643244\comment-355062180.json . 
:party_popper:  :fireworks:  :bottle_with_popping_cork:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285643244\issue-285643244.json . 
Upgrades the Ruby VM to the latest version.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285643244\pr-160879122.json . 
Upgrades the Ruby VM to the latest version.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285653094\issue-285653094.json . 
Follow-up to #853 where @klappradla pointed out that the 403s on S3 feed images might be related to the updated AWS gem.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\comment-355096222.json . 
Just checking:  this doesn't need the actual inline-code on the team model ? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\comment-355227058.json . 

 
@F3PiX yes it does. It's included here: URL.

And here: URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\comment-355230748.json . 
Sorry!  :see-no-evil_monkey:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\comment-355277070.json . 
Thanks for the suggestions, @klappradla. I moved to data-behaviour attributes. Better now? As for the four spaces: I was told this is how it's done in the JS world. Is that not the case?

It will not immediately fix the problem, but we can edit the "offending" blog source to be a inline-code instead. After that we'd have to remove all the feed entries for that blog on the prod console but after that, we'd have our normal activity feed back.

But as mentioned in the PR description: if anyone adds a URL with kind inline-code were not every article belongs to them, it will start all over. Not sure if we can fix that without disabling the RSS/Atom feed auto-detection in inline-code .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\comment-355339889.json . 
Well "better" is kinda relative there, since this mostly comes down to personal preference - I think data-attributes are a better fit for these things however. This leaves IDs for styling and QA :victory_hand:️ 

About :alien_monster: : I'm probably following the AirBnB style-guide _(here the section on whitespace)_ which does not do the 4 space thing. But as always with Javascript, there are millions of opinions out there :cat_face_with_tears_of_joy:  So no worries.

Are you also taking care of the follow-up hotfixes on production?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\comment-355365454.json . 
Offtopic for the PR, but do we want to enforce a whitespace style?

And yes, I will do the prod console dance tomorrow.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\comment-355396530.json . 
For now not.

I hope to find time for the Webpacker and ES6 topic in the next months. If we have this setup in place, we can utilize prettier to do all this automatically in a pre-commit hook :smiling_face_with_sunglasses: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\issue-285694777.json . 
Related issue #901 

While this won't block the error outlined in the referenced issue, it does offer a chance to add a URL to a team's blog that doesn't trigger a synchronisation of all available articles available on that blog site.

It removes the inline-code to remove some duplication. Only the CUD actions where used but their functionality is covered by the inline-code model's inline-code.

It displays a conditional help block when the "blog" source type is selected. It is only displayed when the radio button is _changed to that value_. The JS I wrote for this is probably very, very naive and I'm looking forward to your suggestions to make it better :smile: 

!screenshot-2018-1-3 rgsoc - teams app

.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\pr-160916447.json . 
Related issue #901 

While this won't block the error outlined in the referenced issue, it does offer a chance to add a URL to a team's blog that doesn't trigger a synchronisation of all available articles available on that blog site.

It removes the inline-code to remove some duplication. Only the CUD actions where used but their functionality is covered by the inline-code model's inline-code.

It displays a conditional help block when the "blog" source type is selected. It is only displayed when the radio button is _changed to that value_. The JS I wrote for this is probably very, very naive and I'm looking forward to your suggestions to make it better :smile: 

!screenshot-2018-1-3 rgsoc - teams app

.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\pr-comment-159486652.json . 
You could use a data-attribute instead of the ID. From my experience, this usually makes the intention clearer (especially given the fact that we don't test JS code :see-no-evil_monkey: ). So maybe: inline-code or something like this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\pr-comment-159487049.json . 
Same here, I'd suggest to use a data attribute as well - makes selection easier.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-285694777\pr-comment-159487378.json . 
As said before, I'd suggest to switch to data attributes and put it directly on the radio button rather than this high up in the DOM.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286409953\comment-355825343.json . 
@F3PiX I have no hard feelings for or against moving the config calls in inline-code. I wouldn't do this in this PR, though. D'accord?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286409953\issue-286409953.json . 
This PR moves the Rails specific config to inline-code. It's the default for the rspec-rails gem for quite a while now and also enables unit-testing without loading the Rails environment (= takes looong) by just requiring inline-code (which is indeed required automatically by inline-code now).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286409953\pr-161431086.json . 
This PR moves the Rails specific config to inline-code. It's the default for the rspec-rails gem for quite a while now and also enables unit-testing without loading the Rails environment (= takes looong) by just requiring inline-code (which is indeed required automatically by inline-code now).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286409953\pr-comment-159986241.json . 
I've created a follow up issue: #906.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286409953\pr-comment-160026827.json . 
Would you mind to add a comment that the Coverage things need to be at the top of the file? 
I had to look that up, because it looks contrary to line 26 "Add additional requires below this line".
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286409953\pr-comment-160034091.json . 
:person_bowing_deeply:  thanks :-)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286412336\comment-356047016.json . 
Hi there! I’m a first-time contributor and was hoping to help out with this issue.@dphilla  & I noticed nobody was assigned to it, but if there’s already a solution in progress we're happy to try helping out elsewhere. Thanks!
  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286412336\comment-356060553.json . 
Hi @swdonovan and @dphilla ! Welcome! Great that you want to contribute. 
This issue is available, so, sure, give it a go!

Let us know if you get stuck. We are here to help!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286412336\comment-359270169.json . 
Hey @swdonovan and @dphilla. How is this PR going? Are you working on it? Can we help? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286412336\comment-364825965.json . 
Hello
If the task is still not complete, I want to contribute to this task.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286412336\issue-286412336.json . 
Working on #905 revealed that we stub methods on objects that originally do not respond to these methods – and that's a trap! We can set inline-code to inline-code in inline-code but that will break tests. These tests will have to be fixed.
 
Why is this important? See this example in the RSpec docs.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286422555\comment-355831457.json . 
For an application of this, see #908.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286422555\issue-286422555.json . 
While exception tracker libraries tie into Ruby's/Rails' system automatically for uncaught exceptions, using the exception tracker's log/system/dashboard for rescued errors requires special API calls.

We still haven't figured out which exception tracker we want to use (we've used Sentry, Honeybadger, and Rollbar so far). This simple class makes it easy to swap error logging providers for manual error reports.

Note: the explicit inline-code statements are for a seemless tie-in with PR #905. 

**Edit**: The inline-code does work:.

!bildschirmfoto vom 2018-01-07 16-34-08

  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286422555\pr-161440563.json . 
While exception tracker libraries tie into Ruby's/Rails' system automatically for uncaught exceptions, using the exception tracker's log/system/dashboard for rescued errors requires special API calls.

We still haven't figured out which exception tracker we want to use (we've used Sentry, Honeybadger, and Rollbar so far). This simple class makes it easy to swap error logging providers for manual error reports.

Note: the explicit inline-code statements are for a seemless tie-in with PR #905. 

**Edit**: The inline-code does work:.

!bildschirmfoto vom 2018-01-07 16-34-08

  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286422555\pr-comment-160054890.json . 
Is this typo on purpose? Or is this nowadays already internetz-slang enough to no longer be considered a typo?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286422555\pr-comment-160088522.json . 
haha, this wasn't a typo, but my way of having both statements aligned ;)  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286577992\issue-286577992.json . 
**Note**: This PR is based on #907. Please do not merge before that one.

* Removes inline-codeing
* Becomes specific about expected inline-code keys
* Related issue #903 - tracks error in our exception tracking service for later inspection.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286577992\pr-161526803.json . 
**Note**: This PR is based on #907. Please do not merge before that one.

* Removes inline-codeing
* Becomes specific about expected inline-code keys
* Related issue #903 - tracks error in our exception tracking service for later inspection.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286936076\comment-356216519.json . 
Great, thanks! Aside from the specs being green, I pushed it to staging and clicked around a bit – everything seems to be working.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286936076\issue-286936076.json . 
Updating our dependencies.

I needed to fix 2 little things to make the tests pass. shoulda-matchers has a configuration now and the order for some validations is important now.

cheers.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-286936076\pr-161761624.json . 
Updating our dependencies.

I needed to fix 2 little things to make the tests pass. shoulda-matchers has a configuration now and the order for some validations is important now.

cheers.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\comment-358296808.json . 
Build is failing for reasons I don't see though :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\comment-358344475.json . 
:partyparrot:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\comment-358349289.json . 
Nice one! Thanks! :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\issue-289089849.json . 
**What?**
Adds the ability to browse past projects. For past seasons, only **accepted and assigned** projects will be shown, just as we do for the current season once it started.

The orga-version of the projects view hasn't been touched. No need to mingle in the past ^^

!desktop-animation.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\pr-163312850.json . 
**What?**
Adds the ability to browse past projects. For past seasons, only **accepted and assigned** projects will be shown, just as we do for the current season once it started.

The orga-version of the projects view hasn't been touched. No need to mingle in the past ^^

!desktop-animation.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\pr-comment-162040036.json . 
Personal preference, but I'd find
block-code.
easier on the eyes... Plus: I think it's good practice to stop using inline-code since it's basically in the language now :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\pr-comment-162040755.json . 
Using these labels is a nice idea :electric_light_bulb: I'd even suggest to align the inline-code page to this pattern and remove the dropdown there in favor of these labels _(would also help us spare some untested JS code there)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\pr-comment-162044237.json . 
The argument "union type" requires the inline-code. There is a difference between inline-code and inline-code, they're not the same thing:.

Object#try is
block-code.
**Edit**: inline-code check is implied as it responds to almost nothing

The safe navigation is:.
block-code.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\pr-comment-162046907.json . 
Does it make sense to make this a 'pre-season' method?
And doublecheck: we need inline-code instead of inline-code ? (No need for explanation ;-), just checking)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\pr-comment-162050269.json . 
:upside-down_face:  I didn't realize this. Thnks.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\pr-comment-162051231.json . 
Pre-season: there is inline-code already. Is that what you mean?

inline-code vs. inline-code: I never know what to use. I know I will read up on that after I click the "Comment" button. I know I will have forgotten about it tomorrow   ;)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\pr-comment-162052188.json . 
inline-code is from october 1 through dec 31, and I think you want jan 1 through inline-code. ? 

The way I remember it is: Use inline-code unless you have a very specific goal for inline-code.  
URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\pr-comment-162054589.json . 
inline-code/inline-code  for control flow! Currently tattooing this onto my knees! :smiling_face_with_open_mouth_and_smiling_eyes:   Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\pr-comment-162086337.json . 
Oh, did not think this through :see-no-evil_monkey: thanx for pointing out @carpodaster :person_with_folded_hands: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289089849\pr-comment-162092849.json . 
Whoa, thanks! Didn't know this :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-289790874\issue-289790874.json . 
While looking at the navigation for orga people, I realized that the logo in the navigation bar looked sort of bad / pixelated 90s-party for me _(on a retina display)_. So I made a inline-code version based on several resources from the orga repo :pencil:️ 

Since now every browser supports inline-code, this should be :white_heavy_check_mark: and look fine on every machine and screen. Aside that, the logo file has now only ~5kb

While there, I also quickly rearranged some sass imports so that they make more sense :see-no-evil_monkey: 

Looked like this before:.
<img width="1792" alt="screen shot 2018-01-18 at 22 43 08" src="URL.

Looks like this now:.
<img width="1792" alt="screen shot 2018-01-18 at 22 41 58" src="URL.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-289790874\pr-163833569.json . 
While looking at the navigation for orga people, I realized that the logo in the navigation bar looked sort of bad / pixelated 90s-party for me _(on a retina display)_. So I made a inline-code version based on several resources from the orga repo :pencil:️ 

Since now every browser supports inline-code, this should be :white_heavy_check_mark: and look fine on every machine and screen. Aside that, the logo file has now only ~5kb

While there, I also quickly rearranged some sass imports so that they make more sense :see-no-evil_monkey: 

Looked like this before:.
<img width="1792" alt="screen shot 2018-01-18 at 22 43 08" src="URL.

Looks like this now:.
<img width="1792" alt="screen shot 2018-01-18 at 22 41 58" src="URL.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\comment-359265452.json . 
Haven't looked at the code yet, but concerning your problem with empty table cells: there's actually a CSS property for this - inline-code :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\comment-359271355.json . 
Thanks for your feedback, I think I tended to everything. Also thanks for introducing me to inline-code, Max. I couldn't get it to work and already blamed my lame CSS skills when I learned that apparently Bootstrap's border-collapse conflicts with empty-cells. Hm.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\issue-290116155.json . 
**What?**
Allows people who have submitted a project in a past season to use that project as a base for a new submission in the current year.

<img width="1163" alt="screen shot 2018-01-19 at 22 34 55" src="URL.

The action will trigger the normal "new" form with the fields being already populated:.

<img width="1165" alt="screen shot 2018-01-19 at 22 41 25" src="URL.

It only works for past years. You cannot clone an already submitted project for the current season.

This said, I'm more than happy for suggestions on where to put the action button. Especially because my inline-code hack link looks really bad when you don't have anything to use as a template:.

<img width="1170" alt="screen shot 2018-01-19 at 22 35 09" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\pr-164075236.json . 
**What?**
Allows people who have submitted a project in a past season to use that project as a base for a new submission in the current year.

<img width="1163" alt="screen shot 2018-01-19 at 22 34 55" src="URL.

The action will trigger the normal "new" form with the fields being already populated:.

<img width="1165" alt="screen shot 2018-01-19 at 22 41 25" src="URL.

It only works for past years. You cannot clone an already submitted project for the current season.

This said, I'm more than happy for suggestions on where to put the action button. Especially because my inline-code hack link looks really bad when you don't have anything to use as a template:.

<img width="1170" alt="screen shot 2018-01-19 at 22 35 09" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\pr-comment-162819434.json . 
:thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\pr-comment-162819519.json . 
No need for the bang here, the inline-code hook will make sure the user is created.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\pr-comment-162819601.json . 
If you already use inline-code for the project, there's no need for *banging*  the submitter and the season.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\pr-comment-162819611.json . 
As I said :white_up_pointing_index:️ I think the inline-code is obsolete here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\pr-comment-162819622.json . 
Again, as said before, I think the inline-code is obsolete here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\pr-comment-162819670.json . 
Lonely blank line :alien_monster: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\pr-comment-162819676.json . 
Lonely blank line :alien_monster: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290116155\pr-comment-162820971.json . 
Would you mind adding #projects as a heading before line 75? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\comment-360413048.json . 
Cool! Thank you for the feedback <3.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\issue-290392797.json . 
Related issue #882 

This aims to limit the number of coaches a team can have to four.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-164253184.json . 
Related issue #882 

This aims to limit the number of coaches a team can have to four.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162892270.json . 
Can you please add the error to the locale? 
URL.
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162893092.json . 
See URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162893422.json . 
Thanks for the feedback! I'm on it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162937153.json . 
Hey @F3PiX, I've added the localisation as discussed. 

I've left it out for the student limit error, as I'm not sure it makes sense to add it to this PR. 

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162937801.json . 
Oh great, that's way more idiomatic!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162937948.json . 
Can you pull that on one line, eliminating the need for the local variable?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162938456.json . 
Personal taste: I tend to make "generator spec helpers" real methods with inline-code instead of defining a proc/lambda in a inline-code. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162938824.json . 
Can't all these lambdas (expect the remove coach bit) be transformed to a single inline-code that returns a Hash?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162939088.json . 
You can probably use FactoryBot's  inline-code for that.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162948524.json . 
Nice! In your opinion, where would these be defined? The same spec file?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162948859.json . 
The only problem I've encountered here is that this would apply the same instance of inline-code to all roles. I'll look into a way to solve this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162948875.json . 
I totally agree. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162948969.json . 
Done! Thanks for the suggestion.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-162950763.json . 
Instead, using inline-code does the trick. What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-163050533.json . 
the description says 2, but it's about 4 in the example :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-163050831.json . 
This line is a bit long now. Can you make it a multi-line inline-code let? Also see below for a suggestion on the 3.times.map(&block)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-163051829.json . 
The inline-code works, of course, but it looks a bit hacky to me. What about 

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-163782544.json . 
This worked great, thank you!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-163782563.json . 
Done!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-163785537.json . 
Thanks for the suggestion! I've split it up, but can't use create_list for a set of attributes, can I?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-290392797\pr-comment-163790580.json . 
No, I don't think you can.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-29110440\comment-38725065.json . 
@svenfuchs this seems to be done for me.
Users can reach out to each other by sending emails. Any more to add? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29110440\comment-38765911.json . 
You're right, I guess we can close this. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29110440\issue-29110440.json . 
Just discussed the idea to replace this list from last year with a form that collects data within our own app: URL.

That could be a fairly simple form for now, and an index page that just lists stuff.

Then we could ask people to add themselves.

The general idea is to expand our app to something like a "network/platform for students, coaches, mentors, companies" to meet each other, so they can get their application prepared more easily.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-291518421\comment-360424323.json . 
@nerdyvaishali I had a quick question about this. I had a look at the application form and couldn't quite figure out where this best fit. I thought about this field:.

!screen shot 2018-01-25 at 11 13 37

Do you reckon this should go in the label above, or the hint below? I'm more for the label above.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-291518421\comment-360432120.json . 
@ramonh I think yes, it should go in label above. Please goa head with that change. Thanks.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-291518421\comment-360432192.json . 
Will do, thanks for getting back to me so quick, @nerdyvaishali !
.
#rails-girls-summer-of-code/rgsoc-teams\issue-291518421\comment-361916643.json . 
Closed via #918 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-291518421\comment-361916979.json . 
As a follow up: the one field should probably then also be hidden from the pair in the emails sent out with the application data. Can you take care of this @ramonh or are you on something else today?
I won't be able to do this until Friday I fear.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-291518421\comment-361921411.json . 
Or wait. It's such a tiny fix - I can probably even do it during the left overs of my lunchbreak.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-291518421\comment-361924435.json . 
Here's the PR @ramonh URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-291518421\comment-361925218.json . 
Oh wow, that was fast, thanks @klappradla I'll review right away.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-291518421\issue-291518421.json . 
If a university student is applying for the summer of code, they'll be required to list what courses they're taking and how many weekly hours they take up.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-291524508\issue-291524508.json . 
When you delete a user (either as an organiser or, I'm guessing, as a user trying to delete your own profile, if that's a possible use case), you get redirected to inline-code which does not exist anymore (i.e. visitor gets a 404). The visitor should probably get redirected to inline-code instead, which is the “new” user list page. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292033737\comment-361097854.json . 
@F3PiX I don't know much about Devise's magic tricks. What do you have in mind?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292033737\comment-361174969.json . 
Thanks @carpodaster ! Looks good to me, too!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292033737\issue-292033737.json . 
Fixes #915 

* Fixes the redirect target
* Improves the naming of the named route for inline-code (i.e. inline-code now)
* Logs out the current user if they just deleted themselves.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292033737\pr-165462423.json . 
Fixes #915 

* Fixes the redirect target
* Improves the naming of the named route for inline-code (i.e. inline-code now)
* Logs out the current user if they just deleted themselves.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292033737\pr-comment-164224136.json . 
I know this violates the "one assertion per example" rule. But that's how I roll in controller/request/feature/functional tests because the setup of DB objects is too expensive to not reuse the existing setup :upside-down_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292033737\pr-comment-164267999.json . 
I am totally convinced ;-) 
In our first Dev Sync we talked about moving from controller tests to request tests. Would that help in this case?
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292033737\pr-comment-164312729.json . 
Not as long the "one assertion per example" mantra is still being held up; the test would look almost the same, only the test macros change a little. I did not rewrite this as a request spec (even though we decided to gradually move request specs in the first DevSync as you mentioned) since we already had an exisiting test and I think the move to request specs should be one big PR on its own.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\comment-361098441.json . 
Oh, just had another look at the issue: totally forgot about Maria's comment, showing the filled out application to students even **after** they submitted and the summer started.

I guess we could show them the disabled form, similar to when people already submitted... I'm just not 100% sure about the navigation and logic for that. Will try to come up with something.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\comment-361172540.json . 
Thank you very much @klappradla! I've had a look at the changes and they look great! :thumbs_up_sign: 

Do you reckon it makes sense to split the disabled application form viewing into a different PR?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\comment-361185959.json . 
For the disabled application view @ramonh: yes I think it would be best to do this in a separate PR. We just have to repopen the associated issue again for this.
I can start doing this probably even today... just not sure yet where to best place the link and how long to best have it being available.

I guess it should disappear once the season changes to the next year right (cc @carpodaster )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\comment-361187443.json . 
Good point, I would suggest linking it to the season change, yeah.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\comment-361976768.json . 
:heavy_black_heart:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\issue-292232364.json . 
This is supposed to fix URL sending an email with the contents of the just submitted application to the two students of a team.

***edit:** this is still missing the logic to show the submitted application within the app as well.*

I added a multipart email that looks aprox. like this when rendered as inline-code: :optical_disc: 
<img width="952" alt="screen shot 2018-01-28 at 17 42 14" src="URL.

And approx. like this when rendered as inline-code: :no_mobile_phones: 
<img width="952" alt="screen shot 2018-01-28 at 19 38 00" src="URL.

**Sidenote**
I know there should be something like inline-code available for rendering partials from Rails views, but I somehow always (at least in the mailer tests) ended up with a mashup of both emails when naming the partials identically. So I for now just appended a inline-code to the text ones... May find a better solution to this at some point.

I also had to add some translations to the application draft form - otherwise it would basically be impossible to keep the form and the mail templates in sync :see-no-evil_monkey: 
While coming across it, I also removed a legacy intializer for inline-code. 

I came across some places where one could refactor a bit of "cruft", but I'll do this in follow up PRs, am very tight on time at the moment :crying_cat_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\pr-165583693.json . 
This is supposed to fix URL sending an email with the contents of the just submitted application to the two students of a team.

***edit:** this is still missing the logic to show the submitted application within the app as well.*

I added a multipart email that looks aprox. like this when rendered as inline-code: :optical_disc: 
<img width="952" alt="screen shot 2018-01-28 at 17 42 14" src="URL.

And approx. like this when rendered as inline-code: :no_mobile_phones: 
<img width="952" alt="screen shot 2018-01-28 at 19 38 00" src="URL.

**Sidenote**
I know there should be something like inline-code available for rendering partials from Rails views, but I somehow always (at least in the mailer tests) ended up with a mashup of both emails when naming the partials identically. So I for now just appended a inline-code to the text ones... May find a better solution to this at some point.

I also had to add some translations to the application draft form - otherwise it would basically be impossible to keep the form and the mail templates in sync :see-no-evil_monkey: 
While coming across it, I also removed a legacy intializer for inline-code. 

I came across some places where one could refactor a bit of "cruft", but I'll do this in follow up PRs, am very tight on time at the moment :crying_cat_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\pr-comment-164316303.json . 
I cannot remember the last time I dealt with images in mails send *directly* from a Rails app... I'm not 100% sure about the use of the inline-code helper there. Is it a save thing to do? Or do I need to do a "normal" inline-code tag and then point the source to the asset **url**?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\pr-comment-164359662.json . 
I think this is fine, but don't have a lot of experience in using images in emails.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\pr-comment-164361753.json . 
I feel at some point we should introduce a presenter :upside-down_face:   Let's not bother us with it in this PR, though.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\pr-comment-164362325.json . 
:confetti_ball: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\pr-comment-164368006.json . 
(ugh, for some reason that comment didn't make it into my review – PEBCAC for sure)

Personal taste: I tend to inline-code methods with IO/network side effects. Then again, I also like it that the method doesn't say that the type of notification is an email. /shrug :) 

One other thing, though: can we move this notification into the state transition? The method call on inline-code looked a bit suspicious (Mrs Demeter called) and that got me thinking that it's probably not the controller's responsibility.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\pr-comment-164371150.json . 
Haha, nice that we're on the same page here @carpodaster !

I actually had both, the inline-code model's state machine and the inline-code service refactored to do exactly this :cat_face_with_tears_of_joy: 

But I had to adjust too many tests and did not have the time to finish this on Sunday. So I'll do it in another PR.

Btw., a thing I changed there: I'd prefer the inline-code service to actually **return** the persisted application record to then use this instance for notifying orga and the submitters. Using inline-code for the emails requires all DB transactions for the inline-code and the inline-code to be completed - assigning the inline-code makes this a bit more explicit to me :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292232364\pr-comment-164371489.json . 
So, are you fine with "fixing" this in a follow up @carpodaster ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\comment-361229612.json . 
Hi @ramonh... All changes looks good to me. Thanks for working on them. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\comment-361652636.json . 
Hey @klappradla, thanks for the feedback! 

Phew! I survived the rebase :see-no-evil_monkey: 

How's it looking?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\comment-361915998.json . 
Yay, looks good! Great job on the rebase hell - sorry again :cat_face_with_tears_of_joy: 

Let's :sailboat:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\issue-292329906.json . 
Related issue #914 and private issues

This aims to prepare the application form for the 2018 summer of code:.

- Add requirement for university students to clarify their courses and times
- Add character limit (same as the others) to the code sample field
- Clarify that code sample field should not include copy-pasted code but rather should be links
- Hide the gender self-identification field from teammates
- Remove diversity field requirement
- Remove warnings related to the blind selection process (as this will no longer take place)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\pr-165648127.json . 
Related issue #914 and private issues

This aims to prepare the application form for the 2018 summer of code:.

- Add requirement for university students to clarify their courses and times
- Add character limit (same as the others) to the code sample field
- Clarify that code sample field should not include copy-pasted code but rather should be links
- Hide the gender self-identification field from teammates
- Remove diversity field requirement
- Remove warnings related to the blind selection process (as this will no longer take place)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\pr-comment-164526330.json . 
Hm, just wondering, can't you reuse inline-code from the inline-code for that :thinking_face: 

If I understand your motivations here, it should basically be the same...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\pr-comment-164526451.json . 
See my comment in the helper file above - I think this problem is already solved elsewhere.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\pr-comment-164527042.json . 
Can you please move these changes to the label into the inline-code file I created in #765 when rebasing this on inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\pr-comment-164527373.json . 
When rebasing this to inline-code please be aware that I extracted all the labels into translation files.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\pr-comment-164527419.json . 
Same here: when rebasing this to inline-code please be aware that I extracted all the labels into translation files.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\pr-comment-164527537.json . 
Same here: When rebasing this to inline-code please be aware that I extracted all the labels into translation files.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292329906\pr-comment-164792148.json . 
Oh, hm, looks like yes most probs. Thanks for the tip :smiling_face_with_open_mouth_and_cold_sweat:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292340241\issue-292340241.json . 
As discussed, this will take the shape of two checkboxes:.

- Full-time (40 hours per week)
- Part-time (20 hours per week)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292348124\comment-361530941.json . 
Why not also remove the field and all logic connected with it? If we're not using it, I don't see a point in having it around... :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292348124\comment-361531620.json . 
I thought of this too @klappradla but I think we might want to keep it around, say, if we want to display stats from previous years. Wdyt?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292348124\comment-361532935.json . 
Valid point. But won't the contents of the DB and the current state of the application be exported by the end of the season anyways..?

If not, I'd suggest to approach it sorta like we did it when deprecating other application attributes last year: rename the column, prefix it with inline-code so that we know we can throw it out at some point.

However I'd still get rid of the logic inside the app related to this attribute - cause this looks like unused code to me then :tractor: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292348124\comment-361533369.json . 
That sounds good to me! Sorry I was unclear, I intend to remove the volunteer logic as well :thumbs_up_sign: 

So I'll rename the column to inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292348124\comment-361894859.json . 
(Heads up: we use the inline-code label for issues that the student team can work on during Summer. Instead, I created a new Milestone for issues that need to be done before the Application Phase starts.) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292348124\comment-361895954.json . 
Oh cool, thanks for putting up with this github newbie :smiling_face_with_open_mouth_and_cold_sweat: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292348124\issue-292348124.json . 
As discussed, this will no longer be offered to applicants.

However, we should not remove the field from the database, for our records.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292569715\comment-361396828.json . 
So cool! About the navigation:  we do have a link to the appl form during application phase, pointing to the draft. Would you like one of these?  a) change the existing link after submitting, to point to the disabled form? Or b) add an extra (greyed out) link that will stay active as long as we chose to show the form.  
Either way, the navigation is not in the form itself. Which, to me, makes sense. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292569715\comment-361397803.json . 
Sort of b) @F3PiX 

I was thinking about adding link to something like inline-code only showing it to users with a submitted draft and only from the end of the application phase to maybe the end of summer.
There, I can just take the inline-code from the application and render the disabled form again... What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292569715\comment-361399590.json . 
That sounds totally logical :thumbs_up_sign: .  One thing though: I guess the times I re-read the submitted application the most, was between submitting and the application phase was closed. So I'd vote for making the 'copy' accessible right from after the user submitted the final version. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292569715\comment-361399996.json . 
That is already possible @F3PiX - the inline-code link is available until the end of the application phase.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292569715\comment-361950199.json . 
@klappradla sorry, I somehow didn't see this notification. Yes, I think giving them access to the disabled form would be good, and it would make sense if it was until end of the season, that way they can look over the application and their project plan. 
Sidenote: I'm not sure if I missed the conversation about this — was there a plan to send them a copy of their application by email which was then dropped? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292569715\comment-361961880.json . 
It wasn't dropped, I already added the email-part @alicetragedy, some screenshots here :white_right_pointing_backhand_index: URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292569715\comment-361977246.json . 
@klappradla oh my. completely missed that, I'm sorry. thank you! Both look great :smiling_face_with_heart-shaped_eyes: 
(and tbh I think that if the applicants already have that information, showing the disabled form is not _necessary_ if you're short on time). Totally grateful for all the work you're doing :person_raising_both_hands_in_celebration: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292569715\issue-292569715.json . 
This is an attempt on part 2 of #765 : show the application as "submitted" to the students after it was submitted.

I for now only updated the application draft form to show a different message once an application was submitted and is therefore also no longer editable. Looks like this in the wild:.
<img width="1201" alt="screen shot 2018-01-29 at 22 21 56" src="URL.

This :white_up_pointing_backhand_index: is probably not sufficient though. I was thinking of also giving the users access to this disabled form during the time from when applications close until eventually the end of the season... Is this something we want (cc @ramonh & @alicetragedy) ?
In order to do this I have to do some "rethinking" on the navigation items :winking_face:  I'm already putting some though in there, but would be super happy about suggestions :hugging_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-292569715\pr-165824731.json . 
This is an attempt on part 2 of #765 : show the application as "submitted" to the students after it was submitted.

I for now only updated the application draft form to show a different message once an application was submitted and is therefore also no longer editable. Looks like this in the wild:.
<img width="1201" alt="screen shot 2018-01-29 at 22 21 56" src="URL.

This :white_up_pointing_backhand_index: is probably not sufficient though. I was thinking of also giving the users access to this disabled form during the time from when applications close until eventually the end of the season... Is this something we want (cc @ramonh & @alicetragedy) ?
In order to do this I have to do some "rethinking" on the navigation items :winking_face:  I'm already putting some though in there, but would be super happy about suggestions :hugging_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293148393\issue-293148393.json . 
Quick and dirty follow up for #918 : hide the inline-code field from team pair also in emails...

Looks like this in the wild now:.
!screen shot 2018-01-31 at 13 53 10


*and for txt email*
!screen shot 2018-01-31 at 13 52 55


PS: This is only a quick lunch-break-fix:trade_mark_sign: - I know how to clean this up and will do once I have more time when finishing #765 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-293148393\pr-166252428.json . 
Quick and dirty follow up for #918 : hide the inline-code field from team pair also in emails...

Looks like this in the wild now:.
!screen shot 2018-01-31 at 13 53 10


*and for txt email*
!screen shot 2018-01-31 at 13 52 55


PS: This is only a quick lunch-break-fix:trade_mark_sign: - I know how to clean this up and will do once I have more time when finishing #765 


.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\comment-361927219.json . 
Oops, sorry for the build fail, folks, gotta fix these spacings :see-no-evil_monkey: 

UPDATE: And passed!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\comment-362268208.json . 
Thank you @klappradla ! I'll get to these right away :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\comment-362280400.json . 
Hey @klappradla, I've taken care of most of the feedback, thank you!

The only thing I couldn't figure out was localizing the field. I noticed that all the localized fields are in inline-code, but the ones in inline-code are not. 

I'm afraid I'm not sure how to get these localized, could you please point me in the right direction?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\comment-362295106.json . 
Ahhh scratch that @klappradla I figured it out :see-no-evil_monkey:.

Thanks again for the feedback!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\comment-362418315.json . 
Solid :flexed_biceps: 

I'll merge once Travis ran :runner:‍♀️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\issue-293149341.json . 
Related issue #919 #920

This does the following:.

- Deprecate the inline-code and inline-code fields
- Add the inline-code model with two default values: part time and full time
- Add the WorkWeek values to the application copy sent to students.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-166253121.json . 
Related issue #919 #920

This does the following:.

- Deprecate the inline-code and inline-code fields
- Add the inline-code model with two default values: part time and full time
- Add the WorkWeek values to the application copy sent to students.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165345723.json . 
I'd suggest to not allow the two now inline-code column here anymore if we plan to remove them.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165346041.json . 
Related to my previous comment: I'd remove the deprecated column here as well. If we don't have these things in the form, we should not start to display errors for it :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165346386.json . 
Please remove the validation for the deprecated column (and the associated method).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165346620.json . 
Super cosmetic and probably personal preference, but you can shorten
block-code.
to
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165347017.json . 
I'd also remove the deprecated column here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165347617.json . 
Do we have a way to find out which teams are "half time"..? If not maybe that's the place to integrate that?

Aside that, as said before, I would get totally rid of the inline-code here and all over this file.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165347684.json . 
Same here, get rid of the deprecated column.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165348125.json . 
Hm, why is this label not yet in the translations file? Did I forget it and also forgot to include this in the email...?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165348220.json . 
Can you please also move this label into the translations file and include this text in the generated email (both the html and the text version)?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165348288.json . 
Same here: the label should go into the translations file.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165348693.json . 
I'd again suggest to remove the deprecated column here but instead maybe look for a way to include the new type of team "half-time" or however it should be called.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165349043.json . 
Didn't you add a method to the inline-code to spare this inline-code parse part?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165349114.json . 
This should probably be plural?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165349213.json . 
I think we can spare the inline-code here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165349907.json . 
Having this code inside the inline-code method makes the migration no longer reversible....

You could in theory wrap it in something like this:.
block-code.
_(written outta my head, not tested)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165350097.json . 
Please remove any tests and logic related to the deprecated columns and test for the new / current types of teams instead.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165350192.json . 
Same here: please remove anything related to the deprecated column and test for the new types of teams instead.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165350634.json . 
Let's keep the factories minimal: all that's needed to have a valid application. So let's just skip the inline-code here, they're not mandatory.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165350676.json . 
Same here: let's skip the non-mandatory things.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165350753.json . 
Please remove this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165351100.json . 
I wonder if using inline-code makes sense here :thinking_face:  The values we have are two set sets that only make sense in conjunction....
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165351210.json . 
Please remove all the logic and tests related to the deprecated columns _(in the whole file)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165351311.json . 
Same here: please remove the deprecated columns and test for the new things instead.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165351432.json . 
All over the file: please remove anything related to the deprecated columns.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165352913.json . 
Hm, I fear I don't get the benefits of this approach :see-no-evil_monkey: 

It appears rather complex / overly complex to me for what we want to archive: have working-weeks set to either "full time" or "half time".

An more lightweight approach would for instance be: add a new integer column inline-codeto the inline-code model, make it an Rails enum (defined with hash syntax at best) and add the respective translations for it and use a simple select in the form.

Or even simpler: make it a string column and use something like this gem to restrict the values and get the naming right.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165357064.json . 
Hmm, another project where I was collaborated insisted on having this approach over others. Now I'm not sure which is best..

The definite advantage of having WorkWeeks be tied to a table is that we're not tied to hard-coded values and can later on add more options, say a 10 hour week (highly improbable)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165357391.json . 
Yes, makes sense, I get this point!

I think enum defined with a hash will also save you in this case - so I'd consider it a similar flexible but a bit more lightweight option... What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165358116.json . 
My aim is to have this done in a later PR, as this one is more related to the application form.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165359649.json . 
On the other hand, we have the inline-code field, which is a string array. I could go with this instead.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165496960.json . 
Let's just fully remove these migrations then if we don't use these tables - makes it easier to run them again.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165498732.json . 
I guess this should be an array now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165498955.json . 
Hm, I don't get this change I'm afraid :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165500261.json . 
That is a leftover from older commits, thank you for finding it! :face_screaming_in_fear: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165500979.json . 
Hm... Currently, I have a migration to replace these with the array. Should I throw them all out and start over in that regard, in your opinion?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293149341\pr-comment-165501500.json . 
Yep. Just get the inline-code from inline-code, remove the migration files we don't need and adjust the others to just add the 2 columns and everything's nice and clean.

I can also quickly do it - no more need for more work for you. You did an awesome job already.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293874598\comment-362934690.json . 
@paavininanda thank you for that suggestion! Editing would require tracking an edit history and I would like to avoid that. However, deleting one's one comment should be added. But again, I would like to leave something like _comment deleted_ without the user name. What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293874598\comment-362975056.json . 
@carpodaster Can't we just let the user edit the comment without maintaining a history of the edits? I personally wanted this feature because i committed a typo in one of my comments. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-293874598\issue-293874598.json . 
One should be able to edit or delete one's comment after posting it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-29397661\comment-37599181.json . 
@anikalindtner fixed the thml and some styles

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29400342\issue-29400342.json . 
so that "junior developer or better" fits in one line

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29400342\pr-13551921.json . 
so that "junior developer or better" fits in one line

.
#rails-girls-summer-of-code/rgsoc-teams\issue-294365090\comment-368611133.json . 
With #948 being merged, can this be considered done now @ramonh ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-294365090\comment-368611819.json . 
Yes! Totally, thanks @klappradla .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-294365090\issue-294365090.json . 
Up until recently, we were differentiating between inline-code and inline-code teams.

With the introduction of part-time and full-time, as well as replacing volunteer teams with these, we'll need a mechanism to differentiate between these.

For this, we'll need:.

- [x] Integrate these changes into the reviewing process
- [x] Add these to the inline-code for inline-codes
- [x] Show and filter these in the different inline-code views.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-294398115\comment-363717375.json . 
Can we close this now since #927 has been merged?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-294398115\comment-363721327.json . 
Yes, thank you @klappradla!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-294398115\issue-294398115.json . 
If a user has no inline-code and they try to click on "Apply Now", the app will throw an error.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-294401807\comment-363098665.json . 
Thank you @carpodaster, done!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-294401807\comment-363099906.json . 
Yay! Thanks @carpodaster .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-294401807\issue-294401807.json . 
Related issue #926 

- Students with teams in previous seasons will get a crash when applying with no current team

.
#rails-girls-summer-of-code/rgsoc-teams\issue-294401807\pr-167150774.json . 
Related issue #926 

- Students with teams in previous seasons will get a crash when applying with no current team

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29529735\comment-37837764.json . 
We still have the data of teams from last year, though yeah? I am mainly thinking of the articles we want to write, so we have a record of participants. I just haven't seen where this data is.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29529735\comment-37858145.json . 
@sareg0 all the data is still up here: URL.

Umm, we might want to clear out some of the recent "activities" there.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29529735\issue-29529735.json . 
Implements a first version of #63 

This pull request does:.
- Require signin for submitting an application
- After signup redirect to inline-code and ask for completing their profile
- On inline-code add a list of interests users can check (like "finding a pair", "finding a coach", etc)
- Change inline-code to only list their name, interests and location
- Make inline-code the new homepage
- Add the ability to pass a inline-code param to have the user redirected back to the current page
- Simplify the application form markup

I have deployed this on staging: URL We'd probably want to delete existing users from the 2014 teams app (should we have any, yet).

I think this can already replace our spreadsheet from last year

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29529735\pr-13617564.json . 
Implements a first version of #63 

This pull request does:.
- Require signin for submitting an application
- After signup redirect to inline-code and ask for completing their profile
- On inline-code add a list of interests users can check (like "finding a pair", "finding a coach", etc)
- Change inline-code to only list their name, interests and location
- Make inline-code the new homepage
- Add the ability to pass a inline-code param to have the user redirected back to the current page
- Simplify the application form markup

I have deployed this on staging: URL We'd probably want to delete existing users from the 2014 teams app (should we have any, yet).

I think this can already replace our spreadsheet from last year

.
#rails-girls-summer-of-code/rgsoc-teams\issue-295690381\issue-295690381.json . 
As said in URL _(and mention in a comment by @carpodaster)_: creating an inline-code from an inline-code and then sending out emails to both submitters and the orga team could / should be done in the inline-code model instead of the controller.

This PR moves all the callback-logic related to an inline-code moving from inline-code to inline-code into the already existing state machine in the inline-code model.
I as a small drive-by-refactoring:trade_mark_sign: also moved inline-code into a inline-code. I just think having this a a "callable" object makes the usage and intention a bit more obvious.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-295690381\pr-168106314.json . 
As said in URL _(and mention in a comment by @carpodaster)_: creating an inline-code from an inline-code and then sending out emails to both submitters and the orga team could / should be done in the inline-code model instead of the controller.

This PR moves all the callback-logic related to an inline-code moving from inline-code to inline-code into the already existing state machine in the inline-code model.
I as a small drive-by-refactoring:trade_mark_sign: also moved inline-code into a inline-code. I just think having this a a "callable" object makes the usage and intention a bit more obvious.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-295691430\issue-295691430.json . 
There's a security warning for versions prior to inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-295691430\pr-168107144.json . 
There's a security warning for versions prior to inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-295863805\issue-295863805.json . 
As it stands right now:.



A question was brought up on Slack that made us decide tweaking the phrasing to:.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-295865874\comment-364449897.json . 
Hey Laura, thanks for the feedback! I've fixed this as discussed. Also found and fixed a tiny typo Could you please take a look?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-295865874\issue-295865874.json . 
Related issue #930 

This adds some clarification to the coding samples field in the application form.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-295865874\pr-168235663.json . 
Related issue #930 

This adds some clarification to the coding samples field in the application form.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-295865874\pr-comment-167232544.json . 
there is a missing inline-code at the end of this sentence :smiling_face_with_halo: 
Also, for consistency's sake, I would suggest using single quotes here as well and escaping the apostrophe in inline-code, like this: inline-code. What do you think? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-295865874\pr-comment-167242198.json . 
Oh sure! I had the habit of using doubles for when there are singles inside, but am not picky :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296230433\comment-365878015.json . 
Thanks for pointing this out, @ArushiSinghal! Will look into this :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296230433\comment-366228062.json . 
Should be fixed via #938 now @ArushiSinghal - thanx again for reporting :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296230433\issue-296230433.json . 
If the team decides not to get listed in the team overview, then their team name should also not be shown in the team-member profile. This can help the members to remain more private until their selection.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296230989\comment-364855429.json . 
Thanks for this, @ArushiSinghal! 

We already have issues related to linking to the teams app here and here that have more broadly to do with restructuring the website, so I'll go ahead and close this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296230989\comment-364857753.json . 
@ramonh  Thanks for the information.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296230989\issue-296230989.json . 
In the RGSOC website (URL there should be direct link/button to go to the "Rails Team APP" (URL to improve user experience as it's difficult for the user to find the site for "Rails Team App".
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296231729\comment-364842498.json . 
Hey @ArushiSinghal thanks for pointing this out!

The purpose of this dropdown is to display the accepted teams of the current Summer of Code season to choose their updates for this inline-code.

So as you correctly found, the dropdown is empty between seasons. 

One thing we could do is hide the dropdown if there are no teams to display and show it otherwise.

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296231729\comment-364851968.json . 
Yes, we should hide the dropdown when there is no team. @ramonh  should I go ahead to solve this issue?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296231729\comment-364853456.json . 
Sounds good, thanks @ArushiSinghal go for it!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296231729\comment-364868821.json . 
We could also fill the menu with the selected teams of the most recent season when we don't have selected teams for the current one, yet. Wdyt?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296231729\comment-364869548.json . 
Good point, this is much better!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296231729\issue-296231729.json . 
On the Activity page, the "Team drop-down" is of no use.
!screenshot-2018-2-11 rgsoc - teams app

Edit: Summing up the discussion below. The requirements are:.
1) During the inline-code, the dropdown is populated with the teams that are inline-code in the current season
2) Until the inline-code starts, the dropdown is populated with the teams that were inline-code in the previous season. 

Updated the issue title accordingly. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-296232169\comment-368230533.json . 
I would like to work on this.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296232169\comment-368236535.json . 
Hello, @cesswairimu I think admins have not given their idea's on this Issue. I am waiting for their approval. And then one of us can work on this issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296232169\comment-368330240.json . 
Hey @ArushiSinghal & @cesswairimu :waving_hand_sign: 

Sorry it took me so long to get back to you :see-no-evil_monkey: 

This was indeed a feature which was originally planned for the community page. At least filtering by inline-code was already worked on in this PR by our lovely students from last year.

There is also an existing open issue on this topic. I'll therefore close this one, so that we don't end up with the same information in various places.

If you'd like to work on implementing the filter for inline-code, maybe quickly read over the existing communication in URL first and ping me there if you need any more information or things are still unclear.
But we're of course happy about a PR for this :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296232169\issue-296232169.json . 
As the teams have to choose coaches from the same city. So the filter for the city on the community page can help in finding the coaches from the same city.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296308976\comment-365862423.json . 
Thanks very much for the feedback, @klappradla ! I'll be cleaning these up.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296308976\comment-365867546.json . 
Done! Could you please take another look, @klappradla?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296308976\issue-296308976.json . 
Related issue #925 

This is the first of a series of steps towards rolling out the new team kinds, replacing the team logic for sponsored and volunteering teams with full and part-time teams

.
#rails-girls-summer-of-code/rgsoc-teams\issue-296308976\pr-168530015.json . 
Related issue #925 

This is the first of a series of steps towards rolling out the new team kinds, replacing the team logic for sponsored and volunteering teams with full and part-time teams

.
#rails-girls-summer-of-code/rgsoc-teams\issue-296308976\pr-comment-168287640.json . 
Hm, did you not just rename the inline-code css class to inline-code... :thinking_face: 
I fear this then won't work anymore.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296308976\pr-comment-168288740.json . 
I'd suggest to also rename this to inline-codethroughout the tests, just to make the intend more obvious _(we probably now would consider both sort of teams "sponsored")_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296308976\pr-comment-168289476.json . 
Can you please remove this whole thing around creating an array with a single element and then taking a "sample" from it? I think it's fine to just to with the string inline-code here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296308976\pr-comment-168290345.json . 
I'm sorry, but I think I don't understand what this should be :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296308976\pr-comment-168410667.json . 
These allow us to call inline-code or inline-code on the team models. Removing them would give me a no method error.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296815240\comment-365530440.json . 
I couldnt reproduce this bug @valaparthvi .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296815240\comment-365550095.json . 
@bajajerk
I'm not sure which application form you tried but, this application form here is causing the bug.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296815240\comment-365736221.json . 
Hey @valaparthvi, thanx for reporting :person_with_folded_hands: 

I tbh have a hard time reproducing this as well :see-no-evil_monkey:  Can you maybe give me some more detailed information about your setup? Which version of which browser are you using? Plus: **can you quickly try out if everything behaves normally if you disable your inline-code extension**? (I only heard weird things about this extension so far :see-no-evil_monkey: )

I cannot come up with an explanation why the labels should disappear once one clicks into the field, other then a browser extension messing with the page :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296815240\comment-365850026.json . 
Hey @klappradla, Looks like you were correct :grimacing_face:. Grammarly and Firefox was a bad combination. I couldn't reproduce the bug once I disabled Grammarly. I tried to reproduce the bug on Google Chrome(I have Grammarly installed there too), couldn't reproduce it there.
Anyway, thanks to both of you.:slightly_smiling_face: I'll close this issue then.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-296815240\issue-296815240.json . 
**Bug** - The questions asked on application form hides as soon as we click on the answer box. It will be much more helpful if the questions stayed visible while we answer them.

**Expected Behaviour**: The questions should stay visible.

**Actual Behaviour**: 
_Before:_
!Before

_After clicking on the answer box:_
!After clicking on the answer box

.
#rails-girls-summer-of-code/rgsoc-teams\issue-297393937\comment-366209589.json . 
@klappradla You were absolutely right. This is what happens when you don't read the scope implementation :see-no-evil_monkey: Thanks for the second pair of eyes! I've just pushed my fix. Could you please take a look?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-297393937\comment-366227964.json . 
:cat_face_with_tears_of_joy: ok, wouldn't have expected it to be such a tiny change after all :mouse_face:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-297393937\comment-366228183.json . 
Indeed! Thanks for your help!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-297393937\issue-297393937.json . 
Related issue #932 

This aims to hide a user's team on their profile if invisible, unless they're accepted.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-297393937\pr-169332077.json . 
Related issue #932 

This aims to hide a user's team on their profile if invisible, unless they're accepted.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-297393937\pr-comment-168461657.json . 
Personal taste, but I think it's overkill to a) introduce a new method in the inline-code model for this and b) merge the two queries which roughly do the same...

How about refactoring the inline-code class method on the inline-code model into a scope? It's technically speaking already this... Then you'll be able to simply chain the scopes into something like
block-code.

What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-297393937\pr-comment-168462541.json . 
I'm still not 100% sure if I got the feature and the issue right. The way I understand it, teams set to "invisible" should be hidden from the profile until they are accepted. That's also how I read the current implementation of the inline-code method on the inline-code:.
block-code.
So once a team is accepted, it's always visible. Which also means, the chaining of scopes you do in the user model should actually not even be necessary. It should be enough to do a
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-297393937\pr-comment-168462822.json . 
As said in my previous comment: I'd prefer to make the inline-code class method a scope in the inline-code model. So you could probably move the specs over there if it's not tested accordingly yet.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-29779518\comment-38295739.json . 
has anyone attended to this yet @anikalindtner. If not I will jump on it

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29779518\comment-38296186.json . 
not to my knowledge! go go go <3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29779518\comment-38324303.json . 
so i did a quick test, because i was looking at it and it seemed fine, and it seemed to work okay for me.
!screen shot 2014-03-21 at 10 05 58 pm

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29779518\comment-38717833.json . 
fixed bei the awesome @sareg0 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29779518\issue-29779518.json . 
!screen shot 2014-03-19 at 11 37 00 pm

you can scrollllllll to the right until it's only white space

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-109333294.json . 
I know this is sort of old, but I like the idea of a landing page with a short blurb explaining what this is about. I'm happy to write the copy for it :)
And with @anikalindtner's permission, I'd like to change the title of the issue to that.. something like "improve landing page". Later on, if we feel there's a need for it, we could add that "Register" menu point.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-109334311.json . 
@alicetragedy DO EEEET <3 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-114665839.json . 
I love the idea of improving the landing page. I know that it's not super fancy, but the rorganize.it app sort of tries to onboard people a bit. I'm not saying we have exactly the same thing, but just to give some inspiration.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-194520399.json . 
I know that we now have the "activities" as a landing page, which is quite nice — however in-between "seasons", we have an activity view of old teams .. so maybe a quick explanation of what the RGSoC Teams app is for might be better suited for that time of year when everything is quiet. Not sure how much work would go into that — but since I'm going through old issues, if this isn't a thing anymore and we're okay with keeping activities all year round, we should probably close it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-194531404.json . 
I kinda like the news stream, even if it's six months old now, but I agree that it may be odd to look at all the old activities. Otoh, people who visit the teams app probably know what they're looking at. In the unlikely event that they don't: wdyt about adding a box on top of the activity log giving a tiny bit of info what this is about but otherwise directing stranded internet citizens to the rgsoc.org homepage?

I'm also ok with just closing this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-194534590.json . 
@carpodaster yeah, it's just that we had that conversation above apparently and I can see why there was the idea of adding a bit of information (a lot of people seem to be still confused about the use of the almighty monster teams app). Would love to take this on with, as you said, a box that gives some information about the app and redirects to rgsoc.org if needed.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-349948700.json . 
@alicetragedy you assigned yourself to this issue … 1.5 years ago ;)  Is this still relevant for us?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-350262677.json . 
I think it's still relevant, because the news stream is a bit weird to see as first thing, when it's outside of the summer months. I could either un-assign myself and see if anyone is interested in giving it a shot, or we could close this issue entirely and see that more critical things are dealt with first, and revisit later?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-350480273.json . 
I'd keep it.
The "box on top of the activity stream" for instance that Carsten mentioned would be relatively fast and easy to add.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-38210781.json . 
this should lead to a page that tells you "in order to register yourself as a coach/mentor/organizer... please sign in with github"

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-38222974.json . 
Doesn't it render the interest option to be a coach/mentor/organizer/… useless?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\comment-38223908.json . 
I think we should have a "landing page" that explains what that "community" list is about and that people can sign up in order to be listed.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780028\issue-29780028.json . 
for people who want to join as coaches or are looking for sth. or coaching companies...

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780130\comment-38118119.json . 
I'll do that tomorrow morning really quickly

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780130\comment-38119267.json . 
i think that could be two options, actually:.
- Offer office/desk space
- Offer a coaching team from our company

... or something

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29780130\issue-29780130.json . 
in here:.

!screen shot 2014-03-19 at 11 50 11 pm

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29798851\comment-38174552.json . 
Looks good to me!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29798851\issue-29798851.json . 
Adds inline-code and inline-code. See #69.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29798851\pr-13775672.json . 
Adds inline-code and inline-code. See #69.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-298208852\issue-298208852.json . 
Comments left by mentors on applications should be visible in the review process.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-29832050\issue-29832050.json . 
Create a coverage report by running inline-code. It will keep reports in inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29832050\pr-13795598.json . 
Create a coverage report by running inline-code. It will keep reports in inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29835195\comment-38354757.json . 
@carpodaster yes, please :)

I guess a good default would be to hide organizers, too.

Also: I think we should filter out users that do not have an inline-code field set. Or maybe we should require it? Or both?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29835195\issue-29835195.json . 
"I am looking for … "
- a coach
- a pair
- some work space

Filtered with a radio button, interest in column stays as it is

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29835284\issue-29835284.json . 
- Ask user for their country
- Filter by country

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29859860\comment-38347711.json . 
i'm for the quicker fix :) and it's only available for logged in-users, so shouldn't be a pickle. they also display their email address if they send an email to the open community mailing list...

also if they really don't want to, they don't have to display their email

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29859860\comment-38394922.json . 
Done in #77 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29859860\issue-29859860.json . 
Two options:.
1. Display their email address if user is logged
2. Provide a very simple contact form and let us send mail in the background

No. 1 would require the explicit permission that we'll make the email addresss  "public" (if only for signed-in users)

No. 2 would leave the email addresses private but means a bit more work on our side. The sender would give away their email address first (ie. we'd set this as the emails From: address) and the two parties can then communicate via email normally.

I'm leaning towards No. 2. What are your thoughts?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29865224\comment-38253018.json . 
+1

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29865224\comment-38253382.json . 
I'm not happy with the location field - required or not; you can enter whatever you want to, typos included, and that makes filtering / sorting a pain.

Sure, we can make the location field a required one easily enough, but is a (predefined) country select a better option (see #73)? Location could become inline-code. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29865224\comment-38257484.json . 
yesss! yes, that would be uber cool! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29865224\comment-38289032.json . 
We import inline-code from the GitHub profile. But sure, we could skip that and just add inline-code and inline-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29865224\comment-38293545.json . 
@svenfuchs but i'm pretty sure, location is a type-in field for now? how can we simultanously already be importing that from github?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29865224\comment-38303139.json . 
We only grab that after the initial sign-in, ie. when the user is created from Github.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29865224\comment-38303187.json . 
I'll to see this over the weekend

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29865224\issue-29865224.json . 
that would make me and the list so happy.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\comment-367515781.json . 
O, and could you add a before and after screenshot to the description ? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\comment-367562886.json . 
Thanks @F3PiX for the suggestion, I made the required changes.
Also, I did block-code., but I didn't make the new branch for doing this task.
If not acceptable I'll again make a pull request.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\comment-367591281.json . 
Yes please, close this one and open a new Pull Request :thumbs_up_sign: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\comment-367616899.json . 
I just realised that the issue is not solved with just checking if there 'are' teams. 
See this comment:  The teams are present in the database. They are not in the dropdown, because we are 'between seasons' (= between two Summers of Code). 

And in a later comment, the proposed solution is to show the teams from the previous season, instead of hiding the button: URL.

So, there are two situations:.
1) During the current season, the dropdown is populated with the teams that are inline-code inline-code.
2) Before the current season starts, the dropdown is populated with the teams that were inline-code in the previous season. 

Let me know if you need help!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\comment-367706577.json . 
Hi @F3PiX 
Arushi and I are working on this issue. We are stuck, that what is the structure of the database. We tried to figure it out and come to know that drop-down is showing only those teams which are part-time with season id as 1. Drop-down is not showing "sponsored" and "voluntary" teams even though their season id is 1.
So, we want to clarify that is it only season id which helps in finding the present and past years team.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\comment-367726562.json . 
Aha. In previous years, teams were not 'part time' or 'full time' but 'sponsored' or 'volunteer'. We changed that recently. The weird thing :-) is: that doesn't matter for a team being  inline-code  or selected.

1) BUT I just discovered that the seeds were not updated when that ^ change was made! URL.
When you forked the repo, you got some database records, but not with the new 'kinds'. 
So, the first thing to do would be updating the seeds. That will make your life so much easier!
You can update the seeds, see the lines in my link, then do inline-code (to get rid of the existing records) and then inline-code (to load the new seed data).

Hope that helps!! 

After that, all 'accepted' or 'selected' teams of a season should show up in the dropdown, according to this line:  
URL 

2) Then to the season. You are close. We don't use the season.id though. In the teams model, you''ll find the inline-code scope for teams. That should get you started.

The dropdown should show the 'accepted' or 'selected' teams only, for any given season only. I'd think the inline-code helper method (see link above) takes care of excluding the not-accepted teams. So yes,  for the dropdown logic you can focus on the team's season. 
 
Hope that this helps! Happy coding!




.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\comment-368090656.json . 
Thanks @F3PiX for giving us the detailed explanation. It really helped us to get more familiar with the code and also we learnt a lot when trying to fix the issue. We made the required changes and the new pull request #941  is created by @simransinghal. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\issue-299066731.json . 
Fixed Issue #934 
When the there is no team to be displayed then the presence of team drop-down is redundant. So drop down will only be shown when there are teams in the database, else it won't be shown.
If there is no team then:-

!screenshot-2018-2-22 rgsoc - teams app 1
If it is:-
!screenshot-2018-2-22 rgsoc - teams app

.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\pr-170542777.json . 
Fixed Issue #934 
When the there is no team to be displayed then the presence of team drop-down is redundant. So drop down will only be shown when there are teams in the database, else it won't be shown.
If there is no team then:-

!screenshot-2018-2-22 rgsoc - teams app 1
If it is:-
!screenshot-2018-2-22 rgsoc - teams app

.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\pr-comment-169812486.json . 
Because of readabilty, I'd vote for:.
- inline-code 
or
- inline-code 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\pr-comment-169812922.json . 
Nice, the string instead of a blank field!!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-299066731\pr-comment-169850748.json . 
Yes I again make a pull request after changing it to 
block-code.
Thanks for the suggestion.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-105661230.json . 
Closed with #94 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-38350191.json . 
Afaik you can't log on with a Github Org account so companies have to be created manually and individuals can assign themselves to that company.

I reckon we assume there won't be any trouble with people pretending to be a representative of that company (or other legel shenanigans)? Or shall we verify the company manually somehow? Sounds like overkill.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-38352677.json . 
That's right, one can't log in with a GitHub Org account. People can just sign up as a representative of that company. 

In order to make that visible I guess we'd need an inline-code text field or something so they can give additional information, like, in this case, the company name.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-38389198.json . 
I was thinking of maybe doing like this as it's the simplest solution. Add a "I represent a company" checkbox, and when checked display extra fields like "Company name", "Company info"

Thoughts?

!2014-03-23-182610_704x753_scrot
!2014-03-23-182045_363x456_scrot

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-38393780.json . 
@plexus looks good!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-38743199.json . 
This is "done" in the sense that we now ask for and store the company info (cfr #79). However we don't display it anywhere yet. @anikalindtner could you reopen this with some info on where that info needs to go? thx

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-38746354.json . 
@plexus sure! coolio for this going forward <3 will give it a look and think about it tomorrow. probably on the profile pages of the people though (?) but let me give it all a good look and try-out.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-38943163.json . 
@plexus i think we should add that to the profile of the people offering that space.

i think it should include:.
- [ ] company name , info
- [ ] website
- [ ] we offer space for ___ students 
- [ ] we offer ___ coaches -> link to coaches' teams-app-profile if possible or github profile

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-38947629.json . 
@plexus @anikalindtner I think that calls for a separate inline-code resource. A company could be created the first time someone assigns themself to it and then subsequent coaches/volunteers can select from a list of already existing companies. That way we could decouply the company info from a given user's profile and list it separately. Wdyt?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-39077949.json . 
@carpodaster sure, sounds good to me :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-39078242.json . 
I tried to avoid that route to keep things simple. There's a can of worms
in there of who "owns" the company info. Can anyone just add themselves to
a company and edit the company info? Do we create access rights that the
person who created the company can grant? etc. cc @svenfuchs

2014-03-31 13:27 GMT+02:00 Anika notifications@github.com:.







## 

| @plexus URL  | arnebrasseur.net | The Happy
Lambda URL |

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-39080148.json . 


That would be no different than the current implementation, only with the added value of letting them all point to the same company instance.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-39080452.json . 
How is that? I don't think anyone can edit other people's profile.

2014-03-31 13:58 GMT+02:00 Carsten Zimmermann notifications@github.com:.










## 

| @plexus URL  | arnebrasseur.net | The Happy
Lambda URL |

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-39081116.json . 
No, of course not. But you can always pretend to represent company X – and should we add the company info as suggested by @anikalindtner, they can write whatever they want to.

I agree with you that adding the layer of access rights to edit company profiles opens Pandora's box. Is assigning the first to create a company to be the sole person to edit it (w/o the ability to assign others) a middle ground maybe? People would still be able to assign themselves to that company but not start edit wars.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-39081393.json . 
That might be a good idea. This keeps things simple enough, and we can
reconsider based on actual usage. We can also manually change the
owner/representative of a company if that's asked for.

2014-03-31 14:12 GMT+02:00 Carsten Zimmermann notifications@github.com:.















## 

| @plexus URL  | arnebrasseur.net | The Happy
Lambda URL |

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-39081588.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-39958392.json . 
hejhej what's the status on this issue? i'd love to play around more with the coaching companies and maybe show them on a map to promote it more and make it easier for people to find. for that we need this issue to be fixed though. @carpodaster @plexus is anyone working on it? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-40278164.json . 
Heya! Currently not working on it, no, but could allocate some time tomorrow.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-40279856.json . 
@carpodaster coolio. @lucaspinto is working on it today, let's see how far we get! <3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-40286701.json . 
So,

i began working on it:.
URL.

I did not have to time to take care of the views though, so I'll continue tomorrow.

Any feedback in between is very welcome (should it be about naming, structure or coding style)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-41562328.json . 
@lucaspinto Were you able to finish this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\comment-41614709.json . 
I just did :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29958393\issue-29958393.json . 
so this is the problem:.

only individuals can say "offer space", but students can't see what kind of space, where is the office, etc. So i'd say we 

-> make it possible to register as a company. We could have a profile a little bit altered than for the individuals, but provide more info on where the office is, how much space (e.g. 2-6 teams)

Technically maybe we could do it like the "teams", people can belong to. (URL so that there is a "company" you can belong to. And if you click on the company you'll see more details. 
But this is just an idea how to fix this easily. 

Other ideas? Who could take this on? @carpodaster @plexus @pxlpnk @svenfuchs ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-299788868\comment-368510876.json . 
Hello, @F3PiX  Should we go ahead to fix the changes suggested by you?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-299788868\comment-368638194.json . 
Sure! Use the activities instead of the kinds. :thumbs_up_sign:  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-299788868\comment-369405206.json . 
Heads up: you'd want to pull master and rebase your branch onto it. The latest changes in #946 will affect the issue you are working on! .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-299788868\issue-299788868.json . 
Related issue #934
Also, refer #940 

When the there are no teams for the current season (i.e. between the two seasons) then drop down will show the teams of the most recent season. At present, when there is no selected team, the drop-down is empty thus acting as redundant for the activity page. 

Before:-

!rgsoc_teamapp

After:-

1)Between two seasons when there is no selected team, the drop-down will show past season teams.

!screenshot-2018-2-23 rgsoc - teams app 1

2) If current season teams are present then drop-down will show current season teams.

!screenshot-2018-2-23 rgsoc - teams app


.
#rails-girls-summer-of-code/rgsoc-teams\issue-299788868\pr-171071718.json . 
Related issue #934
Also, refer #940 

When the there are no teams for the current season (i.e. between the two seasons) then drop down will show the teams of the most recent season. At present, when there is no selected team, the drop-down is empty thus acting as redundant for the activity page. 

Before:-

!rgsoc_teamapp

After:-

1)Between two seasons when there is no selected team, the drop-down will show past season teams.

!screenshot-2018-2-23 rgsoc - teams app 1

2) If current season teams are present then drop-down will show current season teams.

!screenshot-2018-2-23 rgsoc - teams app


.
#rails-girls-summer-of-code/rgsoc-teams\issue-299788868\pr-comment-170453081.json . 
It can be confusing that we have the 'in_current_season' as a scope on the team, and then a separate method for inline-code hidden in the controller. 
It would be great to have  a new scope in the Team model, that mirrors the existing 'in current season' scope. So, that would be 'in_previous_season'. 
With that scope in place, you can use the inline-code method in line 31 to switch between the two scopes. YaY! That means you don't need the inline-code clause in the view!
 

The changed 'kinds' categories makes working with the kinds harder now. :-( I can think of a neater solution with the accepted method, but maybe there is a better work around. What if we check if there are inline-code with activities? I'd think that only the 'accepted' teams had activities. 
I'd like a second opinion on this solution. cc @carpodaster || @klappradla ^

 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-299788868\pr-comment-170462328.json . 
Good point @F3PiX :thumbs_up_sign: 

I just added a migration align the past seasons' teams with the current datamodel in #946 , but we're still discussing whether or not it's a good idea to do it. For the sake of keeping the complexity in a sane scope, I'd personally prefer to migrate the existing data and then simply use inline-code again.

Otherwise yes, looking for activities would be a valid option (plus I'd probably also prefer it to listing all ancient "kinds").
.
#rails-girls-summer-of-code/rgsoc-teams\issue-29991141\comment-38393793.json . 
@carpodaster looks good to me! lgtm :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29991141\comment-38395443.json . 
Uhm... auto-deploy doesn't run migrations?

!help

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29991141\comment-38399384.json . 
It seems this needs to be set up: URL ... I guess dpl (and thus travis) doesn't know that this is a rails app and requires running migrations.

Just gonna add this. Let's see what happens :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29991141\issue-29991141.json . 
This should solve #74 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29991141\pr-13879053.json . 
This should solve #74 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29996785\comment-38456132.json . 
Should be fixed by 65119a3e2932fcd4cd7ac1e6afe8ef7023e099c1

.
#rails-girls-summer-of-code/rgsoc-teams\issue-29996785\issue-29996785.json . 
After this build URL I have just found the application returning 500.

I have inline-code, which brought it back.

Not sure why the auto deployment doesn't do that itself, but I guess we should fix that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-300013167\comment-368296837.json . 
I would like to work on this issue if it seems important.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300013167\comment-368327789.json . 
Hey @dimi-23 :waving_hand_sign: 

Thanx a ton for reporting this :person_with_folded_hands: 

The problem originates from changes to the possible inline-code of teams we recently introduced before this upcoming season (cc @ramonh ). In short: the old data of course does not adhere to the current datamodel :winking_face: 

The "fix" would be to simply run a migration on the production database. Therefore I'm not really sure if this issue is a good fit for you to work on :thinking_face: It's a) a bit boring and b) required access to several internal resources (e.g. the production database) which we - as you probably understand - cannot just give to you :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300013167\issue-300013167.json . 
Currently when a particular year is selected from the drop-down menu as shown in the figure below, no search results are obtained.

!image
This issue needs to be rectified.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300013460\comment-368297105.json . 
I would like to work on this if it seems essential to be integrated.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300013460\comment-368333305.json . 
Hello @dimi-23, thank you for your suggestion!

This is nothing that is on our immediate schedule, but we are more than happy to accept pull requests that address this. So yes, please go ahead :smile: 

I would still like to close this issue as we strive to keep our open issues count small (we're kind of failing in that regard already :cry: ). So when you open a pull request, feel free to refer this issue even if it has been closed.

Thanks in advance for your contribution!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300013460\issue-300013460.json . 
A new feature can be added to the RGSoC TeamsApp wherein the time left/deadline for the application process of RGSoC to end can be shown, so as to remind the participants whenever they access the site. Also, other information like dates for declaration of results can be incorporated.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300025149\comment-368308320.json . 
I would like to work on this issue if it seems important.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300025149\comment-368325138.json . 
Hi @AnkitaKhurana :waving_hand_sign: 

I'm sorry, but I fear I don't really understand the issue here :see-no-evil_monkey: 

What is the problem with the URL in your opinion? The link exposes the activities as an RSS feed in the atom) xml format for feeds. I would not know how this should be done any different - afaik it's the default process as e.g. news sites use it as well.

Depending on your browser, Firefox for instance, you can directly subscribe to the feed from this url:.
<img width="1792" alt="screen shot 2018-02-25 at 17 56 23" src="URL.

Therefore I'd close this here. Feel free to reopen in case I got you totally wrong and am overseeing an actual problem of the app :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300025149\issue-300025149.json . 
The RSS Icon in Activity Area is directing to a misleading link which needs to be corrected.

!image
Rss Icon on the right most section


!image
URL it is directing to 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-300025374\comment-368308502.json . 
I would like to work on this issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300025374\comment-368326414.json . 
Hey @AnkitaKhurana :victory_hand:️ 

Thanx for reporting :person_with_folded_hands: 

The question here is: how could this be "fixed"? The column is based on the inline-code attribute of a user record which is right now non-mandatory. See the user form for this :white_down_pointing_backhand_index: 
!artboard 1

I'm personally strongly against making more attributes of the user profile *mandatory* unless they **really** have a benefit in making the program easier to run / easier for the orga team or something similar. Otherwise, it just raises the bar for new users creating their accounts, e.g. potential coaches, which would be sad if we'd miss them.

Right now, the inline-code is a mandatory attribute. Guessing a user's timezone based on her country won't work though. Plus: eventually people want to change their timezone when they're travelling.. :thinking_face: 

I would be inclined to close this issue as something we cannot "fix" (or maybe don't need to fix :winking_face: ). Or what would be your take on this? Did you already have an idea in mind how to solve this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300025374\comment-368327951.json . 
**Edit:**
We just came up with an even better "fix:trade_mark_sign:" for this issue @AnkitaKhurana :electric_light_bulb: 

Let's just fully get rid of the inline-code timezone column on the community table. It's not a super relevant information in this content and the table is already way to huge anyways.

Would you be interested in implementing this change?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300025374\issue-300025374.json . 
 The ‘Time Now’ column of a few community members is not fetching any results in the Community page.

!image

.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368329638.json . 
Thanks for this @klappradla ! 

I'm a bit torn about this, because we'd be losing past information, that is, who was sponsored and who was volunteering. Maybe we'd want to use this in the future?

What do you think? Also pinging @alicetragedy if you don't mind :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368331915.json . 
Ok, I updated the migration to use inline-code directly on the DB.

For your concern about past data @ramonh: I was also asking myself this... :thinking_face: 

My conclusion was: doing statistics about past seasons vs. having a working Teams app are two different pairs of shoes. The app being a "app", the datamodel is of course constantly changing from season to season. By implementing / offering pages like the inline-code where users would be able to browse teams from previous seasons, I feel like we bought in to also caring about past seasons' data needing to be usable with the current version of the app, rather then sleeping in some corner of the database forever :coffin:️ 

Similar to removing deprecated columns, in my opinion, for the sake of maintainability anything that is old and no longer used should be removed from the app. Therefore, I went in favor of losing these bits of information. Afaik (correcty me if I'm wrong @alicetragedy ) we have DB dumps from each season that can be used for doing "statistics" on, which in my opinion is also better scalable then trying to keep the db schema backwards compatible forever.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368334335.json . 
Oh! @klappradla if that's the case then I'm all for it. Well put, thank you! :person_raising_both_hands_in_celebration: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368336614.json . 
I generally agree to the notion that the app is moving and we cannot guarantee backwards compatibility forever. It's the price we pay for several other gains (like not having to set up / fork the app every year, re-using users/organizers, general visibility of past teams, …).

Fwiw, can we not _add_ the new inline-code values and map the past values to what we define here as their present day counterpart in the AR scope on team? We'd have to make sure that we don't do inline-code (which we do, I think :thinking: ) and go through the proper AR scope instead.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368338238.json . 
Also a nifty solution @carpodaster :thumbs_up_sign: 

I'd be up for doing it.

Do you have any personal preferences for an approach on this? Also @ramonh ? All for not-migrating but updating the app logic?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368339773.json . 
Quickly leaving my thoughts in here: I think it would be a good idea to think about doing regular data dumps (e.g. maybe at the beginning and end of each season?) anyway :smiling_face_with_halo: and generally about tracking the kind of information we need better than we currently do.
Maybe trying to avoid too much backwards compatibility can help with that :)
I just checked though, and we've got the list of sponsored + volunteer teams in our internal wiki (except for 2013 and 2014). Looking for this information in a current dump and saving it in the same way as we did after 2014 would take care of the issue raised by @ramonh! (and if the information is unavailable in there for whatever reason — iirc there might not have been a teams app in 2013 — then there's other ways to figure this out. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368426926.json . 
Thanks for your thoughts everyone! 

So if I understood correctly, we wouldn't actually change the kinds, but have them be linked somehow, correct?

Also, what's the best way to do a db dump? And to store them? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368440010.json . 
Ok, should I update this PR accordingly to do the mapping tonight @ramonh ?

For the dumps: Heroku's Postgres plugin / extension or however they call it does pg dumps already. I'm not sure for how long they're stored thought... For storing a yearly dump on our side, what about just an additional private inline-code repo? (cc @alicetragedy )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368442818.json . 
That'd be super cool, thanks @klappradla .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368671517.json . 
Ok @ramonh & @carpodaster I updated the inline-code and inline-code scopes on the inline-code model to also include the legacy terms *(inline-code and inline-code)*. The inline-code scope is then based on these two and all further occurences of explicitly using the contents of the inline-code constant.

**TL;DR** I implemented what I think @carpodaster suggested :winking_face: 

There is one leftover though: the inline-code model still make use of inline-code. I did not really understand the code there and the purpose why the inline-code  are actually used :cat_face_with_tears_of_joy: 
It for now does not matter since this particular piece of code operates on current data anyways. I'll have a follow up PR where I update this.

Aside :white_up_pointing_index:️ I also included some small drive-by-fixes in the Team model, e.g. removing some no longer working associations and the duplicated inline-code scope. It it's too many changes, try looking at the individual commit messages.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368714150.json . 
O sorry!!! I was late to the party. So usefull to review merged PR's :face_with_tears_of_joy: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368791292.json . 
No worries @F3PiX :green_heart: 
This PR is not yet merged, just another one referencing this :winking_face: And I'm of course always super happy about comments :hugging_face: _(especially since all the coding I do here is definitely **after** the cognitive heights of my day)_
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368801758.json . 
Thank you so much for your comments @F3PiX :person_with_folded_hands: 

Not sure if I'll find the time tonight, but probably until Thursday I can do some updates :ship: 

Very good point with the seeds! I actually forgot about them :see-no-evil_monkey: I'll updated.
However, a more general thing about *the seeds*: I think they are in the conceptually wrong place and should instead go into a inline-code task. I'd update this as a follow up to this already sorta large PR - unless people disagree with this.
Background: inline-code at least to me is the minimal data required for the app to actually run. So maybe something like a inline-code because everything else depends on an initial season to be there (just as an example). The seeds are automatically run if one does a inline-code, also on production.
These things :white_up_pointing_index:️ make it the wrong place for "fake" data for development where one would frequently drop the database or even run the seeds multiple times.
I can get into more details about this, but that's the rough tl;dr reasoning behind this :winking_face: 

For restructuring models: I in general agree that it would be a useful things to do. **However**, I personally think it is sort of pointless if one does not combine it with cleaning up the specs a bit, removing non-used methods and things like that. Therefore an in my opinion better approach is to do something like


Not sure if :white_up_pointing_index:️ is good fit for newcomes to the codebase though :thinking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368828343.json . 
@klappradla 



:winking_face:Yeah, and me reading the merge messages after the cognitive heights of my day....

I totally agree with you on the concept of a db:populate task vs seeds. Would you mind if I take that upon me? Or would you prefer to do it yourself?

Great point also about cleaning up the models, but yeah, that makes it unsuitable as beginner_friendly tasks. 




.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-368829038.json . 
:cat_face_with_tears_of_joy: 

And sure, go ahead with the inline-code thing @F3PiX :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-369217939.json . 
Ok, rebased and removed the commented code in the inline-code model :white_heavy_check_mark: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-369301703.json . 
Ace!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-369403758.json . 
Rebased again and slimmed down the slightly overkill inline-code scope _(at least for our current use case)_.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-369411092.json . 
Does anyone want to do another review or should I merge this?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\comment-369672260.json . 
Well, I'll just merge then. It's too much effort to rebase all the time :winking_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\issue-300046202.json . 
As #942 reports, displaying teams based on the season currently does not really work, as the old records don't adhere to the new datamodel for inline-code - we have different **kinds** now: inline-code and inline-code.

I checked with the production db and added a small migration to move inline-code to inline-code and inline-code to inline-code. Even though that's not a :hundred_points_symbol: fit, I'd say it's a better option then redefining what an inline-code team is, or not showing any past teams at all... What do you think @ramonh ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\pr-171242276.json . 
As #942 reports, displaying teams based on the season currently does not really work, as the old records don't adhere to the new datamodel for inline-code - we have different **kinds** now: inline-code and inline-code.

I checked with the production db and added a small migration to move inline-code to inline-code and inline-code to inline-code. Even though that's not a :hundred_points_symbol: fit, I'd say it's a better option then redefining what an inline-code team is, or not showing any past teams at all... What do you think @ramonh ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\pr-comment-170460777.json . 
Minor note here: I've understood that it's better to use inline-code with an SQL statement instead of using the inline-code functionality. Is this overkill?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\pr-comment-170461103.json . 
Hm, since I redefine the class with its table name, using AR is generally "save" in this migration.

But you're of course right, I'd also prefer using the raw connection. I just thought it may be harder to read and less in the line of the existing migrations... But I'll see how it looks like :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\pr-comment-170756744.json . 
This is super cool, did not know!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\pr-comment-170787455.json . 
Double check: The  inline-code is gone? We don't need that? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\pr-comment-170788172.json . 
I like this solution :person_with_folded_hands: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\pr-comment-170788545.json . 
Now that you are at it: can we get rid of line 11 as well?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\pr-comment-170852011.json . 
:white_heavy_check_mark: no, we don't need it any more.

The inline-code has a inline-code and a inline-code, so the inline-code associations as it is defined here is no longer available on the datamodel.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\pr-comment-170852342.json . 
Oh yes, I probably can.

I remember I wanted to search for what this could have been once - but then just forgot about it :see-no-evil_monkey: 

I'll clean this up.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300046202\pr-comment-173180902.json . 
Nice! Didn't know about inline-code (seems logical, just never thought about it)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300051257\comment-368338541.json . 
Oh and just for your information: I also started updating inline-code, but it's touching way too many files, so I'll add it in a separate PR :cat_face_with_tears_of_joy: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300051257\comment-369766287.json . 
**update:** the efforts of updating inline-code are super huge, especially since we also use an additional soft-deprecated way of using icons as pseudo elements... It would make more sense to to this update combined with a refactoring of legacy css parts...

I'll keep the branch around, but for now I don't think it makes much sense.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300051257\issue-300051257.json . 
Some minor updates to dependencies (only the ones without breaking changes affecting us), including Rails.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300051257\pr-171245308.json . 
Some minor updates to dependencies (only the ones without breaking changes affecting us), including Rails.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300153653\comment-368505699.json . 
Thanks @klappradla !

Apologies, I'm having a hard time hitting what should be tested and what already is. :loudly_crying_face: 

As for the legend, this is currently at the bottom of the list. What's perhaps missing is an indicator for when a team is not selected.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300153653\comment-368525468.json . 
I've taken care of these, @klappradla thank you very much for the feedback! Could you please take another look?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-300153653\comment-368610799.json . 
All good :party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300153653\issue-300153653.json . 
Related issue #925

The orga dashboard of the teams app will now show full and part time teams and allow filtering thereof.

There was also a bug where the star icon wasn't being correctly shown.

<img width="1197" alt="screen shot 2018-02-26 at 09 52 49" src="URL.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-300153653\pr-171313688.json . 
Related issue #925

The orga dashboard of the teams app will now show full and part time teams and allow filtering thereof.

There was also a bug where the star icon wasn't being correctly shown.

<img width="1197" alt="screen shot 2018-02-26 at 09 52 49" src="URL.


.
#rails-girls-summer-of-code/rgsoc-teams\issue-300153653\pr-comment-170586024.json . 
Hm, why do we even have the inline-code scope around any more? Isn't this the same as inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300153653\pr-comment-170586231.json . 
Can you add tests for these new scopes?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300185408\comment-368609158.json . 
Closed via #950 

:person_with_folded_hands: @ramonh .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300185408\issue-300185408.json . 
Oops! 

Some coaches aren't able to confirm their team membership, because the teams are hidden for everybody.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\comment-368525306.json . 
Done! Thank you @klappradla, could you please take another look?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\comment-368608829.json . 
🥇.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\issue-300196626.json . 
Related issue #949 

This will show all teams if user is equals to signed in user

.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\pr-171344315.json . 
Related issue #949 

This will show all teams if user is equals to signed in user

.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\pr-comment-170560373.json . 
Quick note here: It seems we don't have access to inline-code for inline-code type tests. I therefore need to explicitely stub inline-code, as far as I understood from here:.
URL.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\pr-comment-170589019.json . 
Typo: the inline-code is extra.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\pr-comment-170589359.json . 
Why are you requiring these matchers here? I don't see them being necessary here...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\pr-comment-170589478.json . 
No need for bang here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\pr-comment-170589534.json . 
Also no need for bang here.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\pr-comment-170589950.json . 
Personal preference, but I find this a bit too verbose...

How about just creating the role?
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\pr-comment-170590447.json . 
Again personal preference, but I think it would be more convenient if you'd also add a visible team for the user which then could be expected in the latter example.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\pr-comment-170590925.json . 
Cosmetic thing, but I prefer using inline-code instead of inline-code and building a new array.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300196626\pr-comment-170596743.json . 
Did not look into the link, but the approach looks valid to me :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300281238\comment-368550233.json . 
Thanks for merging that so quickly @carpodaster !! :heavy_black_heart:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300281238\issue-300281238.json . 
There was an incident where students got their names on the opposite application forms. 

In the interest of privacy, we'll disable this feature until we can figure this one out.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-300281238\pr-171406369.json . 
There was an incident where students got their names on the opposite application forms. 

In the interest of privacy, we'll disable this feature until we can figure this one out.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-300422164\comment-368675316.json . 
Whoa! And that's it? That sounds incredible! I was having lots of frustrations with that today. Count me in!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300422164\comment-368681396.json . 
:party_popper: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300422164\issue-300422164.json . 
While working on #946 I realized it takes a lot of time to start the test suite *(which is a bit frustrating when doing TDD and having to run the certain tests over and over)* :snail: 

So I added Spotify's bootsnap. It's a drop in solution for basically a faster start of the app (and does not conflict with spring) and will be part of the default Gemfile in the upcoming Rails version.

Small proof of concept :winking_face: :.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300422164\pr-171511319.json . 
While working on #946 I realized it takes a lot of time to start the test suite *(which is a bit frustrating when doing TDD and having to run the certain tests over and over)* :snail: 

So I added Spotify's bootsnap. It's a drop in solution for basically a faster start of the app (and does not conflict with spring) and will be part of the default Gemfile in the upcoming Rails version.

Small proof of concept :winking_face: :.
block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300582587\issue-300582587.json . 
Goal: Distinguish between seeds and fake data
- Seeds only for data that is required to make the app run
- Fake data for dev happiness

How
- Keep the basic data as seeds 
- Create a rake task for populating the database with fake data. 
- Update Readme




.
#rails-girls-summer-of-code/rgsoc-teams\issue-30071820\comment-38502379.json . 
looks good to me so. I also lost against simpleform.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30071820\comment-38509646.json . 
hmmm yeah leaning towards just manually generating the input tag and label. I want it to render like the "interests" check boxes at the bottom but was wasting too much time struggling with "simple" form

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30071820\comment-38722940.json . 
@plexus are you adding some more CSS to this or is it ready to merge from your side?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30071820\comment-38723062.json . 
I have a bit more I want to do on this, will merge it after.

2014-03-26 19:39 GMT+01:00 Andreas Tiefenthaler notifications@github.com:.








## 

| @plexus URL  | arnebrasseur.net | The Happy
Lambda URL |

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30071820\comment-38723772.json . 
Awesome! let me know if you need anything!

Arne Brasseur notifications@github.com writes:.












.
#rails-girls-summer-of-code/rgsoc-teams\issue-30071820\comment-38742954.json . 
!2014-03-26-223403_609x287_scrot

\o/

:shipit: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30071820\issue-30071820.json . 
I've done this in a very basic way, added some fields to the user and the form.

The label on the check box doesn't render quite as I expected (see image)
!2014-03-24-212231_304x203_scrot

Not an expert on simple_form, now I'm doing 

block-code.

This is even worse:.

block-code.

Any suggestions?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30071820\pr-13921753.json . 
I've done this in a very basic way, added some fields to the user and the form.

The label on the check box doesn't render quite as I expected (see image)
!2014-03-24-212231_304x203_scrot

Not an expert on simple_form, now I'm doing 

block-code.

This is even worse:.

block-code.

Any suggestions?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30082494\comment-38714409.json . 
Please object within the next couple hours or I'll hit the big green button! :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30082494\comment-38714783.json . 
I check it out in a bit (: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30082494\comment-38724133.json . 
Looks good to me, merging it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30082494\issue-30082494.json . 
Fixes #72 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30082494\pr-13928308.json . 
Fixes #72 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-300833514\comment-369143014.json . 
Hi there, thank you for reporting this!

We had this functionality this year, but found some issues with it, so we've had to temporarily disable it, as shown in PR #951 

I'll put up an issue to get the ball rolling on fixing this, so I hope you don't mind that I close this to avoid confusion.

Thank you once again! :smiling_face_with_open_mouth_and_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300833514\comment-369324645.json . 
Hi, thanks for the info! No problem! :)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300833514\issue-300833514.json . 
After submitting for the Rails Girls Summer of Code we could send an email containing the team name, the time it was submitted and more useful info for the participants to keep a record of it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300915702\comment-370381988.json . 
Hi @ramonh  I would love to work on this issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300915702\comment-370400320.json . 
Hey @cesswairimu, sure thing, thank you so much for offering to help!

Please make sure to let me know if I can help you in any way. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300915702\issue-300915702.json . 
As quickly gone over in PR #951, we've had to temporarily disable application confirmation emails as we had an incident where students were sent the opposite applications with the opposite names.

We need to have a way to ensure that the correct inline-code is used for inline-code and inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300926744\issue-300926744.json . 
We were using nonexistent accessor methods :smiling_face_with_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300926744\pr-171881136.json . 
We were using nonexistent accessor methods :smiling_face_with_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300939457\comment-369231755.json . 
Hi @SnehaMidha :waving_hand_sign: 

it would be handy if you could give a bit more context on the issue you are reporting, such as:.
- which type of comments are you referring to?
- what would be the purpose / use case for mentioning users?
- how should they be notified?
- "how" should mentioning work in practice?

This being said, I fear that the feature is not *pressing:trade_mark_sign:* enough for anyone of us to work on, since we have huge backlog of functionally more important things to fix and improve :see-no-evil_monkey: 

In order to implement inline-code mentions like you have e.g. here on Github, we'd have to augment the simple HTML text-areas with loads of JS, eventually even move them over to some sort of rich text editor like inline-code or use libraries like inline-code.
All of :white_up_pointing_index:️ is  a lot of effort and unlikely to happen until we have closed large amounts of our existing issues :snail: 

I'll therefore close this issue for now. Feel free to reopen it or file a new one, once this becomes relevant again. I hope you understand: being a small team, we have to keep the number of open issues to a number we're still able to overlook and keep in the back of our head. So we unfortunately cannot keep feature requests pointing to somewhere that far in the future :disappointed_face: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300965549\comment-369194050.json . 
(realising now that the first two options are a no-go because we need that info there, but I'll leave them for posterity)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300965549\comment-370177950.json . 
What kind of numbers make most sense and are easiest to understand without knowing the internals of the program?
For instance for inline-code:.

**a)**

| etc | etc |
|---------------------------------------------|:------:|
|Applications 1st Choice (drafts / submitted)  | 10 / 8 |
|Applications 2nd Choice (drafts / submitted) | 5 / 5  |

One would read it _(and it means)_ e.g. for the 1st choice: there were 10 drafts and out of the 10, 8 were submitted.

Or maybe not cramp all the info in one column :winking_face: 

| etc | etc |
|------------------------------------------|:------:|
| Applications (1st Choice)                   | 10 drafts /  8 submitted |
| Applications (2nd Choice)                  | 5 drafts /  5 submitted |

**b)**
Alternatively one could also display it like this:.

| etc | etc |
|------------------------------------------|:------:|
| Applications (1st Choice)                   | 10 (8 submitted, 2 drafts) |
| Applications (2nd Choice)                  | 5 (5 submitted, 0 drafts) |

:white_up_pointing_index:️ is probably easier to understand and less likely to confuse the "total number", right?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-300965549\issue-300965549.json . 
We have different views where we show information on applications connected to a certain project:.

- the project list overview (inline-code)
  - this lists all projects, is accessible to all users (also non-signed-in users) and shows numbers for applications in draft mode as well as applications that have been submitted for each project
- the single project view (inline-code)
  - this lists a single project, is accessible to all users (also non-signed-in users) and shows the *total* of applications connected to the project, regardless of whether they've been submitted or not
- the mentor dashboard (inline-code)
  - this is accessible to a project submitter only and it lists all *submitted applications* attached to each project of said submitter

As an organiser, I tend to look at the project list overview to see how many projects have how many applications attached to them. But as a mentor, I might (actually, I probably _would_) simply be interested in my own project, meaning I'd get those numbers from my own project page (inline-code). Unfortunately, that and the mentor dashboard have “conflicting“ information, in the sense that the number of applications shown in those views is not always the same. 

There are different ways to change this:.
- remove the numbers of in-progress applications on the project list overview, and only show the number of submitted applications
- move the draft vs. submitted count to the organizer project overview (inline-code) if this is a number that is more relevant for organizers than anyone else
- add rows in the table on the single project view to split the sum of applications into applications submitted vs. applications in-progress
- clarify the wording in the table on the single project view to explain that this is a TOTAL and not just submitted applications
- probably other possibilities which I'm not thinking of right now

This is not an urgent or critical issue, but something that we should definitely change in the future, depending on what we want the mentors to know and what they are interested in knowing.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301176304\comment-369400634.json . 
Thank you both for checking! <3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-301176304\issue-301176304.json . 
As discussed with @alicetragedy, it makes sense to update this field to show that the selection committee will have access to these comments.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-301176304\pr-172067353.json . 
As discussed with @alicetragedy, it makes sense to update this field to show that the selection committee will have access to these comments.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-370151995.json . 

@kytrinyx I would like to work on this issue.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-370156502.json . 
Hey @stlireri, thank you so much for offering to help on this issue! 

Since this is a bug that affects this year’s mentor reviewing phase, it would need to be implemented in the next few days. 

Would you have time to begin looking into it this weekend? I’d be happy to help you along the way and answer any of your questions if you need help. Feel free to message or ping me!

We also have some other issues that are up for grabs if you’re interested in contributing and are worried about the time pressure :smiling_face_with_open_mouth_and_smiling_eyes: In short, your help is highly appreciated!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-370248702.json . 
thanks @ramonh for offering to help. 
Am currently having an issue with installations part. am getting a weird error.
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-370248835.json . 
Hi @stlireri, sure thing! What's the error you're getting?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-370249600.json . 
after running "bundle exec rails db:setup", i get this error
'Created database 'rgsocteams_development'
FATAL:  role "stella_ireri" does not exist
Couldn't create database for {"adapter"=>"postgresql", "database"=>"rgsocteams_test", "host"=>"localhost", "min_messages"=>"error"}
rails aborted!
'
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-370250852.json . 
@stlireri it sounds like you need to run inline-code (from the README)

block-code.

Feel free to make the password empty (just hit enter). That's what I usually do locally unless I have production or protected data.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-370256091.json . 
Thanks for your help @kytrinyx ! That ought'a do it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-370923336.json . 
Thanks alot @kytrinyx , it finally worked! 
I can now access the teams app in development.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-370928933.json . 
Am trying to replicate the error as described by @kytrinyx  but i don't seem to find the applications page. Kindly help out @kytrinyx  and @ramonh.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-370961376.json . 
Nice one! I'm glad to see you're up and running.

So if you haven't already, please go through the steps in the Quick start guide.

Take a look at the output after running the command inline-code. The URL to have a look at the current list of applications as a mentor is inline-code. You can access this locally by opening inline-code in your browser.

Hope this steers you in the right direction! If you need further help, please let me know and good luck! 



.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-371241125.json . 
when i try to navigate to that URL, i get an error stating inline-code . How do i go about this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-371261843.json . 
Hey! Right, so the problem here is that your local user isn't maintaining any accepted projects for your local season of RGSoC.

If you take a look at the mentors controller, you'll find this line:.

block-code.

This right here is what's stopping you from seeing the applications.

Let's take a look at the user model to find the method on this line:.

block-code.

Right, so we need this user to have an accepted project!

If you take a look at the project model you'll see that a project has a submitter and season it belongs to. It also has a state machine, with the default state being inline-code. 

So what we need is a inline-code submitted by you, the current user, to be accepted and assigned to the current inline-code. 

There are a few ways to do this:.

- You can create one through the project creation page on your local instance of the teams app
- You can create one manually by running inline-code and creating a inline-code model manually

Of course, once you do this, you'll probably need some inline-code records that are applying to work on this new inline-code! You can do this similarly.

Phew! I hope this wasn't too much at once, and that this gets you back on track! Let me know if I can help you further, please!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-371609807.json . 
thanks @ramonh  for the analysis on the flow of the application with regard to the mentors. i now understand it better.
meanwhile, tried creating  a project via the console  and run the following 
inline-code
but when trying to save the created project by running inline-code , it returns inline-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-371611618.json . 
@stlireri after it returns false, go ahead and try inline-code, that should tell you why it's failing.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-371616068.json . 
great! it worked, i had missed a mentors email which was a required field. Thanks.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\comment-372044105.json . 
Hi @kytrinyx  @ramonh 
i am trying to make an application using my local instance impersonating a student, which fails when i try to save a profile because of the email part.  apparently no team has 2 students already so i have to add one to make the team complete.Is it possible to use a student who is already in another team?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-301179973\issue-301179973.json . 
When reviewing applications, I am able to successfully create a comment on the mentors/applications/:id page, however when attempting to update the comment it returns a 404.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30239567\comment-38744985.json . 
does this solve that issue as well: ? (if you click on coaches you won't get the coaches, but people interested in finding coaches..)

!screen shot 2014-03-26 at 10 51 27 pm

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30239567\comment-38745606.json . 
@anikalindtner ah no, that's a semantic error on my side. I'll fix this

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30239567\comment-38745834.json . 
@carpodaster :yellow_heart:  :yellow_heart:  :yellow_heart:  :yellow_heart: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30239567\issue-30239567.json . 
I assign @cypher here as he already volunteered for this.

!screen shot 2014-03-26 at 19 43 24

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30285924\comment-38784983.json . 
awesome. I will check it out locally when I have a minute! :thumbsup: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30285924\comment-38915330.json . 
@pxlpnk Do you think you'll find the time to take a look at it today? This thing has a (soft) dependency to other stuff and I want to get it out of the way first.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30285924\comment-38917566.json . 
Hey, looks good to me. Hit the merge button at any time! (:.

Carsten Zimmermann notifications@github.com writes:.








.
#rails-girls-summer-of-code/rgsoc-teams\issue-30285924\issue-30285924.json . 
- Makes country mandatory after User creation (fixes #75)
- Leaves inline-code as is, but refer to it as "City"
- Fixes #73 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30285924\pr-14049468.json . 
- Makes country mandatory after User creation (fixes #75)
- Leaves inline-code as is, but refer to it as "City"
- Fixes #73 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30285924\pr-comment-11016147.json . 
This is dead ugly. If someone with magic Bootstrap hands and simple_form wisdom knows how to fix it gracefully, please tell me.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\comment-371556663.json . 
As we run Rails 5 and Rails 5 ships with Capybara, AND claims to manage everything for us under the hood, I am a bit surprised that we need all the tweaks.
 Did you consider just generating the system specs for RSpec?  (I think, IIRC, that that would install Launchy and also takes care of the screenshots and the headless browser).

???

.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\comment-371568376.json . 
@f3pix I haven‘t used Rails 5.1’s system tests, yet. But I thought capybara is not shipped with it and you‘re on your own making it work on your machine. That was my biggest beef with system tests‘ claim that it would Just Work(tm). Also, a recent Rails 5 greenfield app was generated with a inline-code (or something like this) in application.rb.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\comment-371617855.json . 
Yeah, Just Work == It's not a bug, it's a feature.
I am using Rails/RSpec system tests in my latest project, and 5.1 is shipped with Capybara. 

Then again, I am not using CI, and that needs some configuration, according to the guide I think I used.  (I can send you a link to my repo, if it helps to see a bit more than a sandbox app. )

Seeing the discussion, I wouldn't mind if we open a separate PR for the introduction of the feature/system tests. And not mix it with the application stuff.
And then maybe we introduce it conservatively - first in dev env.
Are you open to that, @klappradla ? @carpodaster ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\comment-371622364.json . 
Great improvements! :person_bowing_deeply:  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\comment-371649702.json . 
First of all: sorry for this super messy PR @carpodaster & @F3PiX :see-no-evil_monkey: 

I threw it together pretty quickly and should definitely clean up a bit more until this is ready to be merged :cactus:.
The inline-code thing I added to the readme can come in really handy in my opinion - it's basically how I work when I have to do non-JS things that touch Rails views.

**system tests**
For what you wrote on system tests @F3PiX : thanx for that :person_with_folded_hands: 
I didn't know RSpec makes a difference between them and always just assumed, inline-code would wrap what Rails calls *"system"*. 
Not sure if I really know their application yet though :see-no-evil_monkey: . Should the tests I added in this PR be converted into inline-code ones?

:white_up_pointing_index:️ tl;dr


I also did not know about Rails shipping with Capybara and a collection of headless browsers - that's awesome :party_popper: Does this mean I can ditch anything I did for setting up headless Chrome?

**setup**
For what you wrote on the file extensions @carpodaster, yes it's true and as far as I know does not do any damage to append a inline-code to the filenames for inline-code files. It's visual clutter to me, therefore I removed it - but happy to but it back :victory_hand:️ I totally wasn't aware that people may actually care about it :see-no-evil_monkey: 

For headless Chrome setup: you're definitely right, it will add another burden to get set up and running with the app :disappointed_face: . I thought about it and considered it an okish trade off compared to the benefit in terms of productivity and maintainability. It doesn't hinder people from running the app locally and getting started with the code at first... so they may be motivated enough to dive into these details once they're on the verge of opening a PR :thinking_face: 

I think:trade_mark_sign: one needs to a) have Chrome installed b) have the inline-code installed (homebrew as you said) and c) start the chromedriver.
If I look at my processes:.
block-code.

You see inline-code at multiple ports.

I use the inline-code files that come with homebrew to start it once:.
block-code.

it for me is then automatically started and stopped whenever I run tests:.
block-code.

:heavy_plus_sign: I agree I should look for an easier setup for the Chrome & the feature tests.
I also came across chromedriver as a gem but considered it to be the wrong tool for the job (even worse then packaging JS  CSS in gems).

**so...**
I'll :eyes: for an easier setup of the whole thing plus clean up this PR. Happy about suggestions :electric_light_bulb: (system test stuff and other headless browsers)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\comment-371669673.json . 
The difference, as I understand it, is that 'feature tests' come from Capybara itself, and inline-code are feature tests integrated in the Rails system. (IIRC systems tests work with AR, and that would be the reason why the database cleaner is not needed for system tests.) 

I checked my setup (in a new Rails 5.1 app out of the box).
The gems that came with it are capybara and selenium-webdriver. (And  RSpec 3.7.0+, which introduced the system specs. We have that in the Teams app too. )
URL.

This is the only config I needed for RSpec in inline-code 
block-code.
Additionally, we'll need a inline-code dir in inline-code

And yes,  just replace type :feature with :system in the specs. The system specs accept both the inline-code syntax and the inline-code. I think I even mix them. 

The selenium_chrome_headless driver probably requires Chromium; I am not sure if inline-code resolves that.  (My guess would be: not).
The :rack_test is the default test driver, and said to be fast. You just don't see the browser open itself and walk through the pages. 

As we don't rely on JS that much, installation may be much easier when we skip the JS tests for now, so we don't need inline-code, and give us some slack to get used to system tests. 

But but but what about the screenshots? Well, you can put inline-code within a test. And even better, it always creates a screenshot when tests are failing. :smiling_face_with_heart-shaped_eyes:     

Note: I didn't use JS system tests yet, but mainly because I accidentally decided to use React :see-no-evil_monkey:  and  I am pretty sure that doesn't work with system tests.

Food for thought. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\comment-371886551.json . 
Ok, good to know @F3PiX :person_with_folded_hands: 

Sidenote: React and feature / system tests (at least with chromedriver) does of course work - and you should probably use them :winking_face: 

Does the inline-code also allow you to open up a "real", visible Chrome window and follow / debug there? I personally find it super hard, if not impossible if I cannot use the browser and its dev-tools to write feature specs. Relying on screenshots or the plain html output oft the page feels a bit like running around in complete darkness :medium_black_circle:️ 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\issue-302894723.json . 
This is supposed to fix #958 by:.
- distinguishing between *submitted* and *in-progress*  applications on the project show page 
   <img width="1312" alt="screen shot 2018-03-06 at 23 22 33" src="URL.

- updating the wording on the mentor's application index page _(the table-caption)_
block-code.

Aside that it also includes a small *drive-by-fix:trade_mark_sign:* to display the right headlines for fields on the mentor application page if the application has the project as 2nd choice:.
<img width="1312" alt="screen shot 2018-03-06 at 22 26 49" src="URL.
:white_up_pointing_index:️ this previously always said (inline-code)

**Feature Specs**
As I said in the previous dev-sync, I think feature specs with headless Chrome could make a nice addition to the app and help to make sure behavior does not break.
I for this PR added all the setup for headless Chrome and Capybara and implemented some tiny feature specs for the things I changed.

**please note:** :white_up_pointing_index:️ does of course not yet cover the behavior of the respective pages.
But I did not have more time and didn't want to make this PR even huger. I will add some follow up PRs with refactorings and feature specs - but I don't think I'll have any time until the weekend and did not want to leave this lying around until then :winking_face: 

**Up for discussion:**
I changed the configuration for the state machine column in the inline-code model, since I find it hinders test setups a bit... :see-no-evil_monkey: I'm free for discussing this / changing this back though.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-173302073.json . 
This is supposed to fix #958 by:.
- distinguishing between *submitted* and *in-progress*  applications on the project show page 
   <img width="1312" alt="screen shot 2018-03-06 at 23 22 33" src="URL.

- updating the wording on the mentor's application index page _(the table-caption)_
block-code.

Aside that it also includes a small *drive-by-fix:trade_mark_sign:* to display the right headlines for fields on the mentor application page if the application has the project as 2nd choice:.
<img width="1312" alt="screen shot 2018-03-06 at 22 26 49" src="URL.
:white_up_pointing_index:️ this previously always said (inline-code)

**Feature Specs**
As I said in the previous dev-sync, I think feature specs with headless Chrome could make a nice addition to the app and help to make sure behavior does not break.
I for this PR added all the setup for headless Chrome and Capybara and implemented some tiny feature specs for the things I changed.

**please note:** :white_up_pointing_index:️ does of course not yet cover the behavior of the respective pages.
But I did not have more time and didn't want to make this PR even huger. I will add some follow up PRs with refactorings and feature specs - but I don't think I'll have any time until the weekend and did not want to leave this lying around until then :winking_face: 

**Up for discussion:**
I changed the configuration for the state machine column in the inline-code model, since I find it hinders test setups a bit... :see-no-evil_monkey: I'm free for discussing this / changing this back though.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173172276.json . 
Would that mean that we don't need to install it manually in inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173172510.json . 
(These CI hacks are why I hate Capybara so much :upside-down_face: )
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173172888.json . 
Empty line + can you sort the gems in that block alphabetically?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173173164.json . 
Were you able to test this on a Linux machine? I cannot verify this until Sunday since I only got a MBP with me right now.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173173735.json . 
:heart_decoration:  This is great!

Can you toss in a "_for local debugging puposes_" so that we don't end up with committed inline-codes? ;) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173174470.json . 
Can we make this a helper method?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173174743.json . 
See above: move to helper method?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173175808.json . 
or shall we name the partial inline-code and define it as the canonical way to display a project's details with its inline-code:.

block-code.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173176486.json . 
Is this a TODO for this PR?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173176611.json . 
Turn these into inline-code .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173284641.json . 
Cool! I didn't know that :dancer: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173285531.json . 
:heavy_black_heart:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173286965.json . 
I am not familiar with inline-code in the view. Is it rescue-ing the link? :thinking_face: 
(And if so, wouldn't it be needed in the next link on line 10 as well?   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173287832.json . 
Do we need both the js_driver configs, in Line 4 _and_ line 8?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173302946.json . 
As I said, I threw this together pretty quickly just to show how it could eventually look like :see-no-evil_monkey: Sorry for the messy state this is in.
For the installation, I followed the Travis Docs (basically coming from this Thoughtbot blogpost and the setups I use at work).

As of the docs, both would be necessary, but I think one should definitely do some more experiments there, since it looks suspiciously complex :eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173303140.json . 
:cat_face_with_tears_of_joy: we could probably even ditch this, since the app is not very JS heavy. It's just a default we always have at work, so I thought why not.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173303675.json . 
No, did not try this out on a Linux machine, just on a trusty Ubuntu Docker container some weeks ago.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173304225.json . 
Depends :winking_face: 

I thought if we agree on feature specs being useful, I'd update the ones for the mentor bits of the app to actually test more than just the tiny changes from this PR and then also address the timing things there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173304765.json . 
:electric_light_bulb: having solely worked on projects where Rubocop discourages the use of inline-code I actually forgot about it :see-no-evil_monkey: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173306924.json . 
Hm, interesting question! I tbh have no idea what this is doing even though I may have written it myself some time ago...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-302894723\pr-comment-173307161.json . 
Probably not - thanx for pointing out :person_with_folded_hands: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303045126\comment-371322047.json . 
Thanks @ramonh for working on this. Looks good to me. :party_popper:.

I think removing volunteer flags was also in that list I made along with this stuff. Although I was under the impression that you did that change at lot of other parts of the reviewing system. All I can see at the moment is that the application table have column 'Volunteer (h per week)' which I'm not sure why is named as 'volunteer'. :thinking_face:.

On a side note, thanks @klappradla on accidentally clearing one of my confusion. I was also wondering why same constant is defined at two places. :slightly_smiling_face:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303045126\comment-371425115.json . 
Thanks for the feedback, all! I'm on it :thumbs_up_sign: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303045126\comment-371427407.json . 
And done! Could you please take another look? :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303045126\issue-303045126.json . 
Since we're switching to having part-and full time teams, this flag is no longer needed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303045126\pr-173411360.json . 
Since we're switching to having part-and full time teams, this flag is no longer needed.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303045126\pr-comment-173297357.json . 
Good job :thumbs_up_sign: 

To be honest, I fear that skipping the inline-code flag on the table was probably a mistake - I think it's fine to just use the exact same collection in both cases 🤞 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303045126\pr-comment-173298188.json . 
:heavy_check_mark:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303045126\pr-comment-173387199.json . 
Thank you!

I'm not sure. I'm all for merging the flags, and adding the inline-code one to the selection table won't break anything, but I wonder if it makes sense, as selected teams would never show up during the selection process, wouldn't they?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303045126\pr-comment-173397983.json . 
I don't remember the exact details of the selection process. But I'd say they indeed need to show up in the table as I don't see another way for reviewers to have an overview on which teams were selected.

The actual "reviews" are based on each reviewer's inline-code which is a second list view. The table shows all the teams with their points, review status etc. and is then the place where teams will be selected.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\comment-371632515.json . 
:sailboat:️:dash_symbol:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\comment-372010814.json . 
Thanks @ramonh for fixing this. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\issue-303065645.json . 
Related issue URL.

This runs a pre-validation hook on applications to ensure that the flags are unique.

The reason I went with inline-code is as described in the Rails docs, that this is the step where attributes should be adapted.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\pr-173427021.json . 
Related issue URL.

This runs a pre-validation hook on applications to ensure that the flags are unique.

The reason I went with inline-code is as described in the Rails docs, that this is the step where attributes should be adapted.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\pr-comment-172882535.json . 
Since inline-code is an attribute on inline-code, wouldn't it be easier to add a validator instead of the before hook?  And back it up with a database constraint.  
If that is possible at all, I am not totally sure about how the flags are set. 

If that ^ is not possible, maybe add an error message to the :ensure_flags_unique method? Because this will fail silently, right?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\pr-comment-172882905.json . 
See other comment, about error message :bomb: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\pr-comment-172890299.json . 
Thank you for the feedback!

Hm, I'm afraid I don't understand the question. What I'm doing here is cleaning up, not validating. Maybe the problem is in the name? Maybe inline-code would be better?

What do you thinK?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\pr-comment-172906383.json . 
LOL As I totally misunderstood this as cleaning up, that may be a better name :-)
(I don't have access to the issue you are linking.) 
So, is the goal accomplished when the cleaning up happens _only_  when you update or create a validation?  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\pr-comment-172956227.json . 
Sweet! Thanks for confirming that this was a bad naming issue :) 

This is meant to be run before the record is validated. That is, the flags will automatically be cleaned up before the application is validated (and by extension, saved). 

Hope that makes sense!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\pr-comment-173010245.json . 
Just a suggestion: maybe we can save some microseconds by not persisting the record? Something like:.
block-code.
But no biggie, the way it is put right now is also perfectly fine.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\pr-comment-173010829.json . 
Since we're not using this outside of the scope of the inline-code model, this should definitely be in the inline-code section :police_officer: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\pr-comment-173100869.json . 
My bad! Makes sense, will do.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303065645\pr-comment-173101422.json . 
Makes sense to me, good call!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\comment-371178063.json . 
OMG I'm so happy to see this happen! Rainbows and Unicorns!!!!!! 
!excited-cat

.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\comment-371499645.json . 
@F3PiX renamed the join model and removed inline-code. Over to you again :smiling_face_with_open_mouth_and_smiling_eyes: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\comment-371513060.json . 
Oh, important note for QA'ers: since I updated the existing migration file in this PR (instead of adding new files for each round of reviews), you'd have to inline-code twice and re-run the inline-code after pulling updates.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\comment-371554001.json . 
Thanks, looks great! :balloon: :person_with_folded_hands: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\issue-303144673.json . 
This PR adds support for more than one maintainer per project. Previously, only the submitter was considered the authoritative person. With this PR, we can assign more than one user to be a maintainer. A numeric order is preserved and a position value is automatically assigned when a new maintainer is added.

Usage:.

block-code.

**Caveats**
* No GUI. Assignment can only be done on the console right now

**Post-Merge TODO**
* This PR probably obsoletes #342 – needs investigation
* Define lingo: mentor vs. maintainer.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-173486931.json . 
This PR adds support for more than one maintainer per project. Previously, only the submitter was considered the authoritative person. With this PR, we can assign more than one user to be a maintainer. A numeric order is preserved and a position value is automatically assigned when a new maintainer is added.

Usage:.

block-code.

**Caveats**
* No GUI. Assignment can only be done on the console right now

**Post-Merge TODO**
* This PR probably obsoletes #342 – needs investigation
* Define lingo: mentor vs. maintainer.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-172885533.json . 
say :face_with_tears_of_joy: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-172890190.json . 
:thinking_face: Reading through the PR, I am having a bit of a struggle with the term 'maintenances'. 
'maintenances' sounds more like what my car gets at the garage, so, more like a task or an action. If that is not just me :-) , an option would be inline-code or even: inline-code. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-172892212.json . 
Just checking: we need both the inline-code and the inline-code ? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-172895055.json . 
How about adding a uniqueness constraint to the DB, to back up the validation?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-172911936.json . 
I find this hard to understand. 
As I understand it, the submitter is always at [0], because it is the first maintainer added (on creating the project]
Then, if you push other maintainers to inline-code, they will be added after the submitter. But obviously, that doesn't accomplish what the comment says you want. :confused_face:  
 
I am thinking of all kind of reasons why; I won't list them here ;-) but let's bring it down to: Is there maybe an easier (to read) way of accomplishing this?
Or even just add an extra comment?
(sorry)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-172912501.json . 
second maintainer instead of -s.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-172912553.json . 
mainTainer.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-172912776.json . 
an~d~
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-173007358.json . 
I agree, the naming suggests something is broken :wrench:  inline-code is certainly better, though I'm also not 100% happy with it.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-173008252.json . 
tbh, I just added keywords until it worked :upside-down_face:  Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-173009119.json . 
I was trying to mimic inline-code without adding another Gem dependency. 

I'm inclined to remove the position attribute entirely since we don't need it at the moment. What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-173014229.json . 
Totally agree with removing it if we are not needing it right now. (*whispers YAGNI) 
:hundred_points_symbol: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-303144673\pr-comment-173016592.json . 
I know, I always struggle with join table names. :-(  
How about inline-code , inline-code . 
inline-code  :upside-down_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-323589124.json . 
Moving this into the Community Page milestone, since this is an integral part of the whole "community page" project :winking_face: 

We will need some redefinitions for this though.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-327570286.json . 
Hey guys, @carpodaster @klappradla 

obs.:.
The page is no longer users#index, but community instead. 

I would like to confirm that you still want the same things. I also have some doubts about it. 
## Changes you guys want to do:.

1. Remove "Interested In" field and replace it with a short text block (same column name?). That will include a small addition into users model (add an extra field for interests) and an addition into user#edit form too.

2. Instead of display two columns (country and city), we will display just one (column name can be 'location' ?) in the format: "Germany/Buxtehude"

3. Will we include company name?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-327872714.json . 
inline-code and inline-code still make sense I'd say (can you :thumbs_up_sign:/:thumbs_down_sign: @carpodaster?)
For inline-code: I'm pretty sure this is only out how city + country should be displayed in the view, not about changes to the datamodel :v:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-327918783.json . 
I would not swap the interested in for a text field. Maybe an _additional_ text field would make sense to give a bit more detail, but the predefined values for interested-in allow for better searching / categorizing (see also my comment on URL about interested vs. coach role)

Other than that, I do not recall what I meant with the first item on the list :(

I would also assume that item no. 2 was about _displaying_ the info, not having to different columns. The column name "location" makes sense, yes :+1: 

I don't have strong feelings about the company name anymore. But since we have that "I represent a company", we might as well include it :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-328154117.json . 
@klappradla I'm sorry I did not express myself very well. The column I said is not the model column, but the column of the table displayed in the view.  I will start working on this issue :dancer: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-328970641.json . 
@carpodaster  @klappradla 
Interested in text_field should be, some like this?

!rgsoc teams app 17

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-328974615.json . 
Hm, reading @carpodaster's comment above :white_up_pointing_index:️ 
I think it should look like this:.
* we keep the inline-code string field with predefined values for better searchability (coach, etc.)
* we add an additional text for a short bio

I did not yet read up everything in your PR, but I think this should still be the way to go.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-329194598.json . 
@klappradla  "with predefined values for better searchability" with autocomplete?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-329229961.json . 
Hm, I'm not sure if we're talking about the same thing here @branquinhoaa :thinking_face: 

In the current user edit form, picking the interests looks like this:.
<img width="479" alt="screen shot 2017-09-13 at 18 52 18" src="URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-329230616.json . 
@klappradla yeah, we will keep this info in the interest_in and add a short text that will explain better about the user interests. We are talking about the same thing... We are working on that and we will submit the PR soon. :+1: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-329231054.json . 
Ok, all good :green_heart: 
Sorry, my brain is kinda slow today, craving sleep and cookies :victory_hand:️ .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-329281767.json . 
Thanks for clarifying, @branquinhoaa. I, too, thought it would be replaced.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-329301562.json . 
With additional text

!rgsoc teams app 21


.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\comment-38932542.json . 
@carpodaster yep, that's a good summary. I think the "I represent a company: 6wunderkinder" bit could be added to the "interested in" column. And yes, with a link, please :)

About inline-code, yeah, adding this information would make sense.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30367870\issue-30367870.json . 
- [x] Remove common prefixes from inline-code's human readable form (e.g. "Helping as a: coach, mentor, remote coach") and transform it into a nice + short text block
- [x] Display cityand location as "Germany/Buxtehude" (depends on #82)
- [x] Add company name? Should also have a custom link if we add this.

Related question: what shall we do with inline-code? Right now it's a bit of an unloved stepchild; there would be lots of space to display all the information we have trouble cramming into that user listing on inline-code.

@svenfuchs: does this reflect what we talked about in Slack yesterday?

/discuss

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30368881\comment-176802252.json . 
#108 is related.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30368881\comment-323587966.json . 
It seems this can be solved on the way to the new community page :white_right_pointing_backhand_index:  moving this into the community page milestone.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30368881\comment-325434829.json . 
Let's keep the same logic of (index) users controller?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30368881\comment-325450640.json . 
@carpodaster we are discussing this issue and we have a question:.
Since /community will be responsible for listing and searching users, we are wondering if it is useful to have an action /users. Can we simply remove it? 
Besides the community link in the header, the path to /users is used when someone calls the 'impersonate' method. The person is redirected to /users. We can change this behavior, redirecting the person for /user/:id (if you agree to remove the user index).


.
#rails-girls-summer-of-code/rgsoc-teams\issue-30368881\comment-325764573.json . 
@branquinhoaa you are right, I also think we don't need the inline-code action anymore (the rest of the actions are). Redirecting to inline-code after impersonation a user makes sense, too! :ok_hand: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30368881\comment-326503699.json . 
@klappradla @mkalininait we don't really have a Definition of Done for this item, do we? I'm inclined to close this (very old) issue now that #844 has been merged. Subsequent changes (e.g. filters) should be covered by other issues. What do you think?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30368881\comment-326518902.json . 
Yep, would have suggested the same :green_heart: .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30368881\comment-326607221.json . 
Sounds good!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-30368881\comment-38918255.json . 
Yeah I think we definitely should separate those two concerns.  

I can't really think of another part.
We definitely should bring the application rating into the teams app from the campaign app.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30368881\comment-38933066.json . 
@carpodaster i think we should try to minimize branching over time, and aim at evolving this into an app that just works for the entire year. I mean, in theory there would be nothing wrong with a student signing up in Sept 2014 in order to display their interest to participate in SoC 2015, even though 2014 would still be running, right.

Let's try to get there by doing small changes that reflect whatever we need to have next.

So, yes, i agree we should move the community stuff to a inline-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30368881\issue-30368881.json . 
Currently inline-code behaves differently for the RGSoC ramp up phase than it will once the summer has begun. There's lots of commented code.

I'm thinking bringing inline-code to a CommunityController that displays what we have now. Launching the summer is then a matter of editing the routes file instead of commenting out / in everything (which we'll have to do for 2015 all over again).

Are there other items where the teams app behaves differently depending on what phase we're in?

Thoughts?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30369249\comment-38908221.json . 
I think that's fine. adding color would draw too much attention. But maybe adding an icon? The eye usualy finds elements faster with an associated image. And since font-awesome is already in there, you could choose from these URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30369249\comment-38914923.json . 
Tbh, I'd rather not spend too much time on it. If it passes as "I think that's fine", I'm happy :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30369249\comment-38915025.json . 
hehe, sure :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30369249\issue-30369249.json . 
Probably unnecessary noise, but just to have someone with a more aesthetic understanding than me look at what it does. Ping @lislis @katrin-k: maybe? It adds Bootstrap's inline-code.
## !bildschirmfoto vom 2014-03-28 08 53 36

!bildschirmfoto vom 2014-03-28 08 54 34

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30369249\pr-14098507.json . 
Probably unnecessary noise, but just to have someone with a more aesthetic understanding than me look at what it does. Ping @lislis @katrin-k: maybe? It adds Bootstrap's inline-code.
## !bildschirmfoto vom 2014-03-28 08 53 36

!bildschirmfoto vom 2014-03-28 08 54 34

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30440759\comment-39003534.json . 
Hmmmm, I like the extra misc field. 

And I agree it super makes to explain the gender identification thing on our application guide, but I don't know how I feel about asking people about this directly. It kinda implies that we do need this information. Would we somehow check this? Would it make a difference on the application rating?

I kinda feel we're unnecessarily putting extra pressure or something onto the applicants here. Could we just omit this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30440759\comment-39003646.json . 
No, we will certainly not check it.

This PR was the outcome of the referenced issue (see above) and is what those involved eventually agreed upon. I would rather not revisit the discussion and start all over again. Are you super-against the gender identification input fields, @svenfuchs?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30440759\comment-39003689.json . 
Addendum: Maybe make the gender self-identification optional as well?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30440759\comment-39005360.json . 
@carpodaster sorry, i have missed the additional discussion on that issue

I wouldn't say I'm super against it. But the discussion on the issue doesn't convince me that we do need this piece of information. If we don't need it then I think we should just omit it. We explain the requirement on the guide, and I think we can just trust people to not sign up if they don't fit the requirement.

So, yeah, asking for this information (optional or not) without an actual need seems wrong to me, and I'd just remove this field from the form.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30440759\comment-39008814.json . 
@svenfuchs I'm fine with removing the fields and I agree with you that they don't have a direct impact on the application. However, I am under the impression that it is very important to @queenfrankie.

Laura, would it be ok for you if we omit the fields? Maybe we can rephrase the description of the optional misc. text area at the bottom to more explicitely invite people to state gender-, gender-identification and/or gender-socialization-specific topics?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30440759\comment-39011815.json . 
hmmmm... did i miss a point or don't we need the info if somebody identifies as female or male to rate the application? since women are given the priority? do we ask this some where else?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30440759\comment-39333478.json . 
So what's the status on this one now? Since there has been no reaction from @queenfrankie, I reckon we only keep the inline-code field?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30440759\comment-41113248.json . 
ping @svenfuchs and @queenfrankie, we need to get this wrapped up

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30440759\comment-41197037.json . 
well, yeah, i guess since we don't have a better solution atm we should just go ahead and merge this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30440759\issue-30440759.json . 
As discussed in rails-girls-summer-of-code/summer-of-code#162

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30440759\pr-14141328.json . 
As discussed in rails-girls-summer-of-code/summer-of-code#162

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30454582\comment-39021614.json . 
There are currently nine items you can check as being interested in. We shouldn't have quick access filters for all of them. But yeah, mentor makes perfect sense - I'll add it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30454582\issue-30454582.json . 
because we are collecting that info, but students can't filter the list looking for mentors who offer projects.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\comment-39541316.json . 
thanks @cypher 
this looks good to me. @svenfuchs @carpodaster any additions?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\comment-39541827.json . 
Ah sorry, completely forgot about this one. Yeah, looks good.

Maybe add a test for the two inline-code callbacks?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\comment-39682606.json . 
@carpodaster Will do!

Sorry for the delay, I was in Barcelona :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\comment-40020979.json . 
I've moved the callbacks a bit in e6a52df3a9...d15bdd9252 and made sure potentially empty attributes from the GH API won't overwrite the sanitized data again.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\comment-40046365.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\comment-40222409.json . 
@pxlpnk, @svenfuchs: I believe this can be merged now?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\comment-40223303.json . 
cool, then lgtm :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\comment-40235279.json . 
in dat case!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\issue-30717971.json . 
Fixes #81 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\pr-14297369.json . 
Fixes #81 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\pr-comment-11286309.json . 
shouldn't here also be the 20140331201631_update_user_names_if_empty.rb migration?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\pr-comment-11328190.json . 
Yeah, that file is added in 9ba7ea, along with this change in inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30717971\pr-comment-11335157.json . 
Is this supposed to be inline-code ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30918934\comment-39643204.json . 
Yep, confirm.

Congratz on your first pull request!

Let's see if the build passes and then merge. Looks alright to me :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30918934\issue-30918934.json . 
When running all the migrations for the first time the conference creation one raises an error related with country presence validation. Because some attendances were created in that migration.
As @svenfuchs said that data is not needed anymore the easiest solution is remove it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-30918934\pr-14416471.json . 
When running all the migrations for the first time the conference creation one raises an error related with country presence validation. Because some attendances were created in that migration.
As @svenfuchs said that data is not needed anymore the easiest solution is remove it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-31271412\comment-40279869.json . 
already doing it!:)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-31271412\issue-31271412.json . 
Check out what the board looks like on Waffle: 
URL.

Add a badge to show how many issues are Ready to Be Worked On in your README. Works great for organizing projects with a simple visualization layer on top of GH Issues. You don't even have to use it for it to just _work_ (ie: you can continue your workflow in GitHub Issues and the board will update as you add, move (labels), and close issues). No cost - always free for open source projects and free for RGSoC participants, always! :)

I've already been in touch with a few of your regarding having Waffle sponsor RGSoC - so just a friendly suggestion to check it out for this project - might be a nice add! (No pressure at all.)

Cheers. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32023867\comment-41196863.json . 
sounds good. but it seems it doesn't merge any more?

feel free to go ahead and just merge it when ready. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32023867\issue-32023867.json . 
/cc @svenfuchs 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32023867\pr-15044543.json . 
/cc @svenfuchs 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32025467\comment-41196871.json . 
sounds good. but it seems it doesn't merge any more?

feel free to go ahead and just merge it when ready. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\comment-105661146.json . 
Hey @lucaspinto – I'm sorry that we never merged this. Sadly, we don't have the Coaching Company sponsor option anymore which was the initial rationale behind the corresponding issue for this PR and I'm going to close this one.

Still, many (belated!) thanks for your work, Lucas and @joneslee85 for reviewing the PR.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\comment-105885661.json . 
No problem @carpodaster. Thank you for taking care of this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\comment-42778349.json . 
Thanks a lot for you rich feedback @joneslee85! I've already corrected a few things and will continue as soon as I'll time again.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\issue-32399326.json . 
Hey,

this concerns the following issue: #76.

I did _not_ link the feature to the app. It is only accessible through to URLs for the moment. I will like your help @carpodaster @anikalindtner to know how to integrate it.

Cheers,
Lucas

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-15260776.json . 
Hey,

this concerns the following issue: #76.

I did _not_ link the feature to the app. It is only accessible through to URLs for the moment. I will like your help @carpodaster @anikalindtner to know how to integrate it.

Cheers,
Lucas

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256792.json . 
by default, inline-code is inline-code, I prefer just use inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256798.json . 
this has not covered everything, IMHO you should check:.
- assigns is correctly assigned
- response code
- rendered template

For example

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256805.json . 
please use inline-code syntax for consistency, inline-code

please also test response code and render template like I did with the example for index

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256807.json . 
same as above

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256811.json . 
I think changing it to inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256812.json . 
i think changing it to inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256813.json . 
please be specific that we are testing again html format with:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256816.json . 
to speed up our test, please merge all 3 inline-code blocks into one

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256818.json . 
please also test inline-code format

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256821.json . 
also test for the case in which record is failed to create

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256822.json . 
please avoid using inline-code, using inline-code instead

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256824.json . 
I don't think it is necessary to stub it out, you should test that the value is get updated correctly

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256825.json . 
please use inline-code syntax

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256828.json . 
please inline-code syntax for all inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256832.json . 
I think it is not necessary to have this params declared here, no shared code elsewhere

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256836.json . 
please add feature test if possible

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256839.json . 
please use inline-code instead of inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256842.json . 
worth adding a method inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256843.json . 
please adding routing spec

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256845.json . 
I believe there is a helper inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32399326\pr-comment-12256847.json . 
please also test for inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32705158\issue-32705158.json . 
After **2nd, May 2014 23:59 UTC** the page for applications and the create action will not render the form, but the following page:.

!screen shot 2014-05-02 at 18 21 40

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32705158\pr-15438598.json . 
After **2nd, May 2014 23:59 UTC** the page for applications and the create action will not render the form, but the following page:.

!screen shot 2014-05-02 at 18 21 40

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32742893\issue-32742893.json . 
This adds the functionality to rate applications, which was previously in the campaign app.
- It adds a new role "reviewer"
- "reviewer"'s can few and rate applications
- admins can add roles to users now

The screens look like as follows:.
**Overview**:.
!screen shot 2014-05-03 at 10 42 23

**Application Screen**:.
!screen shot 2014-05-03 at 10 42 42

.
#rails-girls-summer-of-code/rgsoc-teams\issue-32742893\pr-15460894.json . 
This adds the functionality to rate applications, which was previously in the campaign app.
- It adds a new role "reviewer"
- "reviewer"'s can few and rate applications
- admins can add roles to users now

The screens look like as follows:.
**Overview**:.
!screen shot 2014-05-03 at 10 42 23

**Application Screen**:.
!screen shot 2014-05-03 at 10 42 42

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34343575\comment-44757044.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34343575\issue-34343575.json . 
These roles can be deleted or -> changed to:.
- [ ] "Looking for a pair" ->  applicant (so as to not delete/make invisible all the students tht didn't make it)
- [ ] "Offering desk space" -> ?

And these need to go back into the app:.
- [ ] Student
- [ ] Supervisor
- [ ] Helpdesk
- [ ] Developer

PLUS, make it possible for ppl already registered, to change their role.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34543141\issue-34543141.json . 
This should bring back all the links to make all functionality of the app accessible again

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34627413\issue-34627413.json . 
A minor change exchange IRC for Campfire.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34627709\comment-44641225.json . 
Hmmmmmm. Would we not want to allow students/coaches to form their own teams in future? Like, meet on our teams app, discuss things, create a team, add a project, send application?

If we want to keep this, then we'd need to add a flag "accepted team", I guess, and filter by that?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34627709\comment-44644711.json . 
hm... this spawns a different idea in my head...

What about introducing inline-code's and these only organisers can create and assign to teams for now?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34627709\comment-44644882.json . 
hmm, what other events would there be? my feeling is that a model would be overkill for this, but maybe i'm not getting it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34627709\comment-44645437.json . 
Imagine that next year you just create an Event for "RGSoC 2015". Applications, Teams, Conferences etc. could be associated to that. (For now we just use it for Teams. the other associations is something the rgsoc-team can work on for example).
Does that make more sense now?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34627709\comment-44645635.json . 
hmmmja, ok. so we could scope things to /2014/teams /2014/activities and such, maybe. that makes sense :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34627709\comment-44645786.json . 
:+1:  for a db resource that represents a year's RGSoC incarnation!  inline-code may not be the best name (can't think of a better one right now though :smile: ) but something like that is definitely what was hinted at in #84 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34627709\comment-44645912.json . 
inline-code is generic. i was also thinking of inline-code, but i'm not sure about that...

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34627709\comment-44820064.json . 
closing in favour of #102 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34627709\issue-34627709.json . 
I was thinking of limiting the creation of teams to users with the "Organizer"-role.
In addition also limit adding team-members to members with roles other than student.

What do you think?

/cc @svenfuchs

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34632433\comment-44641339.json . 
Sounds good!

Also, the start page should then show activities again, see URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34632433\issue-34632433.json . 
In #84 it has been discussed to introduce a new inline-code, i'd like to avoid that for now, but instead change the inline-code to display all Users and add a "participating"-filter (if a User has a role) which is selected by default.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34759223\comment-44824656.json . 
Yeah, go for it :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34759223\issue-34759223.json . 
As briefly discussed in #100 we will introduce a inline-code-Model to reflect the yearly incarnation of RGSoC, without setting up a new install of the teams-app.

I think inline-code is a proper and fitting name for the model. If someone has another idea for a name, just shoot.

In the first step the event will be used to identify teams that are in this years edition of RGSoC.
Through this we can also identify the participants.

If everyone is on board with this, i'll start implementing it ASAP.

/cc @carpodaster @svenfuchs 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34971871\issue-34971871.json . 
- brings back the features present on URL.
- updates the help-page (#99)
- adds the inline-code-Model (#102)
- let's assign an event to a team
- adds coveralls (since we should improve coverage a little bit. :))

Still missing:.
- [ ] Participating filter for the users overview (see #101)

Blog post aggregation still works as last year, we need to enable the rake task as a cronjob again.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-34971871\pr-16716477.json . 
- brings back the features present on URL.
- updates the help-page (#99)
- adds the inline-code-Model (#102)
- let's assign an event to a team
- adds coveralls (since we should improve coverage a little bit. :))

Still missing:.
- [ ] Participating filter for the users overview (see #101)

Blog post aggregation still works as last year, we need to enable the rake task as a cronjob again.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36058292\comment-47881852.json . 
we now use URL since snapito is down.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36058292\issue-36058292.json . 
Currently generating images is failing we us an API key which is according to the docks only necessary if you have a paid account.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\comment-46551328.json . 
nah, we can do that via our dnsimple account. just tell me when you need it

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\comment-46813775.json . 
I added force_ssl in 6568ce8a96190e6d21f982e3e18c51e066dc5d9c that depends on a USE_SSL env-variable.
We can add the SSL addon on heroku and enable ssl with the env variable.

@svenfuchs can you get the SSL certs and add them directly on heroku, pwetty please? :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\comment-49094793.json . 
@svenfuchs or shall we just start with a free cert as @bastilian suggested? But we probably need you as the heroku account owner to activate the paid addon anyway, right?

Would really love to have SSL everywhere :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\comment-49295955.json . 
woha, sorry, entirely forgot about the cert, guys.

i had no idea those certs are free for oss projects. @bastilian are you able to get one and add it to heroku?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\comment-72084910.json . 
@svenfuchs @bastilian has there been any progress on aquiring / installing the SSL certificate?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\comment-74039504.json . 
@svenfuchs has GlobalSign gotten back to you already? If not: shall we just go for the wildcard cert?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\comment-74228601.json . 
@carpodaster actually, yes, they did. except that it ended up in my local spam folder. i have forwarded it to you. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\comment-75815316.json . 
@svenfuchs We're almost there, certificate has been issued! :tada: I just need you as the app owner to add the ssl endpoint on Heroku: inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\comment-76213589.json . 
:lock: :tada: :balloon: 

!SSL at laaaast!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\comment-76214611.json . 
AWESOME!
 !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\comment-76217249.json . 
I believe it's time for the dancing cat to do the closed issue dance:.

!dancingcat

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36059002\issue-36059002.json . 
Should we get a cert on URL.

/cc @svenfuchs 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36304715\comment-144363182.json . 
I think we can close this, thanks to the responsive magic by @roosdebildt.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36304715\comment-144365499.json . 
nope, this one is still on unfortunately :(

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36304715\comment-176801421.json . 
The loooong index view could potentially be fixed by displaying different data in the corresponding controller in the orga-namespace.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36304715\comment-349949097.json . 
I'm inclined to close this. @klappradla, do you think this will be solved by Project Admin Mode:trade_mark_sign: ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-36304715\comment-349957556.json . 
Looked at this yesterday night as well :cat_face_with_tears_of_joy: 

I think it's already closed via redoing the navigation (did this last year I think).
.
#rails-girls-summer-of-code/rgsoc-teams\issue-36304715\comment-46947728.json . 
@anikalindtner i added coaches and mentors to the table as well for admins to see.
I'll try to make it look nicer. more narrow so it fits perfectly on a screen.
Suggestions are welcome. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36304715\comment-49195363.json . 
Is this still on? There are some responsive design patterns for tables with a lot of columns. I can take a look at that if you want.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36304715\comment-49195689.json . 
yeah, it still kinda doesn't fit on the screen. would be lovely if you could do that!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36304715\issue-36304715.json . 
when I look at the overview of the teams (logged in), it looks like this:.
!screen shot 2014-06-23 at 17 49 24

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495249\comment-144362444.json . 
!dashboard team cheesy rgsoc 2015

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495249\comment-144362822.json . 
:tada: :confetti_ball: :sparkles: :sparkling_heart: :space_invader: :clap: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495249\comment-144362834.json . 
It would be great to add markdown to the notepad, so that supervisors can use it as a to do list as well. That required more Javascript then we acquired this Summer. Anybody?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495249\comment-144362914.json . 
:bow: Thank you Laura!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495249\comment-144537672.json . 
Great work, Roos + Maud!!

PS: Adding markdown is pretty easy (see the activity log views), adding a WYSIWYG editor for MD is a bit of work. I wouldn't go the WYSIWYG route but feel free to send a PR for the the markdown rendering :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495249\comment-144864508.json . 
We found that, and it looked easy, because all the hard work with RedCarpet and the config is already there. But, my problem was: we don't have a show view, because of the find_or_create_by. Do you mean that it still is solvable without JavaScript? Then I'll look at it again. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495249\comment-47842879.json . 
Supervisors of that team are now presented the following box on the team-page: !screen shot 2014-07-03 at 00 00 06

Both writing a comment and clicking the button "Checked up on them" are "Checkups"

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495249\comment-48921095.json . 
this is an awesome feature! thank you so much for implementing it. 

i put in some thoughts and maybe we can add something that we can see in the overview, which team has difficulties/problems/isn't answering and which team is doing just fine.

Maybe we can introduce 3 colors green (fine), organge (not answering/beginning problems), red (problems/difficulties) which the supervisors can select as a tag right next to the comments. and then this color will be shown in the overview? However this is implemented the easiest. Either with another field showing the color or coloring the "last checked" box.?

if this gets too much for the overview, maybe we can have a supervisor's overview? which will just include the team names, the last checked upon, the color, and last update of the team?

wdyt?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495249\comment-49085310.json . 
:+1: for a dedicated supervisor overview slash dashboard.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495249\comment-49166612.json . 
I also like the idea of a dedicated supervisor dashboard, especially with the last update of the team. As much as I like going through every team's blog snippet on the activities page ;)  having a "last update from my team" feature would be nice. It would be (in my opinion) a good "reminder" to check up on them if I haven't done so in the last couple of days and if they haven't posted anything in a while.  

On another note: @anikalindtner I love the new color concept you invented: "organge". It reminds me of this word: URL ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495328\comment-176767276.json . 
@anikalindtner I don't think we can cluster by location as our users' locations will be very diverse. Maybe selecting students/teams with a checkbox individually would solve the problem?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495328\comment-349949920.json . 
I'm closing this. It's unclear how "by location" would be implemented. Feel free to re-open!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495328\comment-76211040.json . 
@anikalindtner (or anyone else): Do you remember what this was about? If yes, could you sketch the feature here so that we might work on this as part of the SoC? Merci! :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36495328\comment-76212584.json . 
@carpodaster I think it was a feature, so that we could email people in specific locations. Say, if we have a party in Vienna, let all the viennese people know via email and don't bother the onces living in L.A.

The feature should be available to organizers writing an email in /mailings. So that next to choosing who to address (students/ teams/ coaches), you can also choose a location filter for that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-36880981\issue-36880981.json . 
for now, the private infos are available to organizers and supervisors, when they are logged in. we are looking for a way to hide the details, but show a status for us, that tells us that the students have provided the info or not. like "missing / available". 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37684544\comment-48833954.json . 
@AkshataDM You accidentally included the "backup files" your editor created.
You can remove them with the following:.

block-code.

To permanently ignore them in the future, so git does not pick them up, i would suggest to add a global git ignore file and add the following:.

block-code.

(see also URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37684544\comment-50260922.json . 
This pull requests needs a bit of cleanup still:.
- It seems you accidentally delete "database.yml.example".
  Please restore it with inline-code
- There is one editor-backup file in this PR you can delete it with the following.
  
  block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37684544\comment-50262392.json . 
We have actually merged both our commits in @aishty 's PR. All the changes that you have mentioned here are included in her PR. This PR can be ignored :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37684544\comment-50262428.json . 
:+1: then i'll close this PR

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37684544\issue-37684544.json . 
small specs for user model in the application

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37684544\pr-18293559.json . 
small specs for user model in the application

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37684544\pr-comment-15438557.json . 
If you add specs which you can't yet implement, but still want to keep it as a reminder you can/should use inline-code.
That way it will appear as pending when you run the specs and will not be forgotten.

You can find more on inline-code here

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37736982\comment-109310851.json . 
I also think this could be useful :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37736982\comment-109311382.json . 
I'm on it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37736982\comment-109323018.json . 
@ramonh that's awesome!!!! :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37736982\comment-117965602.json . 
@ramonh can this be closed now that your PR has been merged?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37736982\comment-117968592.json . 
@carpodaster Yes! Thank you for reminding me :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37736982\comment-58160905.json . 
@bastilian and @FloorD how's this issue proceeding. Is it ongoing, or can we close it up?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37736982\comment-58174809.json . 
it would be a incredibly-neat-to-have for next year.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37736982\comment-58180589.json . 
Okay, well let's keep it open as something for a hackathon day

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37736982\issue-37736982.json . 
As the conference raffle-out did not prove to work last year around - the teams didn’t understand they had to tweet the conferences with the hashtag we provided, causing a lot of work checking all Twitter accounts - we thought of a different way. In the teams app participants can add a list of the conferences they would like to visit (min. 3 max. 10) - maybe drop-down select? All conferences should be linked to their Twitter accounts / hashtag so we would be able to create a default tweet text out of the conferences they’ve selected:.

We would love to go to @conference, @conference and @conference #rgsocconf

**The conferences:**
Burlington Ruby Conference - August 1-3, Burlington, VT
@btvrubyconf
4 tickets

Steel City Ruby - August 15-16, Pittsburgh, PA
@steelcityruby
2 tickets

Madison Ruby Conference - August 22-23, Madison, WI
@madisonruby
2 tickets

Rulu - June 19-20, Lyon (France)
@rulu
2 tickets

eurucamp - August 1-3 Berlin
@eurucamp
2 tickets

Frozen Rails - September 11-12, Helsinki (Finland)
@frozenrails
2 tickets

Barcelona Ruby Conf - September 12-14, Barcelona (Spain)
@baruco
2 tickets

The Strange Loop - September 17-19, St. Louis (US)
@strangeloop_stl
2 tickets

Ruby DCamp -  October 10-12, US
@ruby_dcamp
2 tickets

Rails Israel - November 4-5, Tel Aviv (Israel)
# railsisrael

2 tickets

Arrrrcamp - October 2-3 Ghent (Belgium)
@arrrrcamp
2 tickets

PolyConf - October 30-31 Poznan (Poland)
@polyconfhq
2 tickets

GoTo Conference - November 6-7 Berlin
@gotober
2 tickets

It might make sense to look at the raffle machine’s code when creating this functionality: URL.

Please keep me updated on this so I can prepare a blog post announcing the raffle-out. :bowtie: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37827186\comment-48960084.json . 
 good question! hm... i guess we first did it last year so that everyone could see what's going on, but i don't see the point in showing this to a not-logged in user. so feel free to change that!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37827186\comment-48960413.json . 
Will do. I would even restrict it to those who were in the targeted audience. Objections?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37827186\comment-51590440.json . 
Yaiks! Just realized this for the "day off" mailing. I'm totally in favor of restricting this to the targeted audience! :) I'd say: Go ahead, @carpodaster!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37827186\comment-51692333.json . 
+1

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37827186\comment-52101457.json . 
I've limited access to a mailing object to those who are in the targeted audience.

However, a mailing will also create an activity item and for restricting access to that one cannot be done without serious effort. The result: logged-in users will still see some content of a mailing they didn't get.

I'd vote for removing mailings from the activity stream, what do you think @anikalindtner @katrin-k @alicetragedy  ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-37827186\issue-37827186.json . 
Heya, 
I can view URL as an anonymous user. Is this WAI?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-38701739\comment-50261612.json . 
Can you elaborate on what gets added in the PR-description. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-38701739\comment-50262549.json . 
You mean a description of each spec that we have written?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-38701739\issue-38701739.json . 
Unit tests written for user.rb, ability.rb, application.rb, submission.rb, rating.rb, team.rb, role.rb
Created factories for attendance, rating, helpdesk role and supervisor role

.
#rails-girls-summer-of-code/rgsoc-teams\issue-38701739\pr-18880557.json . 
Unit tests written for user.rb, ability.rb, application.rb, submission.rb, rating.rb, team.rb, role.rb
Created factories for attendance, rating, helpdesk role and supervisor role

.
#rails-girls-summer-of-code/rgsoc-teams\issue-38701739\pr-comment-15438706.json . 
This line is not necessary, as bundler will already require it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39016917\comment-51638917.json . 
Currently, only the logic in view prevents a non admin user from accessing the is_selected column.
We are looking at adding the logic in ability.rb or teams controller

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39016917\comment-53040246.json . 
Shouldn't the kind attribute of the team model be edited only by an admin when a team is selected? Currently this attribute is accessible to the team when a team is set as selected. Shall we go ahead and change this so that only an admin can access the kind attribute of a team? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39016917\issue-39016917.json . 
Here are some queries on how we can proceed with this implementation

1) The ability to form a team must be only in a specified period - for this, make the "+NewTeam" icon visible only during a certain period ?( i.e, March - June, after which no one should be able to form a team )

2) Should all teams that are applying to SoC be visible to everyone else? 

3) Forming a new team during application process - what all fields are required? 

4) Have a column "is_selected" belonging to team model, that is by default false. This is to render different edit pages for a team ( before selections, since this column is false(not selected) for all teams, they can only view one edit page with minimal fields - what fields are required is dependent on the above point. Then after a team is selected, editing a team should render a form like the current implementation - projects, kind of team sponsored or voluntary, etc. ). "is_selected" is visible only to admin. 

5) Non selected teams should not be able to access their team page after the deadline has passed. Only selected teams should be able to edit and view their teams page after their selections. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39016917\pr-19043534.json . 
Here are some queries on how we can proceed with this implementation

1) The ability to form a team must be only in a specified period - for this, make the "+NewTeam" icon visible only during a certain period ?( i.e, March - June, after which no one should be able to form a team )

2) Should all teams that are applying to SoC be visible to everyone else? 

3) Forming a new team during application process - what all fields are required? 

4) Have a column "is_selected" belonging to team model, that is by default false. This is to render different edit pages for a team ( before selections, since this column is false(not selected) for all teams, they can only view one edit page with minimal fields - what fields are required is dependent on the above point. Then after a team is selected, editing a team should render a form like the current implementation - projects, kind of team sponsored or voluntary, etc. ). "is_selected" is visible only to admin. 

5) Non selected teams should not be able to access their team page after the deadline has passed. Only selected teams should be able to edit and view their teams page after their selections. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39016917\pr-comment-16030141.json . 
should be:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39016917\pr-comment-16030153.json . 
this should not be needed as only the user needs to be passed in to check for the inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51271796.json . 
Why not actually ask people to agree? It's not that hard and that way the
license will legally hold up. It's just a matter of mentioning the
contributors in a GH issue and asking them to say they agree. JRuby FFI is
a good examples of when that actually happened.

Personally I would argue AGPL is a more suitable license, given the type of
project. I don't see why companies should be allowed to build a closed
source commercial product out of this code base.
On Aug 5, 2014 9:29 PM, "Carsten Zimmermann" notifications@github.com
wrote:.






































.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51272670.json . 


It would certainly be 'cleaner', aye. I'm just not very optimistic about people actually responding.



I don't really care about the license besides trying to avoid restrictive (read: copylefted) ones where I can. But that discussion can get esoteric soon so yeah, AGPL would work, too.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51274862.json . 
Well let's at least try, the number of committers is still manageable and
I'll be happy to poke people a bit.

Licenses are a complicated matter, I totally understand that not everybody
has the time to dig into the specifics, so instead people take whatever
seems popular in their community.

I use MIT/BSD style licenses a lot for my own projects when they're
libraries. For a complete app I think GPL is usually more in line with what
people intend the license to provide. For web apps specifically the AGPL
can be suitable.
On Aug 6, 2014 1:04 AM, "Carsten Zimmermann" notifications@github.com
wrote:.




















.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51303884.json . 
Makes sense, thanks @plexus !

Let's do this then. I'll setup a new issue where we can track our contributors' agreements.









Comments? Any other opinions on a license?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51307324.json . 
Carsten, together with Sven and Sebastian you are responsible for about 70%
of all commits. (429 out of 615, not counting merge commits). I suggest the
three of you trie to agree on a license to use, then we can ask the rest if
they will agree with that.

Obviously if others here have opinions on which license would be the most
suitable than please let us hear them!

On Wed, Aug 6, 2014 at 9:51 AM, Carsten Zimmermann <notifications@github.com





























## 

| @plexus URL  | arnebrasseur.net | The Happy
Lambda URL |

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51683724.json . 
Sorry, for the late response to this.

Since our list of contributors is very small, i don't think it is necessary to ask.
However, i would notify them, which can be simply done by mentioning them in this PR.

I am not sure about Travis GmbH being the legal entity, should it rather be the Travis Foundation?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51692481.json . 
Sebastian, do you have an opinion on which license to use? How about
@svenfuchs?
On Aug 9, 2014 1:00 PM, "Sebastian Gräßl" notifications@github.com wrote:.
















.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51709461.json . 
@plexus i do prefer MIT (URL AGPL (URL seems to my a bit too demanding.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51769943.json . 
I'm personally cool with MIT, but I'll also be cool with whatever else the group decides :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51775399.json . 
MIT it is, then.

Dear @svenfuchs, @bastilian, @carpodaster, @joneslee85, @pxlpnk, @aishty, @tjmcewan, @AkshataDM, @benedikt, @lislis, @anikalindtner, @cypher, @sindhus, @carlad, @plexus, @lucaspinto, @sareg0, @AlexTi, @patriciagao, @robinboening, @tbuehlmann, @beanieboi, 

You have made contributions in the past to the rgsoc-teams project. Up to now the project did not have a LICENSE file, however, making it unclear under what terms your code can be distributed and used.

The top contributors are in favor of adding the MIT license (see summary and full text).

PLEASE COMMENT on this issue saying you consent to having your contributions licensed under MIT.

Thank you very much!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51775471.json . 
I consent to having my contributions licensed under the MIT License.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51775531.json . 
I consent to having my contributions licensed under the MIT License.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51775556.json . 
I consent to having my contributions licensed under the MIT License.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51775672.json . 
I consent

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51775927.json . 
I consent to having my contributions licensed under the MIT License.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51778508.json . 
I consent to having my contributions licensed under the MIT License.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51779557.json . 
I consent

On Mon, Aug 11, 2014 at 11:21 PM, Lisa P notifications@github.com wrote:.






.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51780341.json . 
I consent to having my contributions licensed under the MIT License.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51781334.json . 
I consent

On 11.08.2014, at 14:51, Arne Brasseur notifications@github.com wrote:.
















.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51781833.json . 
I consent to having my contributions licensed under the MIT License.

Arne Brasseur notifications@github.com writes:.


















## 

Andreas Tiefenthaler -- URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51782733.json . 
I consent to having my contributions licensed under the MIT License.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51786683.json . 
I consent

On Monday, August 11, 2014, Carsten Zimmermann notifications@github.com
wrote:.








## 

_Alexander Tacho_
Developer
Codeship Inc. / Railsonfire Ltd.

We are hiring Frontend/Rails Devs/DevOps to help us make Codeship even
better. Join us URL.

m: +43 (676) 676 8400
e: alex@codeship.io
t: @alexandertacho URL.
w: www.codeship.io
t: @codeship URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51787873.json . 
I consent to having my contributions licensed under the MIT License.

On Mon, Aug 11, 2014 at 7:54 PM, AlexTi notifications@github.com wrote:.



































## 

Thanks
Akshata

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51816113.json . 
I consent to having my contributions licensed under the MIT License.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-51873531.json . 
I consent to having my contributions licensed under the MIT License.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-52104278.json . 
Very nice, thanks humans! :) I've updated the initial message with a list of contributors to keep track of all the yays.

Missing 6/22 still. How about you, @joneslee85 @cypher @sindhus @sareg0 @tbuehlmann @patriciagao ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-52110882.json . 
I consent to having my contributions licensed under the MIT License.
Thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-52156920.json . 
And @anikalindtner. Github doesn't show her as a contributor but she does have 5 commits to her name, probably committed with an email address github doens't know about.

The only person with major contribution left is @joneslee85 with 58 commits. The rest is: @cypher (4) ; @sareg0  (2) ; @patriciagao (1) ; @tbuehlmann (1). I will try to contact them on the email address used in the commits. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-52157740.json . 
I consent to having this project under MIT license

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-52157778.json . 
The commits of @tbuehlmann and @patriciagao only delete stuff, so they don't have copyrighted contributions. I've emailed the others.



















.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-52157809.json . 
Thank you @joneslee85 :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-52158836.json . 
I consent to having this project under MIT license.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-52218972.json . 
Even if there are just deletions from me, just to be safe: I consent to having this project under the MIT license.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-52392538.json . 
I consent to having this project under MIT license.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-52405922.json . 
I consent to having my contributions licensed under the MIT License.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\comment-52405973.json . 
Thanks everyone, you are awesome!  :smile_cat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\issue-39556211.json . 
Every FOSS project should have one :smile: 

Besides, it appears that we need one to get a free SSL cert (see #107).

Legal stuff: _technically_ we'd have to ask all previous contributors if they are willing to license their contributions under the MIT license (or whatever license we end up with). But, uhm, can we just skip this? :wink: 

---

**Update**: Contributors (Checked: consents to having their contributions licensed under the MIT license)
- [x] svenfuchs
- [x] bastilian
- [x] carpodaster
- [x] joneslee85
- [x] pxlpnk
- [x] aishty
- [x] tjmcewan
- [x] AkshataDM
- [x] benedikt
- [x] lislis
- [x] cypher
- [x] sindhus
- [x] carlad
- [x] sareg0
- [x] lucaspinto
- [x] plexus
- [x] beanieboi
- [x] AlexTi
- [x] robinboening
- [x] anikalindtner

Contributors whose commits only included deletions:.
- tbuehlmann
- patriciagao

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39556211\pr-19363805.json . 
Every FOSS project should have one :smile: 

Besides, it appears that we need one to get a free SSL cert (see #107).

Legal stuff: _technically_ we'd have to ask all previous contributors if they are willing to license their contributions under the MIT license (or whatever license we end up with). But, uhm, can we just skip this? :wink: 

---

**Update**: Contributors (Checked: consents to having their contributions licensed under the MIT license)
- [x] svenfuchs
- [x] bastilian
- [x] carpodaster
- [x] joneslee85
- [x] pxlpnk
- [x] aishty
- [x] tjmcewan
- [x] AkshataDM
- [x] benedikt
- [x] lislis
- [x] cypher
- [x] sindhus
- [x] carlad
- [x] sareg0
- [x] lucaspinto
- [x] plexus
- [x] beanieboi
- [x] AlexTi
- [x] robinboening
- [x] anikalindtner

Contributors whose commits only included deletions:.
- tbuehlmann
- patriciagao

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39601052\comment-51410076.json . 
@anikalindtner it should work again

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39601052\comment-51435489.json . 
@carpodaster OMG it does! wheeeeeee <3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-39601052\issue-39601052.json . 
can someone have a looksie here? This feature is really important.. 

!screen shot 2014-08-06 at 10 46 18

@bastilian @carpodaster @lucaspinto @svenfuchs @plexus @lislis ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-40379892\comment-109325586.json . 
what's the status of this? 
I know that it's possible to view mailings in the stream ("All") now, and that one can select "Feed Entry" or "Mailings" (see attached screenshot).
Can this issue be closed then if the solution was to separate the stream into "feed" and "mailings" or is this still a thing/do we want to remove the mailings completely? 

!screen shot 2015-06-05 at 17 17 51

.
#rails-girls-summer-of-code/rgsoc-teams\issue-40379892\comment-109553967.json . 
If I remember correctly it has only been fixed in a way that you have to be logged in to see the mailings. Everyone who's logged in can see the mailings, regardless of whether they were in the recipients list or not.

I would still like to see it removed from the open activity feed. Maybe we can make the original recipients access the archive of sent mailings from a student dashboard?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-40379892\comment-109554330.json . 
@alicetragedy I only saw your referenced isse #226 just now – sorry. So yes, I would definitely remove it for the time being, make it available **only for the orga-team** and re-introduce it for the intended audience later. D'accord?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-40379892\comment-109566193.json . 
@carpodaster sounds like a plan. as outlined in issue #226 there seems to be a bug as mailings and everything else are still visible to non-logged in users. 
I +1 on making it available for orga-team only for now, and reintroducing it for the intended audience later!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-40379892\issue-40379892.json . 
This is a follow-up to #115

Mailings sent our through the teams app are now only visible to their respective recipients. However, a mailing will be copied over into the activity stream where it's not feasible to restrict access to the original recipients.

I would like to remove the mailings from the activities list. Please object _now_ :hammer: :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-56300737.json . 
As you can see on the PR, there have been some modifications in the master branch that are avoiding this former the be merged. Do you know how to do that? Would you need help for this? Are your coaches able to help you?
If you decide to do it through "rebasing" your feature branch on the master branch, you might want to take this occasion to reduce your number of commit. Do you know how to do this? (see URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-56301951.json . 
Now that I am done with the review, I want to add a small note:.
I think I am not involved enough in the project to be able to criticize your choice regarding the structure. I will trust you and your coach for this. I focused on the code quality only. I know it may sometimes feel harsh too see what it feels like too many comments on a PR.
A useful reminder here is that none of this critiques are personal, and none of them constitute an absolute truth. Each coder has its own style, and this evolves with the time. Another dev would have made other comments, even I would have made other comments 6 months ago. I tried to use here the filter of conventions[1], which are fairly important in Ruby as you might already know. There are also comments regarding versioning conventions (the commented code, the number of commit, the useless (or not) files), I learned them by working in various projects and those might differ from dev to dev.

I would be very happy to take another look at the PR once you will be done working on those issues.

Have a very nice day!
Cheers,
Lucas

[1] URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-56337660.json . 
Thanks for taking a look at this @lucaspinto!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-56710842.json . 
Merge conflicts sorted. Have also wrote some specs for the can? ability in the team form. Trying to make it work! Feeback about the specs welcome :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-56712466.json . 
Hey! I just took a very quick look at your code, you did not actually test anything in the view test :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-56713923.json . 
Yes! It does not! Reading about view specs :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-56924127.json . 
The current spec is failing. Would you suggest I move that particular field into a separate partial? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-59785321.json . 
@lucaspinto , @pxlpnk  can one of you take a look at this? Specifically the spec that was removed to get a green build?
URL.

Then a :+1:  and a yes to merge would be much appreciated & very exciting! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-62360853.json . 
I will be looking at this on Wednesday.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-62789610.json . 
hey @AkshataDM , I added a few comments.

Should I test it to ?

@pxlpnk anything to add?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-62791309.json . 
Well #123 is waiting for this one to be merge so we should focus our time on shipping this!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-63799193.json . 
Hi @lucaspinto I made the changes you suggested. Now is it good to go?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-65217184.json . 
@lucaspinto, @pxlpnk, @bastilian  ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-65223997.json . 
Hey @berlintam, I am sorry I couldn't answer yet, I moved two weeks ago and still have no internet home. I should get it next week though.

Maybe @pxlpnk can take this over for the time between.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-69498509.json . 
:heart: 

What's the status of this? Would be great if this could be merged :)

/cc @AkshataDM @lucaspinto @pxlpnk @bastilian

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-70803779.json . 
ditto what @svenfuchs said -  it would be cool if this was up and running for the new RGSoC!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-72018019.json . 
How about if we aim to get this thing merged by February 16th. What do you all think? @bastilian @lucaspinto @carpodaster @svenfuchs @AkshataDM @pxlpnk

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-72018169.json . 
I am in!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-72500192.json . 
Hey @AkshataDM, thank you for this PR! Due to the branch for this PR being the base for #123, the creation of a project when forming a team has already been merged :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-72608474.json . 
Yay! Thank you :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-72620476.json . 
\o/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\comment-72620693.json . 
MOST EXCITING THING EVER!!!!!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\issue-42076206.json . 
During the application process, students should be able to form a team. One student creates a new team and adds members - her team partner and coaches. 
After the applications are reviewed, the admin sets the selects each team by setting the is_selected column to true ( is_selected is an attribute of a team which is visible as the first field in the edit form of each team ). Once the admin sets this column to true, the team members can see the complete edit form which has fields like project name, blog field, etc. 

The validations for the project attributes in the team model has been removed. Instead, we created a separate project model and set up association between the project model and team. This was to make sure that the project field is not empty when a team is selected. The reason we went with this method was because the validations began to kick in for the project attribute whenever an admin set a team as selected and the form was not getting saved ( which we do not want ). 

We have commented out the validations for kind attribute in team model, because we are not sure if this should be changed by a team or organizer. Do let us know how this should be done!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-20826085.json . 
During the application process, students should be able to form a team. One student creates a new team and adds members - her team partner and coaches. 
After the applications are reviewed, the admin sets the selects each team by setting the is_selected column to true ( is_selected is an attribute of a team which is visible as the first field in the edit form of each team ). Once the admin sets this column to true, the team members can see the complete edit form which has fields like project name, blog field, etc. 

The validations for the project attributes in the team model has been removed. Instead, we created a separate project model and set up association between the project model and team. This was to make sure that the project field is not empty when a team is selected. The reason we went with this method was because the validations began to kick in for the project attribute whenever an admin set a team as selected and the form was not getting saved ( which we do not want ). 

We have commented out the validations for kind attribute in team model, because we are not sure if this should be changed by a team or organizer. Do let us know how this should be done!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17305177.json . 
Remove the extra lines.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17305184.json . 
Remove the extra lines.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17305268.json . 
Insert space before inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17305425.json . 
Why this validation is commented? Is it not required?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17315848.json . 
We are waiting for @bastilian and others to let us know if this kind attribute should be visible to only an admin or everyone else

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825779.json . 
I won't be able to answer that question at the moment, I am sorry. May @sareg0 @FloorD @alicetragedy @anikalindtner @lislis answer this one?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825830.json . 
I think this empty line was good where it was :) it helps having a better visual organization of the class/model with a clearer separation between the active record stuff and the constants.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825855.json . 
Before we take a resolution on this one, I would recommend to accompany it with a comment explaining why this has been commnted. I have seen to many commented lines stayed for way too long in a code base with nobody knowing why it is so and everybody fearing to remove it :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825878.json . 
Keep this empty line for the same reasons as stated above.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825910.json . 
I don't think this file belongs here. Has it a purpose been part of the repo for everybody or is it there because it your local configuration? If the answer is the second one and you really need this file in your local configuration, add it to the .gitignore. If you don't know the role of the .gitignore file, I'd be happy to explain it to you.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825912.json . 
Same as for bin/bundle.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825913.json . 
Same as for bin/bundle.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825920.json . 
Same as above.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825930.json . 
The "end" should stay where it was and the added lines are useless :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825934.json . 
Why are they commented? If there are useless, they need to be kicked out of the way :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825937.json . 
Same as above.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825940.json . 
Should this really disappear? (this is a genuine question, I have no idea)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17825985.json . 
I don't think you need a description at all here, but some might disagree.

If it were the case "describe 'nested attributes'" should be sufficient. You don't have to write "descrive 'it should...'" the test does it for you :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17826050.json . 
Is there a test for this? It may be useful.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17843101.json . 
Yes useless for the current feature. Will remove it :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17843133.json . 
Okay, noted :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17869758.json . 
Yep, resolving some merge conflicts. We're keeping the bin folder of the version that carpodaster created. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17898403.json . 
ok, great :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-17898461.json . 
thumbs up. don't forget that "When it comes to commit diffs, red is the most beautiful colour."

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-20248601.json . 
where does it pose a problem? there may be a way to pass around that if it bothers you, but i wouldn't comment it

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-20248887.json . 
if it useless, please remove it

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-20248906.json . 
same question :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-20248940.json . 
please put it back where it was to respect the indentation :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-42076206\pr-comment-20410290.json . 
I have commented out the validations for kind attribute in team model, because I'm not sure if this kind field should be changed by a team member or organizer. The validation has been commented out for now, because this kicks in when an admin sets a team as selected and therefore does not let the admin save the form. If this has to be commented out, then the admin must take the responsibility of setting this field for a team. Not sure if this is what the admins of this application want, so I have commented it out. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-43226273\comment-58161029.json . 
@carpodaster I'm going to close this one up for now. If we want any improvements in future, we can create a new issue. Thanks so much again for getting it done :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-43226273\issue-43226273.json . 
Here is the issue to discuss the 'Jobs' area, and advocate for any added functionality/improvements.

URL.

Thank you for getting it up and running @carpodaster 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-60956233.json . 
@pxlpnk  @lucaspinto @bastilian can one of you take a look at this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-62360867.json . 
I will be looking at this on Wednesday.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-62362886.json . 
thanks @lucaspinto !!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-62791214.json . 
This branch is split form #121 so we really should review and merge 121 before going further. It would make is much clearer to read.

My comment may still be considered in the meantime, so indentation is quite important and would also make the code easier to read :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-63076686.json . 
Thanks a ton for the feedback @lucaspinto ! I'll look into this :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-63799227.json . 
Hi @lucaspinto I made the changes you suggested. Now is it good to go?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-65217231.json . 
@lucaspinto, @pxlpnk, @bastilian ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-66894443.json . 
O hai, I also spammed your PR :smile:  As said in my most recent comment, I need to check out the thing locally and click through it. I'll get back to you hopefully before the end of the year :calendar: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-66913874.json . 
Hey @carpodaster I've made the little changes much as I could. Hope it helps! 
Lemme know after you've tried this PR out locally! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-69498553.json . 
:heart: 

What's the status of this? Would be great if this could be merged :)

/cc @AkshataDM @carpodaster @lucaspinto 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-70803750.json . 
ditto what @svenfuchs said -  it would be cool if this was up and running for the new RGSoC!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-72017994.json . 
How about if we aim to get this thing merged by February 16th. What do you all think? @bastilian @lucaspinto @carpodaster @svenfuchs @AkshataDM @pxlpnk

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-72084397.json . 
At long last: merged!

@lucaspinto I read your comment too late; I've removed the inline-code bit and the team forming bits that I could make out. It will probably result in a few merge conflicts. Since I am the one who caused them by my impatience, I'm happy to resolve them in a pair session if you like to.

@AkshataDM I am very sorry that it took us so long to get this PR merged. Thanks a lot for your patience and your work on this feature! I will create issues for the comments I left and we can tackle them seperately.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-72167208.json . 
thanks so much @carpodaster! 

WWWWOoooooOOOOOOOOooooooOOOOOOOT!!! 

!happy

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-72174417.json . 
@carpodaster well done!

when are you available next week?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-72185418.json . 
@lucaspinto I could do Monday (7pm'ish) and Tuesday (8pm'ish) evening

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-72187515.json . 
@carpodaster good, let's meet on slack then!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-72359507.json . 
@carpodaster I actually can't tomorrow evening, but I can on Tuesday.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-72608333.json . 
Yay! Thank you! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\comment-72620492.json . 
\o/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\issue-46833694.json . 
1) application_form is not an ActiveRecord model, so we couldn't use the same model to implement our save as drafts feature.
2) Created a form_application model which is an ActiveRecord model . The application form has some minimal fields for now, will be adding more fields to the form once we get a go ahead to this.
3) We created two submit buttons for the form - one for submitting the application form and the other to save as a draft and edit later. Once a person submits the form, he/she is able to only read the form and not edit. 
4) If saved as a draft, the person can edit the form as long as the applications are open. 
5) Work in Progress - All members of the team should be able to view and edit the form. 

@lucaspinto do let us know if this is okay :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-23347956.json . 
1) application_form is not an ActiveRecord model, so we couldn't use the same model to implement our save as drafts feature.
2) Created a form_application model which is an ActiveRecord model . The application form has some minimal fields for now, will be adding more fields to the form once we get a go ahead to this.
3) We created two submit buttons for the form - one for submitting the application form and the other to save as a draft and edit later. Once a person submits the form, he/she is able to only read the form and not edit. 
4) If saved as a draft, the person can edit the form as long as the applications are open. 
5) Work in Progress - All members of the team should be able to view and edit the form. 

@lucaspinto do let us know if this is okay :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-20249234.json . 
Should we keep this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-20249245.json . 
Should we keep this too?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-20249292.json . 
Please indent the file correctly (see lines 9-11, 34-44 for instance).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-20249471.json . 
where is this used?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-20410063.json . 
When an application is being submitted in the create and update actions 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-20410128.json . 
This came by default when I created the form_applications controller. I'll remove it? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791757.json . 
As it doesn't contain anything, I would remove the entire file, yes.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791794.json . 
What is an inline-code folder for?

If this is something local to your development environment (project files or soemthing), I recommend putting it into a global inline-code file. You can tell git to use it globally with the following code in your inline-code:.

block-code.

You can add inline-code to your local inline-code then and remove the change from this PR.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791802.json . 
Remove the empty file.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791840.json . 
This method isn't called anywhere. Remove it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791859.json . 
Hm. We now have both an inline-code and a inline-code model. The naming doesn't make it very clear what the differences are. In fact: I have no idea :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791935.json . 
Remove the explicit inline-code 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791949.json . 
Why inline-code instead of the Rails' normal RESTful inline-code ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791957.json . 
I don't think this file should be under version control. Please remove it and add inline-code to inline-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791976.json . 
This is a pretty destructive migration. I wouldn't remove the column just yet: in case of a deployment / migration hiccup when copying the projects over, we cannot recover the data.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791979.json . 
RE: routes.rb
The controller spec even fires a inline-code (even though the describe block states something else).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791984.json . 
This is a long line. Can you transform it into a multi-line block with inline-code please?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791990.json . 
Better use the "new" (not so new anymore)  inline-code  syntax when writing new or touching existing tests.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791994.json . 
Remove this file.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21791996.json . 
Remove these 3 empty lines

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21792005.json . 
The indentation of this file is bugged

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21792009.json . 
If the corresponding DOM element has been removed, remove the check as well.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21792024.json . 
Commenting the validation doesn't feel right. I need to play with the actual selection to make a meaningful suggestion, but that will have to wait for another day :sleeping: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21796403.json . 
I missed deleting that line previously. I've removed it. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21796415.json . 
I created a new model because ApplicationForm wasn't inheriting from ActiveRecord. FormApplication does.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21796423.json . 
There's an older migration to this that copies all the projects over.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-21796432.json . 
I am not confident about this, but I'll read up about it and remove the change for this PR! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-23695162.json . 
What I meant is: the naming is confusing. I wouldn't be able to tell the semantic difference between the two models. However, let's roll with it and change it elsewhere. It's not a show-stopper :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-23790457.json . 
Ok, I don't think the selection flag should be part of this PR. I will remove it during the merge and we can add it in a seperate PR.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-46833694\pr-comment-23791046.json . 
Let us merge the draft functionality provided by inline-code into inline-code. But since the added model won't conflict with anything, I will merge it first and we can go from there.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55943377\comment-78009742.json . 
Also, only configure Mailtrap in config/environments/development.rb  if the required env-variables are setup.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55943377\comment-78028189.json . 
Almost done due to the awesome work of @marcgreenstock in #159. Just need a blackhole interceptor to prevent mails from being sent in development should sendmail be configured to fire incoming mails into space (it is on my machine)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55943377\comment-78625152.json . 
@carpodaster how about Letter Opener?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55943377\comment-79221819.json . 
@marcgreenstock nah, I was just thinking about someting that would avoid emails being send in in the background. Something like this:.

block-code.

(Disclaimer: not tested)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55943377\issue-55943377.json . 
- Mailtrap must be set up in inline-code, lets move it to something like dotenv
- Fallback on a blackhole mail interceptor if Mailtrap is not configured

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55943572\issue-55943572.json . 
See #123. 
- Disambiguate inline-code and inline-code
- Add a draft flag to inline-code and remove seperate AR model

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55944019\comment-76068160.json . 
URL will be hit quite often in the coming days and that one looks particularly evil. I mean it _works_, but it ain't pretty. If there is someone who could at least make the radio buttons + their labels look passable, that would be greatly appreciated :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55944019\comment-76199600.json . 
Hey, it seems like something I could handle. Is there any way in particular they **_should_** look?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55944019\comment-76201442.json . 
to answer your question @sareg0, I think the alignment is the most important (and what makes it look pretty ugly) 
eg. 
- the radio buttons under type should align with "Sponsored" and "Voluntary"
- the Source URL field should be either aligned with its label or under it
- the github handle label should be aligned with its field
- the "Role" radio buttons should be aligned with their respective value (student, coach, etc..)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55944019\comment-76203622.json . 
aha! I think when I logged in I was not on the right page, now I see the ugliness. Thanks so much, I'll give it a work over.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55944019\comment-76203858.json . 
Yay, thanks @sareg0 :balloon: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55944019\comment-76605768.json . 
I have lodge the PR for this one, so just see if it is up to scratch. I hope it is. That was harder than I thought it would be ;D

.
#rails-girls-summer-of-code/rgsoc-teams\issue-55944019\issue-55944019.json . 
Looks weird and messy, at least in FF.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56124034\comment-113884979.json . 
Done. The status update activity lacks a pretty photo, but that one is related to #17 and can be done during the Summer of Code by @F3PiX and @roosdebildt :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56124034\comment-113893246.json . 
I'll put in on our to do-list! :-) <3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56124034\comment-113904020.json . 
brilliant! :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56124034\comment-114442896.json . 
Hey @carpodaster could you give us a quick 'README' on the log engine? Just so we know how it works, and can talk to our teams about it. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56124034\comment-117561406.json . 
@sareg0 As discussed last week, here are some commented screenshots:.

Students have a "Status Updates" link up top:.

!status_update_01

---

It brings up the listing of the team's recent updates. Choose "New Status Update" to create one:.

!status_update_02

---

The form is pretty straightforward:.

!status_update_03-form

---

You can also use simple markdown:.

!status_update_04-markdown

---

Save and marvel at the front page:.

!status_update_05-frontpagersult

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56124034\issue-56124034.json . 
Similar to URL.
- [x] Students' backend
- [x] Link to students/status_updates_controller from somewhere
- [x] Create inline-code record
- [x] Updating/destroying a status update must also update/destroy the activity
- [ ] What photo should be used?
- [x] Allow quick access to a team's activity stream

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126305\comment-72319456.json . 
@carpodaster is this doable? How much time would we need for this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126305\comment-77842150.json . 
Dup of #130 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126305\issue-56126305.json . 
To make sure that students have a completely filled out profile page, it  should be mandatory to fill out their profile page first, before they have the ability to access the application forms.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126437\comment-109336329.json . 
this issue can be closed, right? 
the fields are now mandatory, and the changes to the "application-specific" part of the profile have been updated iirc. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126437\comment-76597421.json . 
- delete: IRC handle

---

**Name**

**Email**

-Don’t show my email address to other users
hint: Only signed-in users will see your email address. If you don’t show your email address, others will have trouble contacting you.

**Github handle**
github.com/_______

**Twitter handle**(optional)
@______

**Homepage** (optional)

**Country**

**Timezone**(optional)

**City**
- [ ] **I represent a company**

**About you**(optional)

hint: You can use basic Markdown here.

**I am interested in**
- Finding a pair
- Finding coaches
- Finding a project
- Helping as a coach
- Helping as a mentor for a project that I am part of
- Helping as a remote coach (helpdesk)
- Helping as an organizer
- Helping as a supervisor
- Becoming a coaching company

### Private information

hint: This information will only be visible to yourself and organizers.
- **T-Shirt size**: select: XXS XS S M L XL 2XL 3XL
  hint: For sponsor T-Shirts

**Postal address**

hint: So we can send things we've received from our sponsors for you :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126437\comment-76717788.json . 
!screen shot 2015-03-02 at 15 10 03

this needs to be clearer, I think. Either
- make it a link saying [Show Application specific questions] that reveals then the fields
- or make the title even bigger saying
  ++++++ONLY ++++ FOR APPLICANTS++++ APPLICATION SPECIFIC QUESTIONS+++++++++

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126437\comment-76718411.json . 
It _does_ say »Application-specific information« though…

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126437\comment-76718761.json . 
@anikalindtner  Sorry, your screenshot didn't load until now. I think hiding them by default is an excellent idea. Ideally, it should be open when the page is accessed with the '#application_specific' anchor. That can be done with JS/client-side

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126437\comment-76718846.json . 
cool, sounds super good!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126437\comment-77054380.json . 
@lislis a direct link to inline-code doesn't work anymore. Can you add some JS magic that detects whether the page was accessed with that anchor and start out with the folded input fields visible? (Uhm… does that make sense?)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126437\comment-77125615.json . 
Sure!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126437\comment-77135082.json . 
Here you go b1730722c2e4eee606fe085646e9cd60fd514889

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126437\comment-77269896.json . 
@lislis Awesome, thank you! :star2: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56126437\issue-56126437.json . 
these fields should be mandatory: 
- [ ] Name
- [x] Githubname
- [x] email
- [ ] location
- [ ] t-shirt-size
- [ ] address

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56166414\comment-176658069.json . 
Projects are no longer proposed on GH. Closing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-56166414\issue-56166414.json . 
- Background worker to check for new projects
- Creates project in teams app w/ GH Issue No. + name

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-74903052.json . 
That's a tricky one. I don't think we have the code running the archived app readily available: unlike the gh-pages for the public blog, we didn't fork the codebase but only the Heroku app instead. Sadly, I don't have access to the Heroku application, either :sob: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-74941010.json . 
@carpodaster I just pulled the repo from heroku. Where can I put it to you? As I have no idea what data there might be stored in I don't want to post it public.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-74942163.json . 
I think there was reason though why this was disabled. 
One of them being that we need to setup new oauth credentials. Another that people sign up for it I guess.

You could run a local version of the app with the db dump from heroku and just disable the auth part?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-74944652.json . 
 @pxlpnk Checking it out locally with the prod dump sounds good! Can you 
 send it via email? My gpg-key is at URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-74947223.json . 
Mail is on its way.

Carsten Zimmermann notifications@github.com writes:.









.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-75027821.json . 
\o/ awesome @pxlpnk and @carpodaster!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-75148769.json . 
I re-introduced the GH login and made sure it doesn't create new users (ie. only registered users can login). The code is pushed, awaiting a deployment.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-75208798.json . 
+1

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-75210263.json . 
I just pushed the code to heroku.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-75212448.json . 
¡Muchas gracias! Solved then.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-75223368.json . 
@carpodaster I tried it and clicked the "login with github"-link, but nothing happens O.o am i doing anything wrong?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-75236525.json . 
Probably yeah, can't log in either but it worked locally :( I'll check tonight.

@svenfuchs can you add me as collaborator on Heroku?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-75237843.json . 
@carpodaster added you on all the appz :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\comment-75342324.json . 
@svenfuchs Thank ye! :)

@anikalindtner Login is possible now. The github oauth secret id thingy was out of date. Fixed! :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58089866\issue-58089866.json . 
The login menu isn't shown in the 2013 app and thus we can't log in and access the data stored in ther over the UI. Would be awesome to finally fix this! maybe @plexus @pxlpnk or @carpodaster ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58247073\comment-75106249.json . 
WEIRD CHECKBOX BEING WEIRD

!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58247073\comment-75107026.json . 
haven't looked at the code yet, but from the text below it, it looks like it might be something to show/hide the email address..?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58247073\comment-75107579.json . 
yeah.. i also think so. but it's neither near the email field, nor does it say so ;D. looks like the text "hide my email address" or sth like that is completely missing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58247073\comment-75108423.json . 
okay, found it - it's exactly what we thought it would be ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58247073\comment-75123670.json . 
Sooo I took a quick look at it (it's actually driving me crazy now) and I don't know where the problem is. or, actually I do: seems like inline-code is not recognised anymore for whatever reason. I'm not sure if it's a nested_form problem, because I had a rails 4.0.5 project with simple_form 3.0.2 and inline-code worked there with no problem, and inline-code doesn't seem to have changed much in simple_form 3.1.0rc1. I'm clueless :sob:  
The quick fix for now would be to add a "normal" label so that it looks like this, but it's quite ugly. (at least the text shows, though).

!screen shot 2015-02-19 at 20 51 23

or maybe @carpodaster or @lislis have more of a clue?!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58247073\comment-75148378.json . 
Bootstrap and simple_form seem to be at each others' throats. This is one of the many facets of #126 :sob:  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58247073\comment-75152913.json . 
yeah, it's pretty terrifying.
should I add those changes above though @carpodaster so we at least don't have floating checkboxes? ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58247073\comment-75153155.json . 
I'm sorry @alicetragedy I only skimmed your comment :blush: Yes sure, go fo' it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58247073\issue-58247073.json . 
I have no idea what this check box does? Does anyone know?

!screen shot 2015-02-19 at 19 16 45

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58281700\comment-75362650.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58281700\issue-58281700.json . 
we are the mediator in the war between bootstrap and simple_form :clap: 
(checkbox label fix)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58281700\pr-29656176.json . 
we are the mediator in the war between bootstrap and simple_form :clap: 
(checkbox label fix)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58293963\comment-75920889.json . 
Signing up and creating teams is possible. Applications will automatically open at March 1st.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58293963\issue-58293963.json . 
saying "you can sign up here from march 1st" as long as the app is still under construction.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58780811\comment-109329407.json . 
as discussed today on the call, I think this is a great idea :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58780811\comment-114666425.json . 
Did this recently get implemented? I noticed that there was a change in the /teams page 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58780811\comment-114752377.json . 
It's on its way, but I haven't moved existing functionality (with the exception of the teams management) into separate namespaces, only new stuff.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58780811\comment-144364459.json . 
As of SoC 2015, the supervisor namespace exist as well :tada: 
The teams management is also in the orga namespace, isn't it?
Close this? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58780811\comment-176766193.json . 
I'd like to keep it open until we've sift through the app once more to assert that we've indeed moved everything that can be moved to separate namespaces.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58780811\comment-349950048.json . 
Closing this. I think we're 98% there.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-58780811\comment-75838023.json . 
:+1: 
also, sorry for changing the title of the issue.. did not realise that it would show up here.. but there was a tiny typo that I had to fix. :p

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58780811\comment-75841604.json . 
hehe, no worries – thank you! :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58780811\issue-58780811.json . 
Rationale: we will eventually forget tossing in a cancan directive. Having a namespaced base controller with a pre-defined inline-code puts us on the safer side in terms of a possible privilege escalation.

An inline-code namespace already exists.

**Edit**: As of late June, a inline-code namespace now also exists.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76055197.json . 
hmm... yes, I think we need that. I've been replying to a couple of emails this week about possible applicants being _really_ confused about which skill-level we are looking for and whether they should apply at all.. Needless to say, I think we really need to assess their skills differently in the application because, well, self-assessment really doesn't work. Can I help out in any way?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76055896.json . 
and I think we would need either 3 or 5 out of these (strongly agree, agree, neither agree nor disagree, disagree, strongly disagree)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76056349.json . 


Yes :)  What I would need is a mapping of Skill Level 1 -> _I can do this, I can do that_, Skill Level 2 -> _I can do that other thing, I can do a handstand w/o hands_, … I will continue to just store the numbers, we would need some real world examples for what they represent.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76058208.json . 
:+1: you got it! consider it done 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76058611.json . 
Whohooo! :kissing_cat:  But don't stress yourself: I don't need it NAO. Friday is alright.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76059012.json . 
Friday was just what I was thinking - I will give it a thought, and I am off work on Friday so I got some time :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76072598.json . 
First few thoughts (definitely not done). I'm not sure about the open source one, and I think we could definitely add some more and move some skills around, happy about input.

_Skill Level 1_
- I understand and can explain the difference between data types (strings, booleans, integers)
- I have heard of the MVC (Model View Controller) pattern.
- I am comfortable creating and deleting files from the command line

_Skill Level 2_
- I am confident writing a simple method in ruby
- I am familiar with the concept of TDD and can explain what it stands for
- I am able to write a counter that loops through numbers (e.g. from one to ten).

_Skill Level 3_ 
- I am comfortable solving a merge conflict in git.
- I am confident with the vocabulary to use when looking up a solution to a computing problem.
- I feel confident explaining the components of MVC (and their roles)
- I understand what an HTTP status code is
- I have written a unit test before

_Skill Level 4_
- I have written a script to automate a task before
- I have already contributed original code to an Open Source project
- I can explain the difference between public, protected and private methods
- I am familiar with more than one testing tool

_Skill Level 5_
- I have heard of and used Procs in my code before
- I feel confident doing test-driven development in my projects
- I have gotten used to refactoring code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76161493.json . 
These are really terrific examples. I was thinking about rearranging them, but I do think they actually make a lot of sense where they are :) I was going to say something along the lines of including 'i have attended a Rails Girls or equivalent workshop' in Skill Level 1, and Skill Level 2 'I have been attending a study group for at least three months'... But these are very subjective and unclear... I like your stuff better :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76163599.json . 
great work, laura! I'm not the best person to judge about the levels, but I really love the examples. the last one could even be "I have already contributed original code to an Open Source project" 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76212333.json . 
@sareg0 yeah, I know what you mean but I'm worried that adding those would make it, as you said, very subjective. (also because being there does not necessarily reflect any of your actual skills, and I'm guessing we have that somewhere else in the application, though I haven't looked) - but feel free to add some more examples! I'm still thinking about some more :)
@anikalindtner great input :) I've changed it accordingly.

thank you both! <3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76214622.json . 
That's an awesome list already, Laura!

Here at Absolventa, @BerliNinja suggested something related to TDD. Like _I am able to write a unit test_ or something. No idea what skill level that means, though.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76215448.json . 
good tip! I would say that it would be a skill level 3 or above; complete beginners literally do not touch testing (I don't think) and people who have recently gotten started are usually not super comfortable with writing tests either, as I think writing tests requires you to be very very comfortable with code already.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76429166.json . 
@carpodaster I've added some stuff to the list and think I've covered most areas; could you please check when you have a minute? I believe that's actually enough, unless you think we need to add more. (but I wouldn't want to overdo it)
Maybe I could add something about setting up/configuring servers for production, or deploying an app?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76612979.json . 
we can close this, right @carpodaster?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76613238.json . 
@alicetragedy We have 'em all in URL right? If so: case closed :bookmark_tabs: :hammer:   Thanks a lot!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76613517.json . 
yep :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76668651.json . 
Since styling things takes me a disproportional amount of time: is there anyone able to add the skill level examples to inline-code ? I was thinking about a Bootstrap modal popup. @lislis  maybe? :smile_cat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-76692651.json . 
I would love to help @lislis with this :) for funz and learningz

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-77176644.json . 
I have made a commit that @carpodaster is reviewing for the last piont mentioned... thanks to @lislis and her guidance :)

OH, and just fyi. Based on a discussion I had with @anikalindtner, we felt the modal might get overlooked, so I put in radio buttons with the full description of the skill level instead.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-77273995.json . 
@sareg0 I've cherry-picked your skill level explanation. Good stuff – ¡muchas gracias!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\comment-77276837.json . 
Sweeeeet! Thank you!

On Thursday, 5 March 2015, Carsten Zimmermann notifications@github.com
wrote:.









.
#rails-girls-summer-of-code/rgsoc-teams\issue-58968013\issue-58968013.json . 
Working on the new application form I just remembered  that we wanted to turn the more or less meaningless 1..5 skill range into something related to concrete examples (like »I am comfortable solving a merge conflict with git«).

We don't have that list of examples yet :scream: We don't necessarily have 5 discrete states, maybe 3 or 4 are sufficient. Wdyt?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58971161\comment-76350820.json . 
Already done in 493fed3c and 1f985dba

.
#rails-girls-summer-of-code/rgsoc-teams\issue-58971161\issue-58971161.json . 
See this commented validation (inline-code)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59098348\comment-105912363.json . 
wow, we merged? everything working as expected?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59098348\comment-105928821.json . 
:tada: :tada: :tada: :tada: :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59098348\comment-106207981.json . 


I hope so :trollface:   Nah seriously, I'm not seeing any strange behaviour. Thank you for your PR, @marcgreenstock !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59098348\issue-59098348.json . 
- Upgrade to latest 4.1.x first
- Upgrade from 4.1.x to 4.2.0

Tools: railsdiff.org
- [x] Remove monkey patch from inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59200038\comment-76374367.json . 
this means that we are not asking the team if they want to apply voluntarily or only funded, right? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59200038\comment-76374424.json . 
Not when they create a team. I will add a check box to the application form

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59200038\comment-76374608.json . 
great, thanks! :tada:  I'll keep that in mind when answering emails then. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59200038\comment-76375145.json . 
@alicetragedy Oh sorry, I wasn't thinking about its implications on support emails! I shall keep _that_ in mind when making changes to the app 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59200038\comment-76375538.json . 
@carpodaster no worries, no one has brought it up until yesterday, and I waited to answer that email until I had a clearer idea of how we would handle possible volunteers in the application process :) so it's all good. Also of course good to know that they can choose to apply as both with the checkbox. thank you for doing all this great work on the teams app!!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59200038\issue-59200038.json . 
It's important after teams are accepted but it shouldn't be accessible to non-organisers

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59248324\comment-76423307.json . 
thanks @carpodaster 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59248324\comment-76423366.json . 
:bow: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59248324\issue-59248324.json . 
After a discussion on hangout, and with Sven we are going to strike the option for companies to just provide deskspace. 

We feel it's a little unneccessary, and don't really want companies providing desk space but not coaching support anyway. Students may as well stay at home or find some free desk space anywhere, and the companies that offer it may not be taken up on it, so best not to offer that as an option at all.

We may remedy this someday in the future, by having an area where all sort of desk space can be offered, and students can take a look at a map. That is probably not going to happen this time around.

Please remove this option from the teams app.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59397618\comment-76607794.json . 
Hey @sareg0, thanks for the work on this! The forms look way better :rocket: 

I've spotted a small regression but I don't know if it's only me: The nav elements have fallen out of the red box.

!screen shot 2015-03-01 at 17 22 13

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59397618\comment-76609506.json . 
!the GIF that sums it up

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59397618\comment-76609851.json . 
hahaha, that's soooo weird. It totally looks alright for me, both in Chrome and FF. Which browser are you using, @carpodaster?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59397618\comment-76610142.json . 
I'm on FF as well. Do you have the 'Apply now' already? Maybe that's the additional menu item that makes it fall apart.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59397618\comment-76611336.json . 
a new flavour of CSS: MysteryCSS.

!screen shot 2015-03-01 at 17 49 04

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59397618\comment-76612692.json . 
Ok, this is weird. Safari + Chromium are playing nice as well and so does FF on my Macbook. No idea why my iMac is being naughty – but then it's indeed just me. Meeerge!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59397618\comment-77872114.json . 
hahah! I must admit, I looked like Peter Griffin messing with the CSS on this one, and the slim... holy cow... Me no likee

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447742\comment-265916725.json . 
Is block-code.` the correct file for this now?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447742\comment-342589195.json . 
Hi there! I’m a first-time contributor and was hoping to help out with this issue. I noticed nobody was assigned to it, but if there’s already a solution in progress I’m happy to try helping out elsewhere. Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447742\comment-343661067.json . 
@MikelSage welcome and thanks for considering to help out :smiling_face_with_open_mouth_and_smiling_eyes:  This is still open and I am not aware of anyone working on this. Ping me if you have questions.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447742\issue-59447742.json . 
When you access an application draft as a student of that application's team, it first shows your information and then your pair's after it. However, the form renders the same partial, inline-code. The partial should not use »you« and »your« in the partial that holds info about the pair.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447926\comment-78313776.json . 
Mentors will sign off AFTER close of applications. We will give teams a week after the closing of applications to get the mentor to sign off
This will save building extra functionality, and also make sure that there is a set period Mentors and Students know about to get the signoff

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447926\comment-91041227.json . 
@marcgreenstock are you working on the last item, the mentor signoff?

#188 has a skipped example that's a placeholder for the mentor ping (some email with a link, stating that they can now sign off that application).

Technically, the sign off isn't a thing on the draft anymore as it's already converted to an application. The controller action may very well be inline-code. Or we can signoff on the drafts controller, proxying the signoff to the inline-code - associated application record. The latter doesn't feel right in a RESTful sense, but would have the charm of re-using the index template and just add a button to the application drafts listing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447926\issue-59447926.json . 
- [x] Send an email when added to a team
- [x] Add inline-code listing all applications that they are part of
- [x] Mentors: add inline-code (irreversible!)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447985\comment-82489801.json . 
Hey @ramonh, have you had a chance to continue Sunday's work on this one?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447985\comment-82490013.json . 
Not yet, sorry, I plan on getting this done today, though! Hope that's okay

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447985\comment-82560896.json . 
Hey @carpodaster! Should be done now. Not sure how to best have you check it out, but please see ramonh/rgsoc-teams in the branch we started:.
URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447985\comment-82561136.json . 
@ramonh Awesome! Can you create a PR for it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447985\comment-82561464.json . 
Sure! Will do

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447985\comment-82620386.json . 
@ramonh validation branch merged! :confetti_ball: I just noticed that we need a way to tell users about possible validation errors. I have an idea but that will have to wait for tomorr :sleeping: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447985\comment-82622149.json . 
YAY! :party_popper: Okeydokey! Let me know how I can help. Really enjoyed working on this. I'll have a think about it too.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59447985\issue-59447985.json . 
-> validation context, see also #129 / #130 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481039\comment-76714073.json . 
- [x] also, I'd leave out the Supervisors here:.

!screen shot 2015-03-02 at 14 48 41

Since the students can't do anything about that and it might look as though they should, if it's shown as empty.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481039\comment-76720165.json . 
@anikalindtner Your view as an organizeress differes from that of a normal user. Do you have access to a locally running app where your user account is not an admin? If not, I can setup the staging-area tonight so that we may access it as normal applicants w/o admin superpowerz

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481039\comment-76725841.json . 
@carpodaster i set myself to student for this case. not organizer. so this was, what students see

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481039\comment-76726517.json . 
@anikalindtner Was that on the production app? If so, you are still an organizer and that has a global effect.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481039\comment-76728699.json . 
@carpodaster sara removed me as an organizer and i did have a different view on the teams. i couldn't e.g. add a supervisor to the team anymore. but i could still see the supervisor - empty field once it was created.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481039\comment-77056267.json . 
@anikalindtner Can you add GH's magic issue check boxes so that we can track which of these items are done?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481039\comment-77129718.json . 
@carpodaster magic's done! :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481039\comment-77272610.json . 
Supervisor listing looks like that now:.

!screen shot 2015-03-05 at 00 18 55

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481039\comment-77274758.json . 
AWESOME! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481039\comment-77317933.json . 
great!!!! :heart: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481039\issue-59481039.json . 
okay, so I think it would be great if we could distinguish between accepted teams and applying teams, since some of the features (such as team twitter account, github, blog url) really don't apply unless you are accepted as a team. 
- [x] Name-> "Team name"
  hint: e.g. Anna & Jolanda, Team Unicorns etc.  You can also change this later. 
- [x] Description 
  hint: Summary of your project(s) -> tell us about you 
- [x] link is broken: 
  !screen shot 2015-03-02 at 14 10 11
- [x] delete: 
  !screen shot 2015-03-02 at 14 16 32
  and: 
  !screen shot 2015-03-02 at 14 17 05
- [x] These fields I'd only show if the team is accepted:.
- x]  ![screen shot 2015-03-02 at 14 17 43

and 
- x] ![screen shot 2015-03-02 at 14 20 14

and:.
- x] ![screen shot 2015-03-02 at 14 22 36
- [x] "add another team member" put this field right under the "Team Name" field 
- [x] "Remove" -> Remove team member
- [x] Remove this Event-thingy:.
  !screen shot 2015-03-02 at 14 27 06

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481546\comment-76750820.json . 
whoop, @lislis 
!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481546\issue-59481546.json . 
If you click "apply now", there should come a site that shows the things you can do:.
- Read the application guide first 
- Only teams can send applications. Create a team now (if they don't have created a team yet)
- Apply now (if they already have a team)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481900\issue-59481900.json . 
If you click "apply now", there should come a site that shows the things you can do:.
- Read the application guide first 
- Only teams can send applications. Create a team now (if they don't have created a team yet)
- Apply now (if they already have a team)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481987\comment-76719615.json . 
Maybe make it optional to remain invisible? Just like we have an option not to show a user's email address even for logged-in users.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481987\comment-76719709.json . 
I'm fine with whatever solution is easier to implement :) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59481987\issue-59481987.json . 
Also, in order to protect their privacy (e.g. from current bosses or whoever), I'd not show the teams that aren't accepted under /teams. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59484448\comment-76835999.json . 


That is not true. Everyone in the team, that's including coaches and mentors, can also read that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59484448\comment-76845654.json . 


See comment inline-code (I don't know where :smile: ): Don't we insist on the project being listed (and even accepted) on the projects repo?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59484448\comment-77044388.json . 
I've fixed number 2 here URL.
the field with no placeholder is for the project name :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59484448\comment-77044590.json . 
and yeah, what @carpodaster said - the plan was to not have them be able to add their own project, but have them ping the mentor of a project they're interested in if the project wasn't submitted....

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59484448\comment-77053296.json . 
I've added a link in the success flash message after creation (fixes number 4)

I've left out the »_They are only visible to organizers._« (number 3) bit since the whole team can access the application.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59484448\issue-59484448.json . 
- [x] this field is missing in the profile: 

!screen shot 2015-03-02 at 14 54 18

---
- [x] broken?
  !screen shot 2015-03-02 at 14 53 06
  Also: the text is still missing the option of adding their own project. 

---
-  ] ![screen shot 2015-03-02 at 14 50 17
  -> "You can edit the fields about you in your user profile. They are only visible to organizers."

---
- x]  ![screen shot 2015-03-02 at 14 54 41 

Your application was saved as a draft. You can find it under "apply now". 

---
- [x] Change: "Apply now" to-> My application

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59706723\comment-77049364.json . 
Yeah, thanks @alicetragedy! (And Travis: you're is drunk – we _do_ have a inline-code table)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59706723\issue-59706723.json . 
fix typo, fix broken link to student application guide, add clickable link to form hint :tada:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59706723\pr-30413389.json . 
fix typo, fix broken link to student application guide, add clickable link to form hint :tada:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59882092\comment-77342295.json . 
I'll see what I can do, but probably in the afternoon. Thanks for the helpful hints :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59882092\comment-81993101.json . 
Thanks @lislis, looks great! Could you add the same styling to the inline-code template as well? The editing of roles I mean.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59882092\comment-82484601.json . 
@carpodaster not sure what you mean. When I go to inline-code I can't see an edit role section. Am I looking in the right place?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59882092\comment-82488785.json . 
@lislis you probably are :smile:  … only you're probably missing some access rights to have it displayed. If you temp. change line 93 from inline-code to inline-code, it should appear.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59882092\issue-59882092.json . 
- [x] teams form: roles
- [x] teams form: soures
- [x] user editing: roles

Some nested form elements could need some styling, @lislis maybe? :smile_cat: 

---

**teams/new: editing roles**
!screen shot 2015-03-05 at 00 23 56

---

**teams/new: editing sources** (comments see above)
## !screen shot 2015-03-05 at 00 45 58

**users/new: editing roles**

!screen shot 2015-03-05 at 00 38 11

.
#rails-girls-summer-of-code/rgsoc-teams\issue-59882323\issue-59882323.json . 
It got replaced by inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60173962\comment-144363568.json . 
I couldn't remove my own roles. Would be great to solve this, it will make the life of next year's Rails Girls so much easier. Someone want to pair with me on this? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60173962\comment-271407624.json . 
Solved by #577 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-60173962\comment-77676440.json . 
Okay. I just tried it, and it works if I remove myself (obviously not the point, right?)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60173962\issue-60173962.json . 
Computer says no when I try to remove @alicetragedy from Team Origami

!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-109324467.json . 
I guess we can now close this issue, right? :D 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-109324600.json . 
Yes, keeeel it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-109324814.json . 
:party_popper::thumbs_up_sign:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-77976358.json . 
hey @carpodaster feel free to assign me to the rest of URL I'm not sure either where to put the link to inline-code but I'll go ahead and implement the functionality and leave it up to someone with more UX skills than I do to put the link in.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78103303.json . 
Hey guys
@ramonh would love to get in on the action of this awesome task list.
@carpodaster he was hoping to take the 'validations' task, but are you mittendrin statt nur dabei on that one?
Is there one the lovely @ramonh could take that won't require too much onboarding?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78107455.json . 
@sareg0 @ramonh no, no – I haven't started yet. By all means, go for it :horse_racing: Thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78115589.json . 
Hiya! Thanks for letting me help. :+1: 

I've downloaded the repo and started familiarizing myself with everything.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78146537.json . 
AWESOME! Welcome @ramonh will get you on the Slack channel asap.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78174291.json . 
@marcgreenstock I've added the link to inline-code in cb84f50ae91d1e2de33770b90bfcfc184726c407. It shows a different link depending on who's looking at it. I think it'll do, but if anyone wants to beautify it, by all means do :flags: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78242459.json . 
Hey! So I'm on issue #130 at the moment. Just wondering - We need to add emails as a required field for the user model. Is this correct? (For future reference, should I be asking this in the issue itself?)

Thanks in advance!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78242943.json . 
Hey @ramonh. I believe the reason why User#email is not required is because users can be added as part of a team just by their github handle. At that stage, we don't know anything about the user yet and can't require an email. It should be a requirement for the inline-code instance though.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78243065.json . 
Ah! Makes sense. Thank you @carpodaster for your lightning-fast reply.

I'm on it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78243281.json . 
thank you so much @carpodaster @marcgreenstock @ramonh for all your hard work so far! :heart: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78252826.json . 
Hey @carpodaster, I noticed that the inline-code model doesn't have an inline-code field, so I'll go ahead and add that too.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78260329.json . 
@ramonh can you add method proxies for it? It's stored on the user (as are several other of the application-specific fields). The draft has a reference to the users (inline-code) so the validations should just make sure the users have their corresponding attributes set.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78260754.json . 
Right! I think that makes sense. Will look into it. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78261022.json . 
@ramonh cool. And thanks! Don't hesitate to ping me if you have further questions :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78261142.json . 
No, thank you for bearing with me, @carpodaster! I'm happy to help in any way I can :+1:  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78269387.json . 
@carpodaster I hope that this is what you had in mind! ramonh/rgsoc-teams@7d0bc959be8b8ac19feeb9ec923d8f0e16e89ac9

Please note that the error message is not finalized of course
EDIT: Added a test for that as well:.
ramonh/rgsoc-teams@454da8dfce40d1de24c624d38b5f0e9e7fb38392

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-78384230.json . 
Note: @ramonh and I will pair up on the validations (and probably #163 as well) this Sunday

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-81992137.json . 
Students can now hand in a 2nd application.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-82196579.json . 
:tada: that's awesome @carpodaster! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-82492009.json . 
So great! Thank you you two!

On Tuesday, 17 March 2015, Laura notifications@github.com wrote:.









.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-91287277.json . 
Hey @carpodaster, A quick question about the following:.



This is what would happen if the application period would close, correct? Does this mean that mentors would be able to edit the application after that?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-91450440.json . 
Morning @ramonh. When the students submit their application, there is no turning back: they cannot modify it any longer. There is a before action in ApplicationDraftsController (inline-code) that prevents modification after it has been successfully lodged.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-91537216.json . 
Thank you, @carpodaster! This makes sense to me. What about mentors, then? Can they edit the application?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-91537684.json . 
No they can't. They can access it read-only, but not modify it before or after it has been submitted.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\comment-91550583.json . 
Perfect, thank you!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60334317\issue-60334317.json . 
- [x] @sareg0: Add remaining fields from rails-girls-summer-of-code/organization#89
  Pull Request #157 
- [x] @carpodaster: Allow students to lodge a second application (2 is the absolute max)
- [x] @marcgreenstock: Add an application_drafts#index controller action that lists all application drafts of all teams that I am part of (as either student, coach or mentor).  (see #144 + #162)
- [x] @carpodaster: Link application_drafts#index somewhere, but the header nav is quite full already. Ideas?
- [x] @carpodaster: Allow coaches to edit an application
- [x] @marcgreenstock: Send an email to coach / mentor when they are added to a team (see #144)
- [ ] @cypher and @ramonh : Allow mentors to sign-off an application. Q: What happens when the application is modified after it? (see #144) A: Mentors will have a set period after applications close to signoff.
- [x] @ramonh: Add validations for inline-code (see #145 / #130)
- [x] @carpodaster: Create an inline-code record from an inline-code (see #163)
- [x] @lislis: Make editing a team more accessible (ie. form styling), see #152

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60408750\comment-77942676.json . 
boom! Put it right back :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60408750\comment-77946933.json . 
Hey @sareg0 – thanks for the PR! :candy: 

Can you add the the new fields to inline-code as well (plus updating the inline-code in inline-code) ? Ideally the fields should be shared really, but currently they're separate.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60408750\comment-78157988.json . 
@sareg shall I add the fields to the inline-code partial?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60408750\comment-78165144.json . 
hey @carpodaster is it ok if I do it in the morning? Or have you taken care of it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60408750\comment-78165349.json . 
@sareg0 no, I haven't done anything. Sure thing, do it in the morning – ping me if you have kwistions!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60408750\issue-60408750.json . 
All of Anika's extra fields have been added, but I would super duper appreciate a second set of eyes on it :)
Many thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60408750\pr-30799244.json . 
All of Anika's extra fields have been added, but I would super duper appreciate a second set of eyes on it :)
Many thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60408750\pr-comment-26075862.json . 
We still need that one. It's for the public user profile. Here's an example (it's the 'About me' part).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60408750\pr-comment-26078052.json . 
I wouldn't include the trailing whitespace. They'll end up in the database, too

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60409500\comment-77944523.json . 
This is the new speed in Travis:.

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60409500\comment-77945168.json . 
Wow. :rocket:  Thanks mister! :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60409500\issue-60409500.json . 
Just getting started with this project, and the first thing i do after setting it up is run the specs...

By adding a few arguments to db_cleaner you can speed things up quite substantially.

**Before:**

block-code.

**After:**

block-code.

This change takes advantage of the inline-code feature, while disabling the ids being reset which takes a long time.

See URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60409500\pr-30799709.json . 
Just getting started with this project, and the first thing i do after setting it up is run the specs...

By adding a few arguments to db_cleaner you can speed things up quite substantially.

**Before:**

block-code.

**After:**

block-code.

This change takes advantage of the inline-code feature, while disabling the ids being reset which takes a long time.

See URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60433072\comment-77974689.json . 
Oh, one more thing:.

I took advantage of Action Mailer Previews. In development you can go to URL and see a preview of the emails.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60433072\comment-78009554.json . 
Thanks @marcgreenstock ! So many goodies in this PR, I can't even :smile: 

Two minor things: 
1. Can you add your inline-code as inline-code to the repo? I will take that one as base for #124 then
2. About inline-code: it's odd that we get errors. I'll check it out locally myself to see what kind of errors we get. The tests should never send real mail, but maybe there are some expectations failing due to mails being shoved into the background queue.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60433072\comment-78017184.json . 
Hi @carpodaster just added to this RP. i like to use letter_opener to open emails on development. Let me know if this is something you would like to use as a fallback to mailtrap.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60433072\comment-78017926.json . 
thanks so much @marcgreenstock!!!! :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60433072\comment-78018080.json . 
@carpodaster  regarding inline-code, I'm thinking it is because of inline-code on spec_helper.rb#L32. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60433072\comment-78022447.json . 
@marcgreenstock  I could make the tests pass with this when inline-code was set back to true:.

block-code.

It's a bit too defensive for my taste, but technically we can't guarantee that every user has an email address. inline-code should grab it, but only if they entered a legal GH handle.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60433072\comment-78025924.json . 
@carpodaster no dramas, I've set it back to default in the test environment and added a robust check on the mailer. I think this is good practice anyway.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60433072\comment-78027782.json . 
@marcgreenstock Superawesome – ¡muchas gracias!  Let's :shipit: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60433072\comment-78032893.json . 
:heart_eyes: 
also, DAT GIF

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60433072\issue-60433072.json . 
This addresses the first item on URL (Send an email when added to a team).

A few notes on what I have done:.
1. I have monkey patched Mail::Message to respond to inline-code in inline-code. I've done this to make upgrading to Rails 4.2 easier when we have ActiveJob available. It essentially puts the mailer in a background job. This should be removed when upgrading to 4.2 .
2. I've added the foreman gem. It is nicer and easier to have your environment variables in a inline-code file. I've also added inline-code to the .gitignore file. I can update the readme to reflect this in the Mailtrap section.
3. I had a bit of trouble with other tests failing because they were trying to deliver the email. I've set inline-code to inline-code. Let me know if this is unacceptable, and I'll find another way.

!Wiggle

Bed time!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60433072\pr-30813340.json . 
This addresses the first item on URL (Send an email when added to a team).

A few notes on what I have done:.
1. I have monkey patched Mail::Message to respond to inline-code in inline-code. I've done this to make upgrading to Rails 4.2 easier when we have ActiveJob available. It essentially puts the mailer in a background job. This should be removed when upgrading to 4.2 .
2. I've added the foreman gem. It is nicer and easier to have your environment variables in a inline-code file. I've also added inline-code to the .gitignore file. I can update the readme to reflect this in the Mailtrap section.
3. I had a bit of trouble with other tests failing because they were trying to deliver the email. I've set inline-code to inline-code. Let me know if this is unacceptable, and I'll find another way.

!Wiggle

Bed time!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-78161739.json . 
And again, thank you @marcgreenstock for being so busy :bee: 

I'm afraid it may take some time to fully review this one, but I'll try to be quick about it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-78163040.json . 
No dramas @carpodaster this isn't something you just merge, although that button does look pretty tantalising doesn't it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-78164465.json . 
Oh, can you run a inline-code and diff through the changes? I think it may have been skipped for 4.1 and I want to make sure we get all the new defaults. We can probably skip the use of inline-code for now since inline-code is already setup securely – I can make the switch after this PR.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-78164535.json . 


Heh, it sure does! :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-78166053.json . 
I didn't know about rake inline-code. I'll go though it and get all the goodies in there.

inline-code is a good abstraction of inline-code variables as it keeps them all in one place. It's a good idea to have imo.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-78225481.json . 
There should be a PSA on comparing diffs while tired. SMTP settings are back in production.rb

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-78240432.json . 
I've just added this to the PR URL to send devise emails through activejob too. See Devise ActiveJob Integration for more details.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-82496593.json . 
@marcgreenstock you know what? Let's merge this fella, wdyt? :shipit: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-82620774.json . 
@marcgreenstock we've got some merge conflicts now. Could you merge the current master into your branch and push again?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-82624331.json . 
I just took a look at it and looks good so far. I would welcome a check for production that inline-code is not set. :ship: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-82625579.json . 
Thanks for throwing another pair of eyes and brain matter on it, @pxlpnk ! :four_leaf_clover: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-82632120.json . 
I'm without a computer at the moment, spilling coffee on it is bad for its health. I'll be back up tomorrow and merge master into this branch. I was thinking of adding a few more tests, mostly around things that I am not 100% confident about. There is no rush for this one IMO, it's rather a conversation that will eventually get merged. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-88783452.json . 
If I can make some time on the weekend I would take on this PR and use the changes to make a fresh mergable version of it. Any objections?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\comment-89276259.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\issue-60496686.json . 
Seeing as though I left a mess with the mail monkey patch I decided to try and upgrade to Rails 4.2.

This resolves URL.

A few notes on what is done:.
1. Rails upgraded to 4.2
2. cancan has been replaced by cancancan
3. All gems have been updated with the exception of aws-sdk, changes to the aws-sdk are significant, see the upgrading nodes. This is perhaps justification for a separate issue.
4. There were a number of deprecation warnings that have been solved, ~~there are still a few more left though~~.
5. I have converted all mailers to use inline-code, ActiveJob style. In doing so I have deleted all the workers.

I had a problem with this URL see the commit description, I am not sure this is tested correctly.

Also in comments_controller_spec.rb. I changed the spec to not test for the delivery, but for the enqueueing of the job. I'll run the coverage shortly to ensure the mailer is tested correctly.

I also noticed two pending tests: inline-code and inline-code make a lot of noise, but don't fail the tests.

!make it stop

Enjoy!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\pr-30848362.json . 
Seeing as though I left a mess with the mail monkey patch I decided to try and upgrade to Rails 4.2.

This resolves URL.

A few notes on what is done:.
1. Rails upgraded to 4.2
2. cancan has been replaced by cancancan
3. All gems have been updated with the exception of aws-sdk, changes to the aws-sdk are significant, see the upgrading nodes. This is perhaps justification for a separate issue.
4. There were a number of deprecation warnings that have been solved, ~~there are still a few more left though~~.
5. I have converted all mailers to use inline-code, ActiveJob style. In doing so I have deleted all the workers.

I had a problem with this URL see the commit description, I am not sure this is tested correctly.

Also in comments_controller_spec.rb. I changed the spec to not test for the delivery, but for the enqueueing of the job. I'll run the coverage shortly to ensure the mailer is tested correctly.

I also noticed two pending tests: inline-code and inline-code make a lot of noise, but don't fail the tests.

!make it stop

Enjoy!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\pr-comment-26173749.json . 
I'm not too sure on this fella, either. This meta-programming loop in inline-code is test covered according to URL but it also has a ternary op in it so I don't know of both branches are really tested.

The elements of the inline-code array now being strings makes sense: I don't think AR serializes symbols. We just need to investigate why it would still return symbols occasionally then.

As for the assignment in L62: I don't know if it's part of the test (ie. checking if assigning the full array instead of individual values through the meta-programmed quasi-boolean accessors works) or just setting up the world for the test. I will check it out locally and play with it myself a little.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\pr-comment-26174493.json . 
Thanks, a few things that concern me with this:.
- I wasn't quite sure if inline-code was ever accessed directly.
- Not sure how these were stored in production with AR 4.1, if they were strings or symbols.
- From what I could gather is using the inline-code method AR stores keeps the instance as a symbol, then saves it as a string.

Anyway the doesn't give instil confidence in it and the code might be doing unpredictable things. I can take another crack at it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\pr-comment-26622803.json . 
We should add a check here that this is actually set.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\pr-comment-26623191.json . 
I think it does no harm if it's not set. It will degrade to "normal" HTTP. Since we already had TLS-STS enabled, browsers who had already accessed the app will still insist on using STS, but that's nothing we can remedy by checking for the ENV variable.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\pr-comment-26624331.json . 
I would have prevented the app from starting. and iirc we now have a SSL cert. I might also be over cautious about this things.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\pr-comment-26625147.json . 
Ideally in production.rb we should set force_ssl to true. But that isn't the scope of this PR. This PR should leave everything as is, except for the rails version of course.

Perhaps another issue is in order for this topic?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60496686\pr-comment-26642415.json . 
I've changed it in master: 7664ddc10013cfb7c79a710939930f20bbd38a69. It should work with nil since it's falsey, but I haven't checked if it blocks booting the server.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60543858\comment-78114184.json . 
Hmmm... why did github include these other commits, is diff looks wrong

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60543858\comment-78115249.json . 
Never mind closing this one off and making a new one

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60543858\issue-60543858.json . 
This resolves the second item in URL.

It is not linked anywhere at the moment, feel free to shoot me directions on where this link should go and I'll pop it in.

The table is a bit sparse, not sure what needs to go in there, but the functionality is there, again, let me know what other columns should exist.

While looking at the routes I noticed this:.

block-code.

The inline-code route doesn't seem to have an action, is this right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60543858\pr-30877300.json . 
This resolves the second item in URL.

It is not linked anywhere at the moment, feel free to shoot me directions on where this link should go and I'll pop it in.

The table is a bit sparse, not sure what needs to go in there, but the functionality is there, again, let me know what other columns should exist.

While looking at the routes I noticed this:.

block-code.

The inline-code route doesn't seem to have an action, is this right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60545213\comment-78145264.json . 
Forgot to add a funny gif! Here you go...

!mask

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60545213\comment-78156485.json . 


That's right, that was probably me being over-ambitious. It will be put to use when we create an application record from the draft (i.e. in #163)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60545213\comment-78156600.json . 
But hell, let's merge it – thanks a lot, @marcgreenstock ! :bouquet: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60545213\issue-60545213.json . 
This resolves the second item in URL.

It is not linked anywhere at the moment, feel free to shoot me directions on where this link should go and I'll pop it in.

The table is a bit sparse, not sure what needs to go in there, but the functionality is there, again, let me know what other columns should exist.

While looking at the routes I noticed this:.

block-code.

The inline-code route doesn't seem to have an action, is this right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60545213\pr-30878062.json . 
This resolves the second item in URL.

It is not linked anywhere at the moment, feel free to shoot me directions on where this link should go and I'll pop it in.

The table is a bit sparse, not sure what needs to go in there, but the functionality is there, again, let me know what other columns should exist.

While looking at the routes I noticed this:.

block-code.

The inline-code route doesn't seem to have an action, is this right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60575442\comment-86146395.json . 
Hey @carpodaster :)

I've enabled the apply state validation for an inline-code in #173.

I'll begin investigating how we can create an inline-code from said draft.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60575442\comment-86204569.json . 
@ramonh I've converted inline-code to use a state machine in URL and have started on working #144 to implement the mentor signoff, which in turn would then trigger the conversion of an inline-code to an inline-code. Maybe you'd like to collaborate on that? (Assuming #171 gets merged :) )

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60575442\comment-86208396.json . 
@ramonh @cypher Thinking about the mentor-signoff triggering the conversion: we have the not-entirely-theoretical option that a mentor is not available to sign off an application draft in time. The selection committee might still decide on one such application on a case-by-case basis or contact the mentor themselves / ping them but in any case, there would be an application record to work on. Maybe we should not make the mentor-sign off a mandatory state then?

(Edited to fix E_NEGATION_INVERSION)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60575442\comment-86210588.json . 
^-  Edit: should **not** make the mentor-signoff a mandatory state 
!Doh

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60575442\comment-86253095.json . 
Hey @carpodaster and @cypher. Sounds good. I'll take a look at this PR and see how I can help. :+1: 

In the meantime, I've also implemented the inline-code controller action here: ramonh@91d4f4bfd391b3aa5a2972cadaff1cd722ab8fe5

EDIT: I've made this into its own feature branch

.
#rails-girls-summer-of-code/rgsoc-teams\issue-60575442\issue-60575442.json . 
See also ~~#145~~ 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-61088964\comment-79036939.json . 
Very cool :+1:    I don't have the time to check it out locally at the moment – do you have a screenie? But even if you don't: feel free to merge! :shipit: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-61088964\comment-79057825.json . 
!screen shot 2015-03-13 at 16 37 45
like this

.
#rails-girls-summer-of-code/rgsoc-teams\issue-61088964\comment-79061343.json . 
Awesome, @lislis  – ¡muchas gracias!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-61088964\comment-79093024.json . 
:heart_eyes: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-61088964\comment-79300410.json . 
looks super!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-61088964\issue-61088964.json . 
I can't do pixel perfect alignment since the nesting of the form elements is kind of scary (no offense!).
I don't want to touch the javascript right now, but if the 'add team member' forms were appended differently one could use the bootstrap grid as it should be.
But that's a different story

.
#rails-girls-summer-of-code/rgsoc-teams\issue-61088964\pr-31133400.json . 
I can't do pixel perfect alignment since the nesting of the form elements is kind of scary (no offense!).
I don't want to touch the javascript right now, but if the 'add team member' forms were appended differently one could use the bootstrap grid as it should be.
But that's a different story

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62460512\comment-83784382.json . 
:tada: :sunny: thank you @carpodaster! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62500611\comment-82566513.json . 
Hm, it doesn't have all the patches. Can you PR against inline-code instead of inline-code? That probably doesn't work after the PR has been issued and you may have to close this PR again.

!screen shot 2015-03-17 at 20 46 13

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62500611\comment-82566974.json . 
Then again, nevermind. We know the missing bits were working on sunday and this patchset is less noisy than comparing the whole set.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62500611\comment-82567115.json . 
Oops, not sure I understood. I forked off the branch we were working on on Sunday

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62500611\comment-82599812.json . 
All done! Thanks for the feedback.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62500611\comment-82617060.json . 
Yay!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62500611\comment-83038846.json . 
Fantastic you guys!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62500611\issue-62500611.json . 
Together with @carpodaster, I've added validations for the inline-code fields, along with that of those of the inline-code, and the inline-code itself.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62500611\pr-31370813.json . 
Together with @carpodaster, I've added validations for the inline-code fields, along with that of those of the inline-code, and the inline-code itself.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62500611\pr-comment-26615155.json . 
You should be able to re-use the inline-code from up above as we don't have a mechanism in place that would check for the students not being the same reference. If it works w/o, lines 88-90 can be removed as well.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62500611\pr-comment-26615590.json . 
Will it break if we leave out stubbing the inline-code tuple?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62808821\comment-88863337.json . 
Hey @marcgreenstock do you think you have the time to take a gander at this one? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62808821\comment-88881282.json . 
sure, sounds simple.

@carpodaster just a inline-code boolean column on the inline-code table?
When updating, it sets the other associated rows to false or a referential column on the teams table?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62808821\comment-88881926.json . 
The simple boolean flag sounds good, @marcgreenstock – I was thinking about an integer field and a sorting plugin but since we only allow two applications, your approach is much better!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62808821\comment-88884114.json . 
Oh like a inline-code integer. That approach might be more scalable, in case you decide that more than two application drafts can be accepted. Besides we could use inline-code in this case and wash our hands of having to code up the update ourselves. I like your approach better :) I'll think about it over lunch and take care of it when i get back.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62808821\issue-62808821.json . 
Student can hand in two applications, but it would be nice if they could state which of the two is their preferred one.

Any takers?

I mentally label this a nice-to-have one. :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62810226\comment-86935146.json . 
I've taken a look at the wording and it all sounds fine to me – there's not really anything I would change. :+1:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62810226\comment-86936171.json . 
@alicetragedy thank you for looking into this! I'll close this issue then.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-62810226\issue-62810226.json . 
The validity of an open application draft can be checked as of 32c7d39156e0a1f7e514b899ccbdddd66828a606 . (Go to the botton and click the 'Check' button). You'll get a number of error messages that are defined in config/locales/en.yml.

I think the wording of some of these could be better so I am open for suggestions. Better yet: file a PR :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63426982\comment-85423431.json . 
We identified this as Chrome-related. The fields are properly inline-code for Firefox.

The severity is very low, though: it's only the UI element, the corresponding attribute on the pair's profile will **not** be overwritten. We should still find a way to fix it, of course.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63426982\issue-63426982.json . 
When editing her application and viewing her pair's information, a student should not be able to select one of the radio buttons (Learning Period) from her pair's application.

!screen shot 2015-03-21 at 17 57 16

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\comment-86198525.json . 
Hey @cypher, thanks! I've made a few comments but on a more general level:.



The thing is: it's very unlikely that there will be more states than inline-code and inline-code. inline-code  is the final state as the inline-code will have been transformed into an inline-code record by then.

With that in mind, I'm not really in favor of adding the external dependency of aasm while also increasing complexity (the inline-code adds some magic for beginners / people not familiar with aasm)

Re: your presentation »it's never too late to add a finite state machine«: do you see any additional states for an inline-code heading our way?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\comment-86202025.json . 
TL;DR: A state machine adds little overhead, and provides stability and future extensibility.

I've started working on #144, and the way I'm currently implementing it is actually an additional state in ApplicationDraft. That is, I've added a inline-code event, that transitions an ApplicationDraft from inline-code to inline-code, which in turn could then trigger the conversion of an ApplicationDraft into an Application. This also ensures that a signed off ApplicationDraft cannot return to a previous state due to a bug.

Additionally, something like a feedback loop might also be desirable at some point, that is, mentors could "reject" a draft, and return it to the applicants for additional editing. This could easily be implemented via the state machine, especially when it comes to notifying all the people involved.

In theory, you could even stop using an extra model for the draft, and keep everything in the inline-code model, and then simply use a state machine to manage the different validations at each stage (but that would most likely be quite an undertaking, and probably not worth it).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\comment-86203236.json . 


I buy it! Good stuff :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\comment-86934847.json . 
yaaaaayyyyy :balloon: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\issue-63979961.json . 
Previously, the state of an ApplicationDraft was controlled by setting
inline-code attributes. While this works as long as there is a small number
of states, this gets complicated quickly if the possible states
increases, as well as managing transitions between states.

When an ApplicationDraft transitions from the 'draft' state to the
'applied' state by calling inline-code, it sets the
inline-code column to either a supplied DateTime, or the current
DateTime.

Missing/ToDo: The inline-code method seems to be intended as a
guard to make sure an ApplicationDraft is ready to be submitted,
but it currently always returns false, and so it can't be used as a
transition guard.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\pr-31819797.json . 
Previously, the state of an ApplicationDraft was controlled by setting
inline-code attributes. While this works as long as there is a small number
of states, this gets complicated quickly if the possible states
increases, as well as managing transitions between states.

When an ApplicationDraft transitions from the 'draft' state to the
'applied' state by calling inline-code, it sets the
inline-code column to either a supplied DateTime, or the current
DateTime.

Missing/ToDo: The inline-code method seems to be intended as a
guard to make sure an ApplicationDraft is ready to be submitted,
but it currently always returns false, and so it can't be used as a
transition guard.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\pr-comment-27158669.json . 
I think the new default column is now inline-code (which also should also remove the need for the  inline-code option in the model). Can you change it for the less generic name? It could also be a string column instead of a text one, but I guess that makes little difference

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\pr-comment-27159197.json . 
The guard is indeed that the model should be valid in the inline-code validation context (for which inline-code is just a proxy). It's short-circuited to inline-code right now because we don't have the proper controller action in place that will actually accept the submitted application.

Can you add the guard so that we don't forget it later?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\pr-comment-27159462.json . 
I decided to go with inline-code because a few of the controllers/helpers depend on a inline-code method/attribute being available, and inline-code doesn't care either way.

But sure, I can rename it, and add a inline-code that delegates to inline-code. Or would you prefer to rename the calls as well?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\pr-comment-27159615.json . 
Also, in my experience, inline-code offers no gains over inline-code in PostgreSQL, but inline-code has the upside that you'll never have to recast the column in case you need something more than e.g. 255 chars.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\pr-comment-27159656.json . 
Sure! I just left it out because it broke the tests :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\pr-comment-27160526.json . 


Ah, you're right. I thought the calls to inline-code were all changed in favor of the aasm predicates. But in that case, it would even count as another argument against adding aasm as adding it doesn't fully hide away the underlying state implementation or state-holding data attributes.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\pr-comment-27160675.json . 


Ok cool. Yes, I have had my fair share of truncated strings on varchar cols, too, and while I doubt we will ever have states > 255 chars, let's stick with text!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\pr-comment-27162198.json . 
Sorry, saw your comment too late. I'll revert 8f6eefef.

Actually, I was able to get rid of most of the inline-code calls, instead calling e.g. inline-code directly on a draft. The only place where inline-code is still used is when it's displayed in a template (inline-code, line 12)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\pr-comment-27162710.json . 
Can you add a test that checks that one can / cannot transition to inline-code with stubbed return values of inline-code ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-63979961\pr-comment-27163621.json . 
Will do.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64015303\issue-64015303.json . 
There already exists an inline-code, but it is not at the standard path. Add a inline-code tag to the header so Apple touch devices use the correct path.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64015303\pr-31832859.json . 
There already exists an inline-code, but it is not at the standard path. Add a inline-code tag to the header so Apple touch devices use the correct path.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64332560\comment-86236149.json . 
I think it makes sense to close this PR for now, and focus on getting the inline-code controller action working.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64332560\issue-64332560.json . 
This pull request enables the validation of inline-code's inline-code state.

This brings us a step closer to completing #163.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64332560\pr-31948088.json . 
This pull request enables the validation of inline-code's inline-code state.

This brings us a step closer to completing #163.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64332560\pr-comment-27161544.json . 
The tests should pass with the old stub in place since inline-code only forwards to that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64332560\pr-comment-27161685.json . 
In fact, it _could_ fix the currently failing spec :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64332560\pr-comment-27162028.json . 
We can't merge this PR yet as that would enable the submit button in app/views/application_drafts/new.html.slim:63 but we do not have the inline-code controller action yet.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64332560\pr-comment-27168464.json . 
This is true! However, the spec indeed fails as we're missing the ability to create an inline-code from an inline-code. I'll investigate.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64332560\pr-comment-27168698.json . 
Ah yes, makes sense. I'll look into adding this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64476709\comment-88641340.json . 
Hi @ramonh – thanks! I'm not sure if we have a test example that checks the branch nested under the inline-code. Could you check if there is and if not add a simple view test for it? (located in inline-code). Don't hesitate to ping me for further questions – thanks in advance :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64476709\comment-90748737.json . 
Hey @ramonh, I »stole« your commit and added it to my PR #188 – I'm closing this one.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64476709\issue-64476709.json . 
While working on #163, I took a look at the Rails routes, and saw that we don't have a controller action for inline-code, but we do have one for inline-code. Using this one instead fixes a few issues I've been having and makes sense to me. Any chance that this is the action we wanted to use?

Thanks in advance!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-64476709\pr-31999379.json . 
While working on #163, I took a look at the Rails routes, and saw that we don't have a controller action for inline-code, but we do have one for inline-code. Using this one instead fixes a few issues I've been having and makes sense to me. Any chance that this is the action we wanted to use?

Thanks in advance!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65271484\comment-87805991.json . 
Hi @jasnow – thanks for the PR! :smile: I've added a comment about comments (sooo meta ;) ). I'm happy to merge after the suggested change.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65271484\comment-87836906.json . 
Thanks again @jasnow – merged! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65271484\issue-65271484.json . 
1. Changed cancan to cancancan (better maintianed) to get rid of these 2 warnings: 
   "failure_message_for_should_not is deprecated" and
   "failure_message_for_should is deprecated".
2. Changing "template" to "view" in spec file to get rid of this warning:.
   "template is deprecated. Use view instead."
3. Removed the "implicit join" config line to get rid of this warning: 
   "Implicit join references were removed with Rails 4.1.Make sure to remove this configuration because it does nothing."
4. SIDE EFFECT: Recreated schema.rb file (2 lines changed) while following README.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65271484\pr-32253204.json . 
1. Changed cancan to cancancan (better maintianed) to get rid of these 2 warnings: 
   "failure_message_for_should_not is deprecated" and
   "failure_message_for_should is deprecated".
2. Changing "template" to "view" in spec file to get rid of this warning:.
   "template is deprecated. Use view instead."
3. Removed the "implicit join" config line to get rid of this warning: 
   "Implicit join references were removed with Rails 4.1.Make sure to remove this configuration because it does nothing."
4. SIDE EFFECT: Recreated schema.rb file (2 lines changed) while following README.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65271484\pr-comment-27424906.json . 
Can you remove these two lines alltogether?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65271484\pr-comment-27425077.json . 
The generated in inline-code will differ on different machines. We can keep it that way, but sooner or later someone will get a schema.rb that removes the whitespace again. I tend to ignore these changes as they only create noise in the commit log. But as said: let's keep them here :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65271484\pr-comment-27432865.json . 
Nice to know why - SUPER thanks.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65316130\comment-87857945.json . 
looks good :+1:  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65316130\comment-88085001.json . 
Hey @jasnow, thanks for your work :)

I'm afraid I tend to close this PR without merging it for various reasons:.
1. There are several changes from inline-code to inline-code which return the same datetime value
2. We don't really need the user's local time zone. In fact in most case we want to use UTC (esp. when comparing the application deadline).
3. Our specs don't really care about or test for the actual timezone – we just need a date :smile: 
4. There are now several additional commits that don't really belong into this PR

However, your patchset made me spot three occurences of inline-code where we would be better of with an explicit inline-code: app/models/mailing.rb:19, app/models/team.rb:95, and app/workers/submission_worker.rb:25

It would be awesome if you could change these as a new PR.

As for 4): I would be great if you grabbed the recent two commits that upgrade Ruby and Rails (i.e. by inline-code) and file a new PR for them.

You put a lot of effort into that – thanks! – and I feel bad to just hit close. Are you ok with splitting it up in smaller PRs?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65316130\comment-88293835.json . 
Finally found @carpodaster previous comment. Closing it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65316130\issue-65316130.json . 
Based on this article, I have changed all "Time.now" to "Time.zone.now".

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65316130\pr-32273518.json . 
Based on this article, I have changed all "Time.now" to "Time.zone.now".

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65339935\comment-88072389.json . 
Two loose ends: 
- WARNING: Nokogiri was built against LibXML version 2.9.1, but has dynamically loaded 2.8.0
- Commented out one line in slim file. Tagged with "FIXME:". Use **git grep FIXME** to find it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65339935\comment-88085045.json . 
Why is **input_html** listed twice in **app/views/application_drafts/new.html.slim** file (line 54)?

block-code.

Unclear how to fix it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65339935\comment-88086136.json . 
Ah, that must be a copy/paste error. Thanks for spotting it! Just put the inline-code in the 2nd inline-code hash.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65339935\comment-88087448.json . 
Show me the revised line and I will check it in and close this issue. THANKS...

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65339935\comment-88294178.json . 
Too confusing with closed PR so closing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65339935\issue-65339935.json . 
As of March 30, 2015, Ruby version is 2.2.1.
- Change version in all config files, such as .ruby-version, .travis.yml, etc.
- Run **bundle** to create new gemset.
- Clean up warnings and errors.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65670737\comment-88638156.json . 
Thanks for the PR! I merged it manually with inline-code – but not it doesn't give you credit for it :disappointed: (Anyone know how to sqash-merge while keeping the original author reference?)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65670737\comment-88651920.json . 
Thank you for accepting my pull request. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65670737\issue-65670737.json . 
Upgraded Ruby and 2 gems: Rails and ffaker
- Upgraded Ruby from 2.1.5 to 2.2.1
- Upgraded Rails from 4.1.1 to 4.1.10
- Upgraded ffaker gem to 2.0.0.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65670737\pr-32413429.json . 
Upgraded Ruby and 2 gems: Rails and ffaker
- Upgraded Ruby from 2.1.5 to 2.2.1
- Upgraded Rails from 4.1.1 to 4.1.10
- Upgraded ffaker gem to 2.0.0.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65794520\comment-88783226.json . 
Hey @jasnow to get rid of the additional commits make sure your master is even with the master from this repository. Your current repo here: URL has the additional commits that you don't want to have.
As your last changes are not so big, I would suggest you to 
- create a new for of this repo
- create a new feature branch: inline-code
- apply your changes here and commit them
- push them to your fork: inline-code
- open a new PR

The other way would be that you save your changes in a branch locally. Then reset your master to the current master, make a new feature branch and cherry-pick the existing last commit inline-code on your new branch and push it and PR it.
Depending on how you want to do it I can elaborate the second approach more.

In general always also on your fork try to work in a feature branch and keep the master up to date with the main repo.

Hope this helps a bit

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65794520\comment-88875506.json . 
Bye

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65794520\comment-89429945.json . 
I cherry-picked your additions – thanks.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65794520\issue-65794520.json . 
Based on @carpodaster comment in PR #176:.
- _"However, your patchset made me spot three occurences of Time.now where we would be better of with an explicit Time.now.utc: app/models/mailing.rb:19, app/models/team.rb:95, and app/workers/submission_worker.rb:25."_

I do not understand why we are seeing the old commits (all but the last one). I will be glad to "hid" them if someone can teach me. THANKS.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-65794520\pr-32468464.json . 
Based on @carpodaster comment in PR #176:.
- _"However, your patchset made me spot three occurences of Time.now where we would be better of with an explicit Time.now.utc: app/models/mailing.rb:19, app/models/team.rb:95, and app/workers/submission_worker.rb:25."_

I do not understand why we are seeing the old commits (all but the last one). I will be glad to "hid" them if someone can teach me. THANKS.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66438517\comment-89999852.json . 
Thanks @pxlpnk ! Will deploy this on staging and after that I think we're ready to go :rocket:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66438517\comment-90300103.json . 
Unmergable again ): 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66438517\comment-90300602.json . 
The best is probably to merge it from the command line. PR's are rendered to easy useless with that amount of changes

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66438517\comment-90472893.json . 
Yeah, agreed: there are currently too many changes in master for big PRs like that. Probably best to wait until after April 14th when we close applications. Just to circumvent the hypothetical event of the odd hidden regression.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66438517\comment-90475840.json . 
fair enough. lets close this one then and restart from the original PR once the time is ready

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66438517\comment-97532205.json . 
@pxlpnk Now that we're done with the application phase, would you have time to give this another try?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66438517\issue-66438517.json . 
This is a dirty merge version. 
I couldn't find another way of handling it in a cleaner way

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66438517\pr-32648712.json . 
This is a dirty merge version. 
I couldn't find another way of handling it in a cleaner way

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66476941\comment-89999292.json . 
Merci! :smiling_face_with_smiling_eyes:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66476941\issue-66476941.json . 
this makes the field and what information it should contain much clearer for the student.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66476941\pr-32653525.json . 
this makes the field and what information it should contain much clearer for the student.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66544984\comment-90025090.json . 
Hi @mymai91 we will be opening up submissions soon. Your applications will be saved as a draft in the meantime. We will send an email out to all currently registered teams once we open submissions. I will comment this issue and close it as soon as submissions have opened, ok?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66544984\comment-90092470.json . 
@sareg0 Yes, Thank you.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66544984\comment-91891522.json . 
Hi @mymai91 you can now submit your application. Please do check your inbox, however, for a mail we sent regarding submissions. I will now close this issue.
Good luck with your application!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66544984\comment-91951264.json . 
@sareg0 How about checked fields? Like I take the pictures above. The result in the application isn't consistent with my profile.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66544984\comment-92086064.json . 
Hey @mymai91, @carpodaster has commented on your other issue. 
Please take a look under your profile, and hit 'Edit', and take a look at the 'Application Specific Information'. Your Skill Level data should be stored there. It just may not be reflected on your application draft, which is  problem we have not yet gotten to the bottom of. 
Many thanks for the understanding

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66544984\issue-66544984.json . 
In the part "Show application specific information" I checked fields 
Please rate your level of programming experience (1 being the 'lowest' and 5 the 'highest').
For how many months have you actively been learning after your first workshop?
But the result doesn't show on our application. I don't know why.
_This is my profile:_
!rails_girls_summer_of_code_-_teams

_This is my team application:_
!screenshot_4_6_15__1_53_pm

_When I check inline-code button the result show but I can't submit my application._
!rails_girls_summer_of_code_-_teams

_Currently, I'm using Chrome Version 41.0.2272.104 (64-bit)_

Could you help me check it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-197068119.json . 
Things get a lot more interesting (read: difficult) with PR #422 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-238938328.json . 
I'd like to look into this one. However, I'm not 100% sure, I get the issue completely. I see the duplicate fields and my 1st thought was: Hmm, why not remove the "Application-specific info" in the user profile? (And double-check, everything is then part of the application) But I suppose there is something preventing this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-241550261.json . 
The application-specific fields are stored on the user record so that they always "belong" to a certain student. The knack with the application draft is: it's not too easy to be sure who's inline-code and who's inline-code when a student accesses the application draft form. The inline-code method attempts to make this deterministic, but I don't know what happens if a student changes their pair in the existing team – were the inline-code fields stored on the ApplicationDraft record, this could result in possible privacy disclosure.

It's a difficult topic – I hope I could shine at least some light onto this? :electric_torch: 

If anyone has a good solution for not storing the application specific data on the user record, please speak up :smiling_face_with_open_mouth_and_smiling_eyes: For the time being I think it's best to DRY the form fields w/o touching the database columns.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-271379358.json . 
With all the action on the Application 2017, it would be really helpfull to solve this issue. I already encountered duplication issues with the very first item (#601). 
Not hindered by too much insight about the implications: can't we just add a shared form partial where we pass in the right student as a local var?  
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-271386222.json . 
I was thinking to remove it from inline-code alltogether – at least for the time being.

I _think_ my idea of including it there was so that applicants can already start filling out their info while they are still looking for a team mate. Is this is a use case? I don't know. For the sake of simplicity, I am willing to let that doubious feature fall.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-271389913.json . 
That is a very plausible use case! I think it is weird that you have to pair up before you can see the form at all.  The form contains useful hints about what is expected from a student. 
However, it think dropping it from inline-code will help a lot. For the time being!!! Hope we can think of another solution.    
 .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-271546543.json . 
@F3PiX would you like to tackle the (temporary) removal of the fields in inline-code?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-302339739.json . 
Can we close this one? Maybe create a new issue for the ideal solution? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-303015114.json . 
You're right, Maud, let's close it!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-311020479.json . 
I removed the label because the issue is closed. If I am wrong, please put it back.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-90536840.json . 
Can I fav items I would like to work on in de RGSoC? I Fav this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\comment-90542346.json . 
You can't fav issues I don't think, only the repo. Just provide the link to the issue / the issue no. in the project plan, that's the best way to reference it. Thanks! :ok_hand: :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66730924\issue-66730924.json . 
The templates inline-code and inline-code duplicate form fields. Let's find a way to DRY things.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66955798\comment-90696253.json . 
Most excellent! :fireworks: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66955798\issue-66955798.json . 
Resolves URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66955798\pr-32789635.json . 
Resolves URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66955798\pr-comment-27907776.json . 
Does inline-code work here?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66955798\pr-comment-27908041.json . 
Will the inline-code not be caught by the Rails UJS driver, firing an XHR? That way the user won't see the status change (the star icon). But I may be completely wrong on this :smiley_cat: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66955798\pr-comment-27914371.json . 
Nah, the jquery-ujs does a post rather than a xhr request, the controller then redirects as normal. So the change will be immediately be visible. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66970934\comment-176646970.json . 
@alicetragedy since you're working on some fine tuning for the application process, do we have a use case for this? If not, I'm inclined to close this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66970934\comment-179317874.json . 
@carpodaster we can discuss on tonight's call, but since we decided to "kick out" the idea of the project plan, this issue would be obsolete. Should we need this in the future, we can always re-open. +1 on closing it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66970934\comment-179318553.json . 
@alicetragedy you're absolutely right. Cloooooosing tiiime! :musical_note: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66970934\comment-179319487.json . 
:dancers: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66970934\comment-90715767.json . 
Should we upload to S3 directly using the AWS JavaScript SDK?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66970934\comment-91006146.json . 
I'm afraid I don't know the AWS JavaScript SDK :( I was thinking of carrierwave or paperclip. These would allow ActiveModel validations.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66970934\comment-91018688.json . 
Using paperclip or friends is fine, however a process will be blocked while a file is being uploaded from the browser. Also if a user has a slow connection and/or a large file heroku will timeout after 30? seconds and will fail the upload.

Want me to take care of this one? All that's needed is an S3 bucket and an AWS IAM key and secret, but i'll set it up with my own account first and make it configurable with environment variables.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66970934\comment-91039204.json . 
The 30 seconds timeout is definitely a very good reason to upload it directly to S3, yes. Is there a way to easily wed the JS SDK with paperclip/carrierwave?

I don't think we should bother adding the file upload at this stage of the application period. We're only open for another week and I think this is something an RGSoC team could work on over the course of the summer.

That's not to say you I want to stop you :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66970934\issue-66970934.json . 
Teams may have project plans in greater detail (even including tables and colourful charts) that can't be represented in a text area input. A file upload would be in order.
- [ ] Allow exactly one upload per application form (rationale: the selection committee has to look through them, opening several additional files per application is too much)
- [ ] Require PDF as the file format (rationale: that can be read by anyone)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66972502\comment-109328941.json . 
I think this is a tricky question. On one hand, I don't think the students should rely on members adding themselves to the team/I think it should be their responsibility.. on the other hand, however, I know that some of the project mentors were slightly 'frustrated' about having to wait to be added. So I think having the possibility to join a team would be :+1: 

As for the second part of the question, I think that the least people need to be asked, the better for the workflow.. If we pick the last option (the one who created the team), which I would tend to go with, this poses the problem: what happens when the owner of the team is not on the team anymore? (for whatever reason, ie. a student dropping out). 

Maybe we need to think about the goals and priorities of the teams app, and go from there. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66972502\comment-114666313.json . 
I'm really happy to see this as a potential task for the team during the summer, however, as I think it will be a great flow improvement. We could also focus group on this at some point if needed :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66972502\comment-120862867.json . 
I like the way LInkedIn offers pre-approval on invites. 
Students could pre-assign coaches before they ask the coach to join, pre-assigned coaches could add themselves to the team without waiting. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66972502\comment-179479932.json . 
Students will invite coaches. You can't join the other way round. Closing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-66972502\issue-66972502.json . 
Right now a user (eg. coaches, mentors) can never _join_ a team. You can either create a team or _invite_ people to an existing team that you're a member of.

Should we add a button that basically knocks on the door and ask the team members to be let in?

Who shall be asked? Aall of them? Just the students? The one who created the team (which we don't track yet)?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\comment-91033629.json . 
@marcgreenstock and @ramonh – you have looked into this PR (thanks a lot for that!). Do you think we are Go for launch?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\comment-91176663.json . 
Hm, I've been testing it manually and I'd say it works. One question, is it supposed to be possible to apply as a single student?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\comment-91176695.json . 
Oh it's merged, :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\comment-91176854.json . 


Yes that works. A pair of students are preferred, though, but that is part of the selection process.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\comment-91176973.json . 
Okay, makes sense, thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\comment-91178039.json . 
Is it possible to test this on the staging app?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\comment-91178448.json . 
We have a staging app but I haven't used it before. I'm afraid I don't have the time to set it up now :disappointed: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\comment-91178667.json . 
No problem! I'll look into it. Sorry, thought you might know

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\issue-67002583.json . 
So this fella finally allows the application drafts to be submitted. 

Closes #163 and also closes #174 (I cherry picked 9a56170696093a13d69d88bac1af05adacffdbf2).

I need another pair of eyes (or two pairs) on this – cc: @cypher @pxlpnk @marcgreenstock @svenfuchs @ramonh 

It adds/changes quite a few things (sorry for the huge patch):.
- Added privacy for banking info and monetary requirements
- Allows mentors to browse application drafts of a team they're part of
- Removes a couple of hard attribute requirements from the inline-code
- Removes a few legacy attributes from inline-code
- Creates an application on inline-code
- Snapshots the team members at the time of the application's submission

Missing:.
- We need to hook in the mentor ping (Re: #144) but that I figured it's not a blocker for merging this PR.

Also: 

:boom: It bluntly copies all the data into the inline-code hstore column, completely ignoring the »real« columns that may exist. Due to the change in how we lodge applications now, **all the scoring logic** in inline-code has to be reviewed and/or adapted. I definitely need help with that!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\pr-32811408.json . 
So this fella finally allows the application drafts to be submitted. 

Closes #163 and also closes #174 (I cherry picked 9a56170696093a13d69d88bac1af05adacffdbf2).

I need another pair of eyes (or two pairs) on this – cc: @cypher @pxlpnk @marcgreenstock @svenfuchs @ramonh 

It adds/changes quite a few things (sorry for the huge patch):.
- Added privacy for banking info and monetary requirements
- Allows mentors to browse application drafts of a team they're part of
- Removes a couple of hard attribute requirements from the inline-code
- Removes a few legacy attributes from inline-code
- Creates an application on inline-code
- Snapshots the team members at the time of the application's submission

Missing:.
- We need to hook in the mentor ping (Re: #144) but that I figured it's not a blocker for merging this PR.

Also: 

:boom: It bluntly copies all the data into the inline-code hstore column, completely ignoring the »real« columns that may exist. Due to the change in how we lodge applications now, **all the scoring logic** in inline-code has to be reviewed and/or adapted. I definitely need help with that!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\pr-comment-27987287.json . 
Maybe use inline-code instead of inline-code. It uses the a background worker and is rails 4.2 compatible. Defined here: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\pr-comment-27987600.json . 
I am so lost with this method, I have no idea what's going on, could we consider a refactor?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\pr-comment-27988811.json . 
Me being picky, but could this be called inline-code or something to this effect? I don't think models should be named with verbs.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\pr-comment-27995439.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\pr-comment-27998190.json . 
We don't set the team explicitely and instead retrieve it via the inline-code instance (which we find with inline-code). This method (together with inline-code in line 131) wants to make sure that the team is discarded when the currently logged in user is not part of that team and that we have no start of the association chain when inline-code is looked up in line 71.



By all means YES. However, I would very much like to do this after this functional PR if you think this method does what it is supposed to do (see above).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\pr-comment-28000678.json . 
I've started naming classes like this a year or so ago and I like it for three reasons:.
1. Classes ending on *or or *er (*Creator, *Finalizer, *Converter), to me, convey an overly ambitious attempt to be generic. This class has a very special purpose and doesn't aim to be generic at all.
2. I use the verb form because I want to model the _process_, as opposed to something _static_ (like a DB record)
3. I look at the name and I know exactly what it does, helping future versions of me sticking to its single responsibility :smile: 

That being said, I'm not completely against renaming it of course. I'm against the *Delegator suffix, though, and I don't have an idea for a noun-based class name that makes it equally clear what's going on in that object.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\pr-comment-28007124.json . 
I get it, yeah, I didn't mean refactor now, just one day :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\pr-comment-28007257.json . 
No problem, it's hard naming stuff.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67002583\pr-comment-28009295.json . 
That's a very diplomatic answer :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67148107\comment-91038384.json . 
Hi @snjqi188 – there is no upper limit for coaches in place. I've just verified it locally and I could easily add a 4th coach to a test team. Can you please describe the exact steps you took to add a coach? Also, can you add a link to your team profile (unless you flagged it as invisble/hidden) ? Thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67148107\comment-91085984.json . 
Oh I see. It says 'user has already been taken' when we try to add @link664 as a coach.
Yikes!
URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67148107\comment-91143100.json . 
Are you using the Team > Edit > Members form (the one that has radio boxes) or Team > Add a member?

Just to double check: you select 'coach' as the role, right? Is link664 member of a (hidden) team as a student maybe?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67148107\comment-91268269.json . 
Edit>Members didn't work but Team>Add a Member works just fine!

Thanks for all your help!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67148107\comment-91268925.json . 
Glad that solved it :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67148107\comment-91371223.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67148107\issue-67148107.json . 
Hi all. My team has not been able to add more than 3 coaches in the application. I believe there's a max capacity. One of our coaches is left out of the process! Please expand the capacity!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67194583\comment-120658244.json . 
I think I found how to show a "meaningfull error" when github auth errors occur.

But that won't solve the error regarding the new_session_path. 
While the underlying explanation you show above, is about a bad verification code: 
URL 
I can't find that the bad verification code and the new_session_path thingy are related. Could it be 2 different issues?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67194583\comment-120721141.json . 
The inline-code is a side-effect of devise's authentication chain. We don't have a inline-code (not do we want to build one): it is meant as a fallback login mechanism (here: classic username+password). We only support GH authentication. To fix this error, we need to hook into devise's failure handling and intercept the GH callback error before devise tries to fallback to a traditional login.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67194583\comment-91042254.json . 
Effect:.

block-code.

Caused by: 

block-code.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67194583\comment-92085548.json . 
Oooh. I want to add this to Team Cheesy's project plan. Looks like a great warmer-upper. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67194583\issue-67194583.json . 
if something bad happens on the GH-side (likely because the user didn't authorize the app) and Omniauth redirects back to our app, it (or Devise?) tries to redirect to inline-code. We don't have that since we don't know how to login users other than through GH auth. Instead of a meaningful error ("We couldn't log you in, fix Github!" or something), the user gets a 500 Internal Server Error.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67222591\comment-109326134.json . 
we can close this I think. Our pairing session was more or less successful..  ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67222591\comment-114666011.json . 
a little later but :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67222591\comment-91040818.json . 
I'd be happy to help, and @sareg0 was down for it as well. Tuesday afternoon-evening-ish would work for me!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67222591\issue-67222591.json . 
Due to the change in how we lodge applications now, all the scoring logic in Application has to be reviewed and/or adapted. I definitely need help with that! (Re: #188)

The selection process will start April 15th, 2015. I have time to work on this next Monday and Tuesday. Who's down? :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67850642\comment-197229372.json . 
This has been fixed for this year's application process! :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67850642\comment-91997897.json . 
Hello @mymai91 – we are aware that this situation occurs for some applicants. Do the checkboxes show up properly for your pair, or is it just your fields that are not pre-set with values from your user profile?

To assure you: if the values are checked in your user profile, you're all good. It's weird that they don't show up in the application draft, and I have yet to get to the bottom of this, but the application data will be collected from your user profile once you hit 'Submit'.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67850642\comment-92086585.json . 
@carpodaster: I got it. Thank you.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67850642\issue-67850642.json . 
In the part "Show application specific information" I checked fields 
Please rate your level of programming experience (1 being the 'lowest' and 5 the 'highest').
For how many months have you actively been learning after your first workshop?
But the result doesn't show on our application. I don't know why.
This is my profile:.
!my-profile

This is my team application:.

!team1

Currently, I'm using Chrome Version 41.0.2272.104 (64-bit)

Could you help me check it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67957050\comment-179479357.json . 
The 2016+ application process will reduce the involved parties to just the two students. Closing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-67957050\issue-67957050.json . 
Does it make sense to add a comment box for the team? The new application process now involves several parties (students, coaches, mentors) – commenting would faciliate the collaboration during the application phase.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68139416\comment-92419998.json . 
hey @ShellyCoen – can you confirm that this is a duplicate of #192 ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68139416\comment-92420471.json . 
My apologies, exact same problem! Should have read through the issues list

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68139416\comment-92420679.json . 
No problem. We have a lot of open issues and no one is expected to read them all :smile: Allow me to close this. I can offer you this reply:.



Good luck with your application!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68139416\comment-92420921.json . 
Thank you! Keeping my fingers crossed!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68139416\issue-68139416.json . 
I filled out my application and saved my skill level and how many months options. 
Up until a couple of days ago that kept the information but now after I save and exit the application, and then return to it, the radio buttons are no longer selected. 

To reproduce:.
Select radio button and save application
Sign out and then back in 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-92507756.json . 
!screen shot 2015-04-13 at 23 33 13

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-92823495.json . 
:+1: @marcgreenstock 

@cypher made inline-code a finite state machine using AASM. Do you think you can make inline-code an event / transition just like inline-code#submit_applicationinline-codeApplication´ record.

It would be best to also update the associated application with the signoff data since the selection committee will only operate on applications, not application drafts. Adding them to the inline-code hstore hash is sufficient, I think.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-92831694.json . 
I can certainly help out with this once I'm home from work :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-92877585.json . 
I'll be back at my computer in a few hours and can take care of making signed off a state and fix up any suggestions.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-93039865.json . 
@marcgreenstock I've written a quick patch that should demonstrate how using the state machine for this case would work, but I haven't yet updated the tests.

(To apply the patch, copy it into a file, then run inline-code, or if you're on OS X, copy it, then run inline-code)

block-code.

(If you get an error about inline-code or something like it, you've probably missed the newline at the end)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-93472373.json . 
Thanks @cypher. One question for you and/or @carpodaster, what is the expected flow of state?

Should the mentor sign off first before the application is submitted or after? Currently with @cypher's patch the can not transition from inline-code to inline-code. Is this the expected behaviour? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-93476211.json . 
As far as I know/understand, yes, that's the expected flow (that is, draft -> submitted -> signed off)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-93476246.json . 
The flow should be inline-code. The application drafts we're after are all in the inline-code state and an inline-code record has already been created for them (to freeze and protect them from modification).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-93477080.json . 
@cypher, @carpodaster, cool thanks, just fixing the tests then.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-93925101.json . 
Morning @marcgreenstock – any progress with this? Can I help?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-93943455.json . 
hi @carpodaster sorry, i know this was urgent, it's now complete i think, can you take a look?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\comment-93948407.json . 
@marcgreenstock Thanks! Everything looks good to me, so I merged it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\issue-68199351.json . 
It's a little rough and kind of rushed, but here it finally is, the last part of URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\pr-33205684.json . 
It's a little rough and kind of rushed, but here it finally is, the last part of URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68199351\pr-comment-28324548.json . 
Maybe just return inline-code instead of the explicit bools?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68230888\comment-92708106.json . 
Hi Mixolidia, 

When you select your skill level, and hit 'Save draft', your 'Skill Level' selection will appear to be empty. However, the data has still been saved. If you want to verify this, navigate to your Profile page, and hit 'Edit'. Navigate to the Application Specific information in that area, and you should see your skill level listed there.

If you hit 'Check Validity', and the Teams App doesn't return any warnings about radio button fields being missing, you're application is good to send. When the draft applications is submitted, it will automatically pull 'Skill Level' data from your profile.

We sent an email to applicants about this this morning just to let them know this. I will close this issue, although we will keep on looking into it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68230888\issue-68230888.json . 
For questions:.
"According to these guidelines, what is your programming level (where 1 is the 'lowest')?"
and
"For how many months have you actively been learning after your first workshop?"
Chosen options are saved. When one student saves as draft the other student choices are erased.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68309535\comment-92707788.json . 
hi @soff22, I believe it should work if you enter an integer only (eg. 20), I've just tried it out locally – however you are right, there is no error message implying that this field should be integer-only. Maybe we can quickly try to fix that! Thank you for pointing it out.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68309535\issue-68309535.json . 
I have a problem with saving the information in the field for voluntary team.

As a voluntary team, how many hours per week would you be able to work in the project?

The text cannot be saved after I click Save as a draft and when I look again at the field it is empty.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68496725\comment-176642090.json . 
We decided to do it this way during our Post-Summer hackday in Vienna, right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68496725\comment-179478261.json . 
Moved to #362 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68496725\issue-68496725.json . 
We provide examples to select one's skill level, yet you can only select one discrete level even though you may want to check individual examples from different skill levels.

Instead you could check each example individually with examples from what we consider a more advanced level being weighted more. The outcome is a sum of weighted values, the higher it is, the better the personal skill level.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68501761\comment-183963820.json . 
To get a basic idea of the project, I would like to work on this issue. 

As I understand, the dialog should appear before submitting the project. Is it right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68501761\comment-184182481.json . 
Hello @sadiksha ! We're in the process of reworking the application process (again…). This issue is still relevant but we are very likely to move some files around, it's probably best to implement this is as modular as possible. That way we can easily transfer the work / the patch from your branch or Pull Request to the new application process.

As for your question: absolutely right, this would be a required input as the last step, i.e. when or before the user clicks on "Apply".

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68501761\comment-284280734.json . 
Heyy I am applying for RGSoC2017 and I wanted to get a feel of the project, so I have been solving a few issues :) This seems to be an interesting one.  I wanted to use the data-confirm-modal gem to resolve this. Should I go ahead with it?
@carpodaster   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68501761\comment-284380925.json . 
Hi @amrtanair, I think we'd like to avoid adding an extra gem just for this purpose. Could you hold off on working on this just yet, until we've sorted it out? Thanks!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68501761\comment-284648495.json . 
Okay @alicetragedy I'll try searching for a way I can solve this issue without using any further gems. :) .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68501761\comment-284661982.json . 
Would be great! Note: this is not time-sensitive, as we are closing applications tomorrow already. Take your time thinking about different options and feel free to pop in here to ask questions if you're unsure about anything. .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68501761\issue-68501761.json . 
At least a javascript dialog. Better yet: asking the user to explicitly type 'yes' or something.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68502131\comment-231521688.json . 
Possible conflict with #201 when comparing updated_at timestamps?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68502131\comment-368671624.json . 
@carpodaster Hello, I noticed this issue is still open. I am a first-time contributor and was hoping to help out with this issue. If there is already a solution in progress I would be happy to help out elsewhere.  @marshallhouston will be contributing as well.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68502131\comment-369030495.json . 
@carpodaster Hello again! After going through the code and experimenting with the application, it became apparent to @marshallhouston and I that we were not clear on the issue that is trying to be solved. Our thoughts are that the application_draft is not updating when one of the student fields is being edited because the updater field on application_draft does not change.
This is a snippet of the test we were starting to write in the spec/controllers/application_drafs_controller_spec inside the describe patch block.

block-code.

Is this test on the right track?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68502131\comment-371891840.json . 
Hey @dionew1 :waving_hand_sign: 

sorry for the late response - could you already figure out how to solve the problem?

I think it's not even necessary to write controller specs for this, normal unit tests in the inline-code directory should actually be enough to cover this behavior. Aside that, your test also sort of misses the point - since you're also updating an attribute on the inline-code, namely the inline-code - so it's a false positive :winking_face: 

What you need is probably inline-code for the association. Maybe take a look here in the docs.

Does this help you?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68502131\issue-68502131.json . 
Since the student fields are saved on the inline-code instance, the inline-code instance will not update inline-code. That should be changed to avoid confusion.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592088\comment-231521670.json . 
The impact is not as big anymore since we've reduced the read/write access to the two applicants only. However, a simple comparison of the inline-code timestamp with a warning in case a change has been by someone else would be nice.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592088\comment-313518614.json . 
Sounds good for me... Maybe create a callback action for verify this action before save.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592088\comment-350044783.json . 
Hi @juuh42dias ! Are you still interested in working on this? No pressure :-) Else, we save it for the next RG team...
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592088\comment-350067632.json . 
@F3PiX  not for now. I'm very busy with my current work.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592088\comment-350067839.json . 
Sounds cool! Have fun!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592088\issue-68592088.json . 
Several people can access and edit data for the application form at the same time. We need a check that warns a user that the draft was modified when they click save.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592606\comment-195078129.json . 
Same thing happens when I change something and click 'Check Validity'. I guess this is not the desired behavior as well? (It's a bit less clear since it does trigger a get instead of a put in that case.)

Maybe the right way to deal with this is to introduce a show view in order to seperate the state changes and the check from the editing process? That way users would not have to guess which of those buttons saves their changes and which one does not. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592606\comment-195534763.json . 
Ah, good catch! Sure, this applies (tehehe…) to inline-code as well.

I'm not sure I understand the show view idea, but I fully agree that students shouldn't guess which button does save and which one doesn't. Maybe just have all buttons save stuff?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592606\comment-196085119.json . 
I think we can probably close this since the buttons now simply disable when the form is changed.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592606\comment-196085322.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592606\comment-196249310.json . 
Excellent work, @michaelem – thank you!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68592606\issue-68592606.json . 
When a user changes data in the form field but doesn't explicitely click 'Save draft' before submitting the application, the most recent updates are lost as the controller action only calls the state machine transition without assigning potentially updated attributes.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68861763\comment-179477971.json . 
Mentors will no longer be part of a team in the application phase. Closing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68861763\issue-68861763.json . 
Right now mentors are part of the students' team – which makes sense if there is only one project (ie. when the team has been accepted for the summer). When a team applies with more than one project, mentors for both teams are in the same team and we have no way of figuring out which application they are supposed to sign off.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-192717276.json . 
I'd love to look into this (and related) if noone is on it right now.
Would also suggest to, while on it, hide the inline-code button in the team's index view for students already being part of a team. This button tricked me at first.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-192876425.json . 
as far as I know @klappradla no one is on it. ( @ramonh @carpodaster correct me if I'm wrong ) so please go ahead :) +1 on hiding the inline-code button, I think it's sensible. In fact, I believe there are quite a few UX things we could be fixing on the teams app ;) thank you!!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-192878593.json . 
All :+1: from me! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-193017616.json . 
I added the requested validation process in this PR: URL.
It includes some rather subjective thoughts on the UX I would be totally fine to withdraw again. As the issue addresses more model-level stuff, I didn't really want to make any view- and UX-related decisions and therefore did not hide the inline-code button yet.

If someone could give me a quick feedback wether UX-wise I'm getting this right or wrong, I'd take this as a basis to then go ahead with button +/-.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-194211794.json . 
I'll try to submit the UX changes (hide inline-code and remove inline-code button) tonight if I'm not to sore from work (will be Saturday otherwise).

@alicetragedy since you're changing quite a lot around the forms, is it still reasonable for me to start from **inline-code** for this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-194215274.json . 
@klappradla absolutely. I'm not dealing with anything in the inline-code views, just inline-code, so we won't run into any problems if you start from **inline-code**. go ahead and — thank you! :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-195620156.json . 
I've stuffed a few "security" holes in a85416d but I noticed another: When you from a new team, your own user is preset as the first role but you can choose freely between being a coach or a student. It makes no sense for other roles than a student to form a team, hence this shouldn't be possible. Any takers?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-195727405.json . 
I think I could also prevent this through CanCan abilities. Then disable the radios like in URL.

It it's not super urgent, I'll look at it, but may not find the time today.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-197501997.json . 
is this still a thing? or can we close?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-197506421.json . 
I fear this is still somewhat of a thing. I would also count the "a student can create a team with them as coaches" as being part of this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-197506865.json . 
@carpodaster then URL would partly take care of this, at least. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-271910413.json . 
Oh, just realized this is assigned to me - I actually don't really remember the context right now. But it's still relevant and should be fixed @alicetragedy ?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-271914986.json . 
I don't remember much of the context either. 
Ramon's PR seems to have fixed the bug with students adding themselves as coaches, so I don't have an overview anymore on what the exact problem is here. I'll try to test this tomorrow to see if it's still an issue!
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-271923213.json . 
I am pretty sure this one is very relevant. IIRC suggestion was somewhere to add a inline-code ability for students. Or maybe that was my implementation idea. 🤣  .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-273459209.json . 
So, I've taken a look at this ticket and tested how it currently works in the app, to see how much has been resolved. The issues were:.

1) keep students creating a team from setting / changing their own role (fixed in URL.
2) keep team members from changing their roles after they've been set (fixed in URL.
3) remove “new team” button from UI for students that already belong to a team for that season (fixed in URL with CanCan)

I am pretty sure that this ticket has hence been tackled ;)
An improvement to 2) would be to add a CanCan rule (see URL but this is not urgent, definitely not a bug anymore, and could be closed, or at least removed from the Application milestone.

@carpodaster could I quickly ask for your confirmation on the above? I think I got everything but might have missed something important.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-273461831.json . 
Sorry, ignore what I wrote above. Seems like 1. is partly still there after all. As a user creating a team for the first time, it's still possible to change the preselected “Student” to “Coach” and add yourself to a team as a coach instead of a student. :disappointed_face:.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-277203091.json . 
I fear we have to completly rething and rebuild the team creation / editing process.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-277225127.json . 
yep, looks that way unfortunately. :( .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-277233667.json . 
Cool!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-350043622.json . 
Can we make this a bit more actionable? Sounds like a really good thing to do _before_ Summer of 18, si?
@klappradla You still in? .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\comment-350262975.json . 
+1 from me.
.
#rails-girls-summer-of-code/rgsoc-teams\issue-68967722\issue-68967722.json . 
There are (or will be) validations for a team's composition on inline-code, but they won't be fired when editing a role:.
- [x] Student must not be part of another team (#138)
- [x] Team must not have more than two students (#204) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69172164\comment-94146712.json . 
The way the data is presented is super lazy: The view just iterates over whatever field exists in the application and displays its name together with its value. That's actually why there was little to no adaption needed even though we virtually turned the application process upside down.

There is no way of automatically infering the human-readable question without hard-coding and duplicating the field -> question association. It's certainly not rocket science, but I wouldn't do it for said duplication / hard coupling reasons.

What I can offer is using this translation table which is used to prettify error messages on an inline-code. Would that help / solve it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69172164\comment-94149590.json . 
Thanks, @carpodaster! That was very helpful

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69172164\comment-94154732.json . 
Done in #208 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69172164\issue-69172164.json . 
It's been hard to read the applications, especially with the fields not showing the questions we asked, but just some field_name-thingy. I'd love it if we could make it this year a bit more readable and easier to rate in showing the exact question we asked the teams above their answers. For now it looks like this:.

!screen shot 2015-04-17 at 18 25 40

I guess there is probably an easy way to switch out the "project_name" with "What project are you planning to work on".

Seems to me that we could jut exchange the "f.input :," with the "label:" and it should show the questions instead of the weird description?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69292304\comment-94150213.json . 
Thanks for the feedback!

I'm not sure I understood correctly, but calling inline-code seems to return the 'English-ified' key. So for example:.

block-code.

would return 'Misc info', which is not quite what we want.

Have I misunderstood? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69292304\comment-94150307.json . 
Quick follow-up:.

I've looked into it, and calling inline-code should be returning the values from the locale file. I'll look into why this isn't happening.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69292304\comment-94150369.json . 
Ok now I got everything I need to get going. Thanks for clarifying, @carpodaster!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69292304\comment-94150375.json . 
For "normal" columns / attributes, that's correct. It looks up in the locales files and if it doesn't find something specific it just calls inline-code on the column name, I think.

However, all application draft attributes are saved in the inline-code hash within the inline-code record. That hash what we're iterating over and what's displayed in the show view. Since it's hash-data we cannot use the locale file.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69292304\comment-94150733.json . 
Got it - Thanks @carpodaster! Will be closing this to rewrite things.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69292304\issue-69292304.json . 
This adds a constant to the inline-code model that defines the labels that will be displayed when viewing an inline-code.

The inline-code view will now display these labels.

This aims to address #206 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69292304\pr-33599635.json . 
This adds a constant to the inline-code model that defines the labels that will be displayed when viewing an inline-code.

The inline-code view will now display these labels.

This aims to address #206 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69292304\pr-comment-28642765.json . 
I would rather not copy the field translation copied to a constant (would require editing the semantics in two different places again). An idea would be to change the method body:.

block-code.

but unfortunately inline-code always returns a value.

OTOH, we only need this in the iteration in inline-code, so technically we never access direct database column attibutes of inline-code. We could use that one:.

block-code.

What dou you think?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69294059\comment-94152740.json . 
Looks great! LGTM :heart: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69294059\comment-94154698.json . 
:confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69294059\issue-69294059.json . 
This addresses #206 by adding some missing locale strings and displaying these in the inline-code view for the inline-code's data.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69294059\pr-33600000.json . 
This addresses #206 by adding some missing locale strings and displaying these in the inline-code view for the inline-code's data.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69295255\comment-113085015.json . 
Rating/Selection engine will be rewritten for 2016. Closing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69295255\comment-94400750.json . 
@svenfuchs this will be fixed by #211 right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69295255\issue-69295255.json . 
It seems we can't sort the applications list by any of the columns shown.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69301755\comment-94162219.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69301755\issue-69301755.json . 
Remove ID column, display team and student links:.

!image

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69301755\pr-33600918.json . 
Remove ID column, display team and student links:.

!image

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69351905\comment-94295638.json . 
@carpodaster i think this is good to be merged and deployed. this way @anikalindtner, @alicetragedy, or @sareg0 could give it a little test run before the actual ratings start on wed/thurs 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69351905\comment-94376547.json . 
Hi @svenfuchs, without data, I have trouble  grasping the control flow of inline-code and inline-code and I suppose I will have the same trouble in a few months again ;) Can you add some specs for them?

Also, rudimentary integration specs or controller specs with inline-code for the added controller actions would be great; I want to make sure every template gets touched during test runs.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69351905\comment-94472729.json . 
@sareg0 tries to convince testmeister @marcgreenstock to add some tests for 
- inline-code
- inline-code
- inline-code 
- rudimentary controller spec (with inline-code) to touch inline-code

With that in mind, LGTM! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69351905\issue-69351905.json . 
Ratings were previously given per application. We have split up the application creation process so people do not have to enter their, e.g. students or team details twice. 

This change also splits up the rating process in the same way. I.e. ratings to students are given based on  student-related fields, ratings to teams are given based on team-related fields, etc.

Also, fields displayed are now sorted by, kinda, relevance and topic, on each of the respective pages.
# TODO
- [x] After creating a rating for a student, redirect to the user rating page for the next student. once both students were rated, redirect to their team rating page, then their application pages. Then redirect to the next student on the next team, and so on.
- [x] Have a todo list for selection committee members: Link to users, teams and applications that do not have a rating from inline-code, yet.
- [x] Fix sorting for some of the headers.
- [x] Fix displaying the project name

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69351905\pr-33609484.json . 
Ratings were previously given per application. We have split up the application creation process so people do not have to enter their, e.g. students or team details twice. 

This change also splits up the rating process in the same way. I.e. ratings to students are given based on  student-related fields, ratings to teams are given based on team-related fields, etc.

Also, fields displayed are now sorted by, kinda, relevance and topic, on each of the respective pages.
# TODO
- [x] After creating a rating for a student, redirect to the user rating page for the next student. once both students were rated, redirect to their team rating page, then their application pages. Then redirect to the next student on the next team, and so on.
- [x] Have a todo list for selection committee members: Link to users, teams and applications that do not have a rating from inline-code, yet.
- [x] Fix sorting for some of the headers.
- [x] Fix displaying the project name

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69351905\pr-comment-28655008.json . 
There is a lot of commented code here and elsewhere. Do we still need it? If not, let's remove it. We have it in git if we decide to bring it back.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69351905\pr-comment-28655040.json . 
Will that not break production?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69351905\pr-comment-28667300.json . 
I think Heroku needs this, no?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69351905\pr-comment-28687579.json . 
jup, fixed

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69351905\pr-comment-28687602.json . 
it will, thank! fixed

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69351905\pr-comment-28687622.json . 
removed a bunch of comments. feel free to clean up more :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69538258\comment-94396974.json . 
Looks good!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69538258\issue-69538258.json . 
This is to add the mentors role to the list of available roles to send an email to.

specs were run, no failures.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69538258\pr-33645358.json . 
This is to add the mentors role to the list of available roles to send an email to.

specs were run, no failures.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69792962\comment-113084695.json . 
Hey @sareg0, are you still working on this? I was thinking: since we talked about rewriting the rating engine for next year, maybe it's ok to discontinue and close this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69792962\comment-117037389.json . 
@sareg0 I'm closing this. Rumor has it we will rewrite the selection sub-app completely :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69792962\comment-94722173.json . 


Yeah, same :( That's why I hoped adding tests/specs would shed some light on its background magic

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69792962\comment-94774939.json . 
okay, well I'll keep working on it and will continue adding to this pull request. I suspect I may need to have a meeting with the magician :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69792962\comment-96679195.json . 
i have added a few more tests, but there are two failures in the previous spec files. I just thought I would commit piecemeal, and perhaps someone has some feedback?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69792962\issue-69792962.json . 
This is to see if the stuff we are writing is what is needed, and also just to push things in small chunks.

We tried to write a test that tested something along the lines of "assigns the @rating to user.ratings", but we found the rating Model pretty tricky to understand. 

Anywho. Enjoy! Feedback welcome.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69792962\pr-33742655.json . 
This is to see if the stuff we are writing is what is needed, and also just to push things in small chunks.

We tried to write a test that tested something along the lines of "assigns the @rating to user.ratings", but we found the rating Model pretty tricky to understand. 

Anywho. Enjoy! Feedback welcome.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69792962\pr-comment-28763143.json . 
can you add a inline-code to it? That way we have a regression test for errors in the templates.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-69792962\pr-comment-29365568.json . 
This is were the test break. I think it can be fixed with inline-code, but then again, I don't know why it is a polymorphic association. We only rate applications, right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-70173136\comment-95513062.json . 
@alicetragedy if it looks alright, feel free to push The Green Button:trade_mark_sign: :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-70173136\comment-95514886.json . 
@carpodaster #YOLO 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-70173136\issue-70173136.json . 
this keeps the text from being hidden by the rating box. it's not perfect (the margin on the left is still weird, for some reason), but it's a start.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-70173136\pr-33875533.json . 
this keeps the text from being hidden by the rating box. it's not perfect (the margin on the left is still weird, for some reason), but it's a start.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-71052051\comment-96569775.json . 
Let's ship it! :shipit: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-71702494\comment-97402521.json . 
@carpodaster is there anything to improve before this one could be merged?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-71702494\comment-97405311.json . 
I only had a brief look myself and didn't test it in my browser either. But if it compiles, ship it! (yolo?) :wink: Thanks, @marcgreenstock !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-71702494\issue-71702494.json . 
@sareg0 told me the todo page was a bit tricky to use so I thought I would help here.

This should group the students and applications with their teams, and show items that still need rating.

I've not loaded this in my browser cause I find seeding the db with what I need tricky but the tests pass :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-71702494\pr-34311484.json . 
@sareg0 told me the todo page was a bit tricky to use so I thought I would help here.

This should group the students and applications with their teams, and show items that still need rating.

I've not loaded this in my browser cause I find seeding the db with what I need tricky but the tests pass :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-71940118\issue-71940118.json . 
:sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-71940118\pr-34387462.json . 
:sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72111422\comment-97783738.json . 
We need a inline-code in inline-code on the has_many applications to make the auto-updating on the counter cache work, no?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72111422\comment-97794259.json . 
@carpodaster inline-code is an option on the inline-code URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72111422\comment-97795921.json . 
Ah, I totally overlooked it in the PR. I only had eyes for the inline-code :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72111422\comment-98498141.json . 
can we merge this baby in now @carpodaster ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72111422\comment-98702912.json . 
super sweet! Thanks @carpodaster 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72111422\issue-72111422.json . 
I understand the todos page shouldn't show teams that don't have applications. This PR should resolve that.

Note: I'm using a counter_cache of applications on teams. While it is possible to use a join to count, it's terribly inefficient.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72111422\pr-34442682.json . 
I understand the todos page shouldn't show teams that don't have applications. This PR should resolve that.

Note: I'm using a counter_cache of applications on teams. While it is possible to use a join to count, it's terribly inefficient.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72111422\pr-comment-29428024.json . 
Is inverse_of still a thing? Isn't it deprecated?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72111422\pr-comment-29428294.json . 
I _think_ it works without the explicit inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72787922\comment-99760849.json . 
I'd say b), but I haven't done any reviews :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72787922\comment-99771298.json . 
hmmmm that doesn't seem to happen for me though. i'm just directed to the next student of the next team after I've rated the project

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72787922\comment-99775818.json . 
@anikalindtner I think that this was fixed by one of @svenfuchs' recent commits. It does not happen to me anymore, but was happening constantly last week when I first started rating.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72787922\comment-99776655.json . 
aahh coolio. so we can close this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72787922\comment-99778456.json . 
yes I think so – maybe @svenfuchs can confirm?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72787922\comment-99781638.json . 
Yep, seems to be fixed here: 6ec65d8ab432a78d3a1061ce5b1e515287fd0e3f

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72787922\comment-99865367.json . 
oh yay!! This is awesome :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72787922\issue-72787922.json . 
Right now, every time the second student in a team is rated by a reviewer (according to the workflow team -> application -> student 1 -> student 2), the reviewer is redirected back to /applications. I think it would make more sense not to interrupt the flow and to have the reviewer be automatically sent either a) to the next team or b) to /todos.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72790713\comment-99735611.json . 
We don't explicitly state that we support markdown for any field in the application draft but it makes sense. I hope it doesn't break formatting for not-really-markdown attempts to format the project plan. If so, we'll just have to revert it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72790713\comment-99750720.json . 
@carpodaster you're right! It's just in the team form – I was convinced we had that inline-code in the project description field, too. d'oh! URL.
and thank you :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72790713\comment-99752627.json . 
@alicetragedy I added markdown formatting for inline-code, but I don't know if it's better now. Decide for yourself :) I can revert the changes if things are messed up.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72790713\comment-99753090.json . 
@carpodaster great, I will check it out later, and I think we'll notice soon enough if things are messed up ;) have a great day :sunny: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-72790713\issue-72790713.json . 
When applying, applicants can enter markdown into the "project plan" application field, however in the application view when rating, the information is shown as simple (and not formatted) text.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-73672842\comment-113084991.json . 
Rating/Selection engine will be rewritten for 2016. Closing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-73672842\issue-73672842.json . 
This is good to have for the weekend for judging purposes.

We would like see the extra points, each judge has given the team. We would like to see this transparently, so that we can address any extremely high/low ratings, if it seems odd.

This is a task for anyone, but happy to answer questions on this. 

Not 100% sure if this is a bug, but I'm classing it as such for now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-74513843\comment-100440346.json . 
:moneybag: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-74513843\issue-74513843.json . 
This will replace the coaching company column with the monies needed. Making it easier to review applications.

/cc @sareg0 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-74513843\pr-35051838.json . 
This will replace the coaching company column with the monies needed. Making it easier to review applications.

/cc @sareg0 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-77704829\comment-103109282.json . 
Hello @ankonym – thanks for reporting this. That's a bug, the Github handle should be unique and its check for uniqueness mustn't be case-sensitive. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-77704829\comment-105659468.json . 
Hi @ankonym – I've deployed a fix and the error you described shouldn't cause anyone any pain anymore. Thanks for reporting it! :beetle:   Also, I've deleted the empty user record for inline-code (ID 262)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-77704829\issue-77704829.json . 
We noticed an issue while setting up our team for the RGSoC application that seems like a bug, assuming that there should only be one RGSoC user per GitHub account:.

We ended up with two users in the teams app that had different user IDs, but they both pointed to the same GitHub account. 

One of them was "Anni00" (URL the other "anni00" (URL 

While preparing the application, this led to some confusion because the application app was pulling the information from "anni00" while she was entering her information logged in as "Anni00". Removing user 262 from the team then allowed us to set up user 241 as a team member so that the information would be pulled from the correct account. 

(I'm not entirely sure if these were exactly the steps we took to end up in this situation, but I believe it was as follows:.
She signed in with GitHub, which created user 241. 
I entered "anni00" into the form in the teams app, which created user 262.)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-78608946\comment-109272157.json . 
Needs doing: updating all the teams as being accepted (radio button 'voluntary' / 'sponsored') in the team's edit view. BUG: the value doesn't get saved in the DB, probably a strong parameters bug

.
#rails-girls-summer-of-code/rgsoc-teams\issue-78608946\comment-109331887.json . 
Hey, 
I have update all the teams except for two.

The following two will error though because the mentor is a team member on another team

URL.
URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-78608946\comment-109431979.json . 
@sareg0 there is a bug that causes the value of the radio button inline-code to be ignored and so I am afraid none of your updates have been persisted :( 

I have just pushed the fix and it should be deployed momentarily. The commits include a new organizer-scoped teams controller URL where you should be able to update the team's state. Can I ask you (or somebody else) to flag all the accepted teams for this year _again_ ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-78608946\comment-110105140.json . 
oh, that's a shame
Not a big deal though.  I will go through again.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-78608946\comment-110106096.json . 
@carpodaster it looks like the radio buttons for 'sponsored' and 'volunteer' are no longer there? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-78608946\comment-111075956.json . 
hey @sareg0 - it's no longer there for /teams, make sure you are on /orga/teams, that is: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-78608946\comment-114674102.json . 
thanks for this @carpodaster and also to @alicetragedy for taking over and gettin' it done :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-78608946\issue-78608946.json . 
It should only display accepted teams after the acceptance letters have been sent

.
#rails-girls-summer-of-code/rgsoc-teams\issue-81114978\comment-108454466.json . 
+1 on this – it would be amazing, especially when it comes to the application process, and it would make it so much easier for everyone to contribute. yayy! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-81114978\comment-108478432.json . 
totes, it's a problem we had in trying to mess about with stuff 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-81114978\comment-119862119.json . 
Switched assignee as @F3PiX is already hard at work on this.

Maud, if you want to go an extra mile, you can make FactoryGirl work in development (currently only loaded for the test env) and use the defined factories in inline-code.

The good thing: the defined factories are tested, the contents in inline-code are not. Should our schema change or validations be added, logic in inline-code is likely to break first. Factories are adapted more frequently.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-81114978\comment-182830543.json . 
What seeds do we need most?
[ ] Filled in application forms
[ ] Teams (we do have user seeds, but they are not yet in teams)
[ ] ? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-81114978\comment-182831416.json . 
@F3PiX maybe filled in projects as well (the application process now involves selecting an approved project from a dropdown menu, so one or two projects should be available). 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-81114978\comment-184415926.json . 
@alicetragedy @F3PiX all of the above :wink: 
- An unaccepted team
- An accepted team
- An accepted, but voluntary team
- An application draft, unsubmitted
- An application draft, completed
- A  inline-code project
- An inline-code project
- A inline-code project

.
#rails-girls-summer-of-code/rgsoc-teams\issue-81114978\comment-184420230.json . 
:sparkles: Thnx

.
#rails-girls-summer-of-code/rgsoc-teams\issue-81114978\comment-204370524.json . 
Would be great to have this in time for the start of the program this year, so that if there is a team working on the teams app, they can get set up more easily. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-81114978\comment-225692506.json . 
Hello @F3PiX – are you still working on this or do you have a branch that someone else can continue working on? The SoC starts in approx. two weeks and it would be nice to make the setup of a local teams app installation as easy as possible

.
#rails-girls-summer-of-code/rgsoc-teams\issue-81114978\comment-230914026.json . 
Done thanks to the amazing work of @F3PiX !

.
#rails-girls-summer-of-code/rgsoc-teams\issue-85560469\comment-109331460.json . 
this might also be connected to URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-85560469\issue-85560469.json . 
When a user is not logged in, the main landing page of the teams app shows the mailings which is.. well, not intended. Not a tragedy but definitely something that should be fixed, as the mails are NOT intended to be seen by anyone not from the orga team or intended recipients, and definitely not for anonymous / non-users.

!screen shot 2015-06-05 at 17 31 45

.
#rails-girls-summer-of-code/rgsoc-teams\issue-86164541\comment-111207123.json . 
Hey @anikalindtner - this is because a user can be created by adding a GH handle to a team. The app tries to get the email from GH but if that fails for some reason (e.g. misspelled GH handle, no email address available, network error), the user record on the teams app will be left without an email. There is little to nothing we can do about it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-86164541\comment-111207371.json . 
ah okay... but then we have to think about that. because maybe this shouldn't be allowed then? hmmmm have to think about that. since we do need the email addresses desperately for contacting them.. hmmmmm

.
#rails-girls-summer-of-code/rgsoc-teams\issue-86164541\comment-111459894.json . 
@anikalindtner An  email is required as soon as one tries to edit the user record, just not when it is created from a Github handle. I have no idea how to do it otherwise (but then again, I'm sleep-deprived :smile: )

.
#rails-girls-summer-of-code/rgsoc-teams\issue-86164541\issue-86164541.json . 
email looks like a required field, but we still have users that don't have an email 

!screen shot 2015-06-08 at 12 10 27

.
#rails-girls-summer-of-code/rgsoc-teams\issue-86285507\comment-110697331.json . 
I think that we want to be able to still see all teams as organizers, even if that is a 'super' role, that only a select few have, to protect their privacy. I would love to see all the teams, even if they want to be hidden to the wider userbase of the app.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-86285507\comment-111496703.json . 
hey @alicetragedy and @sareg0 – please check the new URL endpoint to get all the orga-access-level info for teams. You can see all teams there, invisible or not.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-86285507\issue-86285507.json . 
In the teams overview, the teams that have decided to remain hidden are not shown to organizers either.
I think this is a 'conceptual' issue: do we want teams applying and ticking the 'hidden' check box to be visible to organisers anyway?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-87786866\comment-240079040.json . 
I have a feeling that the mailings and the students activities are moving further and further apart, although they are sharing the activities controller. 
Would it make sense to unentangle them? Separate them in 2 different controllers? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-87786866\comment-319811674.json . 
Surprise! nr. 1 is done in #793.
For nr 2:.

- [ ] Restrict mails in list
- Currently, everybody can see the _list_ of emails, but they are not allowed to click and read the content. So, we agree that a user should see only their own mails in the list, right?

- To be sure: by 'mailings' do you mean: the mailings sent from the mailing functionality (as currently listed in the mailings table)? Or also all the notifications that are being sent out by the other mailers in the app?

- [ ] Moving archive to dashboard(s)
- For moving it to the student dashboard: there are more possible recipients than students only; like mentors, coaches, supervisors. Not all of them have their own dashboard. 
So, do we show the archive in the dashboards, AND also keep the mailings accessible for other users? 
I had thought to wait and see if the mailing functionality will be used more now this season, since it is now readily available for the orga's. 

What do you think?


 


   .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-87786866\issue-87786866.json . 
1. [x] all mailings in the inline-code namespace, linked from the orga-dashboard
2. [ ] all others can only see archived mailings if their email address / user id is in the recipients' list. Linked from the students' dashboard

See also: discussion at #120 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-89030847\issue-89030847.json . 
just commented out these validations to add information to teams, as I don't have access to the production database. ignore pls.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-89030847\pr-37905447.json . 
just commented out these validations to add information to teams, as I don't have access to the production database. ignore pls.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-89063819\comment-113062303.json . 
@carpodaster in this respect – do you want me to revert the commits made in that pull request, since it was just a one-time need to update the teams? Or should we leave it like that for now? (#yolo)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-89063819\comment-113063865.json . 
@alicetragedy yes, that'd be great

.
#rails-girls-summer-of-code/rgsoc-teams\issue-89063819\comment-113100725.json . 
Hi @alicetragedy, I reverted 26a69ff. Also, I couldn't reproduce a way to get the sources into the database without passing a url value (ie. bypassing its validation).

However, removing the misbehaving inline-code record via the team's edit page should repair a stale team.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-89063819\comment-113275220.json . 
I removed 8 stale inline-code records from the DB.

Let's keep our eyes open for when this error occurs again and let's hope that we'll have a means to reproduce it then.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-89063819\issue-89063819.json . 
This is re: #230 – check where the invalid source records come from

.
#rails-girls-summer-of-code/rgsoc-teams\issue-89255763\issue-89255763.json . 
This is something requested by @anikalindtner, to make it possible to email just selected teams

Currently there is a 'teams' checkbox in the /mailers area, but this would email all teams; selected AND rejected.

@marcgreenstock has volunteered to take a look at this, but if someone else wants to grab it, that is also fine.

It is time sensitive. We would like it to be implemented as soon as possible.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90074299\comment-117821011.json . 
Status: A couple of changes with the mailing need doing (URL and pull request submitted for the UI clean-up (URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90074299\comment-117960203.json . 
I think we can close this! :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90074299\comment-118079082.json . 
okay, let's close it then

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90074299\issue-90074299.json . 
This is just to remind us that we need to check/test this feature of the teams app.
- does it still work?
- does anything need changing?
- can it be made clearer.

Assigning to @alicetragedy first, as she has experience as a supervisor.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90436665\issue-90436665.json . 
...according to gemfile , right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90436665\pr-38358036.json . 
...according to gemfile , right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90741925\comment-115127168.json . 
Cool, @marcgreenstock - looks good! :rocket: I've commented on a season selector.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90741925\comment-115198137.json . 
I've added a seasons option to the mailings too now. I realise I should add some tests around it but i'm short on time. Let me know if you think this is required and I'll retrospectively add some.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90741925\comment-115384155.json . 
If you can spare the time, tests would be good. If for no other reason than to avoid regressions in the future.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90741925\comment-116659337.json . 
@carpodaster just added some specs

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90741925\comment-117037234.json . 
@marcgreenstock awesome, looks super. I didn't know about FactoryGirl's inline-code feature, thanks :smile: Merging! :shipit: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90741925\issue-90741925.json . 
This adds radio buttons to mailings#new, that allows "Everyone", "Selected Teams" and "Unselected Teams".

I think this should satisfy URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90741925\pr-38467929.json . 
This adds radio buttons to mailings#new, that allows "Everyone", "Selected Teams" and "Unselected Teams".

I think this should satisfy URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90741925\pr-comment-33226379.json . 
Do we need a season classifier? It will pull the currently selected teams for this year allright, but next year it will also include the almuni teams.

block-code.

Or add another enum value that explicitly only selects the current year's students?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-90741925\pr-comment-33233603.json . 
I had a suspicion this would be needed, but I wasn't sure. I'm on it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-91625613\comment-117187587.json . 
After a discussion with @anikalindtner it has been determined that, yes, the supervisors should be able to see the student email addresses.

I have create a pull request for review to try and fix this.

This would allow all supervisors to see all user's email contact.

This is how I did it because some supervisors will be filling in for others during the summer, so I felt this is ok. 

Please let me know if it isn't.

pull request #240

@carpodaster and @alicetragedy perhaps you could review it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-91625613\issue-91625613.json . 
At the moment, it seems the email address of students in their profile (URL is only visible to orgas – meaning the supervisor of the team can in no way check whether the student has added their email address.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-91781632\comment-117034887.json . 
@alicetragedy Orgas assume the role of admins on the teams app so they "overrule" the restrictions. We can change that, but would it not be enough to just leave the text input be as an orga person when they are not supervising a given team?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-91781632\comment-117050866.json . 
@carpodaster yep, that's totally fine. wasn't sure if that was meant to be so or not. let's let it be – no need to complicate our lives changing the overriding of the restrictions. I'll close this issue!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-91781632\issue-91781632.json . 
If I'm not mistaken, the checked up on them feature should be for the supervisor of a team only – meaning no one from the organisers team should have access to the form (or at least, should not be able to leave a comment). Is that the idea?
I tested the feature yesterday and it seems I could (as an organiser) comment on any team/check up on them. Is that something that needs changing before kick-off? 
@carpodaster do you have any thoughts?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-91803820\issue-91803820.json . 
Right now, when a supervisor comments on their team's progress, an email update is sent to all supervisors – but not to orgas. We should change that so the email is also sent to the summer-of-code email address (either as direct recipient or cc).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92065369\issue-92065369.json . 
The tweet will be automatically generated to include the name of the
conference as well as its twitter username and that of Rails Girls
Summer of Code.

Students can pick confs when editing their profile from those added and can 'claim' that they want to go to them. They can then tweet their desire to attend.

An example of the tweet is shown below:.
"I really want to go to eurucamp this year! @ eurucamp @ Railsgirlssoc"

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92065369\pr-38867562.json . 
The tweet will be automatically generated to include the name of the
conference as well as its twitter username and that of Rails Girls
Summer of Code.

Students can pick confs when editing their profile from those added and can 'claim' that they want to go to them. They can then tweet their desire to attend.

An example of the tweet is shown below:.
"I really want to go to eurucamp this year! @ eurucamp @ Railsgirlssoc"

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92096814\comment-117190310.json . 
Awesome, @sareg0! I have just started working on this to close Laura's issue. You beat me to it :wink: Voici, le merge!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92096814\comment-117228694.json . 
:tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92096814\comment-117229712.json . 
OH gosh! I hope you didn't waste any time on it! I'll say that I'm working on it first in future @carpodaster. It was a pretty neat task tbh :) #n00bwin :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92096814\comment-117230240.json . 
yeah, sorry about that @carpodaster – I probably should have marked it as assigned to @sareg0 this morning after I talked with her about it :(

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92096814\issue-92096814.json . 
This does the following things to solve issue #236 
- updates the permissions for supervisors to a 'read' permission for a user's email address on their profile page i.e. the 'show' view for a user
  URL.
- implements three new tests in 'ability_spec'
  _1. context 'if not an admin or supervisor'_
  _2. context 'if an admin'_
  _3. context 'if a supervisor'_
- implements two new tests in 'user_spec', under describe '#supervisor?'

Anyway, please review and let me know what you think.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92096814\pr-38878361.json . 
This does the following things to solve issue #236 
- updates the permissions for supervisors to a 'read' permission for a user's email address on their profile page i.e. the 'show' view for a user
  URL.
- implements three new tests in 'ability_spec'
  _1. context 'if not an admin or supervisor'_
  _2. context 'if an admin'_
  _3. context 'if a supervisor'_
- implements two new tests in 'user_spec', under describe '#supervisor?'

Anyway, please review and let me know what you think.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-117709231.json . 
JA! I vote ribbon :ribbon: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-117995490.json . 
@F3PiX & @roosdebildt, this could also be a great warm-up

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-120932267.json . 
do we want the ribbon only on the front-page (=activity page) or appearing on all pages...?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-120945745.json . 
If it's not too obtrusive, I'd vote for every page

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-121576483.json . 
I like those too!
Do you think it would be possible to make a greyish one? It doesn't say anything on the dribbble, license-wise, about modifying the existing ribbons. Not sure which color would fit best otherwise, given our bright red header :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-121580921.json . 
I could make a gray-ish one for sure! But I just found out the quality is superlow :( I e-mailed the guy but I'm looking for other solutions/images, too.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-121585352.json . 
@roosdebildt we have a designer who joined our team and helped me design the stickers (I made the first edition, she made all the rest). Maybe we could ask her to design a ribbon for us :)
I also just found this generator: URL.
Might be interesting to give it a whirl. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-121607807.json . 
I love the CSS-only one!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-121710368.json . 
Since I think this still looks a bit awkward with the header:.

<img width="1242" alt="github-ribbon" src="URL.

I'm going to try to design my own ribbon as an evening side project :) Based on a vertical one (maybe a bit smaller than in this example):.

!ribbon-vertical

But tell me if you prefer the original GitHub ribbon, 'cause that would be a lot of effort for nothing ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-121710990.json . 
sidenote @alicetragedy: shall I add you to our fork so we can keep the original workflow of PR's with our fork before merging with upstream?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-121914191.json . 
@roosdebildt I actually have no major opinion on this – I thought maybe the css generator would save you a lot of (design) work. I agree that the vertical ribbon in the example looks a bit big, I'd make it maybe two-thirds of its current size, but I'm sure you can play around with it and see what works best. 
I'd love to be added to your fork so I can keep track, if you want. Or feel free to ping me if you need my opinion on anything especially if css-related, due to @carpodaster's allergy to it ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-123289035.json . 
also I feel like the diagonal 'fork me on github' ribbon is sort of more known, and looks less like a bookmark on kindle ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-123295324.json . 
hehe, true. I actually stayed with the diagonal gh-ribbon in the end :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\comment-123757707.json . 
Done in #292

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92406365\issue-92406365.json . 
We should make it easier for people to contribute to the teams app. What about a Github ribbon on the front page? Or just a link to the repo in the footer?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92481349\comment-117941784.json . 
looks good! I'd just change to "How's your team doing?" this:.

"Add a comment about how your team is doing (optional)" 

else :MERGE! :heart_eyes: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92481349\comment-117955921.json . 
@anikalindtner done! :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92481349\comment-117955983.json . 
\o/

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92481349\issue-92481349.json . 
move all comments to the right for better overview and add more useful information

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92481349\pr-39023409.json . 
move all comments to the right for better overview and add more useful information

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92581151\comment-117959354.json . 
looks pretty good to me :sunny: 
I think you can yolomerge!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92581151\issue-92581151.json . 
Now fo' realz: Closes #238.

@alicetragedy could you check if I haven't made another mistake please? :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92581151\pr-39059067.json . 
Now fo' realz: Closes #238.

@alicetragedy could you check if I haven't made another mistake please? :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92584274\comment-120710767.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92584274\issue-92584274.json . 
The users' list at "Community" is growing long.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-92675006\issue-92675006.json . 
Students have reported that despite trying a few different things they cannot get bullet points to format appropriately in the daily logs.

@carpodaster mentioned that it's a css issue: the list items were globally chopped off their list styling

I will assign to myself, to work on tomorrow, unless someone gets to it first.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93002394\issue-93002394.json . 
this fixes issue #245 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93002394\pr-39206399.json . 
this fixes issue #245 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93253406\comment-118825590.json . 
This sounds like a good improvement to the exisiting job board but I would like to see more +1's, indicating that it's a feature we really want to have.

Personally, I am not quite convinced, mostly because "sometimes step 2 gets missed". I don't recall the job board being filled with enough job positions to justify working on that section. It's just not visible enough and in fact I've already been thinking of removing the jobs section altogether to counter possible feature-bloat.

/discuss! ;) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93253406\comment-118826218.json . 
yes, I think that the jobs board could potentially be separate to the teams app altogether.

I am gonna ping @berlintam who had some great input on this topic of the jobs board.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93253406\comment-119476427.json . 
I feel for both sides. I agree that SoC-site may not the best place for listing job offers. On the other hand, this could be the place to list job offers for the not-too-experienced Nuby's. 
Then again, do company's really need such a place? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93253406\comment-119480890.json . 
I think that having a job board as part of rgsoc is awesome. I know that after I finished rgsoc I was frantically looking for a job and didn't know where to go, and I looked to rgsoc for support in this b/c they had held my hand throughout the whole summer. In my opinion it makes sense for rgsoc to offer this b/c it's like they're helping students cross the finish line in finding a job. you know what I mean? However given this is called 'the teams app', somehow having a job board in here doesn't make much sense now that I think about it, since it doesn't really have anything to do with managing the teams. 

I also love the idea of getting an email, like once a month, about new job offers. But this is only really worth it if there are enough in there. 

I think it would ALSO be awesome if there was a RG Job board somewhere out there....  one that is a flushed out version of this: URL (but for the whole world)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93253406\comment-130366307.json . 
In today's weekly hangout we decided to remove the job board from the teams app. We agreed to forward job offers to our mailinglist(s) (needs checking w/ sponsor perks). We can also direct alumnis to the juniors-in-berlin list at the end of the summer as an inspiration to create similar lists for other regions.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93253406\comment-130369785.json . 
Would you mind to leave the job_offers in the code_base for a week or so? It might proof to be a handy transition sandbox for us. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93253406\comment-130378013.json . 
@F3PiX I don't think we will remove it super soon, so worry not – but thanks for letting us know. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93253406\comment-130410112.json . 
:+1:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93253406\issue-93253406.json . 
This is something that I discussed recently with previous grads, both searching for OR with jobs to offer from their own contacts.

The user story goes like this;

"I as an alumni want to see all jobs for jr devs that are being collected, and also know where to send said job offers if I receive them"

Our process currently works like this. 
1. we get word of a job offer from sponsors/supporters of RGSoC, and make sure it is worth putting up/a decent offer. We generally only allow sponsor to put up jobs, but will make an exception for really high quality employers/ones we can vouch for. 
2. We input the job offer manually into the 'Jobs' section of the teams app
3. We prepare a digest of job offers in Mailchimp, and send to alumni.
   (sometimes step 2 gets missed)

Being able to have a jobs board that is not limited to the batch year, and that all Alumni from all years can see would be ideal. Currently the Alumna goes to the teams app under their batch year, and can see jobs there.

Being able to filter jobs by when they were published would also be good, to make sure that alumni do not apply for a job offer that is super out of date.

The next step would be being able to send a digest email of all new job offers. That is a nice to have.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93302546\comment-118889146.json . 
Haha oops, I tried to make a pull request to our fork. Will fix it. Don't accept this unless you want a lot of smiley faces on the activity stream! ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93302546\comment-118916074.json . 
:D 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93316049\issue-93316049.json . 
On our teams site here: URL.

Only a couple of supervisors are listed (3). All the other ones are missing, but they ARE in the teams app: URL.

@sareg0 @marcgreenstock 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93497725\comment-119203041.json . 
sounds good! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93497725\comment-119211841.json . 
@carpodaster can I have your approval to merge this?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93497725\comment-119470810.json . 
@sareg0 Merrrrrge!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93497725\issue-93497725.json . 
This should fix issue #249

Would like to create another issue to cache the json file as it take a bucket load of time to load.

Note:  'supervisors' have been added to the 'GUIDE_ROLES'. This has a side effect of adding supervisors to any 'team' email that is sent out. I would like to confirm that this is ok, before merging.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93497725\pr-39355024.json . 
This should fix issue #249

Would like to create another issue to cache the json file as it take a bucket load of time to load.

Note:  'supervisors' have been added to the 'GUIDE_ROLES'. This has a side effect of adding supervisors to any 'team' email that is sent out. I would like to confirm that this is ok, before merging.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-119473335.json . 
I will take a look later today – first guess is that something in that team somehow is set to nil somewhere(?), keeping the comment from being saved. We'll figure it out!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120015499.json . 
okay, so I knew this was going to come back to bite us in the ass... 
Apparently the problem is something we've had problems with before: that the mentor of the team is a mentor that is also a student, so somehow the Comment doesn't save and gives some weird gibberish error message I couldn't really understand :D and I don't know how to fix it. I tried fixing it locally by removing Maren as a mentor from team Techylite (#yolo), and now commenting works for me (locally at least). 
@carpodaster do you have any idea about this, and what we could do as a workaround? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120720917.json . 
@alicetragedy It would seem we can only solve this by removing the student-must-only-be-student constraint. I would vote against it, though, and indeed remove Maren as their mentor on production.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120734120.json . 
@carpodaster yeah, it's a little tricky.. I'm just wondering though why, if this is a problem, we've accepted Maren as a student if a student is not supposed to have any other role? :p 
I thought maybe we could remove the constraint for this year as well will probably not be adding any more students / roles. But I'm okay with removing her from production, I'll get in touch with her and see if that's okay?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120738588.json . 
@alicetragedy the constraint is in place so that a student cannot join another team as a student (and thus cannot apply with more than one team). Not allowing them in a different role is probably an undesired side-effect, but I have to say that I have little motivation to program around this one edge-case. 

Removing the constraint would mean we risk re-introducting it next year again. There are no implications removing her from the teams roster as mentor now that the application phase is closed (at least I can't think of any, since mentors have no super-powers on the teams app).

So yes, :+1: for talking to Maren :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120739043.json . 
@carpodaster that makes sense! we'll have to try and keep that in mind for next year, so we don't have the same weird mess. I'll remove her as soon as I've talked to her :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120846740.json . 
@carpodaster I just realised that removing her will also mean she will not receive the mentor emails/important communication. is that an ok side-effect we want to have? UGH so complicated..

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120853376.json . 
Ah, you're right. IIRC she's not the only mentor, right? Would it be enough to rely on the second mentor to relay these info mailings?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120853701.json . 
@carpodaster Erik is the second mentor, which is a bit strange – not sure how much he actually reads the mails related to speakerinnen, but I could give him a heads up in any case to forward the email to her.. or we do so ourselves (just have to remember it every time).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120855249.json . 
I think that' still a mistake that Erik is in there.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120858837.json . 
@anikalindtner @carpodaster I'll replace Erik with Anja and remove Maren. #yolo

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120858903.json . 
Could be they applied for a second project where Erik was the mentor. In that case, we need Maren as a mentor, but can we ask her to create a second GH account?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-120858931.json . 


Oder so! :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\comment-121192474.json . 
Fixed!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93630538\issue-93630538.json . 
When hitting the "checked up on them" button (either with or without comments) on this team, nothing happens: URL.

Ideas? @carpodaster @sareg0 @alicetragedy 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93633847\comment-119472350.json . 
I can take a look at that in the afternoon/evening and see what the deal is – unless someone else has time before that :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93633847\comment-119547724.json . 
@alicetragedy I bounced an exception message to your email inbox. I think that's the one that's related to this issue here

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93633847\comment-119557169.json . 
@carpodaster Tusen takk (as they say in Norway). Will take a lookie later! :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93633847\comment-120043100.json . 
I think we can close this issue – I feel like there are a couple of things that can still be fixed on that page, but we can see how to optimize it later ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93633847\issue-93633847.json . 
Clicking on the "Teams organizers info" link (in /teams):.
!screen shot 2015-07-07 at 23 30 24

gives this: 
!screen shot 2015-07-07 at 23 26 48

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-119650706.json . 
I'm on it!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-119685348.json . 
@ramonh cool! :smile: 

Could you add a predefined filter to also display all teams? Otherwise not even the orga is able to look into team data of unaccepted teams once the SoC has started.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-144663038.json . 
@ramonh Are you still working on this? If not, want someone to take over?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-144670895.json . 
Woops! Completely forgot I had pledged to do this. Sorry, but thank you for the reminder! I'll go ahead and do it if that's cool

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-144679497.json . 
Yeah sure, and no hurry! I was just going through some of the issues and see if they can be closed

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-144685852.json . 
Sounds good, thank you!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-194217997.json . 
@ramonh can we still have you on this task? I don't expect this to be an issue again until the beginning of the program starts, but it would be awesome to have by then. :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-194219471.json . 
Whoa, I have no idea how this completely went past twice! Sorry about this. I'd be happy to take care of it. This time for realz. :sweat_smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-194221367.json . 
haha, no worries @ramonh. I believe it wasn't completely urgent, even though I can foresee problems/annoyances if we start to see teams from last year (selected and non) in our orga teams view. :joy: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-194222544.json . 
Thanks for understanding. That makes sense to me. I'll start looking into it this week. 

Thanks again for the reminder, @alicetragedy! I must say this is the first time I have embarrassing evidence staring me in the face. :laughing: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-230587935.json . 
@anikalindtner This is solved it, isn't it? Shall we close?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\comment-230691017.json . 
@F3PiX sure! <3

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93634312\issue-93634312.json . 
Would be really helpful if we could have the same filter we have for /teams here, since it gets kinda chaotic with ALL teams ever created being shown here. 

@carpodaster you tweaked the /teams site so that only selected teams are shown, right? could you do some :sparkles: magic and do it for this site as well?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93720175\comment-119472020.json . 
I have to +1 with you on this one :+1: 
we definitely might want to filter.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93720175\comment-119473443.json . 
yay for filtering them out! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93720175\comment-120453854.json . 
This is in the process of being fixed. Pull request submitted, but not ready for merge til test is written

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93720175\issue-93720175.json . 
It currently also shows coaches and mentors of teams that couldn't be accepted. Do we want to filter?

Ping @sareg0 @anikalindtner @alicetragedy 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93860651\comment-119694641.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93860651\comment-119695482.json . 
 A few days ago I already looked into it, because I added the feed to our Slack but it didn;t show updates.  I fed the feed into a feed validator and got all kind of trouble :-)
And then I stopped. :checkered_flag: 
URL 
We'll have to look into that together, maybe Roos knows.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93860651\comment-119873147.json . 
@F3PiX Oh. In that case it would be good to get the feed pass validation first :wink: I recommend using the W3C validator, though; it allows uploading of text as opposed to referencing a website. It makes development much easier (since your localhost cannot be reached by the W3C validator machine).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93860651\comment-122292151.json . 
@carpodaster:.


1. I'm presuming you mean the "head" section and not the "header"?
2. The head (and the header for that matter) are only specified generally for the whole app in layouts>applicatoin.html.slim. Do you want us to put it there?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93860651\comment-122296278.json . 
@roosdebildt yes, the inline-code section :smile: 

The application layout file has a inline-code call in line 12. You can read up on inline-code to inject content from a sub-template into that layout file. That way it's possible to have it in inline-code, but only on that specific page.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93860651\comment-122296563.json . 
@carpodaster you make new worlds open up to us every day ^^

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93860651\comment-122300687.json . 
@carpodaster What Roos said :-) 
About the second part: adding ...to status_updates#show. Does it mean you want here the activities minus the feed entries = status_updates? (For a specific team). 
Wouldn't it be nice for a team if ALL their entries were in the Atom Feed (e.g to add it to their slack channel)?

Or do you mean here: (My Front End Teamie will solve the tiny icon)

!atomfeed in status_updates show

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93860651\comment-230891594.json . 
Whoa, awesome! :sparkles: 

Planned to open an issue asking for this today, and suddenly I notice it's there :laughing: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-93860651\issue-93860651.json . 
The activity log's feed url URL can be filtered by appending inline-code. Everything works, it just has to be made visible.
- Add a Atom-feed icon to the activity listing on teams#show
- Add a Atom-feed icon to the activity listing on status_updates#show
- Add a inline-code element to the header section on status_updates#show

@F3PiX + @roosdebildt: this is a motivational one (ie. quick results) :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-120721018.json . 
Yeah, we have talked about this enhancement to the minilog feature before and I think it's a good one.

Possible gotcha: The reminder should take the team's timezone into account.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-120735017.json . 
@carpodaster yep, I mentioned the thing with the timezone briefly during the call when this was discussed :) but I also think that it would be a great way to annoy everyone to have them do their log so +1 on this

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-120898405.json . 
This is a very good idea. :+1:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-123284375.json . 
yeah, I really like this idea :) +1 from me as possible new feature. I think it would be super cool to work on, but if it happens to be something the team would like to work on, that's also cool :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-144361455.json . 
I was thinking: with the new Supervisor Dashboard, it would be quite easy to add an automatic mailer function/button. The supervisor would be the one to initiate the action, and the mail itself could be sent with the orga-team as the sender. Ideally, it would count the warnings as well.
Wdyt? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-144363433.json . 
it sounds interesting for sure, particularly since the supervisor can have a bit of a running record of how many reminders have been sent.
Re. the warnings though, the orga team makes a decision on sending those, so it feels like a different concern to being in the  supervisor's dashboard. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-144364292.json . 
Aha, I see: there are reminders and there are warnings. So only the reminder should be sent by the supervisor, cc orga.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-226991124.json . 
@michaelem and i will try to tackle this. would be helpful to have a data dump for that. @alicetragedy could you help on this? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-226995056.json . 
I would put this in a rake task that could run once a day and checks all the teams, sends emails to those who did not put out an update. Do we already have any tasks that run on a schedule?

Stackoverflow says we should use this: URL.
I have no idea how these things work in heroku, can someone help me with the scheduling part?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-226995420.json . 
You can ping me once you're there, I've already used this add-on (it's quite simple).

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-227010911.json . 
@anikalindtner @michaelem I will do a new data dump and send it to you :) As far as I know we don't have any tasks that run on a schedule, but I think Carsten might be the most fitting person to answer this question.
Something else that comes to mind: if we want notifications to work for all participants, we probably have to make sure we have all of their email addresses stored + make email a requirement also (right now it's just pulled from GitHub with the OAuth, so we only have those of addresses that are public) — related issue: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-227011233.json . 
@michaelem we don't have any recurring tasks set up at the moment, no. But as @klappradla said, that's no problem.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-227011342.json . 
Haha, scratch that. _Of course_ we already have one set up. Just ping me with the rake command that needs to be added once the feature is merged into master.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-229599599.json . 
Now that #475 is merged we need configure heroku to run teams:notify_missing_log_updates once per day, I'd say at 23:59 utc if possible?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-230092382.json . 
<img width="772" alt="bildschirmfoto 2016-07-02 um 11 14 53" src="URL.

rake task is scheduled now. 23:30 is the closest I can get to 23:59 ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-231521295.json . 
@anikalindtner @michaelem can this be closed?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\comment-232352165.json . 
Closing. I believe this is done. Please re-open if I'm mistaken.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94029480\issue-94029480.json . 
As we talked about in our weekly organizer hangout yesterday, a lot of what the supervisors are doing is nagging teams to get stuff done. Which wears them down and shouldn't be the main task of our supervisors. So I thought about how to make at least _some_ of the process automated to take it out of their hands. And one thing would be to send an email reminder at hour xy to the team if they haven't filled out their daily log. This way we nag them without having to do it ourselves and they get accustomed to doing it everyday from the beginning on. 

Exception would have to be weekends. 

@sareg0 was interested in helping to think about how we could implement something like that. 

Comments? Opinions? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94080684\comment-120041496.json . 
thank you mergemaster @carpodaster!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94080684\comment-120042354.json . 
No, thank _you_, @alicetragedy :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94080684\issue-94080684.json . 
this fixes issue #252. The projects column in the teams table was removed last year from the database, and this was a simple side-effect of it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94080684\pr-39596549.json . 
this fixes issue #252. The projects column in the teams table was removed last year from the database, and this was a simple side-effect of it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94141755\comment-120149696.json . 
Amazing, @roosdebildt + @F3PiX – congrats on your first PR! :confetti_ball: :fireworks: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94141755\comment-120149855.json . 
this is soooooo cool! I hope you are super proud of yourselves! :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94141755\issue-94141755.json . 
YEAY! Team Cheesy's first pull request!
Review please :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94141755\pr-39623136.json . 
YEAY! Team Cheesy's first pull request!
Review please :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94161431\comment-120268191.json . 
me, me, me, me! prettyplease :)?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94161431\comment-120291061.json . 
@roosdebildt hehe, I knew it! actually opened the issue with you in mind ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94161431\comment-120730992.json . 
@alicetragedy and @carpodaster almost done!

Screenshot with some random pictures in the post:.
<img width="1058" alt="screen shot 2015-07-12 at 17 28 43" src="URL.

What do you think?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94161431\comment-120900099.json . 
Looks great, @roosdebildt ! One question: Are the images resized / downscaled in activities#index? There are some rather big images included in some status updates and they kinda wreck the layout.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94161431\comment-120900774.json . 
yes, I took care of that too. I set a max-width and made them float left inside the content area. I'm drying up the code now so you can check it later :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94161431\comment-121187991.json . 
Great work @roosdebildt, I think we can close this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94161431\comment-121198202.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94161431\comment-121212794.json . 
It looks so pwetty! :bouquet: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94161431\issue-94161431.json . 
Since some posts have eg. images, it would be great to improve the formatting of each post on the activities feed. 
For example:.
- move time and poster information under the title
- show body of the post under the avatar (instead of starting mid-avatar like it is now) which would also fix the problem of the bullet points in a list being "stuck" to the team avatars
- "resize" images so they fit the width of the box the single updates are in

I think it should be quite an easy task, but I'm happy to take it on if nobody will ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94252772\comment-120303826.json . 
There is apparently already an atom feed, see #255 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94252772\comment-120304469.json . 
WOHA!! Awesome! Adding it to slack worked for now <3 
I think we can close this then actually :D 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94252772\comment-120304527.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94252772\issue-94252772.json . 
So we do have the .json output for all the daily log activities ( for separate teams URL as well as all teams  URL but this is not a format RSS readers can use. 

We'd need to convert that somehow. This is something that came up not only in the discussion with mentors who want to keep track of their teams, but also with students wanting to add the feed to their Slack orga. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94337257\issue-94337257.json . 
... to close a fruitfull week 2 of SoC15. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94337257\pr-39699137.json . 
... to close a fruitfull week 2 of SoC15. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94341309\comment-138349030.json . 
closing this

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-120715021.json . 
YESYUEYEYEYYSYES +100

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-120735359.json . 
those new emoji reactions in slack are great, it would be :+1: :+1: :+1: to have something similar. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-120737943.json . 
I reckon the Emoji reactions are a lot of work for a relatively minor part of the app :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-120739075.json . 
hehe, true. this is just some massive wishlist point for me ;) 
anyway, +1 from my side on adding something like likes or so ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-239174227.json . 
@katrin-k Are you interested in this one? How about we work on this together? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-239388878.json . 
@F3PiX totally. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-239389447.json . 
I wanted to add our (now: polymorphic) comment system but realized that it would only work for registered users. Otoh, that's better than nothing – and fellow students, coaches, mentors, … do have an account on the Teams App.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-239390688.json . 
@carpodaster I am thinking of not using the comment system, but a separate 'tags' system. Where tags are icons. Wdyt?
I think the comment system is a bit heavy for this.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-239441564.json . 
I was thinking that re-using the existing comment system is the easiest possible solution to get some degree of engagement started :winking_face: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-239846216.json . 
Katrin-k and I are going to work on this together. We will start with simple commenting, and take it from there. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-246725997.json . 
Major part done in #536 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-349953268.json . 
@F3PiX @katrin-k I still think it's a good idea. Do you think want to do it (no pressure) or shall we unassign you two to make it available to RGSOC participants next year?
.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-349953698.json . 
Let's close it!! (We can reopen in prep for 2018)
.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\comment-350025364.json . 
Fine by me. You all got a better overview :). .
.
#rails-girls-summer-of-code/rgsoc-teams\issue-94559429\issue-94559429.json . 
There are so many great status updates and yet there is no way to express my excitement for our teams' achievements. I'm not sure, do we want a comment feature for the activity updates? A 'like button' of our own making? Emoji reactions? :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94675765\comment-120864598.json . 
Hey @F3PiX, could you create that on the summer-of-code repo? Thanks! Closing.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94675765\issue-94675765.json . 
If people read the blog, there seems to be no easy way to jump to the Activities stream. Can we add a link on summerofcode.org to the teams.summerofcode.org? 
Like a navbar-item, or a banner?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94696283\comment-120907631.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94696283\comment-144361075.json . 
We have responsive!!!!!!! Thanks to @roosdebildt's magic. Can we close this? How about the separate styleheets?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94696283\issue-94696283.json . 
General styling improvements to make the teams app look nicer and more in style with //railsgirls.com/.
- improving style & views
- refactoring CSS
- dividing specific styles per pages into separate stylesheets (f.e. activity page, community etc.)
- making the app more responsive

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94700478\comment-120907579.json . 
@idengager thanks for opening the issue! I actually noticed this on the weekend as well and was planning to fix it ;) I'll get that done sometime this week – hopefully sooner rather than later!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94700478\comment-123375201.json . 
ps I'm looking into this 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94700478\comment-123390613.json . 
@sareg0 We will be working on the supervisor dashboard from Wednesday on. Just saying... (but you know how fast we are, so if it needs a quick fix ;-)... ) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94700478\comment-123394066.json . 
believe you me, this is a Quick fix (not the capital Q ;) ), and the supervisor's dashboard needs an overhaul anyway. This fix is just a stopgap, so feel free to chuck it out when you get to the dashboard. It's just so it's not so annoying right now @F3PiX 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94700478\comment-123395627.json . 
Pull request now lodged

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94700478\comment-123415109.json . 
closed via URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94700478\comment-123436055.json . 
We will do our best to make it a wonderfull dashboard for all SUPERvisors :-) 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94700478\issue-94700478.json . 
So I put in a long long comment together with the first checkup for my team (Rubyherzlein) and this happened:.
!screen shot 2015-07-13 at 12 07 34

I wouldn't mind it as such, but the comment covers the inline-code so that it can't be clicked. Because this is just a layout issue I was able to work around it by just hiding the inline-code element, but, well, this isn't sustainable.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121004448.json . 
@alicetragedy: here you go!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121039988.json . 
thank you! :sparkling_heart: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121048067.json . 
looks great so far. :+1: 

A couple of thoughts/improvements:.
- the link hover is that ugly bootstrap-dark-blue, would be great to change that to dark red or something. (of course, this would probably be teams-app-wide, as I think it's like that everywhere)
- in the inline-code index view, I think the "new Status Update" button could be moved to a more prominent place, like top right. 
- on the inline-code new view, the buttons "Create Activity" and "Back" should be aligned. Ideally, "Create" Activity could even have a color (like green) to show that it's the 'positive' action.
- the show view for a status_update does something funny if the text is too long, see image below.

!screen shot 2015-07-13 at 22 19 52
- the table on the index view is pretty ugly, and the date as well as title columns are pretty narrow in comparison to the text column, but I think that involves a lot more improvements and I could open a separate issue for that.

If you agree with the changes above, I'd love it if you could add them to this pull request – after that, I'm more than happy to merge. thank you! :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121053188.json . 
@alicetragedy You raise valid points about the inline-code scope but I think the changes went into inline-code. Or should they be valid for both controllers? inline-code

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121055693.json . 
@carpodaster ooops, nevermind. :speak_no_evil: I keep seeing them as both somewhat linked, but it's true, two separate controllers and also contexts. Sorry! (I think the image resizing affected both, though).
Either way, then I think we're almost good – just that removing of comment you mentioned, and the link color (which can be done now or later, as it should be app-wide, imho).

I will move the rest of those comments to a separate issue then. thank you for pointing it out! :blush: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121055912.json . 
(and feel free to merge when those minor changes are done)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121056503.json . 
and omg it looks SOOOOO much better, I want to merge asap :D 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121181264.json . 
@carpodaster and @alicetragedy: done! Could you close the PR? I'm still a bit reluctant to do it myself :)

And yes, I'm planning to tackle some of the other controllers separately, might combine some parts with refactoring the CSS. Please let me know what issues there are with the views! Saves a lot of research :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121181738.json . 
@roosdebildt great!!! thank you! :confetti_ball: :tada: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121183334.json . 
:fireworks: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121189455.json . 
!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121189907.json . 
oh wait, for some reason the color #eee doesn't work when it's put live I see --> so there is no border around the posts and the selection box doesn't have a background. any ideas on why it works locally but not live?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121190316.json . 
@roosdebildt do you have a screenshot? It seems to be working for me :D 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121190672.json . 
when I tried to make a screenshot I noticed it was due to my display's contrast settings... #fail

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121190816.json . 
well, good to know that there's no :bug: to fix ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121191862.json . 
true! except for the one team that has three team-members and their avatars' top-margin. what's the workflow when I want to fix some minor things?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121192324.json . 
I noticed that too – teams are not supposed to have more than two members.. :angry: 
Usually, when fixing something minor (such as typos or small styling errors) we can push directly to the gh-pages branch, without making a pull request – but I will let @carpodaster confirm that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\comment-121234759.json . 
I just made a new PR for the minor fixes for this case. I think it's nothing big but have a look if we can merge: URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\issue-94774076.json . 
Improves look and view of activity feed, fixes the size of images in the updates.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\pr-39837530.json . 
Improves look and view of activity feed, fixes the size of images in the updates.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94774076\pr-comment-34505864.json . 
Can you remove this comment? If we need to revert to it, we have it in Git :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94914463\issue-94914463.json . 
I merged my branch with upstream and also with our fork but now it says our fork is "1 commit ahead, 2 commits behind rails-girls-summer-of-code:master". But when I look at the difference it shows me only one commit and 0 files changed. HUH!?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94914463\pr-39901809.json . 
I merged my branch with upstream and also with our fork but now it says our fork is "1 commit ahead, 2 commits behind rails-girls-summer-of-code:master". But when I look at the difference it shows me only one commit and 0 files changed. HUH!?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94942036\comment-121237149.json . 
I think we can safely merge this. If anything causes trouble, I'm sure we can fix it. :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94942036\comment-121237536.json . 
ok, shall I do it this time? I think I'm ready now ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94942036\comment-121237664.json . 
@roosdebildt do iiiiiit!  :dancers: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94942036\issue-94942036.json . 
- fixes avatar margin of teams with 3 team members
- fixes padding
- smaller avatars

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94942036\pr-39913562.json . 
- fixes avatar margin of teams with 3 team members
- fixes padding
- smaller avatars

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94955421\issue-94955421.json . 
fixes that text shows up below avatars instead of next to it when it is a ul in the activities view.

sorry the last one I promise... _ashamed_

!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94955421\pr-39920608.json . 
fixes that text shows up below avatars instead of next to it when it is a ul in the activities view.

sorry the last one I promise... _ashamed_

!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94955816\comment-121256213.json . 
OK @carpodaster ? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94955816\comment-121257936.json . 
@F3PiX I'm thinking that it would supply more value to have the users arranged in teams (where applicable) since teams (both sponsored/voluntary and unaccepted) is what we're working with mostly. Or do you plan to add it in an upcoming PR?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-94955816\comment-121296527.json . 
@carpodaster I do indeed!  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95032001\comment-121377972.json . 
Oow I forgot to mention: issue #244 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95032001\comment-121665588.json . 
Looks good! Thanks @F3PiX :tulip: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95032001\issue-95032001.json . 
OK @carpodaster ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95032001\pr-39958360.json . 
OK @carpodaster ?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95032001\pr-comment-34616473.json . 
This will affect the whole app. Kaminari's default is 25 per page and I would rather stick with that.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95032001\pr-comment-34616662.json . 
Removing a test file because it fails is normally not an option :wink: but we talked about it already: view template tests are brittle anyway so :+1: for throwing it away.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95032001\pr-comment-34694715.json . 
Done!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95032001\pr-comment-34694870.json . 
LOL

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95810911\comment-122535066.json . 
@F3PiX I completely agree – see comments in URL ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95810911\comment-132957803.json . 
Closed in #300

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95810911\issue-95810911.json . 
Very selfish issue :-)
As students, we have a growing list of Status Updates in students\status_updates. The New-button is at the end of the list, while it is the main reason to visit the page.  
I was thinking that there are better ways to grant easier access to the button.
E.g. give it a more prominent place above the listing, or even move the new_status_update_form to (the top at) this page and kill the button. 
Wdyt?

Ping @roosdebildt 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95813684\comment-122549866.json . 
O no, F3PiX does NOT want to do this at all. Closing this one, starting over. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95813684\comment-122555269.json . 
Carsten, I accidentally pushed my entire master instead of one file at a time. So now the two files - ReadMe and Gemfile - are in this one PR. And not each in its own PR. Not sure how to undo it. 
If you mind that they are together, please leave this untill the Git Hero's helped me unraffle.  

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95813684\issue-95813684.json . 
RubyMine Debugger has a problem with byebug. Problem and this patch are documented here: URL.

Ping @carpodaster 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95813684\pr-40290459.json . 
RubyMine Debugger has a problem with byebug. Problem and this patch are documented here: URL.

Ping @carpodaster 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95813684\pr-comment-34947852.json . 
@F3PiX Could you add a tiny comment at the end of the line that it is RubyMine-related?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95819149\comment-144360931.json . 
@alicetragedy @roosdebildt Can we close this, or do we need even better styling? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95819149\comment-172642146.json . 
Hey @alicetragedy, what's the status here? Is there an easy way to test it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95819149\comment-190383897.json . 
update: the table / index looks acceptable. the styling can always be improved later on but I'd vote on closing this :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95819149\issue-95819149.json . 
As mentioned in this pull request (URL there are definitely some minor improvements that could be made to the inline-code, to make it more user-friendly. Here are a couple of things I noticed need work:.
- on the inline-code new view, the buttons "Create Activity" and "Back" should be aligned. Ideally, "Create" Activity could even have a color (like green) to show that it's the 'positive' action.
- the table on the index view is pretty ugly, and the date as well as title columns are pretty narrow in comparison to the text column. 

This issue is also linked to URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95819325\comment-144360204.json . 
@roosdebildt  this is fixed, right?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95819325\comment-172642176.json . 
Hey @alicetragedy, what's the status here? Is there an easy way to test it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95819325\comment-190385066.json . 
this particular problem is fixed. closing :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95819325\issue-95819325.json . 
the show view for a inline-code does something funny if the text is too long, see image below.

!screen shot 2015-07-13 at 22 19 52

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95902402\issue-95902402.json . 
@carpodaster Here it is once again. Now neatly separated from the Readme updates. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95902402\pr-40305865.json . 
@carpodaster Here it is once again. Now neatly separated from the Readme updates. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95950590\issue-95950590.json . 
Removing pagination config from Activity model; set all pagination to Kaminari default of 25 per page

.
#rails-girls-summer-of-code/rgsoc-teams\issue-95950590\pr-40315422.json . 
Removing pagination config from Activity model; set all pagination to Kaminari default of 25 per page

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96023526\comment-122823937.json . 
Splendid, thanks! :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96023526\comment-122836805.json . 
hooray for readme's!! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96023526\comment-122866332.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96096567\comment-122979720.json . 
Great work @ramonh! :tada: :confetti_ball: :sparkles: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96096567\comment-122980097.json . 
Couldn't have done it without your help, @alicetragedy. Thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96096567\comment-122980217.json . 
debug-Monday. :bug: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96096567\issue-96096567.json . 
This adds/fixes the following:.
- Conference attendance for students can no longer be added by admins. This is no longer needed, as students can do this on their own now. Admins will simply confirm them.
- The conference attendance on a students' page is now visible to everyone, as opposed to only them. The tweet button is visible only to them.
- The dropdown for selecting a conference now has as a default value the first conference instead of having a blank value

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96096567\pr-40368220.json . 
This adds/fixes the following:.
- Conference attendance for students can no longer be added by admins. This is no longer needed, as students can do this on their own now. Admins will simply confirm them.
- The conference attendance on a students' page is now visible to everyone, as opposed to only them. The tweet button is visible only to them.
- The dropdown for selecting a conference now has as a default value the first conference instead of having a blank value

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96135676\comment-122996739.json . 
looks good to me – I think we can merge! :+1: thank you!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96135676\comment-122998512.json . 
Sure thing!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96138049\issue-96138049.json . 
When wanting to delete a conference from the app, clicking on the delete link in the show view gives a 404 ("The page you were looking for does not exist"). This happened right now in production, I have not tried it out locally or investigated further. 
It might just be a pretty easy fix. ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\comment-123009109.json . 
any idea @carpodaster @alicetragedy ? 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\comment-123010826.json . 
@anikalindtner the thing is that the blue button doesn't show its "result" right away, the page needs to be refreshed in order for one to see that "checked up on them" has been set. could it be that that's the problem? This is something that happens for all teams, and it was always like this – but probably needs fixing. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\comment-123014196.json . 
@alicetragedy huch! you are right! OMG! I tried it myself. (and I saw you did too) And yes, it probably should show up right away, because I also was really confused when nothing happened.

@alexwllms, ^ could you try that as well? Seems it worked for Laura and me. phewwww.. so we don't have a bug after all. wheee \o/ You just have to refresh the page to see the results of the blue button show up.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\comment-123014760.json . 
@anikalindtner well... not sure I would call that "not a bug" but at least we know where it comes from ;) 
#bugorfeature

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\comment-123047414.json . 
@alicetragedy hehe very true indeed. at least it's not a new bug i was expecting it to be (E_TOO_MANY_BUGS), but seems to be one we already know about. 

i only now want to get a heads up from @alexwllms though that this indeed also works for him. (not trusting anything from the teams app anymore ;) )

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\comment-123446732.json . 
Works if the page is reloaded :)

—
Alex Williams
+44 (0) 7446 975976

On Mon, Jul 20, 2015 at 10:26 PM, Anika notifications@github.com wrote:.








.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\comment-123447098.json . 
does it have to be reloaded every time?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\comment-123455110.json . 
Can Ajax solve this? I would LOOOOVE to learn some Ajax....

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\comment-134162958.json . 


@F3PiX I haven't looked at the problem but it seems the form action already _is_ an Ajax one, only the corresponding div isn't updated. Maybe a DOM ID has been renamed?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\comment-142520740.json . 
This one is solved by #311. Shall we close it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\comment-142526733.json . 
I think so :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96141043\issue-96141043.json . 
While the Button with a comment works, clicking the button without a comment won't do anything. 

URL.

URL.

Might also have to do something with @alexwllms' profile? there seems to be a issue with his GH avatar not being shown. Maybe some weird underlying issue which prevents him from sending a "checked-up" without a comment.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96261195\comment-123216911.json . 
after I resend the email to Maud and Roos they got their email now. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96261195\comment-123218465.json . 
The app doesn't like cheese :disappointed: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96261195\comment-123231446.json . 
Also: the sender address is "wrong". should be summer-of-code@railsgirls.com, not summer-of-code-team. 

!screen shot 2015-07-21 at 11 18 47

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96261195\comment-123291157.json . 


I've noticed that but the configuration for sending email uses that email address as a username to authenticate against Google Mail. If you can send me the password for the desired email address (via email or Slack or homing pidgin), I can change it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96261195\comment-123298754.json . 
Opps, sorry about this, do you want me to take a look at it?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96261195\comment-123405402.json . 
@marcgreenstock yes please! @carpodaster i'll have a look for that password! 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96261195\comment-125513525.json . 
This should address the problem: URL.

Sorry for the delay

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96261195\comment-126008037.json . 
I am closing this, but if it persists then please re-open @anikalindtner 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96261195\issue-96261195.json . 
In the last mailings (after you added the selected/everyone feature to it @sareg0 and @marcgreenstock ) there have been some issues with students not getting the emails.

I don't know why this happens, since all the other ones got them and they are on the receivers-list, but the app doesn't show any errors anymore (and also not the time stamp when the email was sent), so there is no way for me to see why that is. 

This was how it looked before:.

!screen shot 2015-07-21 at 10 39 18

Which was very helpful. Now the fields are empty after sending (even though the email DID get sent to most of the students): 

!screen shot 2015-07-21 at 10 39 39

The two students who didn't get an email this and last times are Maud and Roos. Maybe we could look in the database what happened with their emails and see if there were errors?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96270206\comment-127526928.json . 
hey @marcgreenstock we looked at this this morning. I'm assigning it to you for a fix.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96270206\comment-128686717.json . 
hey @marcgreenstock we need to use this feature for a mailing today. Do you think you could fix it today by close of business, or should we find another method to do our mailing?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96270206\comment-134162680.json . 
@sareg0 This is fixed, yes?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96270206\comment-134548063.json . 
@carpodaster I believe this was fixed in URL I haven't heard anything more about it so I consider that a success.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96270206\comment-134563509.json . 
Ah! I haven't experienced anything else bad with the mailings thus far... So I have my hopes up that it worked. I will close this up.
Thank you @marcgreenstock and @carpodaster for helping us push this fix through :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96270206\issue-96270206.json . 
Every time that I wanted to sent an email to just "selected teams" (and not "everyone", which seems to be the default) and I edited the Mailing but not sent it straight away, the app forgets the box that I selected and selects "everyone" again. 

For the Students/Organizers/Mentors boxes it works though and shows the right box even when I had to go back and edit the mailing:.

!screen shot 2015-07-21 at 11 24 53

pinging @marcgreenstock and @sareg0 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\comment-123281324.json . 
@roosdebildt I'll take a look at the latest changes (the last commit specifically) and happy to merge after that. don't know if @carpodaster has any additional comments :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\comment-123282022.json . 
yeay, that would be great! so excited to work with the new files :dancers:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\comment-123288481.json . 
To the greater audience, since I have no experience with reviewing style-based PRs: I think it would be good to provide some screenshots with the changes since otherwise everyone has to check out the PR branch and click through everything, not really knowing where to look.

That being said, I'm sure it looks super awesome :ribbon: I'm not sure if we need a different font-face though.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\comment-123294017.json . 
@carpodaster I integrated the new font-face and colors so that the app aligns with the styling of railsgirlssummerofcode.com. So that when you click on the "Home" button, the styling doesn't completely change and it's clear that the teams-app is part of RGSoC.

Here you go:.

!style-improvements

!screen shot 2015-07-21 at 14 28 23

!screen shot 2015-07-21 at 14 32 09

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\comment-123295172.json . 
@roosdebildt Oooh, cool. Consider my comment null and void then :smile: :+1: for merge from my side then! Somebody push that green button :shipit: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\comment-123299855.json . 
Now that we're at it:.

!screen shot 2015-07-21 at 15 10 13

Thanks for rubber-ducking me @carpodaster :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\comment-123347669.json . 
@roosdebildt was there a specific reason for removing the border-radius on team images? I know that eg. on the team page on the rgsoc.org website, we have completely circular avatars, on the activities feed it's fully square, and in the list of teams it's with that border-radius, so it doesn't all fit together and is inconsistent. Is the plan to rework it so that it has one consistent style everywhere, or do you think it generally looks better square than with slightly rounded edges? 
this is an actual question, I don't necessarily have an opinion other than I quite like rounded borders :blush: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\comment-123349988.json . 
other than my question above, which is not particularly important, I'm happy to click the green button :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\comment-123365089.json . 
\0/ :+1:.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\comment-123365747.json . 
@alicetragedy in general, I like lay-outs with square boxes. I thought it would be nice to have more of a "flat layout" throughout the site. Also, I think it looks nice on the activity stream and for consistency I thought I'd change it on all pages. Wdyt? If you are ok with that, click the green button :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\comment-123366107.json . 
@roosdebildt fair enough! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\issue-96297823.json . 
General styling more in line with railsgirlssummerofcode.com:.

deletes non-functioning color-stack and creates new one with matching colors
adds Lato font-stack
restructures folders and files to better control separate stylings and their order
removes border-radius of avatars and other images

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96297823\pr-40448818.json . 
General styling more in line with railsgirlssummerofcode.com:.

deletes non-functioning color-stack and creates new one with matching colors
adds Lato font-stack
restructures folders and files to better control separate stylings and their order
removes border-radius of avatars and other images

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96355656\comment-123577704.json . 
@roosdebildt no worries, tbh I didn't even notice :speak_no_evil: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96355656\comment-123645803.json . 
hehe, I noticed, but it was already there, it was just more acute after the layout changes. You didn't cause it, you just made it more obvious it needed to be fixed :) Glass half full ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96355656\comment-123788185.json . 
closed via URL.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96355656\issue-96355656.json . 
Created huge horizontal scrolling area.
All huge styling changes create bugs, right _embarrassed_.... right?

!screen shot 2015-07-21 at 18 05 12
- this:.

!screen shot 2015-07-21 at 18 08 18

Easy fixes though. I'm on it.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96358545\comment-123425359.json . 
this is cool, it has been a problem we haven't gotten around to fixing until now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96358545\issue-96358545.json . 
see #289.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96358545\pr-40476134.json . 
see #289.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96361467\comment-123413933.json . 
looks good to me – I'm happy to merge :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96361467\issue-96361467.json . 
This is a quick fix for issue #267.

Below is a the screenshot of what it will look like when merged.

!supervisorcomments

Note that there is now a scroll, to stop the text flowing out of the 'y' bounds of the grey box. To make reading easier, the text is now aligned left instead of right. It creates two more distinct columns. By no means perfect, and this may be temporary before Team Cheesy gets to the supervisors' dashboard.

All tests passing still.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96361467\pr-40477627.json . 
This is a quick fix for issue #267.

Below is a the screenshot of what it will look like when merged.

!supervisorcomments

Note that there is now a scroll, to stop the text flowing out of the 'y' bounds of the grey box. To make reading easier, the text is now aligned left instead of right. It creates two more distinct columns. By no means perfect, and this may be temporary before Team Cheesy gets to the supervisors' dashboard.

All tests passing still.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96585222\comment-123746161.json . 
Love it! And excited to see the fade-out :+1: May I merge? May I? MAY I? :wink: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96585222\comment-123746397.json . 
yes please! :smile: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96585222\comment-123746707.json . 
oh wait, I'm probably not the one deciding about this am I :stuck_out_tongue: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96585222\comment-123757353.json . 
JAAAAAA MERGE ALL THE THINGS!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96585222\comment-123759607.json . 
:tada: :confetti_ball: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96585222\issue-96585222.json . 
Finally, it's there! The much discussed GitHub Ribbon :)
Stayed with the original diagonal one:.

!screen shot 2015-07-22 at 16 36 15

After a long (!) time of playing around with alternatives, I made it disappear for smaller screens now (with a nice fade-out effect ;) There is simply too little space to put it elsewhere:.

!screen shot 2015-07-22 at 16 40 41

In a bright future where the header (and the rest of the site) is more responsive, we can change it but I think it's the only option for now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96585222\pr-40572474.json . 
Finally, it's there! The much discussed GitHub Ribbon :)
Stayed with the original diagonal one:.

!screen shot 2015-07-22 at 16 36 15

After a long (!) time of playing around with alternatives, I made it disappear for smaller screens now (with a nice fade-out effect ;) There is simply too little space to put it elsewhere:.

!screen shot 2015-07-22 at 16 40 41

In a bright future where the header (and the rest of the site) is more responsive, we can change it but I think it's the only option for now.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96808840\comment-124134438.json . 
I'll merge and hope for the best – I'm at the airport ;)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96808840\issue-96808840.json . 
As @ramonh was noting correctly, I did make a nice opacity fade-out, but the link kept on being invisibly clickable on top once you resized the screen. Oh, when will the day come I'll merge a PR without having to fix something after? :disappointed: 

Well, this one fixes it indeed! And adds a fade-in to match the fade-out. Hurray for fixing things!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-96808840\pr-40669426.json . 
As @ramonh was noting correctly, I did make a nice opacity fade-out, but the link kept on being invisibly clickable on top once you resized the screen. Oh, when will the day come I'll merge a PR without having to fix something after? :disappointed: 

Well, this one fixes it indeed! And adds a fade-in to match the fade-out. Hurray for fixing things!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-97056912\issue-97056912.json . 
In the conferences area, it would be useful to have a field that shows whether the conference allows/has lightning talk slots or not (a checkbox would be enough) – this would cut down on work when emailing the students selected for the conferences and having to look up manually if the conferences offer lightning talk slots. 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-97087825\comment-124820187.json . 
:+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-97087825\comment-125202430.json . 
I'll fix this, no problem :-)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-97087825\issue-97087825.json . 
The comments posted via the "Check up with Comment" form aren't displayed in reverse chronological order.

E.g., right now, for Team Tessie, the top-most comment is from July 18th, followed by one from July 10th, then July 15th, July 24th, and finally July 6th.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-97652953\comment-125736482.json . 
:tada: Thanks!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-97652953\issue-97652953.json . 
In the upgrade to 4.2 I think I removed this: URL.

That was what was persisting the error and setting the sent_at on the submissions.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-97652953\pr-40989796.json . 
In the upgrade to 4.2 I think I removed this: URL.

That was what was persisting the error and setting the sent_at on the submissions.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-97766409\comment-125735774.json . 
Looks good! :+1: 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-97766409\issue-97766409.json . 
Solves issue #295 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-97766409\pr-41041824.json . 
Solves issue #295 

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\comment-129711263.json . 
hey there @carpodaster could you please review this pull request if you can find the time? I know that @anikalindtner would really need this fix to complete a task of her's

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\comment-129725227.json . 
@sareg0 will have a look into this later today

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\comment-129726995.json . 
:open_hands: thank you!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\comment-129927839.json . 
@marcgreenstock It definitely looks hard, yes. Thanks for the work on it!



Let's just merge and see what happens #yolo.  It looks good, but as you said: we may have overlooked a permutation.

Feel free to merge!

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\comment-129938300.json . 
@carpodaster, you want to deploy or shall I?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\comment-129944393.json . 
@marcgreenstock It should auto-deploy through Travis

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\comment-129950001.json . 
@carpodaster yay for CI :)

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\issue-99926961.json . 
This one was hard. When joining two roles and teams together, AR ensures that the records are connected and excludes records that are not connected via all three models. So in the case of organizers, not belonging to a team via their inline-code associated role excluded them from the recipients.

Although I have added some more test, there are many permutations I have not considered, so I doubt this will be the last time we will need to do something with the mailer.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\pr-41976631.json . 
This one was hard. When joining two roles and teams together, AR ensures that the records are connected and excludes records that are not connected via all three models. So in the case of organizers, not belonging to a team via their inline-code associated role excluded them from the recipients.

Although I have added some more test, there are many permutations I have not considered, so I doubt this will be the last time we will need to do something with the mailer.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\pr-comment-36720369.json . 
inline-code selects every user in the system that isn't part of a team that hasn't been accepted as either sponsored or voluntary team ever, including all applicants whose applications had been rejected.  Is that the intended behaviour?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\pr-comment-36720446.json . 
Is the inline-code needed?

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\pr-comment-36720749.json . 
So that's equivalent to %w{organizer developer helpdesk} + :unselected_teams

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\pr-comment-36723839.json . 
No, but only the id is needed, just conserving a little memory here.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\pr-comment-36724345.json . 
Yep, I just thought that's what inline-code already does. If not, don't mind me

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\pr-comment-36724959.json . 
So this is a little tricky to understand, it took me a while too.

There are a number of filters, inline-code, inline-code and inline-code.

If inline-code is inline-code it will select any team that has a inline-code that is included in inline-code, otherwise select where inline-code is specifically inline-code. inline-code will select every team.

It gets more tricky with line 21

block-code.

where if we need to filter by team it selects users who's role belongs to a team or users who's roles is teamless (organizer developer helpdesk) and has been included in the inline-code filter.

I have considered rewriting the spec for inline-code, it sort of needs it because there are a lot of permutations that are not considered in the spec.

.
#rails-girls-summer-of-code/rgsoc-teams\issue-99926961\pr-comment-36728115.json . 
I might have got this wrong, but when i was looking at it, pluck was not deselecting every other column.

.
