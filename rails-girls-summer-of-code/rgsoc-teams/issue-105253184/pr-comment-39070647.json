{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/39070647", "pull_request_review_id": null, "id": 39070647, "diff_hunk": "@@ -0,0 +1,18 @@\n+class Supervisor::BaseController < ApplicationController\n+\n+  before_action :must_be_supervisor", "path": "app/controllers/supervisor/base_controller.rb", "position": 3, "original_position": 3, "commit_id": "3a5d36d1ed6170d5e68c3377b7e7a77f2f599efe", "original_commit_id": "3a5d36d1ed6170d5e68c3377b7e7a77f2f599efe", "user": {"login": "F3PiX", "id": 6314687, "avatar_url": "https://avatars1.githubusercontent.com/u/6314687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F3PiX", "html_url": "https://github.com/F3PiX", "followers_url": "https://api.github.com/users/F3PiX/followers", "following_url": "https://api.github.com/users/F3PiX/following{/other_user}", "gists_url": "https://api.github.com/users/F3PiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/F3PiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F3PiX/subscriptions", "organizations_url": "https://api.github.com/users/F3PiX/orgs", "repos_url": "https://api.github.com/users/F3PiX/repos", "events_url": "https://api.github.com/users/F3PiX/events{/privacy}", "received_events_url": "https://api.github.com/users/F3PiX/received_events", "type": "User", "site_admin": false}, "body": "@marcgreenstock Thanks for being pingable ;-)\nWhat I found (first round). The `:supervise` ability needs a team to pass in. So, if I do: `can? :supervise, @team` it would work. BUT we don't have a team_id yet. I think because we only grant access to the supervisor's `user.roles`, not to the team roles. \nhttps://github.com/rails-girls-summer-of-code/rgsoc-teams/blob/master/app/models/ability.rb#L31\nSo, my conclusion is we can't use cancancan here to grant access. But we can use it in the views. Does this make sense? \n", "created_at": "2015-09-09T17:18:01Z", "updated_at": "2015-09-09T17:18:01Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/307#discussion_r39070647", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/307", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/39070647"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/307#discussion_r39070647"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/307"}}, "body_html": "<p><a href=\"https://github.com/marcgreenstock\" class=\"user-mention\">@marcgreenstock</a> Thanks for being pingable ;-)<br>\nWhat I found (first round). The <code>:supervise</code> ability needs a team to pass in. So, if I do: <code>can? :supervise, @team</code> it would work. BUT we don't have a team_id yet. I think because we only grant access to the supervisor's <code>user.roles</code>, not to the team roles.<br>\n<a href=\"https://github.com/rails-girls-summer-of-code/rgsoc-teams/blob/master/app/models/ability.rb#L31\">https://github.com/rails-girls-summer-of-code/rgsoc-teams/blob/master/app/models/ability.rb#L31</a><br>\nSo, my conclusion is we can't use cancancan here to grant access. But we can use it in the views. Does this make sense?</p>", "body_text": "@marcgreenstock Thanks for being pingable ;-)\nWhat I found (first round). The :supervise ability needs a team to pass in. So, if I do: can? :supervise, @team it would work. BUT we don't have a team_id yet. I think because we only grant access to the supervisor's user.roles, not to the team roles.\nhttps://github.com/rails-girls-summer-of-code/rgsoc-teams/blob/master/app/models/ability.rb#L31\nSo, my conclusion is we can't use cancancan here to grant access. But we can use it in the views. Does this make sense?"}