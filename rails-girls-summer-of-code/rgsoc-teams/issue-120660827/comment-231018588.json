{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/231018588", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/346#issuecomment-231018588", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/346", "id": 231018588, "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-07T08:43:13Z", "updated_at": "2016-07-07T08:43:13Z", "author_association": "MEMBER", "body_html": "<p>Yes, <a href=\"https://github.com/michaelem\" class=\"user-mention\">@michaelem</a>'s approach is a classic here <em>(see for instance <a href=\"http://railsguides.net/change-data-in-migrations-like-a-boss/\" rel=\"nofollow\">this blog post</a> on how it can look like)</em>. A shorter alternative is to just wrap the data transformation part in a <code>begin</code>- <code>rescue</code> block - does the job as well.</p>\n<p>A wholly different solution: use temporary rake tasks <em>(see for instance <a href=\"https://robots.thoughtbot.com/data-migrations-in-rails\" rel=\"nofollow\">this blog post</a>)</em>. I personally don't really like this approach, because it leaves two questions open: 1) who when removes the task again? 2) is the task run in every context where I intended it to?</p>", "body_text": "Yes, @michaelem's approach is a classic here (see for instance this blog post on how it can look like). A shorter alternative is to just wrap the data transformation part in a begin- rescue block - does the job as well.\nA wholly different solution: use temporary rake tasks (see for instance this blog post). I personally don't really like this approach, because it leaves two questions open: 1) who when removes the task again? 2) is the task run in every context where I intended it to?", "body": "Yes, @michaelem's approach is a classic here _(see for instance [this blog post](http://railsguides.net/change-data-in-migrations-like-a-boss/) on how it can look like)_. A shorter alternative is to just wrap the data transformation part in a `begin`\\- `rescue` block - does the job as well.\n\nA wholly different solution: use temporary rake tasks _(see for instance [this blog post](https://robots.thoughtbot.com/data-migrations-in-rails))_. I personally don't really like this approach, because it leaves two questions open: 1) who when removes the task again? 2) is the task run in every context where I intended it to?\n"}