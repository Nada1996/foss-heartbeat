{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/184183365", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/363#issuecomment-184183365", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/363", "id": 184183365, "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-15T12:14:05Z", "updated_at": "2016-02-15T12:14:05Z", "author_association": "OWNER", "body_html": "<p>Cool, <a href=\"https://github.com/ramonh\" class=\"user-mention\">@ramonh</a> !</p>\n<p>I would implement the other-student-invite first since only after accepting the invitation do we have an actual <code>confirmed</code> team (it may be <code>pending</code> first, in terms of the state machine).</p>\n<p>I would leave the logic of a team to generally contain mentors or any other role (like supervisors later on). We just have to ensure that a team can only ever be created on the public website with 1st) another student and 2nd) one or more coaches, all of which have to accept an invitation.</p>\n<p>Removing the second student should probably mean the entire team gets destroyed?</p>", "body_text": "Cool, @ramonh !\nI would implement the other-student-invite first since only after accepting the invitation do we have an actual confirmed team (it may be pending first, in terms of the state machine).\nI would leave the logic of a team to generally contain mentors or any other role (like supervisors later on). We just have to ensure that a team can only ever be created on the public website with 1st) another student and 2nd) one or more coaches, all of which have to accept an invitation.\nRemoving the second student should probably mean the entire team gets destroyed?", "body": "Cool, @ramonh !\n\nI would implement the other-student-invite first since only after accepting the invitation do we have an actual `confirmed` team (it may be `pending` first, in terms of the state machine).\n\nI would leave the logic of a team to generally contain mentors or any other role (like supervisors later on). We just have to ensure that a team can only ever be created on the public website with 1st) another student and 2nd) one or more coaches, all of which have to accept an invitation.\n\nRemoving the second student should probably mean the entire team gets destroyed?\n"}