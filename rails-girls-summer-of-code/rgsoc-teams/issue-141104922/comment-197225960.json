{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/197225960", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/422#issuecomment-197225960", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/422", "id": 197225960, "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-16T09:27:43Z", "updated_at": "2016-03-16T09:27:43Z", "author_association": "MEMBER", "body_html": "<p>Introducing the ID-index, you end up with the same type of params hash, you'd have with normal rails <code>fields_for</code> helpers and nested attributes: an array that gets converted to a hash like (because that's how arrays are passed as params afaik):</p>\n<div class=\"highlight highlight-source-ruby\"><pre>{ <span class=\"pl-s\"><span class=\"pl-pds\">'</span>students<span class=\"pl-pds\">'</span></span> =&gt; { <span class=\"pl-s\"><span class=\"pl-pds\">'</span>0<span class=\"pl-pds\">'</span></span> =&gt; { <span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span> =&gt; <span class=\"pl-s\"><span class=\"pl-pds\">'</span>bar<span class=\"pl-pds\">'</span></span>, \u2026 }, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1<span class=\"pl-pds\">'</span></span> =&gt; { <span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span> =&gt; <span class=\"pl-s\"><span class=\"pl-pds\">'</span>bar<span class=\"pl-pds\">'</span></span>, \u2026 }...}</pre></div>\n<p>Since fetching the params is bound to the <code>current_user</code>, I don't see a problem there.</p>", "body_text": "Introducing the ID-index, you end up with the same type of params hash, you'd have with normal rails fields_for helpers and nested attributes: an array that gets converted to a hash like (because that's how arrays are passed as params afaik):\n{ 'students' => { '0' => { 'foo' => 'bar', \u2026 }, '1' => { 'foo' => 'bar', \u2026 }...}\nSince fetching the params is bound to the current_user, I don't see a problem there.", "body": "Introducing the ID-index, you end up with the same type of params hash, you'd have with normal rails `fields_for` helpers and nested attributes: an array that gets converted to a hash like (because that's how arrays are passed as params afaik):\n\n``` ruby\n{ 'students' => { '0' => { 'foo' => 'bar', \u2026 }, '1' => { 'foo' => 'bar', \u2026 }...}\n```\n\nSince fetching the params is bound to the `current_user`, I don't see a problem there.\n"}