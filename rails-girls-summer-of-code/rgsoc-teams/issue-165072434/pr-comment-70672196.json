{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/70672196", "pull_request_review_id": null, "id": 70672196, "diff_hunk": "@@ -45,18 +45,23 @@ def visible\n     end\n \n     # Returns a base scope reflecting the relevant teams depending on what\n-    # phase of the running season we're currently in.\n+    # phase of the running season we're currentin_ly in.\n     def by_season_phase\n       if Time.now.utc > Season.current.acceptance_notification_at\n-        Team.where season: Season.current, kind: %w(sponsored voluntary)\n+        Team.in_current_season.selected\n       else\n-        Team.visible.where season: Season.current\n+        Team.in_current_season.visible\n       end\n     end\n \n-    def active_teams\n-      Team.where(season: Season.current, kind: %w(sponsored voluntary)).order(:name)\n+    def in_current_season", "path": "app/models/team.rb", "position": null, "original_position": 18, "commit_id": "678f9ff2db1ee17b2eb3aa18680143f08ea03698", "original_commit_id": "7dc64bac276c5ecf080bd1ea29adf83196295765", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "The concrete name \u00bbcurrent\u00ab is not a Rails convention, but re-using method names on different classes (when the expected behaviour is the same or at least similar) is a _Ruby_ convention. Ruby focusses heavily on the idea of _duck typing_ \u2013\u00a0meaning it doesn't really care _what_ it is as long as it responds to a certain method.\n\nBut I understand what you mean, and the name `current` is totally up for debate.\n\nWhat I suggest: let's stick with `current` in this PR. A follow-up PR can refactor all definitions of `current` (and its relevant factory traits) to `in_current_season`. It's a longer method name, but it totally reveals its intention. And that's way better! What do you think?\n", "created_at": "2016-07-13T17:38:02Z", "updated_at": "2016-07-13T20:21:55Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/493#discussion_r70672196", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/493", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/70672196"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/493#discussion_r70672196"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/493"}}, "body_html": "<p>The concrete name \u00bbcurrent\u00ab is not a Rails convention, but re-using method names on different classes (when the expected behaviour is the same or at least similar) is a <em>Ruby</em> convention. Ruby focusses heavily on the idea of <em>duck typing</em> \u2013\u00a0meaning it doesn't really care <em>what</em> it is as long as it responds to a certain method.</p>\n<p>But I understand what you mean, and the name <code>current</code> is totally up for debate.</p>\n<p>What I suggest: let's stick with <code>current</code> in this PR. A follow-up PR can refactor all definitions of <code>current</code> (and its relevant factory traits) to <code>in_current_season</code>. It's a longer method name, but it totally reveals its intention. And that's way better! What do you think?</p>", "body_text": "The concrete name \u00bbcurrent\u00ab is not a Rails convention, but re-using method names on different classes (when the expected behaviour is the same or at least similar) is a Ruby convention. Ruby focusses heavily on the idea of duck typing \u2013\u00a0meaning it doesn't really care what it is as long as it responds to a certain method.\nBut I understand what you mean, and the name current is totally up for debate.\nWhat I suggest: let's stick with current in this PR. A follow-up PR can refactor all definitions of current (and its relevant factory traits) to in_current_season. It's a longer method name, but it totally reveals its intention. And that's way better! What do you think?"}