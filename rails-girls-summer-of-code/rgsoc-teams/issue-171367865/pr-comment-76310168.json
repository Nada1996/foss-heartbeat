{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/76310168", "pull_request_review_id": null, "id": 76310168, "diff_hunk": "@@ -1,4 +1,7 @@\n class Comment < ActiveRecord::Base\n+\n+  validates :text, presence: true, unless: :is_supervisor_check?", "path": "app/models/comment.rb", "position": null, "original_position": 3, "commit_id": "227d32584b286e62cf7004cff37824047ac075ef", "original_commit_id": "c0c878dcdd934f40c5929335689518b01e2e1d24", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "I don't know what side-effects this may cause. Sure, it only fires when the `is_supervisor_check?` is true, but I feel like validating on the two dimensions \"by whom\" (e.g. supervisor, public user, \u2026) and \"what kind of commentable\" violates the idea of polymorphic commentable.\n\nAn idea would be to have something like a StatusUpdateComment [form object](https://medium.com/@ryakh/rails-form-objects-84b6849c886e) that encapsulates the validation, but I think that's too much for this PR.\n\nIt's not ideal, either, but I would revert to the `comment.text.present? && coment.save` check for the time being and remove the validation.\n", "created_at": "2016-08-25T19:35:22Z", "updated_at": "2016-09-10T18:51:54Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/528#discussion_r76310168", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/528", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/76310168"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/528#discussion_r76310168"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/528"}}, "body_html": "<p>I don't know what side-effects this may cause. Sure, it only fires when the <code>is_supervisor_check?</code> is true, but I feel like validating on the two dimensions \"by whom\" (e.g. supervisor, public user, \u2026) and \"what kind of commentable\" violates the idea of polymorphic commentable.</p>\n<p>An idea would be to have something like a StatusUpdateComment <a href=\"https://medium.com/@ryakh/rails-form-objects-84b6849c886e\" rel=\"nofollow\">form object</a> that encapsulates the validation, but I think that's too much for this PR.</p>\n<p>It's not ideal, either, but I would revert to the <code>comment.text.present? &amp;&amp; coment.save</code> check for the time being and remove the validation.</p>", "body_text": "I don't know what side-effects this may cause. Sure, it only fires when the is_supervisor_check? is true, but I feel like validating on the two dimensions \"by whom\" (e.g. supervisor, public user, \u2026) and \"what kind of commentable\" violates the idea of polymorphic commentable.\nAn idea would be to have something like a StatusUpdateComment form object that encapsulates the validation, but I think that's too much for this PR.\nIt's not ideal, either, but I would revert to the comment.text.present? && coment.save check for the time being and remove the validation."}