{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/253331142", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/545#issuecomment-253331142", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/545", "id": 253331142, "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-12T20:34:40Z", "updated_at": "2016-10-12T20:34:40Z", "author_association": "OWNER", "body_html": "<p><a href=\"https://github.com/alicetragedy\" class=\"user-mention\">@alicetragedy</a> I took the liberty of adding the spec that I used locally to verify the inclusion of teamleas orgas. Good news: it works! <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji>  It must be something about the operator precedence of <code>AND</code> and <code>OR</code> in the SQL statement. When I tried to split it into two chained <code>where</code> clauses, the newly added test failed. /shrug.</p>\n<p>Let's wait for Travis to pick up the change and then meeeeerrrrrge!</p>", "body_text": "@alicetragedy I took the liberty of adding the spec that I used locally to verify the inclusion of teamleas orgas. Good news: it works! \ud83d\udc4d  It must be something about the operator precedence of AND and OR in the SQL statement. When I tried to split it into two chained where clauses, the newly added test failed. /shrug.\nLet's wait for Travis to pick up the change and then meeeeerrrrrge!", "body": "@alicetragedy I took the liberty of adding the spec that I used locally to verify the inclusion of teamleas orgas. Good news: it works! \ud83d\udc4d  It must be something about the operator precedence of `AND` and `OR` in the SQL statement. When I tried to split it into two chained `where` clauses, the newly added test failed. /shrug.\n\nLet's wait for Travis to pick up the change and then meeeeerrrrrge!\n"}