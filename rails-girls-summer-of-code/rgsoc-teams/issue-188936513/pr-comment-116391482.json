{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/116391482", "pull_request_review_id": 38009292, "id": 116391482, "diff_hunk": "@@ -15,4 +17,15 @@ def tickets_left\n     confirmed_attendances = attendances.select { |attendance| attendance.confirmed }\n     tickets.to_i - confirmed_attendances.size\n   end\n+\n+  private\n+\n+    def date_interval\n+      if [starts_on, ends_on].count(&:nil?) == 1", "path": "app/models/conference.rb", "position": 21, "original_position": 18, "commit_id": "18130ecd314dba27b4f3bc7a97b065841940a1c7", "original_commit_id": "55a2da53cbb8e1fabc4fce59f31030245112a7a5", "user": {"login": "F3PiX", "id": 6314687, "avatar_url": "https://avatars1.githubusercontent.com/u/6314687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F3PiX", "html_url": "https://github.com/F3PiX", "followers_url": "https://api.github.com/users/F3PiX/followers", "following_url": "https://api.github.com/users/F3PiX/following{/other_user}", "gists_url": "https://api.github.com/users/F3PiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/F3PiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F3PiX/subscriptions", "organizations_url": "https://api.github.com/users/F3PiX/orgs", "repos_url": "https://api.github.com/users/F3PiX/repos", "events_url": "https://api.github.com/users/F3PiX/events{/privacy}", "received_events_url": "https://api.github.com/users/F3PiX/received_events", "type": "User", "site_admin": false}, "body": "The conf dates input is with a date picker, so that is covered. \r\nThe problem I want to solve: it is currently possible to input an end date that is earlier than the start date. \r\nThat is basically solved (I want to implement it differently than I did in this PR).\r\nThe next problem that came up: should the dates be `presence validate`d.  \r\nTL;DR\r\n~~My vote would be to leave out the presence validation. In theory orga's could enter a conf before the dates are set (RailsConf 2019).  I can imagine use cases for that.~~ \r\n\r\n~~OTOH The data picker will set (both) the dates to today automatically on the client side, so why wouldn't we add the presence validation? It would always pass automatically, and It would make the chronology validation easier.  \r\nNever heard orga's complain about the dates set upfront.~~\r\nConclusion: I'll add the presence validation.  \r\n", "created_at": "2017-05-14T21:51:04Z", "updated_at": "2017-05-14T21:52:36Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/552#discussion_r116391482", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/552", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/116391482"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/552#discussion_r116391482"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/552"}}, "body_html": "<p>The conf dates input is with a date picker, so that is covered.<br>\nThe problem I want to solve: it is currently possible to input an end date that is earlier than the start date.<br>\nThat is basically solved (I want to implement it differently than I did in this PR).<br>\nThe next problem that came up: should the dates be <code>presence validate</code>d.<br>\nTL;DR<br>\n<del>My vote would be to leave out the presence validation. In theory orga's could enter a conf before the dates are set (RailsConf 2019).  I can imagine use cases for that.</del></p>\n<p><del>OTOH The data picker will set (both) the dates to today automatically on the client side, so why wouldn't we add the presence validation? It would always pass automatically, and It would make the chronology validation easier.<br>\nNever heard orga's complain about the dates set upfront.</del><br>\nConclusion: I'll add the presence validation.</p>", "body_text": "The conf dates input is with a date picker, so that is covered.\nThe problem I want to solve: it is currently possible to input an end date that is earlier than the start date.\nThat is basically solved (I want to implement it differently than I did in this PR).\nThe next problem that came up: should the dates be presence validated.\nTL;DR\nMy vote would be to leave out the presence validation. In theory orga's could enter a conf before the dates are set (RailsConf 2019).  I can imagine use cases for that.\nOTOH The data picker will set (both) the dates to today automatically on the client side, so why wouldn't we add the presence validation? It would always pass automatically, and It would make the chronology validation easier.\nNever heard orga's complain about the dates set upfront.\nConclusion: I'll add the presence validation.", "in_reply_to_id": 94916349}