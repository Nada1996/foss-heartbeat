{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/93867137", "pull_request_review_id": 14400716, "id": 93867137, "diff_hunk": "@@ -23,6 +28,26 @@\n     end\n   end\n \n+  describe 'chronology' do\n+    subject { FactoryGirl.build(:conference) }\n+\n+    context 'when the dates are in the right order' do\n+      it 'is valid' do\n+        subject.starts_on = '2016-11-20'\n+        subject.ends_on = '2016-11-21'\n+        expect(subject).to be_valid\n+      end\n+    end\n+\n+    context 'when its end date is before start date' do\n+      it 'is invalid' do\n+        subject.starts_on = '2016-07-15'\n+        subject.ends_on = '2016-07-07'\n+        expect(subject).not_to be_valid", "path": "spec/models/conference_spec.rb", "position": null, "original_position": 39, "commit_id": "18130ecd314dba27b4f3bc7a97b065841940a1c7", "original_commit_id": "cbcad40d924ffd67afe602db4e36c7d4efd7ab1b", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "I think it's `shoulda-matchers` that provides a better check: \r\n```ruby\r\nexpect(subject).to \r\n\r\n- have(1).error_on(:ends_on)\r\n\r\n```\r\n(or some such, I haven't checked the API). It's better because the model can be invalid for other reasons than the start/end date order.", "created_at": "2016-12-26T13:23:48Z", "updated_at": "2017-03-07T21:46:27Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/552#discussion_r93867137", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/552", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/93867137"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/552#discussion_r93867137"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/552"}}, "body_html": "<p>I think it's <code>shoulda-matchers</code> that provides a better check:</p>\n<div class=\"highlight highlight-source-ruby\"><pre>expect(subject).to \n\n<span class=\"pl-k\">-</span> have(<span class=\"pl-c1\">1</span>).error_on(<span class=\"pl-c1\">:ends_on</span>)\n</pre></div>\n<p>(or some such, I haven't checked the API). It's better because the model can be invalid for other reasons than the start/end date order.</p>", "body_text": "I think it's shoulda-matchers that provides a better check:\nexpect(subject).to \n\n- have(1).error_on(:ends_on)\n\n(or some such, I haven't checked the API). It's better because the model can be invalid for other reasons than the start/end date order."}