{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/94919453", "pull_request_review_id": 15457334, "id": 94919453, "diff_hunk": "@@ -15,4 +17,15 @@ def tickets_left\n     confirmed_attendances = attendances.select { |attendance| attendance.confirmed }\n     tickets.to_i - confirmed_attendances.size\n   end\n+\n+  private\n+\n+    def date_interval\n+      if [starts_on, ends_on].count(&:nil?) == 1\n+        errors.add(:base, 'Set both dates or none')\n+      elsif starts_on.to_s > ends_on.to_s", "path": "app/models/conference.rb", "position": 23, "original_position": 20, "commit_id": "18130ecd314dba27b4f3bc7a97b065841940a1c7", "original_commit_id": "55a2da53cbb8e1fabc4fce59f31030245112a7a5", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "`starts_on` should be less than `ends_on`, right?\r\n\r\nComparing strings lexically is a hack that sure makes it work. But in that case, it should also work if either is `nil`, no?\r\n\r\nWhat about this:\r\n```ruby\r\nunless [starts_on, ends_on].all?(:present?) && (starts_on < ends_on)\r\n  errors.add(:ends_on, 'must be later than start date')\r\nend\r\n```", "created_at": "2017-01-06T09:25:21Z", "updated_at": "2017-01-09T19:31:34Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/552#discussion_r94919453", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/552", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/94919453"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/552#discussion_r94919453"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/552"}}, "body_html": "<p><code>starts_on</code> should be less than <code>ends_on</code>, right?</p>\n<p>Comparing strings lexically is a hack that sure makes it work. But in that case, it should also work if either is <code>nil</code>, no?</p>\n<p>What about this:</p>\n<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-k\">unless</span> [starts_on, ends_on].all?(<span class=\"pl-c1\">:present?</span>) <span class=\"pl-k\">&amp;&amp;</span> (starts_on <span class=\"pl-k\">&lt;</span> ends_on)\n  errors.add(<span class=\"pl-c1\">:ends_on</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>must be later than start date<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-k\">end</span></pre></div>", "body_text": "starts_on should be less than ends_on, right?\nComparing strings lexically is a hack that sure makes it work. But in that case, it should also work if either is nil, no?\nWhat about this:\nunless [starts_on, ends_on].all?(:present?) && (starts_on < ends_on)\n  errors.add(:ends_on, 'must be later than start date')\nend"}