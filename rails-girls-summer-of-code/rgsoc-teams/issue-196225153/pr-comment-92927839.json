{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/92927839", "pull_request_review_id": 13452011, "id": 92927839, "diff_hunk": "@@ -1,8 +1,17 @@\n class Season < ActiveRecord::Base\n+  include SeasonPhaseSwitcher\n+\n   validates :name, presence: true, uniqueness: true\n \n   before_validation :set_application_dates\n \n+  SUMMER_OPEN   = '7, 1'", "path": "app/models/season.rb", "position": null, "original_position": 8, "commit_id": "5e0abc405753d0d2d81e8f4c8ad434cee9f681c4", "original_commit_id": "619b1993e91670f349a8a119d33cac01da0242b3", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "Pulling the default dates into a constant is a very good thing! :+1: \r\n\r\nI don't believe you can call `Time.utc` with a string parameter (see line 30). You probably want to use an array with 2 integers instead. But even then you'll have to splat the argument call like this:\r\n\r\n```ruby\r\nTime.utc(year, *SUMMER_OPEN) # 1 jul\r\n```\r\n\r\nA comment on what the values for the constants mean (= month, day) would be good for new devs or future versions of ourselves.\r\n\r\nA different approach could be assigning Procs or Lambdas to the constants but that may get a little too verbose.", "created_at": "2016-12-17T19:49:36Z", "updated_at": "2016-12-19T14:57:58Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/572#discussion_r92927839", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/572", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/92927839"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/572#discussion_r92927839"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/572"}}, "body_html": "<p>Pulling the default dates into a constant is a very good thing! <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>\n<p>I don't believe you can call <code>Time.utc</code> with a string parameter (see line 30). You probably want to use an array with 2 integers instead. But even then you'll have to splat the argument call like this:</p>\n<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-c1\">Time</span>.utc(year, <span class=\"pl-k\">*</span><span class=\"pl-c1\">SUMMER_OPEN</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> 1 jul</span></pre></div>\n<p>A comment on what the values for the constants mean (= month, day) would be good for new devs or future versions of ourselves.</p>\n<p>A different approach could be assigning Procs or Lambdas to the constants but that may get a little too verbose.</p>", "body_text": "Pulling the default dates into a constant is a very good thing! \ud83d\udc4d\nI don't believe you can call Time.utc with a string parameter (see line 30). You probably want to use an array with 2 integers instead. But even then you'll have to splat the argument call like this:\nTime.utc(year, *SUMMER_OPEN) # 1 jul\nA comment on what the values for the constants mean (= month, day) would be good for new devs or future versions of ourselves.\nA different approach could be assigning Procs or Lambdas to the constants but that may get a little too verbose."}