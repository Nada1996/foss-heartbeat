{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/92927966", "pull_request_review_id": 13452011, "id": 92927966, "diff_hunk": "@@ -0,0 +1,50 @@\n+module SeasonPhaseSwitcher", "path": "app/models/concerns/season_phase_switcher.rb", "position": null, "original_position": 1, "commit_id": "5e0abc405753d0d2d81e8f4c8ad434cee9f681c4", "original_commit_id": "619b1993e91670f349a8a119d33cac01da0242b3", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "I would make this a class. Extracting instance methods into a module which is only used by that one class gains little in terms of true separation. On the contrary: it adds cognitive load since the functionality is not stated explicitly anymore. \r\n\r\nHow about a class nested in the `Season` namespace?\r\n```ruby\r\n# app/models/season/phase_switcher.rb\r\nclass Season::PhaseSwitcher\r\n  # \u2026\r\nend\r\n```\r\n\r\nThe class can operate on `Season.current` directly. ", "created_at": "2016-12-17T19:57:15Z", "updated_at": "2016-12-19T14:57:58Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/572#discussion_r92927966", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/572", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/92927966"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/572#discussion_r92927966"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/572"}}, "body_html": "<p>I would make this a class. Extracting instance methods into a module which is only used by that one class gains little in terms of true separation. On the contrary: it adds cognitive load since the functionality is not stated explicitly anymore.</p>\n<p>How about a class nested in the <code>Season</code> namespace?</p>\n<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> app/models/season/phase_switcher.rb</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">Season::PhaseSwitcher</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> \u2026</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p>The class can operate on <code>Season.current</code> directly.</p>", "body_text": "I would make this a class. Extracting instance methods into a module which is only used by that one class gains little in terms of true separation. On the contrary: it adds cognitive load since the functionality is not stated explicitly anymore.\nHow about a class nested in the Season namespace?\n# app/models/season/phase_switcher.rb\nclass Season::PhaseSwitcher\n  # \u2026\nend\nThe class can operate on Season.current directly."}