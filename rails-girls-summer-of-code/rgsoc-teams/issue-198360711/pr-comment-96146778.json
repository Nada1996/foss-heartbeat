{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/96146778", "pull_request_review_id": 16722376, "id": 96146778, "diff_hunk": "@@ -5,9 +5,7 @@ def self.season\n   end\n \n   def self.destined(phase)\n-    unless phase.to_sym.in?(whitelisted_phases)\n-      raise ArgumentError\n-    else\n+    if phase.to_sym.in?(whitelisted_phases)", "path": "app/models/season/phase_switcher.rb", "position": null, "original_position": 7, "commit_id": "4c120f41f14b541cf49d9fc05bb70c5382c8ba91", "original_commit_id": "7ca1ce6c356cca23dcbd64920598f5ab76c3a6b8", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "I just came to realize: `phase` is user input from the web. In older Ruby versions, converting arbitrary user input to symbols using `String#to_sym` could be exploited as Denial of Service attacks (and in some cases even privilege escalation\u00a0\u2026 if memory serves?). I don't know if that is still the case now that symbols are garbage collected, but I would suggest to switch to (frozen) strings.\r\n\r\nThat is: you can add the Ruby 2.3 frozen string literal magic comment (check the MRI release notes), make `whitelisted_phases` a list of strings instead of symbols and skip the symbol conversion in this line alltogether.", "created_at": "2017-01-15T20:21:58Z", "updated_at": "2017-05-14T21:21:53Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/585#discussion_r96146778", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/585", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/96146778"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/585#discussion_r96146778"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/585"}}, "body_html": "<p>I just came to realize: <code>phase</code> is user input from the web. In older Ruby versions, converting arbitrary user input to symbols using <code>String#to_sym</code> could be exploited as Denial of Service attacks (and in some cases even privilege escalation\u00a0\u2026 if memory serves?). I don't know if that is still the case now that symbols are garbage collected, but I would suggest to switch to (frozen) strings.</p>\n<p>That is: you can add the Ruby 2.3 frozen string literal magic comment (check the MRI release notes), make <code>whitelisted_phases</code> a list of strings instead of symbols and skip the symbol conversion in this line alltogether.</p>", "body_text": "I just came to realize: phase is user input from the web. In older Ruby versions, converting arbitrary user input to symbols using String#to_sym could be exploited as Denial of Service attacks (and in some cases even privilege escalation\u00a0\u2026 if memory serves?). I don't know if that is still the case now that symbols are garbage collected, but I would suggest to switch to (frozen) strings.\nThat is: you can add the Ruby 2.3 frozen string literal magic comment (check the MRI release notes), make whitelisted_phases a list of strings instead of symbols and skip the symbol conversion in this line alltogether."}