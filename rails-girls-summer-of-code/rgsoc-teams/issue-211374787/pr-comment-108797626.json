{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/108797626", "pull_request_review_id": 29853952, "id": 108797626, "diff_hunk": "@@ -25,6 +25,107 @@\n         it { expect(ability).not_to be_able_to(:show, other_user) }\n       end\n \n+      describe 'who is allowed to see email address in user profile' do\n+\n+        # email address is hidden: admin, user's supervisor in current season (confirmed)\n+        # email address is not hidden: admin, confirmed user, user him/herself\n+\n+        let(:other_user) { FactoryGirl.create(:user) }\n+\n+        context 'when email address is hidden' do\n+          context 'when an admin' do\n+            before do\n+              allow(user).to receive(:admin?).and_return(true)\n+              allow(ability).to receive(:supervises?).with(other_user, user).and_return(false)\n+            end\n+            it 'allows to see hidden email address' do\n+              other_user.hide_email = true\n+              expect(ability).to be_able_to(:read_email, other_user)\n+            end\n+          end\n+\n+          context 'when user\\'s supervisor in current season (confirmed)' do\n+            before do\n+              allow(user).to receive(:admin?).and_return(false)\n+              allow(ability).to receive(:supervises?).with(other_user, user).and_return(true)\n+              allow(user).to receive(:confirmed?).and_return(true)\n+            end\n+            it 'allows to see hidden email address' do\n+              other_user.hide_email = true\n+              expect(ability).to be_able_to(:read_email, other_user)\n+            end\n+          end\n+        end\n+\n+        context 'when email address is not hidden' do\n+          context 'when an admin' do\n+            before do\n+              allow(user).to receive(:admin?).and_return(true)\n+              allow(user).to receive(:confirmed?).and_return(false)\n+            end\n+            it 'allows to see not hidden email address' do\n+              other_user.hide_email = false\n+              expect(ability).to be_able_to(:read_email, other_user)\n+            end\n+          end\n+\n+          context 'when a confirmed user' do\n+            before do\n+              allow(user).to receive(:admin?).and_return(false)\n+              allow(user).to receive(:confirmed?).and_return(true)\n+            end\n+            it 'allows to see not hidden email address' do\n+              other_user.hide_email = false\n+              expect(ability).to be_able_to(:read_email, other_user)\n+            end\n+          end\n+\n+          context 'when the user him/herself' do\n+            it 'allows to see not hidden email address' do\n+              user.hide_email = false\n+              expect(ability).to be_able_to(:read_email, user)\n+            end\n+          end\n+        end\n+\n+      end\n+\n+      describe 'who is disallowed to see email address in user profile' do\n+\n+        # email address is hidden: not admin, not user's supervisor in current season\n+        # email address is not hidden: not admin, not confirmed user, not user him/herself\n+\n+        let(:other_user) { FactoryGirl.create(:user) }\n+\n+        context 'when email address is hidden' do\n+          context 'when not an admin or user\\'s supervisor in current season' do\n+            before do\n+              allow(user).to receive(:admin?).and_return(false)\n+              allow(ability).to receive(:supervises?).with(other_user, user).and_return(false)\n+            end\n+            it 'disallows to see hidden email address' do\n+              other_user.hide_email = true\n+              expect(ability).not_to be_able_to(:read_email, other_user)\n+            end\n+          end\n+        end\n+\n+        context 'when email address is not hidden' do\n+          context 'when not an admin or confirmed user or user him/herself' do\n+            before do\n+              allow(user).to receive(:admin?).and_return(false)\n+              allow(user).to receive(:confirmed?).and_return(false)\n+            end\n+            it 'disallows to see not hidden email address' do\n+              other_user.hide_email = false\n+              expect(ability).not_to be_able_to(:read_email, other_user)\n+            end\n+          end\n+        end\n+\n+      end\n+\n+", "path": "spec/models/ability_spec.rb", "position": 105, "original_position": 104, "commit_id": "12f169affab5fb4f13265d5ced1d3b569c35529c", "original_commit_id": "8288986220ed63c8eb96b90ced1002fa15cca957", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "(additional new line)", "created_at": "2017-03-29T21:58:18Z", "updated_at": "2017-04-04T20:33:49Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/684#discussion_r108797626", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/684", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/108797626"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/684#discussion_r108797626"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/684"}}, "body_html": "<p>(additional new line)</p>", "body_text": "(additional new line)"}