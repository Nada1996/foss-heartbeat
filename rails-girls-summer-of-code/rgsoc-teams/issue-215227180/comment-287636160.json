{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/287636160", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/699#issuecomment-287636160", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/699", "id": 287636160, "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-19T18:23:10Z", "updated_at": "2017-03-19T18:23:10Z", "author_association": "MEMBER", "body_html": "<p>So I added the missing things to this PR as specified by <a href=\"https://github.com/carpodaster\" class=\"user-mention\">@carpodaster</a> on Slack:</p>\n<ul>\n<li>adapt / add tests for new structure now <code>fav</code> and <code>sign_off</code> are handled</li>\n<li>add a single-run task to <em>\"fix\"</em> the existing data</li>\n</ul>\n<p>The data is <em>\"fixed\"</em> in a sense that <strong>sign-offs are migrated</strong> and <strong>favs are simply dropped</strong>. However, this does not really mean that the state of <code>sign_offs</code> is perfectly fine: before, a <code>sign_off</code> was per <code>application</code>, now it is per <code>project</code> with in the application`.</p>\n<p>As far as I can reconstruct this mentally, this would mean, if previously <strong>two</strong> mentors signed an application - each for their project - only on of the <code>sign-offs</code> (the time-wise most recent one) is kept. The other one cannot be reconstructed from the data we have.</p>\n<p>There was also a bug-report for mentors' comments / notes - but that is already fixed an no data has to be migrated.</p>\n<p>Since <a href=\"https://github.com/carpodaster\" class=\"user-mention\">@carpodaster</a> is on an island <g-emoji class=\"g-emoji\" alias=\"desert_island\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f3dd.png\">\ud83c\udfdd</g-emoji>, maybe <a href=\"https://github.com/bitboxer\" class=\"user-mention\">@bitboxer</a>, <a href=\"https://github.com/pgaspar\" class=\"user-mention\">@pgaspar</a> or <a href=\"https://github.com/ramonh\" class=\"user-mention\">@ramonh</a> could have a look this codewise?</p>", "body_text": "So I added the missing things to this PR as specified by @carpodaster on Slack:\n\nadapt / add tests for new structure now fav and sign_off are handled\nadd a single-run task to \"fix\" the existing data\n\nThe data is \"fixed\" in a sense that sign-offs are migrated and favs are simply dropped. However, this does not really mean that the state of sign_offs is perfectly fine: before, a sign_off was per application, now it is per project with in the application`.\nAs far as I can reconstruct this mentally, this would mean, if previously two mentors signed an application - each for their project - only on of the sign-offs (the time-wise most recent one) is kept. The other one cannot be reconstructed from the data we have.\nThere was also a bug-report for mentors' comments / notes - but that is already fixed an no data has to be migrated.\nSince @carpodaster is on an island \ud83c\udfdd, maybe @bitboxer, @pgaspar or @ramonh could have a look this codewise?", "body": "So I added the missing things to this PR as specified by @carpodaster on Slack:\r\n* adapt / add tests for new structure now `fav` and `sign_off` are handled\r\n* add a single-run task to *\"fix\"* the existing data\r\n\r\nThe data is *\"fixed\"* in a sense that **sign-offs are migrated** and **favs are simply dropped**. However, this does not really mean that the state of `sign_offs` is perfectly fine: before, a `sign_off` was per `application`, now it is per `project` with in the application`.\r\n\r\nAs far as I can reconstruct this mentally, this would mean, if previously **two** mentors signed an application - each for their project - only on of the `sign-offs` (the time-wise most recent one) is kept. The other one cannot be reconstructed from the data we have.\r\n\r\nThere was also a bug-report for mentors' comments / notes - but that is already fixed an no data has to be migrated.\r\n\r\nSince @carpodaster is on an island \ud83c\udfdd, maybe @bitboxer, @pgaspar or @ramonh could have a look this codewise?"}