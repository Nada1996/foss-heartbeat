{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/106825118", "pull_request_review_id": 27764838, "id": 106825118, "diff_hunk": "@@ -207,26 +208,181 @@\n     end\n   end\n \n-  describe '#to_param' do\n-    it 'returns the underlying active record id' do\n-      subject.id = 4711\n-      expect(subject.to_param).to eql '4711'\n+  describe '#mentor_fav!' do\n+    let(:application) { create(:application) }\n+\n+    subject { m_application.mentor_fav! }\n+\n+    shared_examples :a_mentor_fav do |choice|\n+      let(:other) { (choice % 2) + 1 }\n+\n+      it 'adds a fav for the chosen project to the persisted application record' do\n+        expect { subject }\n+          .to change { application.reload.application_data[\"mentor_fav_project#{choice}\"] }\n+          .from(nil).to('true')\n+      end\n+\n+      it 'does not change the mentor_fav for the other project' do\n+        expect { subject }\n+          .not_to change { application.reload.application_data[\"mentor_fav_project#{other}\"] }\n+      end\n+    end\n+\n+    context 'when project 1st choice' do\n+      let(:m_application) { described_class.new(id: application.id, choice: 1) }\n+      include_examples :a_mentor_fav, 1\n+    end\n+\n+    context 'when project 2nd choice' do\n+      let(:m_application) { described_class.new(id: application.id, choice: 2) }\n+      include_examples :a_mentor_fav, 2\n+    end\n+  end\n+\n+  describe '#revoke_mentor_fav!' do\n+    let(:application) { create(:application) }\n+\n+    subject { m_application.revoke_mentor_fav! }\n+\n+    shared_examples :a_mentor_fav do |choice|\n+      let(:other) { (choice % 2) + 1 }\n+\n+      it 'sets the fav for the chosen project to false' do\n+        expect { subject }\n+          .to change { application.reload.application_data[\"mentor_fav_project#{choice}\"] }\n+          .from(nil).to('false')\n+      end\n+\n+      it 'does not change the mentor_fav for the other project' do\n+        expect { subject }\n+          .not_to change { application.reload.application_data[\"mentor_fav_project#{other}\"] }\n+      end\n+    end\n+\n+    context 'when project 1st choice' do\n+      let(:m_application) { described_class.new(id: application.id, choice: 1) }\n+      include_examples :a_mentor_fav, 1\n+    end\n+\n+    context 'when project 2nd choice' do\n+      let(:m_application) { described_class.new(id: application.id, choice: 2) }\n+      include_examples :a_mentor_fav, 2\n+    end\n+  end\n+\n+  describe '#sign_off!' do\n+    let(:application) { create(:application) }\n+    let(:mentor)      { create(:mentor)      }\n+\n+    def keys_for(choice)\n+      [\"signed_off_at_project#{choice}\", \"signed_off_by_project#{choice}\"]\n+    end\n+\n+    subject { m_application.sign_off!(as: mentor) }\n+\n+    shared_examples :a_mentor_sign_off do |choice|\n+      let(:other) { (choice % 2) + 1 }\n+      let(:now)   { Time.now.utc.to_s }\n+\n+      before { Timecop.freeze(now) }\n+      after { Timecop.return       }\n+\n+      it 'add the signoff time and user id to the application' do\n+        expect { subject }\n+          .to change { application.reload.application_data.values_at(*keys_for(choice)) }\n+          .from([nil, nil])\n+          .to contain_exactly(now, mentor.id.to_s)\n+      end\n+\n+      it 'does not change the signoff for the other project' do\n+        expect { subject }\n+          .not_to change { application.reload.application_data.values_at(*keys_for(other)) }\n+      end\n+    end\n+\n+    context 'when project 1st choice' do\n+      let(:m_application) { described_class.new(id: application.id, choice: 1) }\n+      include_examples :a_mentor_sign_off, 1\n+    end\n+\n+    context 'when project 2nd choice' do\n+      let(:m_application) { described_class.new(id: application.id, choice: 2) }\n+      include_examples :a_mentor_sign_off, 2\n+    end\n+  end\n+\n+  describe '#revoke_sign_off!' do\n+    let(:application) { create(:application, application_data: data) }\n+    let(:mentor)      { create(:mentor)      }\n+    let(:data) do\n+      {\n+        signed_off_at_project1: Time.now.utc.to_s,\n+        signed_off_by_project1: mentor.id.to_s,\n+        signed_off_at_project2: Time.now.utc.to_s,\n+        signed_off_by_project2: '99'\n+      }\n+    end\n+\n+    def keys_for(choice)\n+      [\"signed_off_at_project#{choice}\", \"signed_off_by_project#{choice}\"]\n+    end\n+\n+    subject { m_application.revoke_sign_off! }\n+\n+    shared_examples :a_mentor_sign_off do |choice|\n+      let(:other) { (choice % 2) + 1 }\n+\n+      it 'sets the signoff time and user id to nil' do\n+        expect { subject }\n+          .to change { application.reload.application_data.values_at(*keys_for(choice)) }\n+          .to([nil, nil])\n+      end\n+\n+      it 'does not change the signoff for the other project' do\n+        expect { subject }\n+          .not_to change { application.reload.application_data.values_at(*keys_for(other)) }\n+      end\n+    end\n+\n+    context 'when project 1st choice' do\n+      let(:m_application) { described_class.new(id: application.id, choice: 1) }\n+      include_examples :a_mentor_sign_off, 1\n+    end\n+\n+    context 'when project 2nd choice' do\n+      let(:m_application) { described_class.new(id: application.id, choice: 2) }\n+      include_examples :a_mentor_sign_off, 2\n     end\n   end\n \n   describe '#signed_off?' do\n-    let!(:application) { create(:application, :in_current_season, :for_project, project1: project1) }\n-    let!(:project1)    { create(:project, :in_current_season) }\n+    it 'returns true if signed_off_at was set' do\n+      application = described_class.new(signed_off_at: Time.now.utc.to_s)\n+      expect(application).to be_signed_off\n+    end\n \n-    subject { described_class.new id: application.id }\n+    it 'returns false if signed_off_at was not set' do\n+      application = described_class.new\n+      expect(subject).not_to be_signed_off\n+    end\n+  end\n+\n+  describe '#mentor_fav?' do\n+    it 'returns true if mentor_fav was set' do\n+      application = described_class.new(mentor_fav: 'true')\n+      expect(application).to be_mentor_fav\n+    end\n \n-    context 'with a signed-off application database record' do\n-      before { application.sign_off! }\n-      it { is_expected.to be_signed_off }\n+    it 'returns false if signed_off_at was not set' do", "path": "spec/models/mentor/application_spec.rb", "position": null, "original_position": 239, "commit_id": "fee3ed2fe5604f2e8490d6fce6056956db44c670", "original_commit_id": "7d6cb352fb54bc1241b2a1ef788d9bba840f10ee", "user": {"login": "pgaspar", "id": 31735, "avatar_url": "https://avatars1.githubusercontent.com/u/31735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgaspar", "html_url": "https://github.com/pgaspar", "followers_url": "https://api.github.com/users/pgaspar/followers", "following_url": "https://api.github.com/users/pgaspar/following{/other_user}", "gists_url": "https://api.github.com/users/pgaspar/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgaspar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgaspar/subscriptions", "organizations_url": "https://api.github.com/users/pgaspar/orgs", "repos_url": "https://api.github.com/users/pgaspar/repos", "events_url": "https://api.github.com/users/pgaspar/events{/privacy}", "received_events_url": "https://api.github.com/users/pgaspar/received_events", "type": "User", "site_admin": false}, "body": "I believe `signed_off_at` should be `mentor_fav` here.", "created_at": "2017-03-20T00:57:47Z", "updated_at": "2017-03-20T14:39:12Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/699#discussion_r106825118", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/699", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/106825118"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/699#discussion_r106825118"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/699"}}, "body_html": "<p>I believe <code>signed_off_at</code> should be <code>mentor_fav</code> here.</p>", "body_text": "I believe signed_off_at should be mentor_fav here."}