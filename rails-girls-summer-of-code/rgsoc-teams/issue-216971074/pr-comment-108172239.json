{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/108172239", "pull_request_review_id": 29186855, "id": 108172239, "diff_hunk": "@@ -0,0 +1,33 @@\n+module Selection\n+  module Service\n+    class ApplicationDistribution\n+      def initialize(application:)\n+        @application = application\n+      end\n+\n+      def distribute\n+        reviewers.each do |reviewer|\n+          Todo.create!(user: reviewer, application: @application)\n+        end\n+      end\n+\n+      private\n+\n+      def assigned_reviewers\n+        Todo.where(application_id: @application.id).collect(&:user)\n+      end\n+\n+      def reviewers\n+        all_reviewers = User.with_role(\"reviewer\").to_a\n+\n+        # remove already assigned reviewers\n+        possible_reviewers = all_reviewers - assigned_reviewers\n+\n+        # sort by assigned applications to distribute the work evenly\n+        sorted_reviewers = possible_reviewers.shuffle.sort_by { |u| u.todos.count }\n+", "path": "lib/selection/service/application_distribution.rb", "position": 28, "original_position": 28, "commit_id": "110c9820bf2f6051a783577d4d3564159f3e1beb", "original_commit_id": "f843bddee28c7ca22dd5002c2242fbf70b76bcea", "user": {"login": "beanieboi", "id": 29251, "avatar_url": "https://avatars1.githubusercontent.com/u/29251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beanieboi", "html_url": "https://github.com/beanieboi", "followers_url": "https://api.github.com/users/beanieboi/followers", "following_url": "https://api.github.com/users/beanieboi/following{/other_user}", "gists_url": "https://api.github.com/users/beanieboi/gists{/gist_id}", "starred_url": "https://api.github.com/users/beanieboi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beanieboi/subscriptions", "organizations_url": "https://api.github.com/users/beanieboi/orgs", "repos_url": "https://api.github.com/users/beanieboi/repos", "events_url": "https://api.github.com/users/beanieboi/events{/privacy}", "received_events_url": "https://api.github.com/users/beanieboi/received_events", "type": "User", "site_admin": false}, "body": "@F3PiX good question. since we only give sort the todos count, it does not sort the users by itself.\r\n\r\nI did a quick example to show it a little better. lets represent the users as a little hash with user id and the already assigned applications.\r\n\r\n```\r\nusers = [\r\n  { user_id: 1, assigned_applications: 0 },\r\n  { user_id: 2, assigned_applications: 2 },\r\n  { user_id: 3, assigned_applications: 0 },\r\n  { user_id: 4, assigned_applications: 0 },\r\n  { user_id: 5, assigned_applications: 1 },\r\n  { user_id: 6, assigned_applications: 0 },\r\n  { user_id: 7, assigned_applications: 1 },\r\n  { user_id: 8, assigned_applications: 1 },\r\n  { user_id: 9, assigned_applications: 2 },\r\n  { user_id: 10, assigned_applications: 0 },\r\n  { user_id: 11, assigned_applications: 1 },\r\n  { user_id: 12, assigned_applications: 2 },\r\n  { user_id: 13, assigned_applications: 3 },\r\n  { user_id: 14, assigned_applications: 5 },\r\n  { user_id: 15, assigned_applications: 0 }\r\n]\r\n```\r\n\r\nafter shuffling it looks like this\r\n\r\n```\r\nusers.shuffle!\r\n\r\n[ {:user_id=>10, :assigned_applications=>0},\r\n  {:user_id=>6, :assigned_applications=>0},\r\n  {:user_id=>1, :assigned_applications=>0},\r\n  {:user_id=>12, :assigned_applications=>2},\r\n  {:user_id=>14, :assigned_applications=>5},\r\n  {:user_id=>8, :assigned_applications=>1},\r\n  {:user_id=>13, :assigned_applications=>3},\r\n  {:user_id=>2, :assigned_applications=>2},\r\n  {:user_id=>5, :assigned_applications=>1},\r\n  {:user_id=>4, :assigned_applications=>0},\r\n  {:user_id=>15, :assigned_applications=>0},\r\n  {:user_id=>11, :assigned_applications=>1},\r\n  {:user_id=>3, :assigned_applications=>0},\r\n  {:user_id=>9, :assigned_applications=>2},\r\n  {:user_id=>7, :assigned_applications=>1}\r\n]\r\n```\r\n\r\nand after sorting\r\n```\r\nusers.sort_by { |u| u[:assigned_applications] }\r\n\r\n\r\n[ {:user_id=>15, :assigned_applications=>0},\r\n  {:user_id=>4, :assigned_applications=>0},\r\n  {:user_id=>1, :assigned_applications=>0},\r\n  {:user_id=>10, :assigned_applications=>0},\r\n  {:user_id=>3, :assigned_applications=>0},\r\n  {:user_id=>6, :assigned_applications=>0},\r\n  {:user_id=>7, :assigned_applications=>1},\r\n  {:user_id=>8, :assigned_applications=>1},\r\n  {:user_id=>5, :assigned_applications=>1},\r\n  {:user_id=>11, :assigned_applications=>1},\r\n  {:user_id=>12, :assigned_applications=>2},\r\n  {:user_id=>9, :assigned_applications=>2},\r\n  {:user_id=>2, :assigned_applications=>2},\r\n  {:user_id=>13, :assigned_applications=>3},\r\n  {:user_id=>14, :assigned_applications=>5}\r\n]\r\n```\r\n\r\nsince we want to evenly distribute we somehow need to pick the users with less assigned applications first.", "created_at": "2017-03-27T13:47:40Z", "updated_at": "2017-03-27T20:32:38Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/710#discussion_r108172239", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/710", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/108172239"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/710#discussion_r108172239"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/710"}}, "body_html": "<p><a href=\"https://github.com/f3pix\" class=\"user-mention\">@F3PiX</a> good question. since we only give sort the todos count, it does not sort the users by itself.</p>\n<p>I did a quick example to show it a little better. lets represent the users as a little hash with user id and the already assigned applications.</p>\n<pre><code>users = [\n  { user_id: 1, assigned_applications: 0 },\n  { user_id: 2, assigned_applications: 2 },\n  { user_id: 3, assigned_applications: 0 },\n  { user_id: 4, assigned_applications: 0 },\n  { user_id: 5, assigned_applications: 1 },\n  { user_id: 6, assigned_applications: 0 },\n  { user_id: 7, assigned_applications: 1 },\n  { user_id: 8, assigned_applications: 1 },\n  { user_id: 9, assigned_applications: 2 },\n  { user_id: 10, assigned_applications: 0 },\n  { user_id: 11, assigned_applications: 1 },\n  { user_id: 12, assigned_applications: 2 },\n  { user_id: 13, assigned_applications: 3 },\n  { user_id: 14, assigned_applications: 5 },\n  { user_id: 15, assigned_applications: 0 }\n]\n</code></pre>\n<p>after shuffling it looks like this</p>\n<pre><code>users.shuffle!\n\n[ {:user_id=&gt;10, :assigned_applications=&gt;0},\n  {:user_id=&gt;6, :assigned_applications=&gt;0},\n  {:user_id=&gt;1, :assigned_applications=&gt;0},\n  {:user_id=&gt;12, :assigned_applications=&gt;2},\n  {:user_id=&gt;14, :assigned_applications=&gt;5},\n  {:user_id=&gt;8, :assigned_applications=&gt;1},\n  {:user_id=&gt;13, :assigned_applications=&gt;3},\n  {:user_id=&gt;2, :assigned_applications=&gt;2},\n  {:user_id=&gt;5, :assigned_applications=&gt;1},\n  {:user_id=&gt;4, :assigned_applications=&gt;0},\n  {:user_id=&gt;15, :assigned_applications=&gt;0},\n  {:user_id=&gt;11, :assigned_applications=&gt;1},\n  {:user_id=&gt;3, :assigned_applications=&gt;0},\n  {:user_id=&gt;9, :assigned_applications=&gt;2},\n  {:user_id=&gt;7, :assigned_applications=&gt;1}\n]\n</code></pre>\n<p>and after sorting</p>\n<pre><code>users.sort_by { |u| u[:assigned_applications] }\n\n\n[ {:user_id=&gt;15, :assigned_applications=&gt;0},\n  {:user_id=&gt;4, :assigned_applications=&gt;0},\n  {:user_id=&gt;1, :assigned_applications=&gt;0},\n  {:user_id=&gt;10, :assigned_applications=&gt;0},\n  {:user_id=&gt;3, :assigned_applications=&gt;0},\n  {:user_id=&gt;6, :assigned_applications=&gt;0},\n  {:user_id=&gt;7, :assigned_applications=&gt;1},\n  {:user_id=&gt;8, :assigned_applications=&gt;1},\n  {:user_id=&gt;5, :assigned_applications=&gt;1},\n  {:user_id=&gt;11, :assigned_applications=&gt;1},\n  {:user_id=&gt;12, :assigned_applications=&gt;2},\n  {:user_id=&gt;9, :assigned_applications=&gt;2},\n  {:user_id=&gt;2, :assigned_applications=&gt;2},\n  {:user_id=&gt;13, :assigned_applications=&gt;3},\n  {:user_id=&gt;14, :assigned_applications=&gt;5}\n]\n</code></pre>\n<p>since we want to evenly distribute we somehow need to pick the users with less assigned applications first.</p>", "body_text": "@F3PiX good question. since we only give sort the todos count, it does not sort the users by itself.\nI did a quick example to show it a little better. lets represent the users as a little hash with user id and the already assigned applications.\nusers = [\n  { user_id: 1, assigned_applications: 0 },\n  { user_id: 2, assigned_applications: 2 },\n  { user_id: 3, assigned_applications: 0 },\n  { user_id: 4, assigned_applications: 0 },\n  { user_id: 5, assigned_applications: 1 },\n  { user_id: 6, assigned_applications: 0 },\n  { user_id: 7, assigned_applications: 1 },\n  { user_id: 8, assigned_applications: 1 },\n  { user_id: 9, assigned_applications: 2 },\n  { user_id: 10, assigned_applications: 0 },\n  { user_id: 11, assigned_applications: 1 },\n  { user_id: 12, assigned_applications: 2 },\n  { user_id: 13, assigned_applications: 3 },\n  { user_id: 14, assigned_applications: 5 },\n  { user_id: 15, assigned_applications: 0 }\n]\n\nafter shuffling it looks like this\nusers.shuffle!\n\n[ {:user_id=>10, :assigned_applications=>0},\n  {:user_id=>6, :assigned_applications=>0},\n  {:user_id=>1, :assigned_applications=>0},\n  {:user_id=>12, :assigned_applications=>2},\n  {:user_id=>14, :assigned_applications=>5},\n  {:user_id=>8, :assigned_applications=>1},\n  {:user_id=>13, :assigned_applications=>3},\n  {:user_id=>2, :assigned_applications=>2},\n  {:user_id=>5, :assigned_applications=>1},\n  {:user_id=>4, :assigned_applications=>0},\n  {:user_id=>15, :assigned_applications=>0},\n  {:user_id=>11, :assigned_applications=>1},\n  {:user_id=>3, :assigned_applications=>0},\n  {:user_id=>9, :assigned_applications=>2},\n  {:user_id=>7, :assigned_applications=>1}\n]\n\nand after sorting\nusers.sort_by { |u| u[:assigned_applications] }\n\n\n[ {:user_id=>15, :assigned_applications=>0},\n  {:user_id=>4, :assigned_applications=>0},\n  {:user_id=>1, :assigned_applications=>0},\n  {:user_id=>10, :assigned_applications=>0},\n  {:user_id=>3, :assigned_applications=>0},\n  {:user_id=>6, :assigned_applications=>0},\n  {:user_id=>7, :assigned_applications=>1},\n  {:user_id=>8, :assigned_applications=>1},\n  {:user_id=>5, :assigned_applications=>1},\n  {:user_id=>11, :assigned_applications=>1},\n  {:user_id=>12, :assigned_applications=>2},\n  {:user_id=>9, :assigned_applications=>2},\n  {:user_id=>2, :assigned_applications=>2},\n  {:user_id=>13, :assigned_applications=>3},\n  {:user_id=>14, :assigned_applications=>5}\n]\n\nsince we want to evenly distribute we somehow need to pick the users with less assigned applications first.", "in_reply_to_id": 108040599}