{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/318858187", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/711#issuecomment-318858187", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/711", "id": 318858187, "user": {"login": "F3PiX", "id": 6314687, "avatar_url": "https://avatars1.githubusercontent.com/u/6314687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F3PiX", "html_url": "https://github.com/F3PiX", "followers_url": "https://api.github.com/users/F3PiX/followers", "following_url": "https://api.github.com/users/F3PiX/following{/other_user}", "gists_url": "https://api.github.com/users/F3PiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/F3PiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F3PiX/subscriptions", "organizations_url": "https://api.github.com/users/F3PiX/orgs", "repos_url": "https://api.github.com/users/F3PiX/repos", "events_url": "https://api.github.com/users/F3PiX/events{/privacy}", "received_events_url": "https://api.github.com/users/F3PiX/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-29T20:46:06Z", "updated_at": "2017-07-29T20:51:27Z", "author_association": "MEMBER", "body_html": "<p>Apart from  all the cool things we can do with it...<br>\nThe solution on <a href=\"https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/807\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"246516078\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/807\">#807</a> works, given the user input is correct. If someone enters a city incorrectly, or one student calls their city \"Beijing\" and the second student \"Peking\", we can't catch that now. With geocoding we get one unique name.<br>\n(We do not need the geocoder gem for that, Max already introduced geocoding for the application forms, but the gem offers a lot of possibilities. )</p>", "body_text": "Apart from  all the cool things we can do with it...\nThe solution on #807 works, given the user input is correct. If someone enters a city incorrectly, or one student calls their city \"Beijing\" and the second student \"Peking\", we can't catch that now. With geocoding we get one unique name.\n(We do not need the geocoder gem for that, Max already introduced geocoding for the application forms, but the gem offers a lot of possibilities. )", "body": "Apart from  all the cool things we can do with it... \r\nThe solution on #807 works, given the user input is correct. If someone enters a city incorrectly, or one student calls their city \"Beijing\" and the second student \"Peking\", we can't catch that now. With geocoding we get one unique name.\r\n(We do not need the geocoder gem for that, Max already introduced geocoding for the application forms, but the gem offers a lot of possibilities. ) "}