{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/109158718", "pull_request_review_id": 30244405, "id": 109158718, "diff_hunk": "@@ -149,4 +136,12 @@ def sponsor_pick?\n       value.to_s != '0' ? flags.concat([flag.to_s]).uniq : flags.delete(flag.to_s)\n     end\n   end\n+\n+  def project1\n+    Project.find_by(id: application_data['project1_id'])", "path": "app/models/application.rb", "position": 49, "original_position": 49, "commit_id": "219543399a4026acd74183d82db2c71628ab348b", "original_commit_id": "b5d2b8c4c9974d492381902bf505fc7ba46f28c9", "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "body": "Ok, just to quickly clearify my understanding of DTOs. The way I usually use them, they are POROs taking KWARGS and then internally just delegate to the underlying objects. So they are basically just a wrapper around objects that are passed around in business-logic as this one pack which then can be easily stubbed in specs.\r\n\r\nSo they usually just have a few private `attr_reader` and some large lists of `def_delegators` \ud83d\ude09 , no *\"real\"* methods.\r\n\r\nBut yeah, curios of what you have in mind here.", "created_at": "2017-03-31T13:27:06Z", "updated_at": "2017-04-02T01:13:03Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/724#discussion_r109158718", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/724", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/109158718"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/724#discussion_r109158718"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/724"}}, "body_html": "<p>Ok, just to quickly clearify my understanding of DTOs. The way I usually use them, they are POROs taking KWARGS and then internally just delegate to the underlying objects. So they are basically just a wrapper around objects that are passed around in business-logic as this one pack which then can be easily stubbed in specs.</p>\n<p>So they usually just have a few private <code>attr_reader</code> and some large lists of <code>def_delegators</code> <g-emoji class=\"g-emoji\" alias=\"wink\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f609.png\">\ud83d\ude09</g-emoji> , no <em>\"real\"</em> methods.</p>\n<p>But yeah, curios of what you have in mind here.</p>", "body_text": "Ok, just to quickly clearify my understanding of DTOs. The way I usually use them, they are POROs taking KWARGS and then internally just delegate to the underlying objects. So they are basically just a wrapper around objects that are passed around in business-logic as this one pack which then can be easily stubbed in specs.\nSo they usually just have a few private attr_reader and some large lists of def_delegators \ud83d\ude09 , no \"real\" methods.\nBut yeah, curios of what you have in mind here.", "in_reply_to_id": 109084144}