{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/301902795", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/747#issuecomment-301902795", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/747", "id": 301902795, "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-16T20:18:13Z", "updated_at": "2017-05-16T20:18:13Z", "author_association": "MEMBER", "body_html": "<p>On refactoring vs. feature first: do as you wish <g-emoji class=\"g-emoji\" alias=\"v\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/270c.png\">\u270c\ufe0f</g-emoji><br>\nIt totally depends on the state of the code base and how easy it is for you to work with its current state. The \"classic\" approach is feature first, then refactoring. But of course, if that part of the codebase has not been touched in a while or whatever other reason one could find, it may of course also be way more efficient to do the refactoring first.</p>\n<p>Sometimes you even know upfront, that you cannot use any of the existing code - it makes of course sense to just throw it all away and implement your new way of doing things from scratch then.</p>\n<p><strong>TL;DR</strong> do however it suits your workflow to best archive what you want to.</p>", "body_text": "On refactoring vs. feature first: do as you wish \u270c\ufe0f\nIt totally depends on the state of the code base and how easy it is for you to work with its current state. The \"classic\" approach is feature first, then refactoring. But of course, if that part of the codebase has not been touched in a while or whatever other reason one could find, it may of course also be way more efficient to do the refactoring first.\nSometimes you even know upfront, that you cannot use any of the existing code - it makes of course sense to just throw it all away and implement your new way of doing things from scratch then.\nTL;DR do however it suits your workflow to best archive what you want to.", "body": "On refactoring vs. feature first: do as you wish \u270c\ufe0f \r\nIt totally depends on the state of the code base and how easy it is for you to work with its current state. The \"classic\" approach is feature first, then refactoring. But of course, if that part of the codebase has not been touched in a while or whatever other reason one could find, it may of course also be way more efficient to do the refactoring first.\r\n\r\nSometimes you even know upfront, that you cannot use any of the existing code - it makes of course sense to just throw it all away and implement your new way of doing things from scratch then.\r\n\r\n**TL;DR** do however it suits your workflow to best archive what you want to."}