{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/116867290", "pull_request_review_id": 38502378, "id": 116867290, "diff_hunk": "@@ -1,7 +1,9 @@\n FactoryGirl.define do\n   factory :conference do\n     name { [FFaker::CheesyLingo.title, 'Conf'].join ' ' }\n-    tickets 2\n+    starts_on { Time.utc(Date.today.year, 7, 7) }", "path": "spec/factories/conferences.rb", "position": 5, "original_position": 5, "commit_id": "feaebc7d62b276885c233762297245bcc6542673", "original_commit_id": "0bf907889b555355ad180c5d8a6a5be9f5b50281", "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "body": "I'd prefer to also use `FFaker` for the dates. As far as I can remember (I don't know this exact gem), there should also be the possibility for ranges, etc. And for making sure that `ends_on` is after `starts_on`, you can also reference `starts_on` when generating the value for `ends_on`.\r\n\r\nNot using `FFaker` would result in more or less always the same times throughout one run of the spec suite and therefore put us more away from \"real world\" I guess.", "created_at": "2017-05-16T21:50:44Z", "updated_at": "2017-05-19T14:23:45Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/747#discussion_r116867290", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/747", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/116867290"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/747#discussion_r116867290"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/747"}}, "body_html": "<p>I'd prefer to also use <code>FFaker</code> for the dates. As far as I can remember (I don't know this exact gem), there should also be the possibility for ranges, etc. And for making sure that <code>ends_on</code> is after <code>starts_on</code>, you can also reference <code>starts_on</code> when generating the value for <code>ends_on</code>.</p>\n<p>Not using <code>FFaker</code> would result in more or less always the same times throughout one run of the spec suite and therefore put us more away from \"real world\" I guess.</p>", "body_text": "I'd prefer to also use FFaker for the dates. As far as I can remember (I don't know this exact gem), there should also be the possibility for ranges, etc. And for making sure that ends_on is after starts_on, you can also reference starts_on when generating the value for ends_on.\nNot using FFaker would result in more or less always the same times throughout one run of the spec suite and therefore put us more away from \"real world\" I guess."}