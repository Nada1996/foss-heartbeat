{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/117115694", "pull_request_review_id": 38794640, "id": 117115694, "diff_hunk": "@@ -7,6 +7,22 @@\n   it { is_expected.to have_many(:attendees) }\n   it { is_expected.to validate_presence_of(:name) }\n   it { is_expected.to validate_presence_of(:round) }\n+  it { is_expected.to validate_presence_of(:starts_on) }\n+  it { is_expected.to validate_presence_of(:ends_on) }\n+\n+  describe 'it checks the chronological order of dates' do\n+    subject { FactoryGirl.build(:conference) }", "path": "spec/models/conference_spec.rb", "position": null, "original_position": 8, "commit_id": "feaebc7d62b276885c233762297245bcc6542673", "original_commit_id": "0bf907889b555355ad180c5d8a6a5be9f5b50281", "user": {"login": "F3PiX", "id": 6314687, "avatar_url": "https://avatars1.githubusercontent.com/u/6314687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F3PiX", "html_url": "https://github.com/F3PiX", "followers_url": "https://api.github.com/users/F3PiX/followers", "following_url": "https://api.github.com/users/F3PiX/following{/other_user}", "gists_url": "https://api.github.com/users/F3PiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/F3PiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F3PiX/subscriptions", "organizations_url": "https://api.github.com/users/F3PiX/orgs", "repos_url": "https://api.github.com/users/F3PiX/repos", "events_url": "https://api.github.com/users/F3PiX/events{/privacy}", "received_events_url": "https://api.github.com/users/F3PiX/received_events", "type": "User", "site_admin": false}, "body": ":thinking: It looks is doesn't after all. \r\nWithout `subject.valid?` `subject.errors[:ends_on]` is always empty. \r\nI can either add `subject.valid?`, or do \r\n`expect(subject).not_to be_valid` (and skip checking the error). Does it matter? \r\n\r\n\r\n", "created_at": "2017-05-17T21:34:39Z", "updated_at": "2017-05-19T14:23:45Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/747#discussion_r117115694", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/747", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/117115694"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/747#discussion_r117115694"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/747"}}, "body_html": "<p><g-emoji class=\"g-emoji\" alias=\"thinking\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f914.png\">\ud83e\udd14</g-emoji> It looks is doesn't after all.<br>\nWithout <code>subject.valid?</code> <code>subject.errors[:ends_on]</code> is always empty.<br>\nI can either add <code>subject.valid?</code>, or do<br>\n<code>expect(subject).not_to be_valid</code> (and skip checking the error). Does it matter?</p>", "body_text": "\ud83e\udd14 It looks is doesn't after all.\nWithout subject.valid? subject.errors[:ends_on] is always empty.\nI can either add subject.valid?, or do\nexpect(subject).not_to be_valid (and skip checking the error). Does it matter?", "in_reply_to_id": 116870181}