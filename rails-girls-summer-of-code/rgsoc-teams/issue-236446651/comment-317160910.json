{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/317160910", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/762#issuecomment-317160910", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/762", "id": 317160910, "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-22T06:45:30Z", "updated_at": "2017-07-22T06:45:30Z", "author_association": "OWNER", "body_html": "<p><a href=\"https://github.com/mkalininait\" class=\"user-mention\">@mkalininait</a> I agree. I thought the problem with Google's <code>,</code> CSV was that it doesn't quote the <code>,</code> in its field values. If it does, Ruby's <a href=\"http://ruby-doc.org/stdlib-2.4.1/libdoc/csv/rdoc/CSV.html#method-c-new\" rel=\"nofollow\">CSV lib</a> should handle this without problems: the <code>:quote_char</code> option is set to <code>\"</code> by default.</p>", "body_text": "@mkalininait I agree. I thought the problem with Google's , CSV was that it doesn't quote the , in its field values. If it does, Ruby's CSV lib should handle this without problems: the :quote_char option is set to \" by default.", "body": "@mkalininait I agree. I thought the problem with Google's `,` CSV was that it doesn't quote the `,` in its field values. If it does, Ruby's [CSV lib](http://ruby-doc.org/stdlib-2.4.1/libdoc/csv/rdoc/CSV.html#method-c-new) should handle this without problems: the `:quote_char` option is set to `\"` by default."}