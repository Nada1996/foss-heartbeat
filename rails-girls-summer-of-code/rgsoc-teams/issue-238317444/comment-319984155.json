{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/319984155", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/771#issuecomment-319984155", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/771", "id": 319984155, "user": {"login": "branquinhoaa", "id": 15239141, "avatar_url": "https://avatars0.githubusercontent.com/u/15239141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/branquinhoaa", "html_url": "https://github.com/branquinhoaa", "followers_url": "https://api.github.com/users/branquinhoaa/followers", "following_url": "https://api.github.com/users/branquinhoaa/following{/other_user}", "gists_url": "https://api.github.com/users/branquinhoaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/branquinhoaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/branquinhoaa/subscriptions", "organizations_url": "https://api.github.com/users/branquinhoaa/orgs", "repos_url": "https://api.github.com/users/branquinhoaa/repos", "events_url": "https://api.github.com/users/branquinhoaa/events{/privacy}", "received_events_url": "https://api.github.com/users/branquinhoaa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-03T14:24:12Z", "updated_at": "2017-08-03T18:16:53Z", "author_association": "COLLABORATOR", "body_html": "<p><a href=\"https://github.com/mkalininait\" class=\"user-mention\">@mkalininait</a> and <a href=\"https://github.com/klappradla\" class=\"user-mention\">@klappradla</a><br>\nI was thinking about the models and maybe instead of a ConferenceAttendance model, it will make more sense to build a ConferenceOffer model.<br>\nEach team will have one (or many?) ConferenceOffer with conference_id, team_id, orga_comment, and attendance(boolean).<br>\nWe have here the same issue that we had in ConferencePreferences (a table with some data for the relationship -&gt; orga_comment,  and some data for each conference -&gt; attendance).</p>\n<p>The options I see are:</p>\n<ol>\n<li>The team has_one conferenceOffer and conferenceOffer have_many conferences (and the team can pick one? in a column called conferenceSelected?)</li>\n<li>The team has_many conferenceOffer (best approach, however, as far as I know just one orga_comment should exist)</li>\n</ol>\n<p>What is the best approach in this case?</p>", "body_text": "@mkalininait and @klappradla\nI was thinking about the models and maybe instead of a ConferenceAttendance model, it will make more sense to build a ConferenceOffer model.\nEach team will have one (or many?) ConferenceOffer with conference_id, team_id, orga_comment, and attendance(boolean).\nWe have here the same issue that we had in ConferencePreferences (a table with some data for the relationship -> orga_comment,  and some data for each conference -> attendance).\nThe options I see are:\n\nThe team has_one conferenceOffer and conferenceOffer have_many conferences (and the team can pick one? in a column called conferenceSelected?)\nThe team has_many conferenceOffer (best approach, however, as far as I know just one orga_comment should exist)\n\nWhat is the best approach in this case?", "body": "@mkalininait and @klappradla \r\nI was thinking about the models and maybe instead of a ConferenceAttendance model, it will make more sense to build a ConferenceOffer model. \r\nEach team will have one (or many?) ConferenceOffer with conference_id, team_id, orga_comment, and attendance(boolean).  \r\nWe have here the same issue that we had in ConferencePreferences (a table with some data for the relationship -> orga_comment,  and some data for each conference -> attendance).\r\n\r\nThe options I see are:\r\n\r\n1. The team has_one conferenceOffer and conferenceOffer have_many conferences (and the team can pick one? in a column called conferenceSelected?)\r\n2. The team has_many conferenceOffer (best approach, however, as far as I know just one orga_comment should exist)\r\n\r\nWhat is the best approach in this case?"}