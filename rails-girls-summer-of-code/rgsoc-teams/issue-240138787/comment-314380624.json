{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/314380624", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/775#issuecomment-314380624", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/775", "id": 314380624, "user": {"login": "F3PiX", "id": 6314687, "avatar_url": "https://avatars1.githubusercontent.com/u/6314687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F3PiX", "html_url": "https://github.com/F3PiX", "followers_url": "https://api.github.com/users/F3PiX/followers", "following_url": "https://api.github.com/users/F3PiX/following{/other_user}", "gists_url": "https://api.github.com/users/F3PiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/F3PiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F3PiX/subscriptions", "organizations_url": "https://api.github.com/users/F3PiX/orgs", "repos_url": "https://api.github.com/users/F3PiX/repos", "events_url": "https://api.github.com/users/F3PiX/events{/privacy}", "received_events_url": "https://api.github.com/users/F3PiX/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-11T09:02:09Z", "updated_at": "2017-07-11T09:02:09Z", "author_association": "MEMBER", "body_html": "<p>I can't do anything with the file without raising the ArgumentError/csv error.</p>\n<p>This is what I have now:</p>\n<pre><code>require 'spec_helper'\nrequire 'csv'\n\nRSpec.describe Conference::Importer do\n\n  describe \"#call\" do\n    let!(:file) { file_fixture(\"test.csv\") }\n    subject { described_class.call(file).read }\n\n    it { puts file_fixture_path } # =&gt; spec/fixtures/files\n\n    it 'works' do\n      expect { subject }.not_to raise_error(ArgumentError, /.csv/)  #=&gt; green\n    end\n\n    context 'with valid file' do\n      it 'imports the conferences' do # =&gt; red : raises ArgumentError, /.csv/ \n        expect { subject } .to change { Conference.count }.by(6)\n      end\n    end\n  end\nend\n</code></pre>\n<p>So, is there a way to set the content_type for the test file? Or is there a way to stub that?</p>", "body_text": "I can't do anything with the file without raising the ArgumentError/csv error.\nThis is what I have now:\nrequire 'spec_helper'\nrequire 'csv'\n\nRSpec.describe Conference::Importer do\n\n  describe \"#call\" do\n    let!(:file) { file_fixture(\"test.csv\") }\n    subject { described_class.call(file).read }\n\n    it { puts file_fixture_path } # => spec/fixtures/files\n\n    it 'works' do\n      expect { subject }.not_to raise_error(ArgumentError, /.csv/)  #=> green\n    end\n\n    context 'with valid file' do\n      it 'imports the conferences' do # => red : raises ArgumentError, /.csv/ \n        expect { subject } .to change { Conference.count }.by(6)\n      end\n    end\n  end\nend\n\nSo, is there a way to set the content_type for the test file? Or is there a way to stub that?", "body": "I can't do anything with the file without raising the ArgumentError/csv error. \r\n\r\nThis is what I have now:\r\n```\r\nrequire 'spec_helper'\r\nrequire 'csv'\r\n\r\nRSpec.describe Conference::Importer do\r\n\r\n  describe \"#call\" do\r\n    let!(:file) { file_fixture(\"test.csv\") }\r\n    subject { described_class.call(file).read }\r\n\r\n    it { puts file_fixture_path } # => spec/fixtures/files\r\n\r\n    it 'works' do\r\n      expect { subject }.not_to raise_error(ArgumentError, /.csv/)  #=> green\r\n    end\r\n\r\n    context 'with valid file' do\r\n      it 'imports the conferences' do # => red : raises ArgumentError, /.csv/ \r\n        expect { subject } .to change { Conference.count }.by(6)\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\nSo, is there a way to set the content_type for the test file? Or is there a way to stub that?"}