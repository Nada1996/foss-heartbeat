{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/125757844", "pull_request_review_id": 48176008, "id": 125757844, "diff_hunk": "@@ -0,0 +1,73 @@\n+require 'csv'\n+class Conference::Importer\n+  \n+  ## This importer is depending on agreed-upon input format.\n+  ## Input file:\n+  # - Dates should be formatted with dd mm yyyy\n+  # - UID should be unique and formatted with 'current season' + id: 2017001\n+  # - The headers should not be changed\n+  # Output:\n+  # Conferences will be updated or created\n+  # Conferences deleted in the input file, are not removed from the table\n+  # Import errors are logged in a separate 'imports_logger' file\n+  \n+  class << self\n+    def import(file)", "path": "app/models/conference/importer.rb", "position": null, "original_position": 15, "commit_id": "8ed60b9c5e671f22631336954a9f040b8697017b", "original_commit_id": "cd42d80945dd55da05f2e4d3437b0a36f630d669", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "(Disclaimer: Nitpicking / Tangent :wink: )\r\n\r\nI always find mirroring the class name in its only public method a bit odd: `Runner.run`. _of course_ it runs, hence the name of the class :upside_down_face: \r\n\r\nMy personal approach is mostly to name the method `call`. `run` would work, too, but `call` is available on Lambdas/Procs so the architecture - theoretically - also gets more losely coupled.", "created_at": "2017-07-05T21:08:06Z", "updated_at": "2017-07-13T16:12:43Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/775#discussion_r125757844", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/775", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/125757844"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/775#discussion_r125757844"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/775"}}, "body_html": "<p>(Disclaimer: Nitpicking / Tangent <g-emoji class=\"g-emoji\" alias=\"wink\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f609.png\">\ud83d\ude09</g-emoji> )</p>\n<p>I always find mirroring the class name in its only public method a bit odd: <code>Runner.run</code>. <em>of course</em> it runs, hence the name of the class <g-emoji class=\"g-emoji\" alias=\"upside_down_face\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f643.png\">\ud83d\ude43</g-emoji></p>\n<p>My personal approach is mostly to name the method <code>call</code>. <code>run</code> would work, too, but <code>call</code> is available on Lambdas/Procs so the architecture - theoretically - also gets more losely coupled.</p>", "body_text": "(Disclaimer: Nitpicking / Tangent \ud83d\ude09 )\nI always find mirroring the class name in its only public method a bit odd: Runner.run. of course it runs, hence the name of the class \ud83d\ude43\nMy personal approach is mostly to name the method call. run would work, too, but call is available on Lambdas/Procs so the architecture - theoretically - also gets more losely coupled."}