{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/125866876", "pull_request_review_id": 48296459, "id": 125866876, "diff_hunk": "@@ -0,0 +1,73 @@\n+require 'csv'\n+class Conference::Importer\n+  \n+  ## This importer is depending on agreed-upon input format.\n+  ## Input file:\n+  # - Dates should be formatted with dd mm yyyy\n+  # - UID should be unique and formatted with 'current season' + id: 2017001\n+  # - The headers should not be changed\n+  # Output:\n+  # Conferences will be updated or created\n+  # Conferences deleted in the input file, are not removed from the table\n+  # Import errors are logged in a separate 'imports_logger' file\n+  \n+  class << self\n+    def import(file)\n+      check_valid(file)\n+      info_log(:started, file)\n+      process_csv(file)\n+      info_log(:finished, file)\n+    end\n+    \n+    private\n+    \n+    def info_log(arg, file)\n+      notices = {\n+        started: \"Started importing file #{file.original_filename}\",\n+        finished: \"Finished updating/creating #{count_conferences_in(file)} conferences\"\n+      }\n+      imports_logger.info \"\\n***\" + notices[arg] + \"***\"\n+    end\n+   \n+    def imports_logger\n+      Logger.new(\"#{Rails.root}/log/imports_logger.log\")\n+    end\n+    \n+    def check_valid(file)\n+      raise \"Oops! I can upload .csv only :-(\" unless file.content_type == \"text/csv\"\n+    end\n+    \n+    def count_conferences_in(file)\n+      CSV.foreach(file.path, headers: true).count\n+    end\n+    \n+    def process_csv(file)\n+      CSV.foreach(file.path, headers: true, col_sep: ';' ) do |row|\n+        begin\n+          conference = Conference.find_or_initialize_by(gid: row['UID'])\n+          # TODO check: when extra columns are added in the Google Doc, what happens?\n+          conference_hash = {\n+            gid: row['UID'].to_i,", "path": "app/models/conference/importer.rb", "position": null, "original_position": 50, "commit_id": "8ed60b9c5e671f22631336954a9f040b8697017b", "original_commit_id": "cd42d80945dd55da05f2e4d3437b0a36f630d669", "user": {"login": "F3PiX", "id": 6314687, "avatar_url": "https://avatars1.githubusercontent.com/u/6314687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F3PiX", "html_url": "https://github.com/F3PiX", "followers_url": "https://api.github.com/users/F3PiX/followers", "following_url": "https://api.github.com/users/F3PiX/following{/other_user}", "gists_url": "https://api.github.com/users/F3PiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/F3PiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F3PiX/subscriptions", "organizations_url": "https://api.github.com/users/F3PiX/orgs", "repos_url": "https://api.github.com/users/F3PiX/repos", "events_url": "https://api.github.com/users/F3PiX/events{/privacy}", "received_events_url": "https://api.github.com/users/F3PiX/received_events", "type": "User", "site_admin": false}, "body": "Because I don't like to make promises I can't keep. There is no way we can be sure of the uniqueness of the ID in the imported Google Doc. If it is called `uid`, we suggest that we can trust the uniqueness. \r\n", "created_at": "2017-07-06T10:43:22Z", "updated_at": "2017-07-13T16:12:43Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/775#discussion_r125866876", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/775", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/125866876"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/775#discussion_r125866876"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/775"}}, "body_html": "<p>Because I don't like to make promises I can't keep. There is no way we can be sure of the uniqueness of the ID in the imported Google Doc. If it is called <code>uid</code>, we suggest that we can trust the uniqueness.</p>", "body_text": "Because I don't like to make promises I can't keep. There is no way we can be sure of the uniqueness of the ID in the imported Google Doc. If it is called uid, we suggest that we can trust the uniqueness.", "in_reply_to_id": 125761768}