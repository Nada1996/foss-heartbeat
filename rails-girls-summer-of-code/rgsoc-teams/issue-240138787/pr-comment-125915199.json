{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/125915199", "pull_request_review_id": 48350782, "id": 125915199, "diff_hunk": "@@ -1,30 +1,14 @@\n class Orga::ConferencesController < Orga::BaseController\n-  before_action :find_conference, only: [:show, :edit, :update, :destroy]\n+  before_action :find_conference, only: [:show, :destroy]\n+\n+  def import\n+    Conference::Importer.call_with(params[:file])", "path": "app/controllers/orga/conferences_controller.rb", "position": null, "original_position": 6, "commit_id": "8ed60b9c5e671f22631336954a9f040b8697017b", "original_commit_id": "a054c0351caf07f916ab225514fe786ef4fcd296", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "> LOL Ruby is all about calling methods, so of course it calls \ud83d\ude09\r\n\r\nHaha, you won this round \ud83e\udd23 \r\n\r\nBut yeah, `call` is a thing when working with lambdas / Procs:\r\n\r\n```ruby\r\nl = ->(cheese) { \"#{cheese} is tasty\" }\r\nl.call(\"Camembert\") # => \"Camembert is tasty\"\r\n```\r\n\r\nRack also only expects an arity-1 `call` so that you can either concrete classes/instances reponding to it or just pass a lambda/proc.\r\n\r\nI would really prefer `call` instead of adding another name to the mix.", "created_at": "2017-07-06T14:26:01Z", "updated_at": "2017-07-13T16:12:43Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/775#discussion_r125915199", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/775", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/125915199"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/775#discussion_r125915199"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/775"}}, "body_html": "<blockquote>\n<p>LOL Ruby is all about calling methods, so of course it calls <g-emoji class=\"g-emoji\" alias=\"wink\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f609.png\">\ud83d\ude09</g-emoji></p>\n</blockquote>\n<p>Haha, you won this round <g-emoji class=\"g-emoji\" alias=\"rofl\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f923.png\">\ud83e\udd23</g-emoji></p>\n<p>But yeah, <code>call</code> is a thing when working with lambdas / Procs:</p>\n<div class=\"highlight highlight-source-ruby\"><pre>l <span class=\"pl-k\">=</span> <span class=\"pl-c1\">-&gt;</span>(cheese) { <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pse\">#{</span><span class=\"pl-s1\">cheese</span><span class=\"pl-pse\">}</span> is tasty<span class=\"pl-pds\">\"</span></span> }\nl.call(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Camembert<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> =&gt; \"Camembert is tasty\"</span></pre></div>\n<p>Rack also only expects an arity-1 <code>call</code> so that you can either concrete classes/instances reponding to it or just pass a lambda/proc.</p>\n<p>I would really prefer <code>call</code> instead of adding another name to the mix.</p>", "body_text": "LOL Ruby is all about calling methods, so of course it calls \ud83d\ude09\n\nHaha, you won this round \ud83e\udd23\nBut yeah, call is a thing when working with lambdas / Procs:\nl = ->(cheese) { \"#{cheese} is tasty\" }\nl.call(\"Camembert\") # => \"Camembert is tasty\"\nRack also only expects an arity-1 call so that you can either concrete classes/instances reponding to it or just pass a lambda/proc.\nI would really prefer call instead of adding another name to the mix.", "in_reply_to_id": 125911816}