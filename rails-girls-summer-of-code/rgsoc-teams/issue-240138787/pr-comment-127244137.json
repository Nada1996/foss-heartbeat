{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/127244137", "pull_request_review_id": 49809014, "id": 127244137, "diff_hunk": "@@ -57,17 +63,12 @@ def process_csv(file)\n             url: row['Website'],\n             notes: row['Notes'],\n           }\n-          conference.update!(conference_hash.merge(season_id: fetch_season_id(row['UID'])))\n+          conference.update!(conference_hash)", "path": "app/models/conference/importer.rb", "position": null, "original_position": 38, "commit_id": "8ed60b9c5e671f22631336954a9f040b8697017b", "original_commit_id": "b15b2539d97f74b0b1da5de8734e9b9773863fac", "user": {"login": "F3PiX", "id": 6314687, "avatar_url": "https://avatars1.githubusercontent.com/u/6314687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F3PiX", "html_url": "https://github.com/F3PiX", "followers_url": "https://api.github.com/users/F3PiX/followers", "following_url": "https://api.github.com/users/F3PiX/following{/other_user}", "gists_url": "https://api.github.com/users/F3PiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/F3PiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F3PiX/subscriptions", "organizations_url": "https://api.github.com/users/F3PiX/orgs", "repos_url": "https://api.github.com/users/F3PiX/repos", "events_url": "https://api.github.com/users/F3PiX/events{/privacy}", "received_events_url": "https://api.github.com/users/F3PiX/received_events", "type": "User", "site_admin": false}, "body": "I 'undid' merging because of this spec :\r\n```it 'assign the season_id' do\r\n        FactoryGirl.create(:conference, gid: 2017001, season_id: nil)\r\n        FactoryGirl.create(:conference, gid: 2018005, season_id: nil)\r\n        s_2017 = FactoryGirl.create(:season, name: \"2017\")\r\n        s_2018 = FactoryGirl.create(:season, name: \"2018\")\r\n\r\n        expect{subject}.to change{Conference.find_by(gid: 2017001).season_id}.to(s_2017.id)\r\n        expect(Conference.find_by(gid: 2018005).season_id).to eq s_2018.id\r\n      end\r\n```\r\nI did not find a way to check the change in the specs as well as merging in the season_id. \r\nI understand that is a bad reason to do an extra db action, but I also really want to doublecheck if the season_id has been changed.\r\nIs there a way to do that? Or should I only care that the conference has the correct season_id?  \r\n ", "created_at": "2017-07-13T15:08:11Z", "updated_at": "2017-07-13T16:12:43Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/775#discussion_r127244137", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/775", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/127244137"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/775#discussion_r127244137"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/775"}}, "body_html": "<p>I 'undid' merging because of this spec :</p>\n<pre lang=\"it\"><code>        FactoryGirl.create(:conference, gid: 2017001, season_id: nil)\n        FactoryGirl.create(:conference, gid: 2018005, season_id: nil)\n        s_2017 = FactoryGirl.create(:season, name: \"2017\")\n        s_2018 = FactoryGirl.create(:season, name: \"2018\")\n\n        expect{subject}.to change{Conference.find_by(gid: 2017001).season_id}.to(s_2017.id)\n        expect(Conference.find_by(gid: 2018005).season_id).to eq s_2018.id\n      end\n</code></pre>\n<p>I did not find a way to check the change in the specs as well as merging in the season_id.<br>\nI understand that is a bad reason to do an extra db action, but I also really want to doublecheck if the season_id has been changed.<br>\nIs there a way to do that? Or should I only care that the conference has the correct season_id?</p>", "body_text": "I 'undid' merging because of this spec :\n        FactoryGirl.create(:conference, gid: 2017001, season_id: nil)\n        FactoryGirl.create(:conference, gid: 2018005, season_id: nil)\n        s_2017 = FactoryGirl.create(:season, name: \"2017\")\n        s_2018 = FactoryGirl.create(:season, name: \"2018\")\n\n        expect{subject}.to change{Conference.find_by(gid: 2017001).season_id}.to(s_2017.id)\n        expect(Conference.find_by(gid: 2018005).season_id).to eq s_2018.id\n      end\n\nI did not find a way to check the change in the specs as well as merging in the season_id.\nI understand that is a bad reason to do an extra db action, but I also really want to doublecheck if the season_id has been changed.\nIs there a way to do that? Or should I only care that the conference has the correct season_id?", "in_reply_to_id": 127187459}