{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/313966624", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/783#issuecomment-313966624", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/783", "id": 313966624, "user": {"login": "F3PiX", "id": 6314687, "avatar_url": "https://avatars1.githubusercontent.com/u/6314687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F3PiX", "html_url": "https://github.com/F3PiX", "followers_url": "https://api.github.com/users/F3PiX/followers", "following_url": "https://api.github.com/users/F3PiX/following{/other_user}", "gists_url": "https://api.github.com/users/F3PiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/F3PiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F3PiX/subscriptions", "organizations_url": "https://api.github.com/users/F3PiX/orgs", "repos_url": "https://api.github.com/users/F3PiX/repos", "events_url": "https://api.github.com/users/F3PiX/events{/privacy}", "received_events_url": "https://api.github.com/users/F3PiX/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-09T21:42:12Z", "updated_at": "2017-07-09T21:43:03Z", "author_association": "MEMBER", "body_html": "<p>Turns out we need to <em>filter</em> the projects, to show the projects that have RailsGirls working on them only.<br>\nHere is a intermediary solution:</p>\n<ul>\n<li>From May - Sept (= <code>Season.active</code>) show the filtered ^ projects list<br>\nShow the regular selection the rest of the year</li>\n<li>I used the applications table as a join table, to map the <code>projects.name</code> to the <code>teams.projects_name</code>.<br>\nInstead, I'd rather add a foreign key to the teams table with the <code>project_id</code>. TBH I was surprised there wasn't. Is that for a reason I am not aware of? Or shall I add it?<br>\nOne of the disadvantages of the complicated query is that it is hard to get the tests right.</li>\n</ul>\n<p>So, before breaking my head over the specs, I wanted to check if the foreign key solution isn't better.<br>\nAlso, because I won't have time to work on this until late in the afternoon, is this safe enough a solution to merge it? And follow up with the PR with specs and maybe the foreign key solution.</p>", "body_text": "Turns out we need to filter the projects, to show the projects that have RailsGirls working on them only.\nHere is a intermediary solution:\n\nFrom May - Sept (= Season.active) show the filtered ^ projects list\nShow the regular selection the rest of the year\nI used the applications table as a join table, to map the projects.name to the teams.projects_name.\nInstead, I'd rather add a foreign key to the teams table with the project_id. TBH I was surprised there wasn't. Is that for a reason I am not aware of? Or shall I add it?\nOne of the disadvantages of the complicated query is that it is hard to get the tests right.\n\nSo, before breaking my head over the specs, I wanted to check if the foreign key solution isn't better.\nAlso, because I won't have time to work on this until late in the afternoon, is this safe enough a solution to merge it? And follow up with the PR with specs and maybe the foreign key solution.", "body": "Turns out we need to _filter_ the projects, to show the projects that have RailsGirls working on them only.\r\nHere is a intermediary solution:\r\n- From May - Sept (= `Season.active`) show the filtered ^ projects list\r\n   Show the regular selection the rest of the year\r\n- I used the applications table as a join table, to map the `projects.name` to the `teams.projects_name`.\r\n  Instead, I'd rather add a foreign key to the teams table with the `project_id`. TBH I was surprised there wasn't. Is that for a reason I am not aware of? Or shall I add it?\r\n  One of the disadvantages of the complicated query is that it is hard to get the tests right.\r\n \r\nSo, before breaking my head over the specs, I wanted to check if the foreign key solution isn't better. \r\nAlso, because I won't have time to work on this until late in the afternoon, is this safe enough a solution to merge it? And follow up with the PR with specs and maybe the foreign key solution.\r\n  \r\n\r\n  "}