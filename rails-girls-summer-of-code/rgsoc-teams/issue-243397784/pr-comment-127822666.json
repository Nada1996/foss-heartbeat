{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/127822666", "pull_request_review_id": 50442141, "id": 127822666, "diff_hunk": "@@ -1,29 +1,10 @@\n class MailingsController < ApplicationController\n+  before_action :redirect, except: [:index, :show]", "path": "app/controllers/mailings_controller.rb", "position": null, "original_position": 2, "commit_id": "8e49daae69dbe407ce17a05569373a8d725a55fc", "original_commit_id": "6871cbd9b45ecfd148258b5c20830354f62f0313", "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "body": "Maybe I'm already too tired, but I totally don't get this \ud83d\ude48\r\nCan you explain what this is supposed to solve? A `before_action` preventing any action but `index` and `show`? Why do you have another `before_action` only used for `create` and `update` in place if these actions cannot be reached at all?\r\n\r\nHowever, if this is supposed to prevent routing to other actions then `index` and `show`, I'd suggest to to this on routes level, rather then controller.", "created_at": "2017-07-17T20:54:25Z", "updated_at": "2017-07-26T08:11:10Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/793#discussion_r127822666", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/793", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/127822666"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/793#discussion_r127822666"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/793"}}, "body_html": "<p>Maybe I'm already too tired, but I totally don't get this <g-emoji class=\"g-emoji\" alias=\"see_no_evil\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f648.png\">\ud83d\ude48</g-emoji><br>\nCan you explain what this is supposed to solve? A <code>before_action</code> preventing any action but <code>index</code> and <code>show</code>? Why do you have another <code>before_action</code> only used for <code>create</code> and <code>update</code> in place if these actions cannot be reached at all?</p>\n<p>However, if this is supposed to prevent routing to other actions then <code>index</code> and <code>show</code>, I'd suggest to to this on routes level, rather then controller.</p>", "body_text": "Maybe I'm already too tired, but I totally don't get this \ud83d\ude48\nCan you explain what this is supposed to solve? A before_action preventing any action but index and show? Why do you have another before_action only used for create and update in place if these actions cannot be reached at all?\nHowever, if this is supposed to prevent routing to other actions then index and show, I'd suggest to to this on routes level, rather then controller."}