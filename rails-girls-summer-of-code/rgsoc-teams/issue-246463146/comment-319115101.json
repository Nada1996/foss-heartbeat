{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/319115101", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/805#issuecomment-319115101", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/805", "id": 319115101, "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-31T16:02:12Z", "updated_at": "2017-07-31T16:02:12Z", "author_association": "MEMBER", "body_html": "<p>Ah alright <a href=\"https://github.com/juuh42dias\" class=\"user-mention\">@juuh42dias</a>, thanx for coming back to my question so quick <g-emoji class=\"g-emoji\" alias=\"pray\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f64f.png\">\ud83d\ude4f</g-emoji></p>\n<p>I tbh don't see the benefit it a lesser coupling between <code>ConferencePreference</code> and <code>ConferencePreferenceInfo</code>. The benefit of being able to then easier add new team-related attributes to it comes at the cost of having to maintain the way a way more complex association tree, a more complex form, etc., together with making sure, all of these objects depending on each other are available in the right moment and are deleted in the right moment.</p>\n<p>So in my opinion, the maintenance and complexity overhead is too high a price for the benefits.</p>\n<p>Aside that: I think the question whether there's <strong>one info block per <code>Team</code></strong> vs. one info block per <code>ConferencePreference</code> should be answered before. It also does not make much sense to implement it it a way loose enough to be able to jump between these two things in my opinion. None foresees the future, so there's no point in introducing complexity and technical dept for requirements that may never come <g-emoji class=\"g-emoji\" alias=\"snail\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f40c.png\">\ud83d\udc0c</g-emoji></p>", "body_text": "Ah alright @juuh42dias, thanx for coming back to my question so quick \ud83d\ude4f\nI tbh don't see the benefit it a lesser coupling between ConferencePreference and ConferencePreferenceInfo. The benefit of being able to then easier add new team-related attributes to it comes at the cost of having to maintain the way a way more complex association tree, a more complex form, etc., together with making sure, all of these objects depending on each other are available in the right moment and are deleted in the right moment.\nSo in my opinion, the maintenance and complexity overhead is too high a price for the benefits.\nAside that: I think the question whether there's one info block per Team vs. one info block per ConferencePreference should be answered before. It also does not make much sense to implement it it a way loose enough to be able to jump between these two things in my opinion. None foresees the future, so there's no point in introducing complexity and technical dept for requirements that may never come \ud83d\udc0c", "body": "Ah alright @juuh42dias, thanx for coming back to my question so quick \ud83d\ude4f \r\n\r\nI tbh don't see the benefit it a lesser coupling between `ConferencePreference` and `ConferencePreferenceInfo`. The benefit of being able to then easier add new team-related attributes to it comes at the cost of having to maintain the way a way more complex association tree, a more complex form, etc., together with making sure, all of these objects depending on each other are available in the right moment and are deleted in the right moment.\r\n\r\nSo in my opinion, the maintenance and complexity overhead is too high a price for the benefits.\r\n\r\nAside that: I think the question whether there's **one info block per `Team`** vs. one info block per `ConferencePreference` should be answered before. It also does not make much sense to implement it it a way loose enough to be able to jump between these two things in my opinion. None foresees the future, so there's no point in introducing complexity and technical dept for requirements that may never come \ud83d\udc0c "}