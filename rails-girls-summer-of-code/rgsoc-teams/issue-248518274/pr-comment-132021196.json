{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/132021196", "pull_request_review_id": 55056713, "id": 132021196, "diff_hunk": "@@ -182,6 +184,10 @@ def without_preferences?(att)\n     att[:conference_id].blank?\n   end\n \n+  def without_conferences?(att)", "path": "app/models/team.rb", "position": null, "original_position": 14, "commit_id": "9fa0dd8c60bd9988fc9d1f0d0d2fa7b14ac3dc7d", "original_commit_id": "7721175665b472d6e40eb84ec9e942fbda8ea8bf", "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "body": "\ud83d\udc4d \r\nMaybe use `attributes` instead of `att` - would make it more obvious on first glance (same for the `without_preferences` method).\r\n\r\nIn this case, given the size of the class, I would actually even suggest to use the direct `proc` syntax, otherwise one has to scroll to the bottom of the large file to understand what's going on... What do you think?\r\n```ruby\r\naccepts_nested_attributes_for :conference_attendances, allow_destroy: true, reject_if: proc { |attributes| attributes[:conference_id].blank? }\r\n```\r\n\r\nBut totally up to you, does not change anything in behavior.", "created_at": "2017-08-08T20:21:47Z", "updated_at": "2017-08-14T13:23:19Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/811#discussion_r132021196", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/811", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/132021196"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/811#discussion_r132021196"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/811"}}, "body_html": "<p><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji><br>\nMaybe use <code>attributes</code> instead of <code>att</code> - would make it more obvious on first glance (same for the <code>without_preferences</code> method).</p>\n<p>In this case, given the size of the class, I would actually even suggest to use the direct <code>proc</code> syntax, otherwise one has to scroll to the bottom of the large file to understand what's going on... What do you think?</p>\n<div class=\"highlight highlight-source-ruby\"><pre>accepts_nested_attributes_for <span class=\"pl-c1\">:conference_attendances</span>, <span class=\"pl-c1\">allow_destroy:</span> <span class=\"pl-c1\">true</span>, <span class=\"pl-c1\">reject_if:</span> <span class=\"pl-c1\">proc</span> { |<span class=\"pl-smi\">attributes</span>| attributes[<span class=\"pl-c1\">:conference_id</span>].blank? }</pre></div>\n<p>But totally up to you, does not change anything in behavior.</p>", "body_text": "\ud83d\udc4d\nMaybe use attributes instead of att - would make it more obvious on first glance (same for the without_preferences method).\nIn this case, given the size of the class, I would actually even suggest to use the direct proc syntax, otherwise one has to scroll to the bottom of the large file to understand what's going on... What do you think?\naccepts_nested_attributes_for :conference_attendances, allow_destroy: true, reject_if: proc { |attributes| attributes[:conference_id].blank? }\nBut totally up to you, does not change anything in behavior."}