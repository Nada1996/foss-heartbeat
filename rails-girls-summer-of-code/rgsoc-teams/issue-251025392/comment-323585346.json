{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/323585346", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/824#issuecomment-323585346", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/824", "id": 323585346, "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-20T13:34:35Z", "updated_at": "2017-08-20T13:34:35Z", "author_association": "MEMBER", "body_html": "<p>Ok, I get your point about guiding people to write better descriptions <g-emoji class=\"g-emoji\" alias=\"bulb\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f4a1.png\">\ud83d\udca1</g-emoji><br>\nFor the testing part: I don't see how this can make the whole process around PRs more efficient. For quickly understanding and judging the code, it's useful to know if there are new automated tests covering the changes (and see if they make sense) yes or no. Whether or not the author tested the features in the browser, deployed a private app somewhere to test it... is not super useful information for quickly knowing if this PR makes sense / what changes it needs.<br>\nSimilar for \"how can a code reviewer test\": it's obvious that I could in theory check out the PR locally and invoke the code or look at what Travis did with the tests. Whether I would do local testing with a production database dump, run it in multiple browsers, etc. is more of the reviewers own workflow, the author of the code does not really need to think about these things in too much detail upfront for the reviewer I'd say <em>(it's not really part of the contribution - although it's of course a nice help at times)</em></p>\n<p>So merging what you wrote with my previous comment, I'd update my solution to this:</p>\n<div class=\"highlight highlight-source-gfm\"><pre><span class=\"pl-c\"><span class=\"pl-c\">&lt;!--</span>- link the issue(s) this is targeting -<span class=\"pl-c\">--&gt;</span></span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">&lt;!--</span>- describe what this is changing, what the code is doing <span class=\"pl-c\">--&gt;</span></span>\n\n<span class=\"pl-mh\"><span class=\"pl-mh\">####</span><span class=\"pl-mh\"> </span>preflight checklist \ud83d\ude80</span>\n<span class=\"pl-mi\">*[ ] tests added</span>\n<span class=\"pl-mi\">*[ ] screenshot, gif or video added (only if changes to the UI)</span></pre></div>", "body_text": "Ok, I get your point about guiding people to write better descriptions \ud83d\udca1\nFor the testing part: I don't see how this can make the whole process around PRs more efficient. For quickly understanding and judging the code, it's useful to know if there are new automated tests covering the changes (and see if they make sense) yes or no. Whether or not the author tested the features in the browser, deployed a private app somewhere to test it... is not super useful information for quickly knowing if this PR makes sense / what changes it needs.\nSimilar for \"how can a code reviewer test\": it's obvious that I could in theory check out the PR locally and invoke the code or look at what Travis did with the tests. Whether I would do local testing with a production database dump, run it in multiple browsers, etc. is more of the reviewers own workflow, the author of the code does not really need to think about these things in too much detail upfront for the reviewer I'd say (it's not really part of the contribution - although it's of course a nice help at times)\nSo merging what you wrote with my previous comment, I'd update my solution to this:\n<!--- link the issue(s) this is targeting --->\n\n<!--- describe what this is changing, what the code is doing -->\n\n#### preflight checklist \ud83d\ude80\n*[ ] tests added\n*[ ] screenshot, gif or video added (only if changes to the UI)", "body": "Ok, I get your point about guiding people to write better descriptions \ud83d\udca1 \r\nFor the testing part: I don't see how this can make the whole process around PRs more efficient. For quickly understanding and judging the code, it's useful to know if there are new automated tests covering the changes (and see if they make sense) yes or no. Whether or not the author tested the features in the browser, deployed a private app somewhere to test it... is not super useful information for quickly knowing if this PR makes sense / what changes it needs.\r\nSimilar for \"how can a code reviewer test\": it's obvious that I could in theory check out the PR locally and invoke the code or look at what Travis did with the tests. Whether I would do local testing with a production database dump, run it in multiple browsers, etc. is more of the reviewers own workflow, the author of the code does not really need to think about these things in too much detail upfront for the reviewer I'd say _(it's not really part of the contribution - although it's of course a nice help at times)_\r\n\r\nSo merging what you wrote with my previous comment, I'd update my solution to this:\r\n```markdown\r\n<!--- link the issue(s) this is targeting --->\r\n\r\n<!--- describe what this is changing, what the code is doing -->\r\n\r\n#### preflight checklist \ud83d\ude80\r\n*[ ] tests added\r\n*[ ] screenshot, gif or video added (only if changes to the UI)\r\n```"}