{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/352278856", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/847#issuecomment-352278856", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/847", "id": 352278856, "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-17T19:24:34Z", "updated_at": "2017-12-17T19:24:34Z", "author_association": "MEMBER", "body_html": "<p>Yes, fully agree <a href=\"https://github.com/f3pix\" class=\"user-mention\">@F3PiX</a> <g-emoji class=\"g-emoji\" alias=\"v\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/270c.png\">\u270c\ufe0f</g-emoji> I know this tutorial and I also really like what they're doing. But as you wrote, especially putting the HTML files into what is normally called <code>app/javascript</code> in a default Webpacker setup is one step too far for us <g-emoji class=\"g-emoji\" alias=\"wink\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f609.png\">\ud83d\ude09</g-emoji></p>\n<p>Having a <code>app/javascript</code>, a <code>app/services</code> directory etc. is fine and pretty much standard for a modern Rails 5+ application. But introducing this rather opinionated <em>component</em> approach will probably make our app a bit less approachable for newcomers and new contributers. So I'd for now not jump on that train yet <g-emoji class=\"g-emoji\" alias=\"steam_locomotive\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f682.png\">\ud83d\ude82</g-emoji></p>\n<p>What I plan to have is:</p>\n<ul>\n<li>webpacker for JS and CSS\n<ul>\n<li>also: being able to install frontend things with <code>yarn add</code> and keep them up 2 date <g-emoji class=\"g-emoji\" alias=\"tada\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f389.png\">\ud83c\udf89</g-emoji></li>\n</ul>\n</li>\n<li>use ES6 for JS and BEM for CSS / SASS</li>\n<li>have linting for CSS and JS</li>\n<li>have \"controller-specific\" JS code (pretty much a Rails best practice now I would say)</li>\n</ul>", "body_text": "Yes, fully agree @F3PiX \u270c\ufe0f I know this tutorial and I also really like what they're doing. But as you wrote, especially putting the HTML files into what is normally called app/javascript in a default Webpacker setup is one step too far for us \ud83d\ude09\nHaving a app/javascript, a app/services directory etc. is fine and pretty much standard for a modern Rails 5+ application. But introducing this rather opinionated component approach will probably make our app a bit less approachable for newcomers and new contributers. So I'd for now not jump on that train yet \ud83d\ude82\nWhat I plan to have is:\n\nwebpacker for JS and CSS\n\nalso: being able to install frontend things with yarn add and keep them up 2 date \ud83c\udf89\n\n\nuse ES6 for JS and BEM for CSS / SASS\nhave linting for CSS and JS\nhave \"controller-specific\" JS code (pretty much a Rails best practice now I would say)", "body": "Yes, fully agree @F3PiX \u270c\ufe0f I know this tutorial and I also really like what they're doing. But as you wrote, especially putting the HTML files into what is normally called `app/javascript` in a default Webpacker setup is one step too far for us \ud83d\ude09 \r\n\r\nHaving a `app/javascript`, a `app/services` directory etc. is fine and pretty much standard for a modern Rails 5+ application. But introducing this rather opinionated *component* approach will probably make our app a bit less approachable for newcomers and new contributers. So I'd for now not jump on that train yet \ud83d\ude82 \r\n\r\nWhat I plan to have is:\r\n* webpacker for JS and CSS\r\n  * also: being able to install frontend things with `yarn add` and keep them up 2 date \ud83c\udf89 \r\n* use ES6 for JS and BEM for CSS / SASS\r\n* have linting for CSS and JS\r\n* have \"controller-specific\" JS code (pretty much a Rails best practice now I would say)"}