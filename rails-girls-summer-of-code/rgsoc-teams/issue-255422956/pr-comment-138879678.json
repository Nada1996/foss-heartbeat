{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/138879678", "pull_request_review_id": 62729887, "id": 138879678, "diff_hunk": "@@ -0,0 +1,17 @@\n+class CommunityUsers\n+\n+  def initialize(params, users)\n+    @params = params", "path": "app/controllers/concerns/community_users.rb", "position": null, "original_position": 4, "commit_id": "7ab5660dee1a41c4bd1a198dfa36f77cee647fe8", "original_commit_id": "94226cf523b0212463a5c07921d5413f51bb8f14", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "I'm always very defensive when passing a `params` hash from a controller down into helper classes. Reason: you're passing a reference and you can change the object in place. While this can sometimes be desired, I think you almost always want to return a new object instead of modifying an existing instance (the latter can be very hard to debug).\r\n\r\nEven if you don't change `params` here, I would recommend making it a habit of calling [`#dup`](https://ruby-doc.org/core-2.4.1/Object.html#method-i-dup) on the passed controller params hash. ", "created_at": "2017-09-14T12:35:27Z", "updated_at": "2017-12-02T17:39:26Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/849#discussion_r138879678", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/849", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/138879678"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/849#discussion_r138879678"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/849"}}, "body_html": "<p>I'm always very defensive when passing a <code>params</code> hash from a controller down into helper classes. Reason: you're passing a reference and you can change the object in place. While this can sometimes be desired, I think you almost always want to return a new object instead of modifying an existing instance (the latter can be very hard to debug).</p>\n<p>Even if you don't change <code>params</code> here, I would recommend making it a habit of calling <a href=\"https://ruby-doc.org/core-2.4.1/Object.html#method-i-dup\" rel=\"nofollow\"><code>#dup</code></a> on the passed controller params hash.</p>", "body_text": "I'm always very defensive when passing a params hash from a controller down into helper classes. Reason: you're passing a reference and you can change the object in place. While this can sometimes be desired, I think you almost always want to return a new object instead of modifying an existing instance (the latter can be very hard to debug).\nEven if you don't change params here, I would recommend making it a habit of calling #dup on the passed controller params hash."}