{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/138882418", "pull_request_review_id": 62729887, "id": 138882418, "diff_hunk": "@@ -71,26 +80,13 @@ def admin\n       where(name: Role::ADMIN_ROLES)\n     end\n \n-    def mentor\n-      where(name: 'mentor')\n-    end\n-\n-    def organizer\n-      where(name: 'organizer')\n-    end\n-\n-    def reviewer\n-      where(name: 'reviewer')\n-    end\n-\n-    def supervisor\n-      where(name: 'supervisor')\n-    end\n-\n-    def student\n-      where(name: 'student')\n+    ROLES.each do |role|", "path": "app/models/user.rb", "position": 38, "original_position": 38, "commit_id": "7ab5660dee1a41c4bd1a198dfa36f77cee647fe8", "original_commit_id": "94226cf523b0212463a5c07921d5413f51bb8f14", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "Excellent! \ud83e\udd47 \r\n\r\nA good practice when using meta-programming is to add a comment how an example of the generated code would look like.\r\n\r\nExample: \r\n\r\n```ruby\r\n%s(foo bar).each do |m|\r\n  define_method \"#{m}?\" do             # def foo?\r\n    !!instance_variable_get(\"@#{m}\")   #  !!@foo\r\n  end                                  # end\r\nend\r\n```\r\n\r\nCould you add something like that, please?", "created_at": "2017-09-14T12:46:30Z", "updated_at": "2017-12-02T17:39:26Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/849#discussion_r138882418", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/849", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/138882418"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/849#discussion_r138882418"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/849"}}, "body_html": "<p>Excellent! <g-emoji class=\"g-emoji\" alias=\"1st_place_medal\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f947.png\">\ud83e\udd47</g-emoji></p>\n<p>A good practice when using meta-programming is to add a comment how an example of the generated code would look like.</p>\n<p>Example:</p>\n<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-c1\">%s(foo bar)</span>.each <span class=\"pl-k\">do</span> |<span class=\"pl-smi\">m</span>|\n  define_method <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pse\">#{</span><span class=\"pl-s1\">m</span><span class=\"pl-pse\">}</span>?<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">do</span>             <span class=\"pl-c\"><span class=\"pl-c\">#</span> def foo?</span>\n    <span class=\"pl-k\">!</span>!instance_variable_get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@<span class=\"pl-pse\">#{</span><span class=\"pl-s1\">m</span><span class=\"pl-pse\">}</span><span class=\"pl-pds\">\"</span></span>)   <span class=\"pl-c\"><span class=\"pl-c\">#</span>  !!@foo</span>\n  <span class=\"pl-k\">end</span>                                  <span class=\"pl-c\"><span class=\"pl-c\">#</span> end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p>Could you add something like that, please?</p>", "body_text": "Excellent! \ud83e\udd47\nA good practice when using meta-programming is to add a comment how an example of the generated code would look like.\nExample:\n%s(foo bar).each do |m|\n  define_method \"#{m}?\" do             # def foo?\n    !!instance_variable_get(\"@#{m}\")   #  !!@foo\n  end                                  # end\nend\nCould you add something like that, please?"}