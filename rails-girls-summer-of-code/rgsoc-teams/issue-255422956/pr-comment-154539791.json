{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/154539791", "pull_request_review_id": 80715252, "id": 154539791, "diff_hunk": "@@ -0,0 +1,84 @@\n+require 'spec_helper'\n+\n+describe CommunityUsers do\n+  let(:student) { create(:student) }\n+  let(:student_looking_for_coach) { create(:student, :interested_in_coaching) }\n+  let(:coach) { create(:coach, :available) }\n+  describe '#all' do\n+    before do\n+      @params = {\n+          role: '',\n+          interest: '',\n+          availability: '',\n+          search: '',\n+          location: '',\n+          page: 1,\n+          sort: '',\n+          direction: 'asc'\n+        }\n+\n+      @users = User.ordered(@params[:sort], @params[:direction])\n+                   .group('users.id')\n+                   .with_all_associations_joined\n+\n+      @community = CommunityUsers.new(@params, @users)\n+    end\n+\n+    context 'return filtered users' do\n+      describe 'with params presence' do\n+        it 'return user with role specified' do\n+          @params[:role] = student.roles.first.name\n+\n+          community = @community\n+          expect(community.all).to match_array student\n+        end\n+\n+        it 'return user with interested_in' do\n+          @params[:interest] = student_looking_for_coach.interested_in\n+\n+          community = @community\n+          expect(community.all).to match_array student_looking_for_coach\n+        end\n+\n+        it 'return user (coach) with availability' do\n+          @params[:availability] = coach.availability\n+\n+          community = @community\n+          expect(community.all).to match_array coach\n+        end\n+\n+        it 'return user by search' do\n+          @params[:search] = student.name\n+\n+          community = @community\n+          expect(community.all).to match_array student\n+        end\n+\n+        it 'return user by location' do\n+          @params[:location] = student.country\n+\n+          community = @community\n+          expect(community.all).to match_array student\n+        end\n+      end\n+    end\n+\n+    context 'private methods' do", "path": "spec/models/community_users.rb", "position": 66, "original_position": 66, "commit_id": "7ab5660dee1a41c4bd1a198dfa36f77cee647fe8", "original_commit_id": "7ab5660dee1a41c4bd1a198dfa36f77cee647fe8", "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "body": "It's best practice to not test private methods. Unit tests would just cover the public interface and through this also indirectly test the internals.\r\n\r\nCould you convert these tests so that you instead test the outcome of these scenarios on the `all` method?", "created_at": "2017-12-03T22:49:31Z", "updated_at": "2017-12-03T22:58:56Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/849#discussion_r154539791", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/849", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/154539791"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/849#discussion_r154539791"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/849"}}, "body_html": "<p>It's best practice to not test private methods. Unit tests would just cover the public interface and through this also indirectly test the internals.</p>\n<p>Could you convert these tests so that you instead test the outcome of these scenarios on the <code>all</code> method?</p>", "body_text": "It's best practice to not test private methods. Unit tests would just cover the public interface and through this also indirectly test the internals.\nCould you convert these tests so that you instead test the outcome of these scenarios on the all method?"}