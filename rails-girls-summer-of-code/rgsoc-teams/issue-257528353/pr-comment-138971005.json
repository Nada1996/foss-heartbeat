{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/138971005", "pull_request_review_id": 62838665, "id": 138971005, "diff_hunk": "@@ -0,0 +1,8 @@\n+module CommunityHelper\n+  def interested_in_field(user)\n+    return unless user.present?\n+    interests = user.interested_in.map { |key| User::INTERESTS[key].presence }.compact.join(', ') \n+    interest_others = user.try(:interested_in_other)", "path": "app/helpers/community_helper.rb", "position": null, "original_position": 5, "commit_id": "c6997a64eecbf75ac106e9c259b87d9b39fdb9d3", "original_commit_id": "445bd507c3d7634b25efbc20a46c67705c991c85", "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "body": "With the guard clause in the first line of this method, you already check whether or not a user was passed, so you can savely skip the `try` here. I would even directly inline it, since it's only a single method call:\r\n```ruby\r\ncontent_tag(:p, interests) + content_tag(:p, user.interested_in_other)\r\n```\r\n\r\nWhat do you think?", "created_at": "2017-09-14T18:14:02Z", "updated_at": "2017-09-27T20:07:17Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/855#discussion_r138971005", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/855", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/138971005"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/855#discussion_r138971005"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/855"}}, "body_html": "<p>With the guard clause in the first line of this method, you already check whether or not a user was passed, so you can savely skip the <code>try</code> here. I would even directly inline it, since it's only a single method call:</p>\n<div class=\"highlight highlight-source-ruby\"><pre>content_tag(<span class=\"pl-c1\">:p</span>, interests) <span class=\"pl-k\">+</span> content_tag(<span class=\"pl-c1\">:p</span>, user.interested_in_other)</pre></div>\n<p>What do you think?</p>", "body_text": "With the guard clause in the first line of this method, you already check whether or not a user was passed, so you can savely skip the try here. I would even directly inline it, since it's only a single method call:\ncontent_tag(:p, interests) + content_tag(:p, user.interested_in_other)\nWhat do you think?"}