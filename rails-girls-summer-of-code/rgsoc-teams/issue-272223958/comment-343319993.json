{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/343319993", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/869#issuecomment-343319993", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/869", "id": 343319993, "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-09T23:00:05Z", "updated_at": "2017-11-09T23:00:16Z", "author_association": "MEMBER", "body_html": "<p>I personally wouldn't consider it <a href=\"https://github.com/f3pix\" class=\"user-mention\">@F3PiX</a>, don't really see the pay-off (but you can of course always give it a try <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji> ). Is there actually much business logic tied to \"accounts\"? Isn't it all in the devise gem? We're also only using very very few features of devise <g-emoji class=\"g-emoji\" alias=\"wink\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f609.png\">\ud83d\ude09</g-emoji></p>\n<p>Requiring a verified email to sign in is actually a feature\u2122 <a href=\"https://github.com/luisaapf\" class=\"user-mention\">@LuisaAPF</a> <g-emoji class=\"g-emoji\" alias=\"wink\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f609.png\">\ud83d\ude09</g-emoji>. User can be assigned as coaches which would e.g. require an email, etc. One could of course also solve this by adding more <code>roles</code> and restricting resources and interactions respectively. But from what I remember, the initial motivation was: verifying the email after sign up is one click away, motivating the user to do it later will probably be a harder task.<br>\n<g-emoji class=\"g-emoji\" alias=\"point_up\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/261d.png\">\u261d\ufe0f</g-emoji> this just as a background, I'm happy for suggestions on how to improve this.</p>\n<p>I pretty much like <a href=\"https://github.com/carpodaster\" class=\"user-mention\">@carpodaster</a> of sending unconfirmed users to a dedicated page right away. In theory, there would even be pages to request a new confirmation token <g-emoji class=\"g-emoji\" alias=\"see_no_evil\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f648.png\">\ud83d\ude48</g-emoji> however, I don't think they're correctly set up in the Teams App.</p>\n<p>In order to have something \"actionable\" about this bug report. What do you think about turning this in: ???</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"\" id=\"\" type=\"checkbox\"> fix / fully integrate Devise's <code>confirmable</code> module</li>\n<li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"\" id=\"\" type=\"checkbox\"> redirect users trying to log in with unconfirmed email and expired tokens to the right place</li>\n</ul>", "body_text": "I personally wouldn't consider it @F3PiX, don't really see the pay-off (but you can of course always give it a try \ud83d\udc4d ). Is there actually much business logic tied to \"accounts\"? Isn't it all in the devise gem? We're also only using very very few features of devise \ud83d\ude09\nRequiring a verified email to sign in is actually a feature\u2122 @LuisaAPF \ud83d\ude09. User can be assigned as coaches which would e.g. require an email, etc. One could of course also solve this by adding more roles and restricting resources and interactions respectively. But from what I remember, the initial motivation was: verifying the email after sign up is one click away, motivating the user to do it later will probably be a harder task.\n\u261d\ufe0f this just as a background, I'm happy for suggestions on how to improve this.\nI pretty much like @carpodaster of sending unconfirmed users to a dedicated page right away. In theory, there would even be pages to request a new confirmation token \ud83d\ude48 however, I don't think they're correctly set up in the Teams App.\nIn order to have something \"actionable\" about this bug report. What do you think about turning this in: ???\n\n fix / fully integrate Devise's confirmable module\n redirect users trying to log in with unconfirmed email and expired tokens to the right place", "body": "I personally wouldn't consider it @F3PiX, don't really see the pay-off (but you can of course always give it a try \ud83d\udc4d ). Is there actually much business logic tied to \"accounts\"? Isn't it all in the devise gem? We're also only using very very few features of devise \ud83d\ude09 \r\n\r\nRequiring a verified email to sign in is actually a feature\u2122 @LuisaAPF \ud83d\ude09. User can be assigned as coaches which would e.g. require an email, etc. One could of course also solve this by adding more `roles` and restricting resources and interactions respectively. But from what I remember, the initial motivation was: verifying the email after sign up is one click away, motivating the user to do it later will probably be a harder task.\r\n\u261d\ufe0f this just as a background, I'm happy for suggestions on how to improve this.\r\n\r\nI pretty much like @carpodaster of sending unconfirmed users to a dedicated page right away. In theory, there would even be pages to request a new confirmation token \ud83d\ude48 however, I don't think they're correctly set up in the Teams App.\r\n\r\nIn order to have something \"actionable\" about this bug report. What do you think about turning this in: ???\r\n- [ ] fix / fully integrate Devise's `confirmable` module\r\n- [ ] redirect users trying to log in with unconfirmed email and expired tokens to the right place"}