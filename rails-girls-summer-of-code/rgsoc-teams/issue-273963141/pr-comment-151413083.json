{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/151413083", "pull_request_review_id": 77114931, "id": 151413083, "diff_hunk": "@@ -1,61 +1,59 @@\n require 'spec_helper'\n \n-describe Application do\n+describe Application, type: :model do\n   subject { build(:application) }\n \n-  it { is_expected.to validate_presence_of(:application_data) }\n-  it { is_expected.to validate_presence_of(:team) }\n-\n   it_behaves_like 'HasSeason'\n+\n   it_behaves_like 'Rateable' do\n-    let(:rateable) { create(:application) }\n+    let(:application) { create(:application) }\n   end\n \n-  context 'with associations' do\n+  describe 'associations' do\n     it { is_expected.to belong_to(:team).inverse_of(:applications).counter_cache(true) }\n     it { is_expected.to belong_to(:project) }\n     it { is_expected.to belong_to(:application_draft) }\n     it { is_expected.to belong_to(:application_draft) }\n     it { is_expected.to have_many(:comments).dependent(:destroy).order(:created_at) }\n-    it { is_expected.to have_many(:todos).dependent(:destroy) }\n-    it { is_expected.to have_many(:ratings) }\n   end\n \n-  describe '#name' do\n-    it 'returns an empty string' do\n-      subject.team = nil\n-      subject.project = nil\n-      expect(subject.name).to eql ''\n-    end\n-\n-    it 'derives its name from its team and project' do\n-      subject.team = build_stubbed(:team, name: 'Foobar')\n-      subject.project = build_stubbed(:project, name: 'Hello World')\n-\n-      expect(subject.name).to eql 'Foobar - Hello World'\n-    end\n+  describe 'validations' do\n+    it { is_expected.to validate_presence_of(:application_data) }\n+    it { is_expected.to validate_presence_of(:team) }\n   end\n \n   describe 'scopes' do\n     describe '.hidden' do\n       it 'returns only hidden applications' do\n-        expect(Application.hidden.where_clause.send(:predicates)).to eq(\n+        expect(described_class.hidden.where_clause.send(:predicates)).to eq(\n           [\"applications.hidden IS NOT NULL and applications.hidden = 't'\"]\n         )\n       end\n     end\n \n     describe '.visible' do\n       it 'returns only visible applications' do\n-        expect(Application.visible.where_clause.send(:predicates)).to eq(\n+        expect(described_class.visible.where_clause.send(:predicates)).to eq(\n           [\"applications.hidden IS NULL or applications.hidden = 'f'\"]\n         )\n       end\n     end\n+\n+    describe '.rateable' do\n+      subject(:applications) { described_class.rateable }\n+\n+      let!(:application)       { create(:application, :in_current_season) }\n+      let!(:from_other_season) { create(:application, season: build(:season)) }\n+      let!(:without_team)      { create(:application, :in_current_season, :skip_validations, team: nil) }\n+\n+      it 'returns only applications from the current season which a team' do", "path": "spec/models/application_spec.rb", "position": null, "original_position": 72, "commit_id": "acbd0b55a8a6661bd467c182a525af45d2a27e25", "original_commit_id": "44c449bc830125f268c20f7437bd19d9c28442ef", "user": {"login": "F3PiX", "id": 6314687, "avatar_url": "https://avatars1.githubusercontent.com/u/6314687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F3PiX", "html_url": "https://github.com/F3PiX", "followers_url": "https://api.github.com/users/F3PiX/followers", "following_url": "https://api.github.com/users/F3PiX/following{/other_user}", "gists_url": "https://api.github.com/users/F3PiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/F3PiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F3PiX/subscriptions", "organizations_url": "https://api.github.com/users/F3PiX/orgs", "repos_url": "https://api.github.com/users/F3PiX/repos", "events_url": "https://api.github.com/users/F3PiX/events{/privacy}", "received_events_url": "https://api.github.com/users/F3PiX/received_events", "type": "User", "site_admin": false}, "body": " 'with' a team instead of 'which', I presume", "created_at": "2017-11-16T13:31:40Z", "updated_at": "2017-11-20T22:37:48Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/875#discussion_r151413083", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/875", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/151413083"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/875#discussion_r151413083"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/875"}}, "body_html": "<p>'with' a team instead of 'which', I presume</p>", "body_text": "'with' a team instead of 'which', I presume"}