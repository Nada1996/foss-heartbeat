{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/345090191", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/876#issuecomment-345090191", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/876", "id": 345090191, "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-16T22:57:40Z", "updated_at": "2017-11-16T22:57:40Z", "author_association": "MEMBER", "body_html": "<p>Thanx for pointing out <a href=\"https://github.com/f3pix\" class=\"user-mention\">@F3PiX</a> <g-emoji class=\"g-emoji\" alias=\"pray\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f64f.png\">\ud83d\ude4f</g-emoji></p>\n<p>Yes, it's true that Travis won't let you use versions different to the one specified in your Gemfile - or at least it was like this for the last 2 years. Specifically if you specify different versions from <code>rvm</code> for Travis to chose from. If I remember correctly the build then fails even before any build-steps are run, since Travis cannot match the configuration and the files in the repo correctly.<br>\nHowever, all ruby version managers (rbenv, chruby, rvm, etc.) can use a <code>.ruby-version</code> file to automatically pick up the right version if it's installed. And so does Travis <g-emoji class=\"g-emoji\" alias=\"tada\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f389.png\">\ud83c\udf89</g-emoji>  <em>(in fact, that's how I usually use Travis in other projects: only have a <code>.ruby-version</code> file in the repo which solves work picking the right version in development, ci and on production)</em>.</p>\n<p>The Gemfile-declaration is for Heroku <em>(no clue why they don't use <code>.ruby-version</code> files)</em> and from what I remember it does not have any impact on the Ruby version you use on your own machine with it. I could imagine that <code>rvm</code> is able to read and pick a version from a Gemfile, but it's very unlikely that it has preference over one specified in a <code>.ruby-version</code>.</p>\n<p>So <strong>tl;dr</strong> it should not neither break our builds nor your local dev setup <g-emoji class=\"g-emoji\" alias=\"v\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/270c.png\">\u270c\ufe0f</g-emoji></p>", "body_text": "Thanx for pointing out @F3PiX \ud83d\ude4f\nYes, it's true that Travis won't let you use versions different to the one specified in your Gemfile - or at least it was like this for the last 2 years. Specifically if you specify different versions from rvm for Travis to chose from. If I remember correctly the build then fails even before any build-steps are run, since Travis cannot match the configuration and the files in the repo correctly.\nHowever, all ruby version managers (rbenv, chruby, rvm, etc.) can use a .ruby-version file to automatically pick up the right version if it's installed. And so does Travis \ud83c\udf89  (in fact, that's how I usually use Travis in other projects: only have a .ruby-version file in the repo which solves work picking the right version in development, ci and on production).\nThe Gemfile-declaration is for Heroku (no clue why they don't use .ruby-version files) and from what I remember it does not have any impact on the Ruby version you use on your own machine with it. I could imagine that rvm is able to read and pick a version from a Gemfile, but it's very unlikely that it has preference over one specified in a .ruby-version.\nSo tl;dr it should not neither break our builds nor your local dev setup \u270c\ufe0f", "body": "Thanx for pointing out @F3PiX \ud83d\ude4f \r\n\r\nYes, it's true that Travis won't let you use versions different to the one specified in your Gemfile - or at least it was like this for the last 2 years. Specifically if you specify different versions from `rvm` for Travis to chose from. If I remember correctly the build then fails even before any build-steps are run, since Travis cannot match the configuration and the files in the repo correctly.\r\nHowever, all ruby version managers (rbenv, chruby, rvm, etc.) can use a `.ruby-version` file to automatically pick up the right version if it's installed. And so does Travis \ud83c\udf89  _(in fact, that's how I usually use Travis in other projects: only have a `.ruby-version` file in the repo which solves work picking the right version in development, ci and on production)_.\r\n\r\nThe Gemfile-declaration is for Heroku _(no clue why they don't use `.ruby-version` files)_ and from what I remember it does not have any impact on the Ruby version you use on your own machine with it. I could imagine that `rvm` is able to read and pick a version from a Gemfile, but it's very unlikely that it has preference over one specified in a `.ruby-version`.\r\n\r\nSo **tl;dr** it should not neither break our builds nor your local dev setup \u270c\ufe0f "}