{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/155531101", "pull_request_review_id": 81862715, "id": 155531101, "diff_hunk": "@@ -8,8 +8,8 @@\n   h2 Basics\n   = s.input :name, label: 'Student name', hint: 'Please provide your first and last name.', input_html: { disabled: !may_edit?(s.object) }\n   .form-inline\n-    = s.input :application_age, :collection => User::AGE, include_blank: true, label: 'Your age', disabled: !may_edit?(s.object), wrapper_html: { class: student_field_error_class(index, application_draft, :application_age)}, hint: student_field_error_hint(index, application_draft, :application_age)\n-  = s.input :application_gender_identification, as: :string, label: 'Your gender self-identification', input_html: { disabled: !may_edit?(s.object), \"data-genders-src\" => User::GENDER_LIST.to_json, class: \"gender-form-field\"}, wrapper_html: { class: student_field_error_class(index, application_draft, :application_gender_identification) }, hint: (student_field_error_hint(index, application_draft, :application_gender_identification) ||  'No-one is excluded from applying on the basis of gender, but people who self-identify as female, or have experiences being socialized as female, are given preference during selection.')\n+    = s.input :application_age, :collection => StudentFields::AGE, include_blank: true, label: 'Your age', disabled: !may_edit?(s.object), wrapper_html: { class: student_field_error_class(index, application_draft, :application_age)}, hint: student_field_error_hint(index, application_draft, :application_age)", "path": "app/views/application_drafts/_student_fields.html.slim", "position": null, "original_position": 6, "commit_id": "61a3376ade49e440f3668f7f5a86fe53bb41b11f", "original_commit_id": "86e1de98d3e7dc85d67f6dab3b62a0347fecd224", "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "body": "Not sure how relevant for the moment, but I would vote for **not** decoupling the fields / constants from where they actually belong to and just reference them straight from the model.\r\n\r\nSo in this case we're dealing with an `ApplicationDraft` model / instance right? My initial idea would have been to simply include the fields module there\r\n```ruby\r\nclass ApplicationDraft\r\n  include Fields::StudentFields\r\n```\r\nThis would add all the constants and functionality to the `ApplicationDraft` and you'd use it directly from there.", "created_at": "2017-12-07T14:15:27Z", "updated_at": "2017-12-07T19:39:27Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/879#discussion_r155531101", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/879", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/155531101"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/879#discussion_r155531101"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/879"}}, "body_html": "<p>Not sure how relevant for the moment, but I would vote for <strong>not</strong> decoupling the fields / constants from where they actually belong to and just reference them straight from the model.</p>\n<p>So in this case we're dealing with an <code>ApplicationDraft</code> model / instance right? My initial idea would have been to simply include the fields module there</p>\n<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">ApplicationDraft</span>\n  <span class=\"pl-k\">include</span> <span class=\"pl-c1\">Fields</span>::<span class=\"pl-c1\">StudentFields</span></pre></div>\n<p>This would add all the constants and functionality to the <code>ApplicationDraft</code> and you'd use it directly from there.</p>", "body_text": "Not sure how relevant for the moment, but I would vote for not decoupling the fields / constants from where they actually belong to and just reference them straight from the model.\nSo in this case we're dealing with an ApplicationDraft model / instance right? My initial idea would have been to simply include the fields module there\nclass ApplicationDraft\n  include Fields::StudentFields\nThis would add all the constants and functionality to the ApplicationDraft and you'd use it directly from there."}