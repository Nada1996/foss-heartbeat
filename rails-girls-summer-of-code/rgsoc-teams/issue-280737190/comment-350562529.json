{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/350562529", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/891#issuecomment-350562529", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/891", "id": 350562529, "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-10T17:04:41Z", "updated_at": "2017-12-10T17:07:53Z", "author_association": "MEMBER", "body_html": "<p>Nifty idea using the range <a href=\"https://github.com/f3pix\" class=\"user-mention\">@F3PiX</a> <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji><br>\nI can update it to work with that or leave the format validation all together, no strong feelings there. My point was just to have the factory build real-world data and remove unnecessary stuff from there.</p>\n<p>For the validation: it's not just related to tests. What if I would go and break the code that is building the name from an actual date? E.g. use the minutes instead of the year? Doing this I could still end up with an invalid object.</p>\n<p>Anyways, no strong feelings about the type of validation. I find both more or less equal, could update to the range approach if you think it's better readable then a regex.</p>", "body_text": "Nifty idea using the range @F3PiX \ud83d\udc4d\nI can update it to work with that or leave the format validation all together, no strong feelings there. My point was just to have the factory build real-world data and remove unnecessary stuff from there.\nFor the validation: it's not just related to tests. What if I would go and break the code that is building the name from an actual date? E.g. use the minutes instead of the year? Doing this I could still end up with an invalid object.\nAnyways, no strong feelings about the type of validation. I find both more or less equal, could update to the range approach if you think it's better readable then a regex.", "body": "Nifty idea using the range @F3PiX \ud83d\udc4d \r\nI can update it to work with that or leave the format validation all together, no strong feelings there. My point was just to have the factory build real-world data and remove unnecessary stuff from there.\r\n\r\nFor the validation: it's not just related to tests. What if I would go and break the code that is building the name from an actual date? E.g. use the minutes instead of the year? Doing this I could still end up with an invalid object.\r\n\r\nAnyways, no strong feelings about the type of validation. I find both more or less equal, could update to the range approach if you think it's better readable then a regex."}