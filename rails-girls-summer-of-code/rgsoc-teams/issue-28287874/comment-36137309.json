{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/36137309", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/62#issuecomment-36137309", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/62", "id": 36137309, "user": {"login": "svenfuchs", "id": 2208, "avatar_url": "https://avatars0.githubusercontent.com/u/2208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svenfuchs", "html_url": "https://github.com/svenfuchs", "followers_url": "https://api.github.com/users/svenfuchs/followers", "following_url": "https://api.github.com/users/svenfuchs/following{/other_user}", "gists_url": "https://api.github.com/users/svenfuchs/gists{/gist_id}", "starred_url": "https://api.github.com/users/svenfuchs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svenfuchs/subscriptions", "organizations_url": "https://api.github.com/users/svenfuchs/orgs", "repos_url": "https://api.github.com/users/svenfuchs/repos", "events_url": "https://api.github.com/users/svenfuchs/events{/privacy}", "received_events_url": "https://api.github.com/users/svenfuchs/received_events", "type": "User", "site_admin": false}, "created_at": "2014-02-26T15:33:03Z", "updated_at": "2014-02-26T15:33:03Z", "author_association": "OWNER", "body_html": "<p><a href=\"https://github.com/pxlpnk\" class=\"user-mention\">@pxlpnk</a> about the implementation ... is there a reason to not just call the table <code>applications</code> and the model <code>Application</code>? IIRC that should be possible, and I'm wondering why we wouldn't stick to a default resource naming here. (Same question about the <code>RGSOC</code> prefix.)</p>\n<p>So, you'd have an <code>ApplicationsController</code>, a base url <code>/applications</code> and a model <code>Application</code>.</p>\n<p>:)</p>", "body_text": "@pxlpnk about the implementation ... is there a reason to not just call the table applications and the model Application? IIRC that should be possible, and I'm wondering why we wouldn't stick to a default resource naming here. (Same question about the RGSOC prefix.)\nSo, you'd have an ApplicationsController, a base url /applications and a model Application.\n:)", "body": "@pxlpnk about the implementation ... is there a reason to not just call the table `applications` and the model `Application`? IIRC that should be possible, and I'm wondering why we wouldn't stick to a default resource naming here. (Same question about the `RGSOC` prefix.)\n\nSo, you'd have an `ApplicationsController`, a base url `/applications` and a model `Application`.\n\n:)\n"}