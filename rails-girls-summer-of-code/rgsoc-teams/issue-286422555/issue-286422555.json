{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/907", "repository_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams", "labels_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/907/labels{/name}", "comments_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/907/comments", "events_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/907/events", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/907", "id": 286422555, "number": 907, "title": "Create an error reporting facade", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-05T22:26:11Z", "updated_at": "2018-01-08T08:13:16Z", "closed_at": "2018-01-07T17:26:55Z", "author_association": "OWNER", "pull_request": {"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/907", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/907", "diff_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/907.diff", "patch_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/907.patch"}, "body_html": "<p>While exception tracker libraries tie into Ruby's/Rails' system automatically for uncaught exceptions, using the exception tracker's log/system/dashboard for rescued errors requires special API calls.</p>\n<p>We still haven't figured out which exception tracker we want to use (we've used Sentry, Honeybadger, and Rollbar so far). This simple class makes it easy to swap error logging providers for manual error reports.</p>\n<p>Note: the explicit <code>require</code> statements are for a seemless tie-in with PR <a href=\"https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/905\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"286409953\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/905\">#905</a>.</p>\n<p><strong>Edit</strong>: The <code>Raven.capture_exception</code> does work:</p>\n<p><a href=\"https://user-images.githubusercontent.com/164400/34650896-b3a766ac-f3c8-11e7-9abe-6646c82287d3.png\" target=\"_blank\"><img src=\"https://user-images.githubusercontent.com/164400/34650896-b3a766ac-f3c8-11e7-9abe-6646c82287d3.png\" alt=\"bildschirmfoto vom 2018-01-07 16-34-08\" style=\"max-width:100%;\"></a></p>", "body_text": "While exception tracker libraries tie into Ruby's/Rails' system automatically for uncaught exceptions, using the exception tracker's log/system/dashboard for rescued errors requires special API calls.\nWe still haven't figured out which exception tracker we want to use (we've used Sentry, Honeybadger, and Rollbar so far). This simple class makes it easy to swap error logging providers for manual error reports.\nNote: the explicit require statements are for a seemless tie-in with PR #905.\nEdit: The Raven.capture_exception does work:", "body": "While exception tracker libraries tie into Ruby's/Rails' system automatically for uncaught exceptions, using the exception tracker's log/system/dashboard for rescued errors requires special API calls.\r\n\r\nWe still haven't figured out which exception tracker we want to use (we've used Sentry, Honeybadger, and Rollbar so far). This simple class makes it easy to swap error logging providers for manual error reports.\r\n\r\nNote: the explicit `require` statements are for a seemless tie-in with PR #905. \r\n\r\n**Edit**: The `Raven.capture_exception` does work:\r\n\r\n![bildschirmfoto vom 2018-01-07 16-34-08](https://user-images.githubusercontent.com/164400/34650896-b3a766ac-f3c8-11e7-9abe-6646c82287d3.png)\r\n\r\n  "}