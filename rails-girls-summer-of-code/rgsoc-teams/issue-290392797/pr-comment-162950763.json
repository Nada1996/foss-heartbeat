{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/162950763", "pull_request_review_id": 90487450, "id": 162950763, "diff_hunk": "@@ -147,6 +147,86 @@\n     end\n   end\n \n+  describe 'limit of coaches' do\n+    let(:team) { create :team }\n+    let(:new_user) { create :user }\n+    let(:new_coach) { -> {{ name: 'coach', team_id: team.id, user_id: new_user.id }} }\n+    let(:new_coach_as_student) { -> {{ name: 'student', team_id: team.id, user_id: new_user.id }} }\n+    let(:second_new_coach) { -> {{ name: 'coach', team_id: team.id, user_id: create(:user).id }} }\n+    let(:third_new_coach) { -> {{ name: 'coach', team_id: team.id, user_id: create(:user).id }} }\n+    let(:fourth_new_coach) { -> {{ name: 'coach', team_id: team.id, user_id: create(:user).id }} }\n+    let(:fifth_new_coach) { -> {{ name: 'coach', team_id: team.id, user_id: create(:user).id }} }\n+    let(:remove_coach) { -> {{ name: 'coach', team_id: team.id, user_id: create(:user).id, _destroy: true }} }\n+\n+    context 'when team has no coaches yet' do\n+      it 'allows to add 2 new coaches' do\n+        roles_attributes = [new_coach.call, second_new_coach.call, third_new_coach.call, fourth_new_coach.call]\n+        expect {\n+          team.update roles_attributes: roles_attributes\n+        }.to change { team.members.count }.by 4\n+      end\n+\n+      it 'ignores coaches marked for destruction' do\n+        roles_attributes = [new_coach.call, second_new_coach.call, third_new_coach.call, fourth_new_coach.call]\n+        roles_attributes << remove_coach.call\n+        expect {\n+          team.update roles_attributes: roles_attributes\n+        }.to change { team.members.count }.by 4\n+      end\n+\n+      it 'does not allow to add more than 5 new coaches' do\n+        roles_attributes = [new_coach.call, second_new_coach.call, third_new_coach.call, fourth_new_coach.call, fifth_new_coach.call]\n+        team.attributes = { roles_attributes: roles_attributes }\n+        expect { team.save }.not_to change { team.members.count }\n+        expect(team.errors[:roles].first).to eql 'there cannot be more than 4 coaches on a team.'\n+      end\n+\n+      it 'does not allow the same coach to fill up both spots' do\n+        roles_attributes = [new_coach.call] * 2\n+        team.attributes = { roles_attributes: roles_attributes }\n+        expect { team.save }.not_to change { team.members.count }\n+        expect(team.errors[:base].first).to eql \"#{new_user.name} can't have more than one role in this team!\"\n+      end\n+\n+      it 'does not allow the same coach to add themselves as a student' do\n+        roles_attributes = [new_coach.call, new_coach_as_student.call]\n+        team.attributes = { roles_attributes: roles_attributes }\n+        expect { team.save }.not_to change { team.members.count }\n+        expect(team.errors[:base].first).to eql \"#{new_user.name} can't have more than one role in this team!\"\n+      end\n+    end\n+    context 'when team has coaches' do\n+      let!(:coach_1) { create :coach_role, team: team, user: create(:user) }", "path": "spec/models/team_spec.rb", "position": null, "original_position": 53, "commit_id": "1d92cb3cb1538663d2f763f8f55523e82637603d", "original_commit_id": "eb52dc69995d1b468aacf72607f598167fd1c4e5", "user": {"login": "ramonh", "id": 656318, "avatar_url": "https://avatars1.githubusercontent.com/u/656318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramonh", "html_url": "https://github.com/ramonh", "followers_url": "https://api.github.com/users/ramonh/followers", "following_url": "https://api.github.com/users/ramonh/following{/other_user}", "gists_url": "https://api.github.com/users/ramonh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramonh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramonh/subscriptions", "organizations_url": "https://api.github.com/users/ramonh/orgs", "repos_url": "https://api.github.com/users/ramonh/repos", "events_url": "https://api.github.com/users/ramonh/events{/privacy}", "received_events_url": "https://api.github.com/users/ramonh/received_events", "type": "User", "site_admin": false}, "body": "Instead, using `4.times.map { create :coach_role, team: team, user: create(:user) }` does the trick. What do you think?", "created_at": "2018-01-22T14:25:40Z", "updated_at": "2018-01-25T09:17:00Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/913#discussion_r162950763", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/913", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/162950763"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/913#discussion_r162950763"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/913"}}, "body_html": "<p>Instead, using <code>4.times.map { create :coach_role, team: team, user: create(:user) }</code> does the trick. What do you think?</p>", "body_text": "Instead, using 4.times.map { create :coach_role, team: team, user: create(:user) } does the trick. What do you think?", "in_reply_to_id": 162939088}