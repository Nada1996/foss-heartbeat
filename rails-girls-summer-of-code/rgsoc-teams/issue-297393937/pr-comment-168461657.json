{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/168461657", "pull_request_review_id": 96829894, "id": 168461657, "diff_hunk": "@@ -86,6 +86,10 @@ def github_import=(import)\n     @github_import = import\n   end\n \n+  def visible_teams", "path": "app/models/user.rb", "position": null, "original_position": 4, "commit_id": "094f81bcb5de56992400fc1f5b0aa785f09062ad", "original_commit_id": "e1287b15e3d50b351dddac5bdd1de8bc5d8543f2", "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "body": "Personal taste, but I think it's overkill to a) introduce a new method in the `user` model for this and b) merge the two queries which roughly do the same...\r\n\r\nHow about refactoring the `visible` class method on the `Team` model into a scope? It's technically speaking already this... Then you'll be able to simply chain the scopes into something like\r\n```ruby\r\nuser.teams.accepted.visible\r\n```\r\n\r\nWhat do you think?", "created_at": "2018-02-15T12:31:19Z", "updated_at": "2018-02-16T11:18:19Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/938#discussion_r168461657", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/938", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/168461657"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/938#discussion_r168461657"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/938"}}, "body_html": "<p>Personal taste, but I think it's overkill to a) introduce a new method in the <code>user</code> model for this and b) merge the two queries which roughly do the same...</p>\n<p>How about refactoring the <code>visible</code> class method on the <code>Team</code> model into a scope? It's technically speaking already this... Then you'll be able to simply chain the scopes into something like</p>\n<div class=\"highlight highlight-source-ruby\"><pre>user.teams.accepted.visible</pre></div>\n<p>What do you think?</p>", "body_text": "Personal taste, but I think it's overkill to a) introduce a new method in the user model for this and b) merge the two queries which roughly do the same...\nHow about refactoring the visible class method on the Team model into a scope? It's technically speaking already this... Then you'll be able to simply chain the scopes into something like\nuser.teams.accepted.visible\nWhat do you think?"}