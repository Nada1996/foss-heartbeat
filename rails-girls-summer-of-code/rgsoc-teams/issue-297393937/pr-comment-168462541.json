{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/168462541", "pull_request_review_id": 96829894, "id": 168462541, "diff_hunk": "@@ -42,10 +42,10 @@ nav.actions\n     h4 About me\n     p = render_markdown(@user.bio).html_safe\n \n-  - if @user.teams.any?\n+  - if @user.visible_teams.any?", "path": "app/views/users/show.html.slim", "position": null, "original_position": 5, "commit_id": "094f81bcb5de56992400fc1f5b0aa785f09062ad", "original_commit_id": "e1287b15e3d50b351dddac5bdd1de8bc5d8543f2", "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "body": "I'm still not 100% sure if I got the feature and the issue right. The way I understand it, teams set to \"invisible\" should be hidden from the profile until they are accepted. That's also how I read the current implementation of the `visible` method on the `team`:\r\n```ruby\r\ndef visible\r\n  where(\"teams.invisible IS NOT TRUE OR teams.kind IN (?)\", KINDS)\r\nend\r\n```\r\nSo once a team is accepted, it's always visible. Which also means, the chaining of scopes you do in the user model should actually not even be necessary. It should be enough to do a\r\n```ruby\r\n@user.teams.visible.any?\r\n```", "created_at": "2018-02-15T12:35:20Z", "updated_at": "2018-02-16T11:18:19Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/938#discussion_r168462541", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/938", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/168462541"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/938#discussion_r168462541"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/938"}}, "body_html": "<p>I'm still not 100% sure if I got the feature and the issue right. The way I understand it, teams set to \"invisible\" should be hidden from the profile until they are accepted. That's also how I read the current implementation of the <code>visible</code> method on the <code>team</code>:</p>\n<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">visible</span>\n  where(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>teams.invisible IS NOT TRUE OR teams.kind IN (?)<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">KINDS</span>)\n<span class=\"pl-k\">end</span></pre></div>\n<p>So once a team is accepted, it's always visible. Which also means, the chaining of scopes you do in the user model should actually not even be necessary. It should be enough to do a</p>\n<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-smi\">@user</span>.teams.visible.any?</pre></div>", "body_text": "I'm still not 100% sure if I got the feature and the issue right. The way I understand it, teams set to \"invisible\" should be hidden from the profile until they are accepted. That's also how I read the current implementation of the visible method on the team:\ndef visible\n  where(\"teams.invisible IS NOT TRUE OR teams.kind IN (?)\", KINDS)\nend\nSo once a team is accepted, it's always visible. Which also means, the chaining of scopes you do in the user model should actually not even be necessary. It should be enough to do a\n@user.teams.visible.any?"}