{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/170453081", "pull_request_review_id": 99143085, "id": 170453081, "diff_hunk": "@@ -32,6 +32,11 @@ def teams\n   end\n   helper_method :teams\n \n+  def last_season_teams\n+    Team.select {|t| t.season_id == Season.current.id + 1 && (t.kind == 'sponsored' || t.kind == 'voluntary' || t.kind == 'full_time' || t.kind == 'part_time')}\n+  end\n+  helper_method :last_season_teams\n+", "path": "app/controllers/activities_controller.rb", "position": 8, "original_position": 8, "commit_id": "c4b9b7bed12808b5dbc1e032aa0887eb84c08a14", "original_commit_id": "c4b9b7bed12808b5dbc1e032aa0887eb84c08a14", "user": {"login": "F3PiX", "id": 6314687, "avatar_url": "https://avatars1.githubusercontent.com/u/6314687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F3PiX", "html_url": "https://github.com/F3PiX", "followers_url": "https://api.github.com/users/F3PiX/followers", "following_url": "https://api.github.com/users/F3PiX/following{/other_user}", "gists_url": "https://api.github.com/users/F3PiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/F3PiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F3PiX/subscriptions", "organizations_url": "https://api.github.com/users/F3PiX/orgs", "repos_url": "https://api.github.com/users/F3PiX/repos", "events_url": "https://api.github.com/users/F3PiX/events{/privacy}", "received_events_url": "https://api.github.com/users/F3PiX/received_events", "type": "User", "site_admin": false}, "body": "It can be confusing that we have the 'in_current_season' as a scope on the team, and then a separate method for `last_season_teams` hidden in the controller. \r\nIt would be great to have  a new scope in the Team model, that mirrors the existing 'in current season' scope. So, that would be 'in_previous_season'. \r\nWith that scope in place, you can use the `teams` method in line 31 to switch between the two scopes. YaY! That means you don't need the `else` clause in the view!\r\n \r\n\r\nThe changed 'kinds' categories makes working with the kinds harder now. :-( I can think of a neater solution with the accepted method, but maybe there is a better work around. What if we check if there are `teams.in_previous_season` with activities? I'd think that only the 'accepted' teams had activities. \r\nI'd like a second opinion on this solution. cc @carpodaster || @klappradla ^\r\n\r\n \r\n", "created_at": "2018-02-25T13:32:01Z", "updated_at": "2018-02-25T13:32:34Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/941#discussion_r170453081", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/941", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/170453081"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/941#discussion_r170453081"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/941"}}, "body_html": "<p>It can be confusing that we have the 'in_current_season' as a scope on the team, and then a separate method for <code>last_season_teams</code> hidden in the controller.<br>\nIt would be great to have  a new scope in the Team model, that mirrors the existing 'in current season' scope. So, that would be 'in_previous_season'.<br>\nWith that scope in place, you can use the <code>teams</code> method in line 31 to switch between the two scopes. YaY! That means you don't need the <code>else</code> clause in the view!</p>\n<p>The changed 'kinds' categories makes working with the kinds harder now. :-( I can think of a neater solution with the accepted method, but maybe there is a better work around. What if we check if there are <code>teams.in_previous_season</code> with activities? I'd think that only the 'accepted' teams had activities.<br>\nI'd like a second opinion on this solution. cc <a href=\"https://github.com/carpodaster\" class=\"user-mention\">@carpodaster</a> || <a href=\"https://github.com/klappradla\" class=\"user-mention\">@klappradla</a> ^</p>", "body_text": "It can be confusing that we have the 'in_current_season' as a scope on the team, and then a separate method for last_season_teams hidden in the controller.\nIt would be great to have  a new scope in the Team model, that mirrors the existing 'in current season' scope. So, that would be 'in_previous_season'.\nWith that scope in place, you can use the teams method in line 31 to switch between the two scopes. YaY! That means you don't need the else clause in the view!\nThe changed 'kinds' categories makes working with the kinds harder now. :-( I can think of a neater solution with the accepted method, but maybe there is a better work around. What if we check if there are teams.in_previous_season with activities? I'd think that only the 'accepted' teams had activities.\nI'd like a second opinion on this solution. cc @carpodaster || @klappradla ^"}