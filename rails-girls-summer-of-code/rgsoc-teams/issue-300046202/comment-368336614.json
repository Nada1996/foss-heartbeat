{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/368336614", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/946#issuecomment-368336614", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/946", "id": 368336614, "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-25T19:22:47Z", "updated_at": "2018-02-25T19:23:04Z", "author_association": "OWNER", "body_html": "<p>I generally agree to the notion that the app is moving and we cannot guarantee backwards compatibility forever. It's the price we pay for several other gains (like not having to set up / fork the app every year, re-using users/organizers, general visibility of past teams, \u2026).</p>\n<p>Fwiw, can we not <em>add</em> the new <code>kind</code> values and map the past values to what we define here as their present day counterpart in the AR scope on team? We'd have to make sure that we don't do <code>where(kind: 'value')</code> (which we do, I think <g-emoji class=\"g-emoji\" alias=\"thinking\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f914.png\">\ud83e\udd14</g-emoji> ) and go through the proper AR scope instead.</p>", "body_text": "I generally agree to the notion that the app is moving and we cannot guarantee backwards compatibility forever. It's the price we pay for several other gains (like not having to set up / fork the app every year, re-using users/organizers, general visibility of past teams, \u2026).\nFwiw, can we not add the new kind values and map the past values to what we define here as their present day counterpart in the AR scope on team? We'd have to make sure that we don't do where(kind: 'value') (which we do, I think \ud83e\udd14 ) and go through the proper AR scope instead.", "body": "I generally agree to the notion that the app is moving and we cannot guarantee backwards compatibility forever. It's the price we pay for several other gains (like not having to set up / fork the app every year, re-using users/organizers, general visibility of past teams, \u2026).\r\n\r\nFwiw, can we not _add_ the new `kind` values and map the past values to what we define here as their present day counterpart in the AR scope on team? We'd have to make sure that we don't do `where(kind: 'value')` (which we do, I think :thinking: ) and go through the proper AR scope instead."}