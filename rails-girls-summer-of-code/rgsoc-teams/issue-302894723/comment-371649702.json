{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/371649702", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/961#issuecomment-371649702", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/961", "id": 371649702, "user": {"login": "klappradla", "id": 3491815, "avatar_url": "https://avatars3.githubusercontent.com/u/3491815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klappradla", "html_url": "https://github.com/klappradla", "followers_url": "https://api.github.com/users/klappradla/followers", "following_url": "https://api.github.com/users/klappradla/following{/other_user}", "gists_url": "https://api.github.com/users/klappradla/gists{/gist_id}", "starred_url": "https://api.github.com/users/klappradla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klappradla/subscriptions", "organizations_url": "https://api.github.com/users/klappradla/orgs", "repos_url": "https://api.github.com/users/klappradla/repos", "events_url": "https://api.github.com/users/klappradla/events{/privacy}", "received_events_url": "https://api.github.com/users/klappradla/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-08T22:39:23Z", "updated_at": "2018-03-08T22:39:23Z", "author_association": "MEMBER", "body_html": "<p>First of all: sorry for this super messy PR <a href=\"https://github.com/carpodaster\" class=\"user-mention\">@carpodaster</a> &amp; <a href=\"https://github.com/f3pix\" class=\"user-mention\">@F3PiX</a> <g-emoji class=\"g-emoji\" alias=\"see_no_evil\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f648.png\">\ud83d\ude48</g-emoji></p>\n<p>I threw it together pretty quickly and should definitely clean up a bit more until this is ready to be merged <g-emoji class=\"g-emoji\" alias=\"cactus\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f335.png\">\ud83c\udf35</g-emoji><br>\nThe <code>driver: :chrome</code> thing I added to the readme can come in really handy in my opinion - it's basically how I work when I have to do non-JS things that touch Rails views.</p>\n<p><strong>system tests</strong><br>\nFor what you wrote on system tests <a href=\"https://github.com/f3pix\" class=\"user-mention\">@F3PiX</a> : thanx for that <g-emoji class=\"g-emoji\" alias=\"pray\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f64f.png\">\ud83d\ude4f</g-emoji><br>\nI didn't know RSpec makes a difference between them and always just assumed, <code>feature</code> would wrap what Rails calls <em>\"system\"</em>.<br>\nNot sure if I really know their application yet though <g-emoji class=\"g-emoji\" alias=\"see_no_evil\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f648.png\">\ud83d\ude48</g-emoji> . Should the tests I added in this PR be converted into <code>system</code> ones?</p>\n<p><g-emoji class=\"g-emoji\" alias=\"point_up\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/261d.png\">\u261d\ufe0f</g-emoji> tl;dr</p>\n<blockquote>\n<p>I didn't know that there's a difference between <code>feature</code> and <code>system</code> test and now that I know don't know the actual difference.</p>\n</blockquote>\n<p>I also did not know about Rails shipping with Capybara and a collection of headless browsers - that's awesome <g-emoji class=\"g-emoji\" alias=\"tada\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f389.png\">\ud83c\udf89</g-emoji> Does this mean I can ditch anything I did for setting up headless Chrome?</p>\n<p><strong>setup</strong><br>\nFor what you wrote on the file extensions <a href=\"https://github.com/carpodaster\" class=\"user-mention\">@carpodaster</a>, yes it's true and as far as I know does not do any damage to append a <code>.html</code> to the filenames for <code>.slim</code> files. It's visual clutter to me, therefore I removed it - but happy to but it back <g-emoji class=\"g-emoji\" alias=\"v\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/270c.png\">\u270c\ufe0f</g-emoji> I totally wasn't aware that people may actually care about it <g-emoji class=\"g-emoji\" alias=\"see_no_evil\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f648.png\">\ud83d\ude48</g-emoji></p>\n<p>For headless Chrome setup: you're definitely right, it will add another burden to get set up and running with the app <g-emoji class=\"g-emoji\" alias=\"disappointed\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f61e.png\">\ud83d\ude1e</g-emoji> . I thought about it and considered it an okish trade off compared to the benefit in terms of productivity and maintainability. It doesn't hinder people from running the app locally and getting started with the code at first... so they may be motivated enough to dive into these details once they're on the verge of opening a PR <g-emoji class=\"g-emoji\" alias=\"thinking\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f914.png\">\ud83e\udd14</g-emoji></p>\n<p>I think\u2122 one needs to a) have Chrome installed b) have the <code>chromedriver</code> installed (homebrew as you said) and c) start the chromedriver.<br>\nIf I look at my processes:</p>\n<pre><code>\u276f ps aux | ag chrome\nmax              57906   0.0  0.1  4446784  18320 s007  S     3:39PM   0:00.71 /usr/local/bin/chromedriver --port=9519\nmax              56795   0.0  0.1  4418684  14752 s007  S     3:35PM   0:00.16 /usr/local/bin/chromedriver --port=9518\nmax              55833   0.0  0.1  4418684  11840 s007  S     3:31PM   0:00.14 /usr/local/bin/chromedriver --port=9517\nmax              54972   0.0  0.1  4418684  11864 s007  S     3:26PM   0:00.13 /usr/local/bin/chromedriver --port=9516\nmax              54357   0.0  0.1  4418684  11864 s007  S     3:23PM   0:00.14 /usr/local/bin/chromedriver --port=9515\nmax              57907   0.0  0.0        0      0 s007  Z     3:39PM   0:00.00 (Google Chrome)\nmax              56796   0.0  0.0        0      0 s007  Z     3:35PM   0:00.00 (Google Chrome)\nmax              55834   0.0  0.0        0      0 s007  Z     3:31PM   0:00.00 (Google Chrome)\nmax              54973   0.0  0.0        0      0 s007  Z     3:26PM   0:00.00 (Google Chrome)\nmax              12881   0.0  0.0  4259132    296 s018  R+   11:26PM   0:00.00 ag chrome\nmax              54358   0.0  0.0        0      0 s007  Z     3:23PM   0:00.00 (Google Chrome)\n</code></pre>\n<p>You see <code>chromedriver</code> at multiple ports.</p>\n<p>I use the <code>plist</code> files that come with homebrew to start it once:</p>\n<pre><code>brew services start chromedriver\n</code></pre>\n<p>it for me is then automatically started and stopped whenever I run tests:</p>\n<pre><code>\u276f brew services list\nName         Status  User Plist\npostgresql   started max  /Users/max/Library/LaunchAgents/homebrew.mxcl.postgresql.plist\nredis        started max  /Users/max/Library/LaunchAgents/homebrew.mxcl.redis.plist\nemacs        stopped\nmemcached    started max  /Users/max/Library/LaunchAgents/homebrew.mxcl.memcached.plist\nchromedriver stopped\n</code></pre>\n<p><g-emoji class=\"g-emoji\" alias=\"heavy_plus_sign\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/2795.png\">\u2795</g-emoji> I agree I should look for an easier setup for the Chrome &amp; the feature tests.<br>\nI also came across <a href=\"https://github.com/flavorjones/chromedriver-helper\">chromedriver as a gem</a> but considered it to be the wrong tool for the job (even worse then packaging JS  CSS in gems).</p>\n<p><strong>so...</strong><br>\nI'll <g-emoji class=\"g-emoji\" alias=\"eyes\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f440.png\">\ud83d\udc40</g-emoji> for an easier setup of the whole thing plus clean up this PR. Happy about suggestions <g-emoji class=\"g-emoji\" alias=\"bulb\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f4a1.png\">\ud83d\udca1</g-emoji> (system test stuff and other headless browsers)</p>", "body_text": "First of all: sorry for this super messy PR @carpodaster & @F3PiX \ud83d\ude48\nI threw it together pretty quickly and should definitely clean up a bit more until this is ready to be merged \ud83c\udf35\nThe driver: :chrome thing I added to the readme can come in really handy in my opinion - it's basically how I work when I have to do non-JS things that touch Rails views.\nsystem tests\nFor what you wrote on system tests @F3PiX : thanx for that \ud83d\ude4f\nI didn't know RSpec makes a difference between them and always just assumed, feature would wrap what Rails calls \"system\".\nNot sure if I really know their application yet though \ud83d\ude48 . Should the tests I added in this PR be converted into system ones?\n\u261d\ufe0f tl;dr\n\nI didn't know that there's a difference between feature and system test and now that I know don't know the actual difference.\n\nI also did not know about Rails shipping with Capybara and a collection of headless browsers - that's awesome \ud83c\udf89 Does this mean I can ditch anything I did for setting up headless Chrome?\nsetup\nFor what you wrote on the file extensions @carpodaster, yes it's true and as far as I know does not do any damage to append a .html to the filenames for .slim files. It's visual clutter to me, therefore I removed it - but happy to but it back \u270c\ufe0f I totally wasn't aware that people may actually care about it \ud83d\ude48\nFor headless Chrome setup: you're definitely right, it will add another burden to get set up and running with the app \ud83d\ude1e . I thought about it and considered it an okish trade off compared to the benefit in terms of productivity and maintainability. It doesn't hinder people from running the app locally and getting started with the code at first... so they may be motivated enough to dive into these details once they're on the verge of opening a PR \ud83e\udd14\nI think\u2122 one needs to a) have Chrome installed b) have the chromedriver installed (homebrew as you said) and c) start the chromedriver.\nIf I look at my processes:\n\u276f ps aux | ag chrome\nmax              57906   0.0  0.1  4446784  18320 s007  S     3:39PM   0:00.71 /usr/local/bin/chromedriver --port=9519\nmax              56795   0.0  0.1  4418684  14752 s007  S     3:35PM   0:00.16 /usr/local/bin/chromedriver --port=9518\nmax              55833   0.0  0.1  4418684  11840 s007  S     3:31PM   0:00.14 /usr/local/bin/chromedriver --port=9517\nmax              54972   0.0  0.1  4418684  11864 s007  S     3:26PM   0:00.13 /usr/local/bin/chromedriver --port=9516\nmax              54357   0.0  0.1  4418684  11864 s007  S     3:23PM   0:00.14 /usr/local/bin/chromedriver --port=9515\nmax              57907   0.0  0.0        0      0 s007  Z     3:39PM   0:00.00 (Google Chrome)\nmax              56796   0.0  0.0        0      0 s007  Z     3:35PM   0:00.00 (Google Chrome)\nmax              55834   0.0  0.0        0      0 s007  Z     3:31PM   0:00.00 (Google Chrome)\nmax              54973   0.0  0.0        0      0 s007  Z     3:26PM   0:00.00 (Google Chrome)\nmax              12881   0.0  0.0  4259132    296 s018  R+   11:26PM   0:00.00 ag chrome\nmax              54358   0.0  0.0        0      0 s007  Z     3:23PM   0:00.00 (Google Chrome)\n\nYou see chromedriver at multiple ports.\nI use the plist files that come with homebrew to start it once:\nbrew services start chromedriver\n\nit for me is then automatically started and stopped whenever I run tests:\n\u276f brew services list\nName         Status  User Plist\npostgresql   started max  /Users/max/Library/LaunchAgents/homebrew.mxcl.postgresql.plist\nredis        started max  /Users/max/Library/LaunchAgents/homebrew.mxcl.redis.plist\nemacs        stopped\nmemcached    started max  /Users/max/Library/LaunchAgents/homebrew.mxcl.memcached.plist\nchromedriver stopped\n\n\u2795 I agree I should look for an easier setup for the Chrome & the feature tests.\nI also came across chromedriver as a gem but considered it to be the wrong tool for the job (even worse then packaging JS  CSS in gems).\nso...\nI'll \ud83d\udc40 for an easier setup of the whole thing plus clean up this PR. Happy about suggestions \ud83d\udca1 (system test stuff and other headless browsers)", "body": "First of all: sorry for this super messy PR @carpodaster & @F3PiX \ud83d\ude48 \r\n\r\nI threw it together pretty quickly and should definitely clean up a bit more until this is ready to be merged \ud83c\udf35\r\nThe `driver: :chrome` thing I added to the readme can come in really handy in my opinion - it's basically how I work when I have to do non-JS things that touch Rails views.\r\n\r\n**system tests**\r\nFor what you wrote on system tests @F3PiX : thanx for that \ud83d\ude4f \r\nI didn't know RSpec makes a difference between them and always just assumed, `feature` would wrap what Rails calls *\"system\"*. \r\nNot sure if I really know their application yet though \ud83d\ude48 . Should the tests I added in this PR be converted into `system` ones?\r\n\r\n\u261d\ufe0f tl;dr\r\n> I didn't know that there's a difference between `feature` and `system` test and now that I know don't know the actual difference.\r\n\r\nI also did not know about Rails shipping with Capybara and a collection of headless browsers - that's awesome \ud83c\udf89 Does this mean I can ditch anything I did for setting up headless Chrome?\r\n\r\n**setup**\r\nFor what you wrote on the file extensions @carpodaster, yes it's true and as far as I know does not do any damage to append a `.html` to the filenames for `.slim` files. It's visual clutter to me, therefore I removed it - but happy to but it back \u270c\ufe0f I totally wasn't aware that people may actually care about it \ud83d\ude48 \r\n\r\nFor headless Chrome setup: you're definitely right, it will add another burden to get set up and running with the app \ud83d\ude1e . I thought about it and considered it an okish trade off compared to the benefit in terms of productivity and maintainability. It doesn't hinder people from running the app locally and getting started with the code at first... so they may be motivated enough to dive into these details once they're on the verge of opening a PR \ud83e\udd14 \r\n\r\nI think\u2122 one needs to a) have Chrome installed b) have the `chromedriver` installed (homebrew as you said) and c) start the chromedriver.\r\nIf I look at my processes:\r\n```\r\n\u276f ps aux | ag chrome\r\nmax              57906   0.0  0.1  4446784  18320 s007  S     3:39PM   0:00.71 /usr/local/bin/chromedriver --port=9519\r\nmax              56795   0.0  0.1  4418684  14752 s007  S     3:35PM   0:00.16 /usr/local/bin/chromedriver --port=9518\r\nmax              55833   0.0  0.1  4418684  11840 s007  S     3:31PM   0:00.14 /usr/local/bin/chromedriver --port=9517\r\nmax              54972   0.0  0.1  4418684  11864 s007  S     3:26PM   0:00.13 /usr/local/bin/chromedriver --port=9516\r\nmax              54357   0.0  0.1  4418684  11864 s007  S     3:23PM   0:00.14 /usr/local/bin/chromedriver --port=9515\r\nmax              57907   0.0  0.0        0      0 s007  Z     3:39PM   0:00.00 (Google Chrome)\r\nmax              56796   0.0  0.0        0      0 s007  Z     3:35PM   0:00.00 (Google Chrome)\r\nmax              55834   0.0  0.0        0      0 s007  Z     3:31PM   0:00.00 (Google Chrome)\r\nmax              54973   0.0  0.0        0      0 s007  Z     3:26PM   0:00.00 (Google Chrome)\r\nmax              12881   0.0  0.0  4259132    296 s018  R+   11:26PM   0:00.00 ag chrome\r\nmax              54358   0.0  0.0        0      0 s007  Z     3:23PM   0:00.00 (Google Chrome)\r\n```\r\n\r\nYou see `chromedriver` at multiple ports.\r\n\r\nI use the `plist` files that come with homebrew to start it once:\r\n```\r\nbrew services start chromedriver\r\n```\r\n\r\nit for me is then automatically started and stopped whenever I run tests:\r\n```\r\n\u276f brew services list\r\nName         Status  User Plist\r\npostgresql   started max  /Users/max/Library/LaunchAgents/homebrew.mxcl.postgresql.plist\r\nredis        started max  /Users/max/Library/LaunchAgents/homebrew.mxcl.redis.plist\r\nemacs        stopped\r\nmemcached    started max  /Users/max/Library/LaunchAgents/homebrew.mxcl.memcached.plist\r\nchromedriver stopped\r\n```\r\n\r\n\u2795 I agree I should look for an easier setup for the Chrome & the feature tests.\r\nI also came across [chromedriver as a gem](https://github.com/flavorjones/chromedriver-helper) but considered it to be the wrong tool for the job (even worse then packaging JS  CSS in gems).\r\n\r\n**so...**\r\nI'll \ud83d\udc40 for an easier setup of the whole thing plus clean up this PR. Happy about suggestions \ud83d\udca1 (system test stuff and other headless browsers)"}