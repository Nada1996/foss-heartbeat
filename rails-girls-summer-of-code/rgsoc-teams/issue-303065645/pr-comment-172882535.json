{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/172882535", "pull_request_review_id": 101975871, "id": 172882535, "diff_hunk": "@@ -22,6 +22,8 @@ class Application < ApplicationRecord\n \n   validates :team, :application_data, presence: true\n \n+  before_validation :ensure_flags_unique\n+", "path": "app/models/application.rb", "position": null, "original_position": 5, "commit_id": "861ffedf8c6891fe2ac84bc0d741829c7d412a66", "original_commit_id": "ac87a4b5eae4226543bf5782adb567ee099ab7ca", "user": {"login": "F3PiX", "id": 6314687, "avatar_url": "https://avatars1.githubusercontent.com/u/6314687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/F3PiX", "html_url": "https://github.com/F3PiX", "followers_url": "https://api.github.com/users/F3PiX/followers", "following_url": "https://api.github.com/users/F3PiX/following{/other_user}", "gists_url": "https://api.github.com/users/F3PiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/F3PiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/F3PiX/subscriptions", "organizations_url": "https://api.github.com/users/F3PiX/orgs", "repos_url": "https://api.github.com/users/F3PiX/repos", "events_url": "https://api.github.com/users/F3PiX/events{/privacy}", "received_events_url": "https://api.github.com/users/F3PiX/received_events", "type": "User", "site_admin": false}, "body": "Since `flags` is an attribute on `Application`, wouldn't it be easier to add a validator instead of the before hook?  And back it up with a database constraint.  \r\nIf that is possible at all, I am not totally sure about how the flags are set. \r\n\r\nIf that ^ is not possible, maybe add an error message to the :ensure_flags_unique method? Because this will fail silently, right?  ", "created_at": "2018-03-07T15:37:30Z", "updated_at": "2018-03-08T09:18:45Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/963#discussion_r172882535", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/963", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/172882535"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/963#discussion_r172882535"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/963"}}, "body_html": "<p>Since <code>flags</code> is an attribute on <code>Application</code>, wouldn't it be easier to add a validator instead of the before hook?  And back it up with a database constraint.<br>\nIf that is possible at all, I am not totally sure about how the flags are set.</p>\n<p>If that ^ is not possible, maybe add an error message to the :ensure_flags_unique method? Because this will fail silently, right?</p>", "body_text": "Since flags is an attribute on Application, wouldn't it be easier to add a validator instead of the before hook?  And back it up with a database constraint.\nIf that is possible at all, I am not totally sure about how the flags are set.\nIf that ^ is not possible, maybe add an error message to the :ensure_flags_unique method? Because this will fail silently, right?"}