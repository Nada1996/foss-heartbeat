{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/12256798", "pull_request_review_id": null, "id": 12256798, "diff_hunk": "@@ -0,0 +1,158 @@\n+require 'spec_helper'\n+require 'cancan/matchers'\n+\n+describe CompaniesController do\n+\n+  let(:user) { FactoryGirl.create(:user) }\n+  let(:company) { FactoryGirl.create(:company) }\n+\n+  let(:valid_attributes) { build(:company).attributes }\n+  let(:valid_session)    { { \"warden.user.user.key\" => session[\"warden.user.user.key\"] } }\n+\n+  before :each do\n+    user.roles.create(name: 'Pauline')\n+    sign_in user\n+  end\n+\n+  describe \"GET index\" do\n+    it \"assigns all comapanies as @companies\" do\n+      pending \"Randomly failing spec.\"\n+      get :index, {}, valid_session\n+      expect(assigns(:companies).to_a).to be == [company]", "path": "spec/controllers/companies_controller_spec.rb", "position": null, "original_position": 21, "commit_id": "6a849d940f2991b7e531dd9ffdc559ea7029596c", "original_commit_id": "8631bd404ace0336a3a40973d5bd6037ab5b0ed4", "user": {"login": "joneslee85", "id": 135605, "avatar_url": "https://avatars2.githubusercontent.com/u/135605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joneslee85", "html_url": "https://github.com/joneslee85", "followers_url": "https://api.github.com/users/joneslee85/followers", "following_url": "https://api.github.com/users/joneslee85/following{/other_user}", "gists_url": "https://api.github.com/users/joneslee85/gists{/gist_id}", "starred_url": "https://api.github.com/users/joneslee85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joneslee85/subscriptions", "organizations_url": "https://api.github.com/users/joneslee85/orgs", "repos_url": "https://api.github.com/users/joneslee85/repos", "events_url": "https://api.github.com/users/joneslee85/events{/privacy}", "received_events_url": "https://api.github.com/users/joneslee85/received_events", "type": "User", "site_admin": false}, "body": "this has not covered everything, IMHO you should check:\n- assigns is correctly assigned\n- response code\n- rendered template\n\nFor example\n\n``` ruby\ndescribe 'GET index' do\n  before do\n    get :index\n  end\n\n  specify do\n    expect(response.response_code).to eq 200\n    expect(assigns(:companies)).to eq [company]\n    expect(response).to render_template('companies/index')\n  end\nend\n```\n", "created_at": "2014-05-03T15:10:29Z", "updated_at": "2014-05-11T18:09:15Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/94#discussion_r12256798", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/94", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/12256798"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/94#discussion_r12256798"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/94"}}, "body_html": "<p>this has not covered everything, IMHO you should check:</p>\n<ul>\n<li>assigns is correctly assigned</li>\n<li>response code</li>\n<li>rendered template</li>\n</ul>\n<p>For example</p>\n<div class=\"highlight highlight-source-ruby\"><pre>describe <span class=\"pl-s\"><span class=\"pl-pds\">'</span>GET index<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">do</span>\n  before <span class=\"pl-k\">do</span>\n    get <span class=\"pl-c1\">:index</span>\n  <span class=\"pl-k\">end</span>\n\n  specify <span class=\"pl-k\">do</span>\n    expect(response.response_code).to eq <span class=\"pl-c1\">200</span>\n    expect(assigns(<span class=\"pl-c1\">:companies</span>)).to eq [company]\n    expect(response).to render_template(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>companies/index<span class=\"pl-pds\">'</span></span>)\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>", "body_text": "this has not covered everything, IMHO you should check:\n\nassigns is correctly assigned\nresponse code\nrendered template\n\nFor example\ndescribe 'GET index' do\n  before do\n    get :index\n  end\n\n  specify do\n    expect(response.response_code).to eq 200\n    expect(assigns(:companies)).to eq [company]\n    expect(response).to render_template('companies/index')\n  end\nend"}