{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/79221819", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/124#issuecomment-79221819", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/124", "id": 79221819, "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "created_at": "2015-03-13T18:27:44Z", "updated_at": "2015-03-13T18:27:44Z", "author_association": "OWNER", "body_html": "<p><a href=\"https://github.com/marcgreenstock\" class=\"user-mention\">@marcgreenstock</a> nah, I was just thinking about someting that would avoid emails being send in in the background. Something like this:</p>\n<div class=\"highlight highlight-source-ruby\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> config/initializers/mail_interceptor.rb</span>\n<span class=\"pl-c1\">Mail</span>.register_interceptor(<span class=\"pl-c1\">GitBasedMailInterceptor</span>) <span class=\"pl-k\">if</span> <span class=\"pl-c1\">Rails</span>.env.development?\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> lib/git_based_mail_interceptor.rb</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">GitBasedMailInterceptor</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">self.delivering_mail</span>(<span class=\"pl-smi\">message</span>)\n    message.to <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">`</span>git config user.email<span class=\"pl-pds\">`</span></span>\n    message.bcc <span class=\"pl-k\">=</span> message.cc <span class=\"pl-k\">=</span> <span class=\"pl-c1\">nil</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p>(Disclaimer: not tested)</p>", "body_text": "@marcgreenstock nah, I was just thinking about someting that would avoid emails being send in in the background. Something like this:\n# config/initializers/mail_interceptor.rb\nMail.register_interceptor(GitBasedMailInterceptor) if Rails.env.development?\n\n# lib/git_based_mail_interceptor.rb\nclass GitBasedMailInterceptor\n  def self.delivering_mail(message)\n    message.to = `git config user.email`\n    message.bcc = message.cc = nil\n  end\nend\n(Disclaimer: not tested)", "body": "@marcgreenstock nah, I was just thinking about someting that would avoid emails being send in in the background. Something like this:\n\n``` ruby\n# config/initializers/mail_interceptor.rb\nMail.register_interceptor(GitBasedMailInterceptor) if Rails.env.development?\n\n# lib/git_based_mail_interceptor.rb\nclass GitBasedMailInterceptor\n  def self.delivering_mail(message)\n    message.to = `git config user.email`\n    message.bcc = message.cc = nil\n  end\nend\n```\n\n(Disclaimer: not tested)\n"}