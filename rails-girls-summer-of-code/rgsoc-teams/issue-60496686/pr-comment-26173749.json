{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/26173749", "pull_request_review_id": null, "id": 26173749, "diff_hunk": "@@ -59,10 +59,9 @@\n \n     it 'removes the flag if the value is 0' do\n       flag = flags.sample.to_sym\n-      subject.flags = [flag]", "path": "spec/models/application_spec.rb", "position": 4, "original_position": 4, "commit_id": "80b4bc8bccdb042eadacf74263865cbe4df5c649", "original_commit_id": "c9eb40a91caec0bbd0d7e85cb1548971d94a7608", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "I'm not too sure on this fella, either. This meta-programming loop in `Application` is test covered according to https://codeclimate.com/github/rails-girls-summer-of-code/rgsoc-teams/Application, but it also has a ternary op in it so I don't know of both branches are really tested.\n\nThe elements of the `flags` array now being strings makes sense: I don't think AR serializes symbols. We just need to investigate why it would still return symbols occasionally then.\n\nAs for the assignment in L62: I don't know if it's part of the test (ie. checking if assigning the full array instead of individual values through the meta-programmed quasi-boolean accessors works) or just setting up the world for the test. I will check it out locally and play with it myself a little.\n", "created_at": "2015-03-10T22:36:23Z", "updated_at": "2015-04-01T17:43:29Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/160#discussion_r26173749", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/160", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/26173749"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/160#discussion_r26173749"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/160"}}, "body_html": "<p>I'm not too sure on this fella, either. This meta-programming loop in <code>Application</code> is test covered according to <a href=\"https://codeclimate.com/github/rails-girls-summer-of-code/rgsoc-teams/Application\" rel=\"nofollow\">https://codeclimate.com/github/rails-girls-summer-of-code/rgsoc-teams/Application</a>, but it also has a ternary op in it so I don't know of both branches are really tested.</p>\n<p>The elements of the <code>flags</code> array now being strings makes sense: I don't think AR serializes symbols. We just need to investigate why it would still return symbols occasionally then.</p>\n<p>As for the assignment in L62: I don't know if it's part of the test (ie. checking if assigning the full array instead of individual values through the meta-programmed quasi-boolean accessors works) or just setting up the world for the test. I will check it out locally and play with it myself a little.</p>", "body_text": "I'm not too sure on this fella, either. This meta-programming loop in Application is test covered according to https://codeclimate.com/github/rails-girls-summer-of-code/rgsoc-teams/Application, but it also has a ternary op in it so I don't know of both branches are really tested.\nThe elements of the flags array now being strings makes sense: I don't think AR serializes symbols. We just need to investigate why it would still return symbols occasionally then.\nAs for the assignment in L62: I don't know if it's part of the test (ie. checking if assigning the full array instead of individual values through the meta-programmed quasi-boolean accessors works) or just setting up the world for the test. I will check it out locally and play with it myself a little."}