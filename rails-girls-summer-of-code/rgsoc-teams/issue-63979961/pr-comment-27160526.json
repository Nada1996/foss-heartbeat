{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/27160526", "pull_request_review_id": null, "id": 27160526, "diff_hunk": "@@ -49,6 +49,7 @@\n     t.datetime \"updated_at\"\n     t.datetime \"applied_at\"\n     t.integer  \"updater_id\"\n+    t.text     \"state\",                       default: \"draft\", null: false", "path": "db/schema.rb", "position": 4, "original_position": 13, "commit_id": "813df1b94751b59bb63dc66d3ba11e6aeb0a9b43", "original_commit_id": "498a56f604a9f15696466fadda5140e7e8efd1b1", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "> I decided to go with state because a few of the controllers/helpers depend on a state method/attribute being available\n\nAh, you're right. I thought the calls to `state` were all changed in favor of the aasm predicates. But in that case, it would even count as another argument against adding aasm as adding it doesn't fully hide away the underlying state implementation or state-holding data attributes.\n", "created_at": "2015-03-25T20:10:12Z", "updated_at": "2015-03-26T07:16:28Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/171#discussion_r27160526", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/171", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/27160526"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/171#discussion_r27160526"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/171"}}, "body_html": "<blockquote>\n<p>I decided to go with state because a few of the controllers/helpers depend on a state method/attribute being available</p>\n</blockquote>\n<p>Ah, you're right. I thought the calls to <code>state</code> were all changed in favor of the aasm predicates. But in that case, it would even count as another argument against adding aasm as adding it doesn't fully hide away the underlying state implementation or state-holding data attributes.</p>", "body_text": "I decided to go with state because a few of the controllers/helpers depend on a state method/attribute being available\n\nAh, you're right. I thought the calls to state were all changed in favor of the aasm predicates. But in that case, it would even count as another argument against adding aasm as adding it doesn't fully hide away the underlying state implementation or state-holding data attributes."}