{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/28000678", "pull_request_review_id": null, "id": 28000678, "diff_hunk": "@@ -0,0 +1,70 @@\n+class CreatesApplicationFromDraft", "path": "app/models/creates_application_from_draft.rb", "position": 1, "original_position": 1, "commit_id": "069000b4cb50827aa5675953fdccea3f90493540", "original_commit_id": "e46a6babf07fd13a9241af00bc5b9607d7ae239c", "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "body": "I've started naming classes like this a year or so ago and I like it for three reasons:\n1. Classes ending on *or or *er (*Creator, *Finalizer, *Converter), to me, convey an overly ambitious attempt to be generic. This class has a very special purpose and doesn't aim to be generic at all.\n2. I use the verb form because I want to model the _process_, as opposed to something _static_ (like a DB record)\n3. I look at the name and I know exactly what it does, helping future versions of me sticking to its single responsibility :smile: \n\nThat being said, I'm not completely against renaming it of course. I'm against the *Delegator suffix, though, and I don't have an idea for a noun-based class name that makes it equally clear what's going on in that object.\n", "created_at": "2015-04-08T18:47:03Z", "updated_at": "2015-04-08T18:47:03Z", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/188#discussion_r28000678", "pull_request_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/188", "author_association": "OWNER", "_links": {"self": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/comments/28000678"}, "html": {"href": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/188#discussion_r28000678"}, "pull_request": {"href": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/pulls/188"}}, "body_html": "<p>I've started naming classes like this a year or so ago and I like it for three reasons:</p>\n<ol>\n<li>Classes ending on *or or *er (*Creator, *Finalizer, *Converter), to me, convey an overly ambitious attempt to be generic. This class has a very special purpose and doesn't aim to be generic at all.</li>\n<li>I use the verb form because I want to model the <em>process</em>, as opposed to something <em>static</em> (like a DB record)</li>\n<li>I look at the name and I know exactly what it does, helping future versions of me sticking to its single responsibility <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji></li>\n</ol>\n<p>That being said, I'm not completely against renaming it of course. I'm against the *Delegator suffix, though, and I don't have an idea for a noun-based class name that makes it equally clear what's going on in that object.</p>", "body_text": "I've started naming classes like this a year or so ago and I like it for three reasons:\n\nClasses ending on *or or *er (*Creator, *Finalizer, *Converter), to me, convey an overly ambitious attempt to be generic. This class has a very special purpose and doesn't aim to be generic at all.\nI use the verb form because I want to model the process, as opposed to something static (like a DB record)\nI look at the name and I know exactly what it does, helping future versions of me sticking to its single responsibility \ud83d\ude04\n\nThat being said, I'm not completely against renaming it of course. I'm against the *Delegator suffix, though, and I don't have an idea for a noun-based class name that makes it equally clear what's going on in that object."}