{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/92823495", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/pull/195#issuecomment-92823495", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/195", "id": 92823495, "user": {"login": "carpodaster", "id": 164400, "avatar_url": "https://avatars2.githubusercontent.com/u/164400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carpodaster", "html_url": "https://github.com/carpodaster", "followers_url": "https://api.github.com/users/carpodaster/followers", "following_url": "https://api.github.com/users/carpodaster/following{/other_user}", "gists_url": "https://api.github.com/users/carpodaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/carpodaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carpodaster/subscriptions", "organizations_url": "https://api.github.com/users/carpodaster/orgs", "repos_url": "https://api.github.com/users/carpodaster/repos", "events_url": "https://api.github.com/users/carpodaster/events{/privacy}", "received_events_url": "https://api.github.com/users/carpodaster/received_events", "type": "User", "site_admin": false}, "created_at": "2015-04-14T13:18:28Z", "updated_at": "2015-04-14T13:18:28Z", "author_association": "OWNER", "body_html": "<p><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji> <a href=\"https://github.com/marcgreenstock\" class=\"user-mention\">@marcgreenstock</a></p>\n<p><a href=\"https://github.com/cypher\" class=\"user-mention\">@cypher</a> made <code>ApplicationDraft</code> a finite state machine using AASM. Do you think you can make <code>#sign_off!</code> an event / transition just like `#submit_application\u00b4 ? If not, we can always add that after the merge (<a href=\"https://github.com/cypher\" class=\"user-mention\">@cypher</a> maybe? :) )</p>\n<p>Do preserve the students' application data and protect the application from indirectly be modified after it has been submitted, <code>#submit_application</code> creates an `Application\u00b4 record.</p>\n<p>It would be best to also update the associated application with the signoff data since the selection committee will only operate on applications, not application drafts. Adding them to the <code>Application#application_data</code> hstore hash is sufficient, I think.</p>", "body_text": "\ud83d\udc4d @marcgreenstock\n@cypher made ApplicationDraft a finite state machine using AASM. Do you think you can make #sign_off! an event / transition just like `#submit_application\u00b4 ? If not, we can always add that after the merge (@cypher maybe? :) )\nDo preserve the students' application data and protect the application from indirectly be modified after it has been submitted, #submit_application creates an `Application\u00b4 record.\nIt would be best to also update the associated application with the signoff data since the selection committee will only operate on applications, not application drafts. Adding them to the Application#application_data hstore hash is sufficient, I think.", "body": ":+1: @marcgreenstock \n\n@cypher made `ApplicationDraft` a finite state machine using AASM. Do you think you can make `#sign_off!` an event / transition just like `#submit_application\u00b4 ? If not, we can always add that after the merge (@cypher maybe? :) )\n\nDo preserve the students' application data and protect the application from indirectly be modified after it has been submitted, `#submit_application` creates an `Application\u00b4 record.\n\nIt would be best to also update the associated application with the signoff data since the selection committee will only operate on applications, not application drafts. Adding them to the `Application#application_data` hstore hash is sufficient, I think.\n"}