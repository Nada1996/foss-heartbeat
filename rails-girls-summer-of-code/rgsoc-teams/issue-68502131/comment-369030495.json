{"url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/comments/369030495", "html_url": "https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/200#issuecomment-369030495", "issue_url": "https://api.github.com/repos/rails-girls-summer-of-code/rgsoc-teams/issues/200", "id": 369030495, "user": {"login": "dionew1", "id": 22304676, "avatar_url": "https://avatars1.githubusercontent.com/u/22304676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dionew1", "html_url": "https://github.com/dionew1", "followers_url": "https://api.github.com/users/dionew1/followers", "following_url": "https://api.github.com/users/dionew1/following{/other_user}", "gists_url": "https://api.github.com/users/dionew1/gists{/gist_id}", "starred_url": "https://api.github.com/users/dionew1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dionew1/subscriptions", "organizations_url": "https://api.github.com/users/dionew1/orgs", "repos_url": "https://api.github.com/users/dionew1/repos", "events_url": "https://api.github.com/users/dionew1/events{/privacy}", "received_events_url": "https://api.github.com/users/dionew1/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-27T21:22:08Z", "updated_at": "2018-02-27T21:22:58Z", "author_association": "NONE", "body_html": "<p><a href=\"https://github.com/carpodaster\" class=\"user-mention\">@carpodaster</a> Hello again! After going through the code and experimenting with the application, it became apparent to <a href=\"https://github.com/marshallhouston\" class=\"user-mention\">@marshallhouston</a> and I that we were not clear on the issue that is trying to be solved. Our thoughts are that the application_draft is not updating when one of the student fields is being edited because the updater field on application_draft does not change.<br>\nThis is a snippet of the test we were starting to write in the spec/controllers/application_drafs_controller_spec inside the describe patch block.</p>\n<pre><code>it 'changes the application_draft updated_at attribute when a student field is updated' do\n        expect {\n          patch  :update, { params: { id: draft.to_param, student: { name: 'Foo!' },\n                            application_draft: { misc_info: draft.misc_info } } }\n        }.to change { draft.reload.updated_at }\n   end\n</code></pre>\n<p>Is this test on the right track?</p>", "body_text": "@carpodaster Hello again! After going through the code and experimenting with the application, it became apparent to @marshallhouston and I that we were not clear on the issue that is trying to be solved. Our thoughts are that the application_draft is not updating when one of the student fields is being edited because the updater field on application_draft does not change.\nThis is a snippet of the test we were starting to write in the spec/controllers/application_drafs_controller_spec inside the describe patch block.\nit 'changes the application_draft updated_at attribute when a student field is updated' do\n        expect {\n          patch  :update, { params: { id: draft.to_param, student: { name: 'Foo!' },\n                            application_draft: { misc_info: draft.misc_info } } }\n        }.to change { draft.reload.updated_at }\n   end\n\nIs this test on the right track?", "body": "@carpodaster Hello again! After going through the code and experimenting with the application, it became apparent to @marshallhouston and I that we were not clear on the issue that is trying to be solved. Our thoughts are that the application_draft is not updating when one of the student fields is being edited because the updater field on application_draft does not change.\r\nThis is a snippet of the test we were starting to write in the spec/controllers/application_drafs_controller_spec inside the describe patch block.\r\n\r\n```\r\nit 'changes the application_draft updated_at attribute when a student field is updated' do\r\n        expect {\r\n          patch  :update, { params: { id: draft.to_param, student: { name: 'Foo!' },\r\n                            application_draft: { misc_info: draft.misc_info } } }\r\n        }.to change { draft.reload.updated_at }\r\n   end\r\n```\r\n\r\nIs this test on the right track?\r\n"}